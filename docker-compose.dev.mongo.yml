networks:
  appnet:

services:
  mongodb:
    image: mongo:7
    restart: always
    ports:
      - "${DB_PORT}:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ./.data/mongodb:/data/db
    networks:
      - appnet

  api:
    build:
      context: ./apps/server
      dockerfile: infra/Dockerfile.api
    restart: unless-stopped
    ports:
      - "8034:8034"
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  producer:
    build:
      context: ./apps/server
      dockerfile: infra/Dockerfile.producer
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  worker:
    build:
      context: ./apps/server
      dockerfile: infra/Dockerfile.worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  ingester:
    build:
      context: ./apps/server
      dockerfile: infra/Dockerfile.ingester
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: unless-stopped
    ports:
      - "8383:80"
    depends_on:
      - api
    environment:
      - API_URL=http://localhost:8034
    networks:
      - appnet

  redis:
    image: redis:7
    restart: always
    ports:
      - "6381:6379"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
