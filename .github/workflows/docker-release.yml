name: Build and Push Docker Images Manually

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g. 1.2.3)'
        required: true
        type: string
      changelog:
        description: 'Changelog for this release'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version in package.json (web)
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
        working-directory: ./apps/web

      - name: Update version in main.go (server)
        run: |
          sed -i.bak -E 's/(Version\s*=\s*")[^"]+(")/\1${{ github.event.inputs.version }}\2/' version.go
          rm version.go.bak
        working-directory: ./apps/server/src

      - name: Write version.ts for web
        run: |
          echo "// This file is auto-generated by the release workflow" > src/version.ts
          echo "export const VERSION = \"${{ github.event.inputs.version }}\";" >> src/version.ts
        working-directory: ./apps/web

      - name: Build and push UI image
        id: build_ui
        uses: docker/build-push-action@v6
        with:
          context: ./apps/web
          push: true
          platforms: ${{ matrix.platform }}
          provenance: false
          sbom: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Server image
        id: build_server
        uses: docker/build-push-action@v6
        with:
          context: ./apps/server
          push: true
          platforms: ${{ matrix.platform }}
          provenance: false
          sbom: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Migrate image
        id: build_migrate
        uses: docker/build-push-action@v6
        with:
          context: ./apps/server
          file: ./apps/server/Dockerfile.migrate
          push: true
          platforms: ${{ matrix.platform }}
          provenance: false
          sbom: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Commit and tag version bump (amd64 only)
        if: matrix.arch == 'amd64'
        run: |
          git add apps/web/package.json apps/web/src/version.ts apps/server/src/version.go
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-arch manifests for GHCR
        run: |
          # UI manifest - versioned
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }} \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}

          # UI manifest - latest
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest

          # Server manifest - versioned
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }} \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}

          # Server manifest - latest
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest

          # Migrate manifest - versioned
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }} \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}

          # Migrate manifest - latest
          docker manifest create --amend ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest

      - name: Create and push multi-arch manifests for Docker Hub
        run: |
          # UI manifest - versioned
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}

          # UI manifest - latest
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest

          # Server manifest - versioned
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}

          # Server manifest - latest
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest

          # Migrate manifest - versioned
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}

          # Migrate manifest - latest
          docker manifest create --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest

  release:
    runs-on: ubuntu-latest
    needs: create-manifest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          body: |
            ${{ github.event.inputs.changelog }}

            ## Docker Images

            ### GitHub Container Registry (GHCR)
            - UI: `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}` / `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest`
            - Server: `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}` / `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-server:latest`
            - Migrate: `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}` / `ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-migrate:latest`

            ### Docker Hub
            - UI: `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:${{ github.event.inputs.version }}` / `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-web:latest`
            - Server: `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:${{ github.event.inputs.version }}` / `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-server:latest`
            - Migrate: `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:${{ github.event.inputs.version }}` / `${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}-migrate:latest`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
