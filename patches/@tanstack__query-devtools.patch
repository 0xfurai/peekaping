diff --git a/build/chunk/HR7YXZ5H.js b/build/chunk/HR7YXZ5H.js
index 399eea654c8e7a2768cbf45970a41d9e0f21e4c3..33f1b789efb54ce1345f9ee07f4fa4b2055207cb 100644
--- a/build/chunk/HR7YXZ5H.js
+++ b/build/chunk/HR7YXZ5H.js
@@ -9,11 +9,14 @@ var sharedConfig = {
   },
   getNextContextId() {
     return getContextId(this.context.count++);
-  }
+  },
 };
 function getContextId(count) {
-  const num = String(count), len = num.length - 1;
-  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num;
+  const num = String(count),
+    len = num.length - 1;
+  return (
+    sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num
+  );
 }
 function setHydrateContext(context) {
   sharedConfig.context = context;
@@ -22,7 +25,7 @@ function nextHydrateContext() {
   return {
     ...sharedConfig.context,
     id: sharedConfig.getNextContextId(),
-    count: 0
+    count: 0,
   };
 }
 var IS_DEV = false;
@@ -31,7 +34,7 @@ var $PROXY = Symbol("solid-proxy");
 var SUPPORTS_PROXY = typeof Proxy === "function";
 var $TRACK = Symbol("solid-track");
 var signalOptions = {
-  equals: equalFn
+  equals: equalFn,
 };
 var ERROR = null;
 var runEffects = runQueue;
@@ -41,7 +44,7 @@ var UNOWNED = {
   owned: null,
   cleanups: null,
   context: null,
-  owner: null
+  owner: null,
 };
 var NO_INIT = {};
 var Owner = null;
@@ -53,12 +56,19 @@ var Updates = null;
 var Effects = null;
 var ExecCount = 0;
 function createRoot(fn, detachedOwner) {
-  const listener = Listener, owner = Owner, unowned = fn.length === 0, current = detachedOwner === void 0 ? owner : detachedOwner, root = unowned ? UNOWNED : {
-    owned: null,
-    cleanups: null,
-    context: current ? current.context : null,
-    owner: current
-  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
+  const listener = Listener,
+    owner = Owner,
+    unowned = fn.length === 0,
+    current = detachedOwner === void 0 ? owner : detachedOwner,
+    root = unowned
+      ? UNOWNED
+      : {
+          owned: null,
+          cleanups: null,
+          context: current ? current.context : null,
+          owner: current,
+        },
+    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
   Owner = root;
   Listener = null;
   try {
@@ -74,11 +84,12 @@ function createSignal(value, options) {
     value,
     observers: null,
     observerSlots: null,
-    comparator: options.equals || void 0
+    comparator: options.equals || void 0,
   };
   const setter = (value2) => {
     if (typeof value2 === "function") {
-      if (Transition && Transition.running && Transition.sources.has(s)) value2 = value2(s.tValue);
+      if (Transition && Transition.running && Transition.sources.has(s))
+        value2 = value2(s.tValue);
       else value2 = value2(s.value);
     }
     return writeSignal(s, value2);
@@ -97,7 +108,8 @@ function createRenderEffect(fn, value, options) {
 }
 function createEffect(fn, value, options) {
   runEffects = runUserEffects;
-  const c = createComputation(fn, value, false, STALE), s = SuspenseContext && useContext(SuspenseContext);
+  const c = createComputation(fn, value, false, STALE),
+    s = SuspenseContext && useContext(SuspenseContext);
   if (s) c.suspense = s;
   if (!options || !options.render) c.user = true;
   Effects ? Effects.push(c) : updateComputation(c);
@@ -126,23 +138,34 @@ function createResource(pSource, pFetcher, pOptions) {
     fetcher = pSource;
     options = {};
   }
-  let pr = null, initP = NO_INIT, id = null, loadedUnderTransition = false, scheduled = false, resolved = "initialValue" in options, dynamic = typeof source === "function" && createMemo(source);
-  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {
-    equals: false
-  }), [state, setState] = createSignal(resolved ? "ready" : "unresolved");
+  let pr = null,
+    initP = NO_INIT,
+    id = null,
+    loadedUnderTransition = false,
+    scheduled = false,
+    resolved = "initialValue" in options,
+    dynamic = typeof source === "function" && createMemo(source);
+  const contexts = /* @__PURE__ */ new Set(),
+    [value, setValue] = (options.storage || createSignal)(options.initialValue),
+    [error, setError] = createSignal(void 0),
+    [track, trigger] = createSignal(void 0, {
+      equals: false,
+    }),
+    [state, setState] = createSignal(resolved ? "ready" : "unresolved");
   if (sharedConfig.context) {
     id = sharedConfig.getNextContextId();
     if (options.ssrLoadFrom === "initial") initP = options.initialValue;
-    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);
+    else if (sharedConfig.load && sharedConfig.has(id))
+      initP = sharedConfig.load(id);
   }
   function loadEnd(p, v, error2, key) {
     if (pr === p) {
       pr = null;
       key !== void 0 && (resolved = true);
       if ((p === initP || v === initP) && options.onHydrated)
-        queueMicrotask(
-          () => options.onHydrated(key, {
-            value: v
+        queueMicrotask(() =>
+          options.onHydrated(key, {
+            value: v,
           })
         );
       initP = NO_INIT;
@@ -167,13 +190,16 @@ function createResource(pSource, pFetcher, pOptions) {
     }, false);
   }
   function read() {
-    const c = SuspenseContext && useContext(SuspenseContext), v = value(), err = error();
+    const c = SuspenseContext && useContext(SuspenseContext),
+      v = value(),
+      err = error();
     if (err !== void 0 && !pr) throw err;
     if (Listener && !Listener.user && c) {
       createComputed(() => {
         track();
         if (pr) {
-          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);
+          if (c.resolved && Transition && loadedUnderTransition)
+            Transition.promises.add(pr);
           else if (!contexts.has(c)) {
             c.increment();
             contexts.add(c);
@@ -193,12 +219,15 @@ function createResource(pSource, pFetcher, pOptions) {
       return;
     }
     if (Transition && pr) Transition.promises.delete(pr);
-    const p = initP !== NO_INIT ? initP : untrack(
-      () => fetcher(lookup, {
-        value: value(),
-        refetching
-      })
-    );
+    const p =
+      initP !== NO_INIT
+        ? initP
+        : untrack(() =>
+            fetcher(lookup, {
+              value: value(),
+              refetching,
+            })
+          );
     if (!isPromise(p)) {
       loadEnd(pr, p, void 0, lookup);
       return p;
@@ -210,7 +239,7 @@ function createResource(pSource, pFetcher, pOptions) {
       return p;
     }
     scheduled = true;
-    queueMicrotask(() => scheduled = false);
+    queueMicrotask(() => (scheduled = false));
     runUpdates(() => {
       setState(resolved ? "refreshing" : "pending");
       trigger();
@@ -222,16 +251,16 @@ function createResource(pSource, pFetcher, pOptions) {
   }
   Object.defineProperties(read, {
     state: {
-      get: () => state()
+      get: () => state(),
     },
     error: {
-      get: () => error()
+      get: () => error(),
     },
     loading: {
       get() {
         const s = state();
         return s === "pending" || s === "refreshing";
-      }
+      },
     },
     latest: {
       get() {
@@ -239,8 +268,8 @@ function createResource(pSource, pFetcher, pOptions) {
         const err = error();
         if (err && !pr) throw err;
         return value();
-      }
-    }
+      },
+    },
   });
   if (dynamic) createComputed(() => load(false));
   else load(false);
@@ -248,8 +277,8 @@ function createResource(pSource, pFetcher, pOptions) {
     read,
     {
       refetch: load,
-      mutate: setValue
-    }
+      mutate: setValue,
+    },
   ];
 }
 function batch(fn) {
@@ -289,7 +318,7 @@ function onMount(fn) {
   createEffect(() => untrack(fn));
 }
 function onCleanup(fn) {
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner.cleanups === null) Owner.cleanups = [fn];
   else Owner.cleanups.push(fn);
   return fn;
@@ -323,15 +352,17 @@ function startTransition(fn) {
     Owner = o;
     let t;
     if (Scheduler || SuspenseContext) {
-      t = Transition || (Transition = {
-        sources: /* @__PURE__ */ new Set(),
-        effects: [],
-        promises: /* @__PURE__ */ new Set(),
-        disposed: /* @__PURE__ */ new Set(),
-        queue: /* @__PURE__ */ new Set(),
-        running: true
-      });
-      t.done || (t.done = new Promise((res) => t.resolve = res));
+      t =
+        Transition ||
+        (Transition = {
+          sources: /* @__PURE__ */ new Set(),
+          effects: [],
+          promises: /* @__PURE__ */ new Set(),
+          disposed: /* @__PURE__ */ new Set(),
+          queue: /* @__PURE__ */ new Set(),
+          running: true,
+        });
+      t.done || (t.done = new Promise((res) => (t.resolve = res)));
       t.running = true;
     }
     runUpdates(fn, false);
@@ -348,12 +379,16 @@ function createContext(defaultValue, options) {
   return {
     id,
     Provider: createProvider(id),
-    defaultValue
+    defaultValue,
   };
 }
 function useContext(context) {
   let value;
-  return Owner && Owner.context && (value = Owner.context[context.id]) !== void 0 ? value : context.defaultValue;
+  return Owner &&
+    Owner.context &&
+    (value = Owner.context[context.id]) !== void 0
+    ? value
+    : context.defaultValue;
 }
 function children(fn) {
   const children2 = createMemo(fn);
@@ -368,7 +403,8 @@ var SuspenseContext;
 function readSignal() {
   const runningTransition = Transition && Transition.running;
   if (this.sources && (runningTransition ? this.tState : this.state)) {
-    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);
+    if ((runningTransition ? this.tState : this.state) === STALE)
+      updateComputation(this);
     else {
       const updates = Updates;
       Updates = null;
@@ -397,11 +433,14 @@ function readSignal() {
   return this.value;
 }
 function writeSignal(node, value, isComp) {
-  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;
+  let current =
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value;
   if (!node.comparator || !node.comparator(current, value)) {
     if (Transition) {
       const TransitionRunning = Transition.running;
-      if (TransitionRunning || !isComp && Transition.sources.has(node)) {
+      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {
         Transition.sources.add(node);
         node.tValue = value;
       }
@@ -423,7 +462,7 @@ function writeSignal(node, value, isComp) {
         }
         if (Updates.length > 1e6) {
           Updates = [];
-          if (IS_DEV) ;
+          if (IS_DEV);
           throw new Error();
         }
       }, false);
@@ -437,7 +476,9 @@ function updateComputation(node) {
   const time = ExecCount;
   runComputation(
     node,
-    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value,
     time
   );
   if (Transition && !Transition.running && Transition.sources.has(node)) {
@@ -453,7 +494,8 @@ function updateComputation(node) {
 }
 function runComputation(node, value, time) {
   let nextValue;
-  const owner = Owner, listener = Listener;
+  const owner = Owner,
+    listener = Listener;
   Listener = Owner = node;
   try {
     nextValue = node.fn(value);
@@ -497,13 +539,13 @@ function createComputation(fn, init, pure, state = STALE, options) {
     value: init,
     owner: Owner,
     context: Owner ? Owner.context : null,
-    pure
+    pure,
   };
   if (Transition && Transition.running) {
     c.state = 0;
     c.tState = state;
   }
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner !== UNOWNED) {
     if (Transition && Transition.running && Owner.pure) {
       if (!Owner.tOwned) Owner.tOwned = [c];
@@ -515,15 +557,21 @@ function createComputation(fn, init, pure, state = STALE, options) {
   }
   if (ExternalSourceConfig && c.fn) {
     const [track, trigger] = createSignal(void 0, {
-      equals: false
+      equals: false,
     });
     const ordinary = ExternalSourceConfig.factory(c.fn, trigger);
     onCleanup(() => ordinary.dispose());
-    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());
-    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);
+    const triggerInTransition = () =>
+      startTransition(trigger).then(() => inTransition.dispose());
+    const inTransition = ExternalSourceConfig.factory(
+      c.fn,
+      triggerInTransition
+    );
     c.fn = (x) => {
       track();
-      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);
+      return Transition && Transition.running
+        ? inTransition.track(x)
+        : ordinary.track(x);
     };
   }
   return c;
@@ -531,17 +579,23 @@ function createComputation(fn, init, pure, state = STALE, options) {
 function runTop(node) {
   const runningTransition = Transition && Transition.running;
   if ((runningTransition ? node.tState : node.state) === 0) return;
-  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);
-  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);
+  if ((runningTransition ? node.tState : node.state) === PENDING)
+    return lookUpstream(node);
+  if (node.suspense && untrack(node.suspense.inFallback))
+    return node.suspense.effects.push(node);
   const ancestors = [node];
-  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {
+  while (
+    (node = node.owner) &&
+    (!node.updatedAt || node.updatedAt < ExecCount)
+  ) {
     if (runningTransition && Transition.disposed.has(node)) return;
     if (runningTransition ? node.tState : node.state) ancestors.push(node);
   }
   for (let i = ancestors.length - 1; i >= 0; i--) {
     node = ancestors[i];
     if (runningTransition) {
-      let top = node, prev = ancestors[i + 1];
+      let top = node,
+        prev = ancestors[i + 1];
       while ((top = top.owner) && top !== prev) {
         if (Transition.disposed.has(top)) return;
       }
@@ -597,7 +651,8 @@ function completeUpdates(wait) {
         for (const v of sources) {
           v.value = v.tValue;
           if (v.owned) {
-            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);
+            for (let i = 0, len = v.owned.length; i < len; i++)
+              cleanNode(v.owned[i]);
           }
           if (v.tOwned) v.owned = v.tOwned;
           delete v.tValue;
@@ -640,7 +695,8 @@ function scheduleQueue(queue) {
   }
 }
 function runUserEffects(queue) {
-  let i, userLength = 0;
+  let i,
+    userLength = 0;
   for (i = 0; i < queue.length; i++) {
     const e = queue[i];
     if (!e.user) runTop(e);
@@ -670,7 +726,10 @@ function lookUpstream(node, ignore) {
     if (source.sources) {
       const state = runningTransition ? source.tState : source.state;
       if (state === STALE) {
-        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))
+        if (
+          source !== ignore &&
+          (!source.updatedAt || source.updatedAt < ExecCount)
+        )
           runTop(source);
       } else if (state === PENDING) lookUpstream(source, ignore);
     }
@@ -693,9 +752,12 @@ function cleanNode(node) {
   let i;
   if (node.sources) {
     while (node.sources.length) {
-      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;
+      const source = node.sources.pop(),
+        index = node.sourceSlots.pop(),
+        obs = source.observers;
       if (obs && obs.length) {
-        const n = obs.pop(), s = source.observerSlots.pop();
+        const n = obs.pop(),
+          s = source.observerSlots.pop();
         if (index < obs.length) {
           n.sourceSlots[s] = index;
           obs[index] = n;
@@ -733,14 +795,14 @@ function reset(node, top) {
 function castError(err) {
   if (err instanceof Error) return err;
   return new Error(typeof err === "string" ? err : "Unknown error", {
-    cause: err
+    cause: err,
   });
 }
 function runErrors(err, fns, owner) {
   try {
     for (const f of fns) f(err);
   } catch (e) {
-    handleError(e, owner && owner.owner || null);
+    handleError(e, (owner && owner.owner) || null);
   }
 }
 function handleError(err, owner = Owner) {
@@ -752,17 +814,20 @@ function handleError(err, owner = Owner) {
       fn() {
         runErrors(error, fns, owner);
       },
-      state: STALE
+      state: STALE,
     });
   else runErrors(error, fns, owner);
 }
 function resolveChildren(children2) {
-  if (typeof children2 === "function" && !children2.length) return resolveChildren(children2());
+  if (typeof children2 === "function" && !children2.length)
+    return resolveChildren(children2());
   if (Array.isArray(children2)) {
     const results = [];
     for (let i = 0; i < children2.length; i++) {
       const result = resolveChildren(children2[i]);
-      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+      Array.isArray(result)
+        ? results.push.apply(results, result)
+        : results.push(result);
     }
     return results;
   }
@@ -772,13 +837,14 @@ function createProvider(id, options) {
   return function provider(props) {
     let res;
     createRenderEffect(
-      () => res = untrack(() => {
-        Owner.context = {
-          ...Owner.context,
-          [id]: props.value
-        };
-        return children(() => props.children);
-      }),
+      () =>
+        (res = untrack(() => {
+          Owner.context = {
+            ...Owner.context,
+            [id]: props.value,
+          };
+          return children(() => props.children);
+        })),
       void 0
     );
     return res;
@@ -789,13 +855,28 @@ function dispose(d) {
   for (let i = 0; i < d.length; i++) d[i]();
 }
 function mapArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    len = 0,
+    indexes = mapFn.length > 1 ? [] : null;
   onCleanup(() => dispose(disposers));
   return () => {
-    let newItems = list() || [], newLen = newItems.length, i, j;
+    let newItems = list() || [],
+      newLen = newItems.length,
+      i,
+      j;
     newItems[$TRACK];
     return untrack(() => {
-      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;
+      let newIndices,
+        newIndicesNext,
+        temp,
+        tempdisposers,
+        tempIndexes,
+        start,
+        end,
+        newEnd,
+        item;
       if (newLen === 0) {
         if (len !== 0) {
           dispose(disposers);
@@ -824,8 +905,16 @@ function mapArray(list, mapFn, options = {}) {
         temp = new Array(newLen);
         tempdisposers = new Array(newLen);
         indexes && (tempIndexes = new Array(newLen));
-        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++) ;
-        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {
+        for (
+          start = 0, end = Math.min(len, newLen);
+          start < end && items[start] === newItems[start];
+          start++
+        );
+        for (
+          end = len - 1, newEnd = newLen - 1;
+          end >= start && newEnd >= start && items[end] === newItems[newEnd];
+          end--, newEnd--
+        ) {
           temp[newEnd] = mapped[end];
           tempdisposers[newEnd] = disposers[end];
           indexes && (tempIndexes[newEnd] = indexes[end]);
@@ -859,7 +948,7 @@ function mapArray(list, mapFn, options = {}) {
             }
           } else mapped[j] = createRoot(mapper);
         }
-        mapped = mapped.slice(0, len = newLen);
+        mapped = mapped.slice(0, (len = newLen));
         items = newItems.slice(0);
       }
       return mapped;
@@ -876,10 +965,16 @@ function mapArray(list, mapFn, options = {}) {
   };
 }
 function indexArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], signals = [], len = 0, i;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    signals = [],
+    len = 0,
+    i;
   onCleanup(() => dispose(disposers));
   return () => {
-    const newItems = list() || [], newLen = newItems.length;
+    const newItems = list() || [],
+      newLen = newItems.length;
     newItems[$TRACK];
     return untrack(() => {
       if (newLen === 0) {
@@ -920,7 +1015,7 @@ function indexArray(list, mapFn, options = {}) {
       }
       len = signals.length = disposers.length = newLen;
       items = newItems.slice(0);
-      return mapped = mapped.slice(0, len);
+      return (mapped = mapped.slice(0, len));
     });
     function mapper(disposer) {
       disposers[i] = disposer;
@@ -965,12 +1060,12 @@ var propTraps = {
         return _.get(property);
       },
       set: trueFn,
-      deleteProperty: trueFn
+      deleteProperty: trueFn,
     };
   },
   ownKeys(_) {
     return _.keys();
-  }
+  },
 };
 function resolveSource(s) {
   return !(s = typeof s === "function" ? s() : s) ? {} : s;
@@ -985,8 +1080,8 @@ function mergeProps(...sources) {
   let proxy = false;
   for (let i = 0; i < sources.length; i++) {
     const s = sources[i];
-    proxy = proxy || !!s && $PROXY in s;
-    sources[i] = typeof s === "function" ? (proxy = true, createMemo(s)) : s;
+    proxy = proxy || (!!s && $PROXY in s);
+    sources[i] = typeof s === "function" ? ((proxy = true), createMemo(s)) : s;
   }
   if (SUPPORTS_PROXY && proxy) {
     return new Proxy(
@@ -1008,7 +1103,7 @@ function mergeProps(...sources) {
           for (let i = 0; i < sources.length; i++)
             keys.push(...Object.keys(resolveSource(sources[i])));
           return [...new Set(keys)];
-        }
+        },
       },
       propTraps
     );
@@ -1024,11 +1119,17 @@ function mergeProps(...sources) {
       if (key === "__proto__" || key === "constructor") continue;
       const desc = Object.getOwnPropertyDescriptor(source, key);
       if (!defined[key]) {
-        defined[key] = desc.get ? {
-          enumerable: true,
-          configurable: true,
-          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])
-        } : desc.value !== void 0 ? desc : void 0;
+        defined[key] = desc.get
+          ? {
+              enumerable: true,
+              configurable: true,
+              get: resolveSources.bind(
+                (sourcesMap[key] = [desc.get.bind(source)])
+              ),
+            }
+          : desc.value !== void 0
+          ? desc
+          : void 0;
       } else {
         const sources2 = sourcesMap[key];
         if (sources2) {
@@ -1041,7 +1142,8 @@ function mergeProps(...sources) {
   const target = {};
   const definedKeys = Object.keys(defined);
   for (let i = definedKeys.length - 1; i >= 0; i--) {
-    const key = definedKeys[i], desc = defined[key];
+    const key = definedKeys[i],
+      desc = defined[key];
     if (desc && desc.get) Object.defineProperty(target, key, desc);
     else target[key] = desc ? desc.value : void 0;
   }
@@ -1061,7 +1163,7 @@ function splitProps(props, ...keys) {
           },
           keys() {
             return k.filter((property) => property in props);
-          }
+          },
         },
         propTraps
       );
@@ -1077,7 +1179,7 @@ function splitProps(props, ...keys) {
           },
           keys() {
             return Object.keys(props).filter((k) => !blocked.has(k));
-          }
+          },
         },
         propTraps
       )
@@ -1088,18 +1190,27 @@ function splitProps(props, ...keys) {
   const objects = keys.map(() => ({}));
   for (const propName of Object.getOwnPropertyNames(props)) {
     const desc = Object.getOwnPropertyDescriptor(props, propName);
-    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;
+    const isDefaultDesc =
+      !desc.get &&
+      !desc.set &&
+      desc.enumerable &&
+      desc.writable &&
+      desc.configurable;
     let blocked = false;
     let objectIndex = 0;
     for (const k of keys) {
       if (k.includes(propName)) {
         blocked = true;
-        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);
+        isDefaultDesc
+          ? (objects[objectIndex][propName] = desc.value)
+          : Object.defineProperty(objects[objectIndex], propName, desc);
       }
       ++objectIndex;
     }
     if (!blocked) {
-      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);
+      isDefaultDesc
+        ? (otherObject[propName] = desc.value)
+        : Object.defineProperty(otherObject, propName, desc);
     }
   }
   return [...objects, otherObject];
@@ -1121,23 +1232,28 @@ function lazy(fn) {
       });
       comp = s;
     } else if (!comp) {
-      const [s] = createResource(() => (p || (p = fn())).then((mod) => mod.default));
+      const [s] = createResource(() =>
+        (p || (p = fn())).then((mod) => mod.default)
+      );
       comp = s;
     }
     let Comp;
-    return createMemo(
-      () => (Comp = comp()) ? untrack(() => {
-        if (IS_DEV) ;
-        if (!ctx || sharedConfig.done) return Comp(props);
-        const c = sharedConfig.context;
-        setHydrateContext(ctx);
-        const r = Comp(props);
-        setHydrateContext(c);
-        return r;
-      }) : ""
+    return createMemo(() =>
+      (Comp = comp())
+        ? untrack(() => {
+            if (IS_DEV);
+            if (!ctx || sharedConfig.done) return Comp(props);
+            const c = sharedConfig.context;
+            setHydrateContext(ctx);
+            const r = Comp(props);
+            setHydrateContext(c);
+            return r;
+          })
+        : ""
     );
   };
-  wrap.preload = () => p || ((p = fn()).then((mod) => comp = () => mod.default), p);
+  wrap.preload = () =>
+    p || ((p = fn()).then((mod) => (comp = () => mod.default)), p);
   return wrap;
 }
 var counter = 0;
@@ -1148,36 +1264,46 @@ function createUniqueId() {
 var narrowedError = (name) => `Stale read from <${name}>.`;
 function For(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    mapArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Index(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(indexArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    indexArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Show(props) {
   const keyed = props.keyed;
   const conditionValue = createMemo(() => props.when, void 0, void 0);
-  const condition = keyed ? conditionValue : createMemo(conditionValue, void 0, {
-    equals: (a, b) => !a === !b
-  });
+  const condition = keyed
+    ? conditionValue
+    : createMemo(conditionValue, void 0, {
+        equals: (a, b) => !a === !b,
+      });
   return createMemo(
     () => {
       const c = condition();
       if (c) {
         const child = props.children;
         const fn = typeof child === "function" && child.length > 0;
-        return fn ? untrack(
-          () => child(
-            keyed ? c : () => {
-              if (!untrack(condition)) throw narrowedError("Show");
-              return conditionValue();
-            }
-          )
-        ) : child;
+        return fn
+          ? untrack(() =>
+              child(
+                keyed
+                  ? c
+                  : () => {
+                      if (!untrack(condition)) throw narrowedError("Show");
+                      return conditionValue();
+                    }
+              )
+            )
+          : child;
       }
       return props.fallback;
     },
@@ -1196,14 +1322,17 @@ function Switch(props) {
       const mp = mps[i];
       const prevFunc = func;
       const conditionValue = createMemo(
-        () => prevFunc() ? void 0 : mp.when,
+        () => (prevFunc() ? void 0 : mp.when),
         void 0,
         void 0
       );
-      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, void 0, {
-        equals: (a, b) => !a === !b
-      });
-      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
+      const condition = mp.keyed
+        ? conditionValue
+        : createMemo(conditionValue, void 0, {
+            equals: (a, b) => !a === !b,
+          });
+      func = () =>
+        prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
     }
     return func;
   });
@@ -1214,14 +1343,19 @@ function Switch(props) {
       const [index, conditionValue, mp] = sel;
       const child = mp.children;
       const fn = typeof child === "function" && child.length > 0;
-      return fn ? untrack(
-        () => child(
-          mp.keyed ? conditionValue() : () => {
-            if (untrack(switchFunc)()?.[0] !== index) throw narrowedError("Match");
-            return conditionValue();
-          }
-        )
-      ) : child;
+      return fn
+        ? untrack(() =>
+            child(
+              mp.keyed
+                ? conditionValue()
+                : () => {
+                    if (untrack(switchFunc)()?.[0] !== index)
+                      throw narrowedError("Match");
+                    return conditionValue();
+                  }
+            )
+          )
+        : child;
     },
     void 0,
     void 0
@@ -1258,7 +1392,7 @@ var booleans = [
   "required",
   "reversed",
   "seamless",
-  "selected"
+  "selected",
 ];
 var Properties = /* @__PURE__ */ new Set([
   "className",
@@ -1268,46 +1402,52 @@ var Properties = /* @__PURE__ */ new Set([
   "isMap",
   "noModule",
   "playsInline",
-  ...booleans
+  ...booleans,
 ]);
 var ChildProperties = /* @__PURE__ */ new Set([
   "innerHTML",
   "textContent",
   "innerText",
-  "children"
+  "children",
 ]);
-var Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-  className: "class",
-  htmlFor: "for"
-});
-var PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-  class: "className",
-  formnovalidate: {
-    $: "formNoValidate",
-    BUTTON: 1,
-    INPUT: 1
-  },
-  ismap: {
-    $: "isMap",
-    IMG: 1
-  },
-  nomodule: {
-    $: "noModule",
-    SCRIPT: 1
-  },
-  playsinline: {
-    $: "playsInline",
-    VIDEO: 1
-  },
-  readonly: {
-    $: "readOnly",
-    INPUT: 1,
-    TEXTAREA: 1
+var Aliases = /* @__PURE__ */ Object.assign(
+  /* @__PURE__ */ Object.create(null),
+  {
+    className: "class",
+    htmlFor: "for",
   }
-});
+);
+var PropAliases = /* @__PURE__ */ Object.assign(
+  /* @__PURE__ */ Object.create(null),
+  {
+    class: "className",
+    formnovalidate: {
+      $: "formNoValidate",
+      BUTTON: 1,
+      INPUT: 1,
+    },
+    ismap: {
+      $: "isMap",
+      IMG: 1,
+    },
+    nomodule: {
+      $: "noModule",
+      SCRIPT: 1,
+    },
+    playsinline: {
+      $: "playsInline",
+      VIDEO: 1,
+    },
+    readonly: {
+      $: "readOnly",
+      INPUT: 1,
+      TEXTAREA: 1,
+    },
+  }
+);
 function getPropAlias(prop, tagName) {
   const a = PropAliases[prop];
-  return typeof a === "object" ? a[tagName] ? a["$"] : void 0 : a;
+  return typeof a === "object" ? (a[tagName] ? a["$"] : void 0) : a;
 }
 var DelegatedEvents = /* @__PURE__ */ new Set([
   "beforeinput",
@@ -1331,7 +1471,7 @@ var DelegatedEvents = /* @__PURE__ */ new Set([
   "pointerup",
   "touchend",
   "touchmove",
-  "touchstart"
+  "touchstart",
 ]);
 var SVGElements = /* @__PURE__ */ new Set([
   "altGlyph",
@@ -1410,14 +1550,20 @@ var SVGElements = /* @__PURE__ */ new Set([
   "tspan",
   "use",
   "view",
-  "vkern"
+  "vkern",
 ]);
 var SVGNamespace = {
   xlink: "http://www.w3.org/1999/xlink",
-  xml: "http://www.w3.org/XML/1998/namespace"
+  xml: "http://www.w3.org/XML/1998/namespace",
 };
 function reconcileArrays(parentNode, a, b) {
-  let bLength = b.length, aEnd = a.length, bEnd = bLength, aStart = 0, bStart = 0, after = a[aEnd - 1].nextSibling, map = null;
+  let bLength = b.length,
+    aEnd = a.length,
+    bEnd = bLength,
+    aStart = 0,
+    bStart = 0,
+    after = a[aEnd - 1].nextSibling,
+    map = null;
   while (aStart < aEnd || bStart < bEnd) {
     if (a[aStart] === b[bStart]) {
       aStart++;
@@ -1429,7 +1575,12 @@ function reconcileArrays(parentNode, a, b) {
       bEnd--;
     }
     if (aEnd === aStart) {
-      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;
+      const node =
+        bEnd < bLength
+          ? bStart
+            ? b[bStart - 1].nextSibling
+            : b[bEnd - bStart]
+          : after;
       while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);
     } else if (bEnd === bStart) {
       while (aStart < aEnd) {
@@ -1450,7 +1601,9 @@ function reconcileArrays(parentNode, a, b) {
       const index = map.get(a[aStart]);
       if (index != null) {
         if (bStart < index && index < bEnd) {
-          let i = aStart, sequence = 1, t;
+          let i = aStart,
+            sequence = 1,
+            t;
           while (++i < aEnd && i < bEnd) {
             if ((t = map.get(a[i])) == null || t !== index + sequence) break;
             sequence++;
@@ -1469,7 +1622,9 @@ function render(code, element, init, options = {}) {
   let disposer;
   createRoot((dispose2) => {
     disposer = dispose2;
-    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);
+    element === document
+      ? code()
+      : insert(element, code(), element.firstChild ? null : void 0, init);
   }, options.owner);
   return () => {
     disposer();
@@ -1479,16 +1634,28 @@ function render(code, element, init, options = {}) {
 function template(html, isImportNode, isSVG, isMathML) {
   let node;
   const create = () => {
-    const t = isMathML ? document.createElementNS("http://www.w3.org/1998/Math/MathML", "template") : document.createElement("template");
+    const t = isMathML
+      ? document.createElementNS(
+          "http://www.w3.org/1998/Math/MathML",
+          "template"
+        )
+      : document.createElement("template");
     t.innerHTML = html;
-    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;
+    return isSVG
+      ? t.content.firstChild.firstChild
+      : isMathML
+      ? t.firstChild
+      : t.content.firstChild;
   };
-  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);
+  const fn = isImportNode
+    ? () => untrack(() => document.importNode(node || (node = create()), true))
+    : () => (node || (node = create())).cloneNode(true);
   fn.cloneNode = fn;
   return fn;
 }
 function delegateEvents(eventNames, document2 = window.document) {
-  const e = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
+  const e =
+    document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
   for (let i = 0, l = eventNames.length; i < l; i++) {
     const name = eventNames[i];
     if (!e.has(name)) {
@@ -1499,7 +1666,8 @@ function delegateEvents(eventNames, document2 = window.document) {
 }
 function clearDelegatedEvents(document2 = window.document) {
   if (document2[$$EVENTS]) {
-    for (let name of document2[$$EVENTS].keys()) document2.removeEventListener(name, eventHandler);
+    for (let name of document2[$$EVENTS].keys())
+      document2.removeEventListener(name, eventHandler);
     delete document2[$$EVENTS];
   }
 }
@@ -1530,11 +1698,20 @@ function addEventListener(node, name, handler, delegate) {
     } else node[`$$${name}`] = handler;
   } else if (Array.isArray(handler)) {
     const handlerFn = handler[0];
-    node.addEventListener(name, handler[0] = (e) => handlerFn.call(node, handler[1], e));
-  } else node.addEventListener(name, handler, typeof handler !== "function" && handler);
+    node.addEventListener(
+      name,
+      (handler[0] = (e) => handlerFn.call(node, handler[1], e))
+    );
+  } else
+    node.addEventListener(
+      name,
+      handler,
+      typeof handler !== "function" && handler
+    );
 }
 function classList(node, value, prev = {}) {
-  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);
+  const classKeys = Object.keys(value || {}),
+    prevKeys = Object.keys(prev);
   let i, len;
   for (i = 0, len = prevKeys.length; i < len; i++) {
     const key = prevKeys[i];
@@ -1543,8 +1720,10 @@ function classList(node, value, prev = {}) {
     delete prev[key];
   }
   for (i = 0, len = classKeys.length; i < len; i++) {
-    const key = classKeys[i], classValue = !!value[key];
-    if (!key || key === "undefined" || prev[key] === classValue || !classValue) continue;
+    const key = classKeys[i],
+      classValue = !!value[key];
+    if (!key || key === "undefined" || prev[key] === classValue || !classValue)
+      continue;
     toggleClassKey(node, key, true);
     prev[key] = classValue;
   }
@@ -1553,7 +1732,7 @@ function classList(node, value, prev = {}) {
 function style(node, value, prev) {
   if (!value) return prev ? setAttribute(node, "style") : value;
   const nodeStyle = node.style;
-  if (typeof value === "string") return nodeStyle.cssText = value;
+  if (typeof value === "string") return (nodeStyle.cssText = value);
   typeof prev === "string" && (nodeStyle.cssText = prev = void 0);
   prev || (prev = {});
   value || (value = {});
@@ -1575,10 +1754,17 @@ function spread(node, props = {}, isSVG, skipChildren) {
   const prevProps = {};
   if (!skipChildren) {
     createRenderEffect(
-      () => prevProps.children = insertExpression(node, props.children, prevProps.children)
+      () =>
+        (prevProps.children = insertExpression(
+          node,
+          props.children,
+          prevProps.children
+        ))
     );
   }
-  createRenderEffect(() => typeof props.ref === "function" && use(props.ref, node));
+  createRenderEffect(
+    () => typeof props.ref === "function" && use(props.ref, node)
+  );
   createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));
   return prevProps;
 }
@@ -1587,15 +1773,34 @@ function use(fn, element, arg) {
 }
 function insert(parent, accessor, marker, initial) {
   if (marker !== void 0 && !initial) initial = [];
-  if (typeof accessor !== "function") return insertExpression(parent, accessor, initial, marker);
-  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);
+  if (typeof accessor !== "function")
+    return insertExpression(parent, accessor, initial, marker);
+  createRenderEffect(
+    (current) => insertExpression(parent, accessor(), current, marker),
+    initial
+  );
 }
-function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {
+function assign(
+  node,
+  props,
+  isSVG,
+  skipChildren,
+  prevProps = {},
+  skipRef = false
+) {
   props || (props = {});
   for (const prop in prevProps) {
     if (!(prop in props)) {
       if (prop === "children") continue;
-      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);
+      prevProps[prop] = assignProp(
+        node,
+        prop,
+        null,
+        prevProps[prop],
+        isSVG,
+        skipRef,
+        props
+      );
     }
   }
   for (const prop in props) {
@@ -1603,12 +1808,25 @@ function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = fals
       continue;
     }
     const value = props[prop];
-    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);
+    prevProps[prop] = assignProp(
+      node,
+      prop,
+      value,
+      prevProps[prop],
+      isSVG,
+      skipRef,
+      props
+    );
   }
 }
 function getNextElement(template2) {
-  let node, key, hydrating = isHydrating();
-  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {
+  let node,
+    key,
+    hydrating = isHydrating();
+  if (
+    !hydrating ||
+    !(node = sharedConfig.registry.get((key = getHydrationKey())))
+  ) {
     return template2();
   }
   if (sharedConfig.completed) sharedConfig.completed.add(node);
@@ -1616,7 +1834,9 @@ function getNextElement(template2) {
   return node;
 }
 function isHydrating(node) {
-  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);
+  return (
+    !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected)
+  );
 }
 function toPropertyName(name) {
   return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());
@@ -1635,8 +1855,10 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     if (!skipRef) value(node);
   } else if (prop.slice(0, 3) === "on:") {
     const e = prop.slice(3);
-    prev && node.removeEventListener(e, prev, typeof prev !== "function" && prev);
-    value && node.addEventListener(e, value, typeof value !== "function" && value);
+    prev &&
+      node.removeEventListener(e, prev, typeof prev !== "function" && prev);
+    value &&
+      node.addEventListener(e, value, typeof value !== "function" && value);
   } else if (prop.slice(0, 10) === "oncapture:") {
     const e = prop.slice(10);
     prev && node.removeEventListener(e, prev, true);
@@ -1656,16 +1878,25 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     setAttribute(node, prop.slice(5), value);
   } else if (prop.slice(0, 5) === "bool:") {
     setBoolAttribute(node, prop.slice(5), value);
-  } else if ((forceProp = prop.slice(0, 5) === "prop:") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes("-") || "is" in props)) {
+  } else if (
+    (forceProp = prop.slice(0, 5) === "prop:") ||
+    (isChildProp = ChildProperties.has(prop)) ||
+    (!isSVG &&
+      ((propAlias = getPropAlias(prop, node.tagName)) ||
+        (isProp = Properties.has(prop)))) ||
+    (isCE = node.nodeName.includes("-") || "is" in props)
+  ) {
     if (forceProp) {
       prop = prop.slice(5);
       isProp = true;
     } else if (isHydrating(node)) return value;
     if (prop === "class" || prop === "className") className(node, value);
-    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;
+    else if (isCE && !isProp && !isChildProp)
+      node[toPropertyName(prop)] = value;
     else node[propAlias || prop] = value;
   } else {
-    const ns = isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
+    const ns =
+      isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
     if (ns) setAttributeNS(node, ns, prop, value);
     else setAttribute(node, Aliases[prop] || prop, value);
   }
@@ -1679,10 +1910,11 @@ function eventHandler(e) {
   const key = `$$${e.type}`;
   const oriTarget = e.target;
   const oriCurrentTarget = e.currentTarget;
-  const retarget = (value) => Object.defineProperty(e, "target", {
-    configurable: true,
-    value
-  });
+  const retarget = (value) =>
+    Object.defineProperty(e, "target", {
+      configurable: true,
+      value,
+    });
   const handleNode = () => {
     const handler = node[key];
     if (handler && !node.disabled) {
@@ -1690,19 +1922,27 @@ function eventHandler(e) {
       data !== void 0 ? handler.call(node, data, e) : handler.call(node, e);
       if (e.cancelBubble) return;
     }
-    node.host && typeof node.host !== "string" && !node.host._$host && node.contains(e.target) && retarget(node.host);
+    node.host &&
+      typeof node.host !== "string" &&
+      !node.host._$host &&
+      node.contains(e.target) &&
+      retarget(node.host);
     return true;
   };
   const walkUpTree = () => {
-    while (handleNode() && (node = node._$host || node.parentNode || node.host)) ;
+    while (
+      handleNode() &&
+      (node = node._$host || node.parentNode || node.host)
+    );
   };
   Object.defineProperty(e, "currentTarget", {
     configurable: true,
     get() {
       return node || document;
-    }
+    },
   });
-  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;
+  if (sharedConfig.registry && !sharedConfig.done)
+    sharedConfig.done = _$HY.done = true;
   if (e.composedPath) {
     const path = e.composedPath();
     retarget(path[0]);
@@ -1735,8 +1975,9 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
   }
   while (typeof current === "function") current = current();
   if (value === current) return current;
-  const t = typeof value, multi = marker !== void 0;
-  parent = multi && current[0] && current[0].parentNode || parent;
+  const t = typeof value,
+    multi = marker !== void 0;
+  parent = (multi && current[0] && current[0].parentNode) || parent;
   if (t === "string" || t === "number") {
     if (hydrating) return current;
     if (t === "number") {
@@ -1768,17 +2009,19 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     const array = [];
     const currentArray = current && Array.isArray(current);
     if (normalizeIncomingArray(array, value, current, unwrapArray)) {
-      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));
+      createRenderEffect(
+        () => (current = insertExpression(parent, array, current, marker, true))
+      );
       return () => current;
     }
     if (hydrating) {
       if (!array.length) return current;
-      if (marker === void 0) return current = [...parent.childNodes];
+      if (marker === void 0) return (current = [...parent.childNodes]);
       let node = array[0];
       if (node.parentNode !== parent) return current;
       const nodes = [node];
       while ((node = node.nextSibling) !== marker) nodes.push(node);
-      return current = nodes;
+      return (current = nodes);
     }
     if (array.length === 0) {
       current = cleanChildren(parent, current, marker);
@@ -1793,22 +2036,26 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     }
     current = array;
   } else if (value.nodeType) {
-    if (hydrating && value.parentNode) return current = multi ? [value] : value;
+    if (hydrating && value.parentNode)
+      return (current = multi ? [value] : value);
     if (Array.isArray(current)) {
-      if (multi) return current = cleanChildren(parent, current, marker, value);
+      if (multi)
+        return (current = cleanChildren(parent, current, marker, value));
       cleanChildren(parent, current, null, value);
     } else if (current == null || current === "" || !parent.firstChild) {
       parent.appendChild(value);
     } else parent.replaceChild(value, parent.firstChild);
     current = value;
-  } else ;
+  } else;
   return current;
 }
 function normalizeIncomingArray(normalized, array, current, unwrap) {
   let dynamic = false;
   for (let i = 0, len = array.length; i < len; i++) {
-    let item = array[i], prev = current && current[normalized.length], t;
-    if (item == null || item === true || item === false) ;
+    let item = array[i],
+      prev = current && current[normalized.length],
+      t;
+    if (item == null || item === true || item === false);
     else if ((t = typeof item) === "object" && item.nodeType) {
       normalized.push(item);
     } else if (Array.isArray(item)) {
@@ -1816,28 +2063,31 @@ function normalizeIncomingArray(normalized, array, current, unwrap) {
     } else if (t === "function") {
       if (unwrap) {
         while (typeof item === "function") item = item();
-        dynamic = normalizeIncomingArray(
-          normalized,
-          Array.isArray(item) ? item : [item],
-          Array.isArray(prev) ? prev : [prev]
-        ) || dynamic;
+        dynamic =
+          normalizeIncomingArray(
+            normalized,
+            Array.isArray(item) ? item : [item],
+            Array.isArray(prev) ? prev : [prev]
+          ) || dynamic;
       } else {
         normalized.push(item);
         dynamic = true;
       }
     } else {
       const value = String(item);
-      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);
+      if (prev && prev.nodeType === 3 && prev.data === value)
+        normalized.push(prev);
       else normalized.push(document.createTextNode(value));
     }
   }
   return dynamic;
 }
 function appendNodes(parent, array, marker = null) {
-  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);
+  for (let i = 0, len = array.length; i < len; i++)
+    parent.insertBefore(array[i], marker);
 }
 function cleanChildren(parent, current, marker, replacement) {
-  if (marker === void 0) return parent.textContent = "";
+  if (marker === void 0) return (parent.textContent = "");
   const node = replacement || document.createTextNode("");
   if (current.length) {
     let inserted = false;
@@ -1846,7 +2096,9 @@ function cleanChildren(parent, current, marker, replacement) {
       if (node !== el) {
         const isParent = el.parentNode === parent;
         if (!inserted && !i)
-          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);
+          isParent
+            ? parent.replaceChild(node, el)
+            : parent.insertBefore(node, marker);
         else isParent && el.remove();
       } else inserted = true;
     }
@@ -1859,31 +2111,43 @@ function getHydrationKey() {
 var isServer = false;
 var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
 function createElement(tagName, isSVG = false) {
-  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);
+  return isSVG
+    ? document.createElementNS(SVG_NAMESPACE, tagName)
+    : document.createElement(tagName);
 }
 function Portal(props) {
-  const { useShadow } = props, marker = document.createTextNode(""), mount = () => props.mount || document.body, owner = getOwner();
+  const { useShadow } = props,
+    marker = document.createTextNode(""),
+    mount = () => props.mount || document.body,
+    owner = getOwner();
   let content;
   let hydrating = !!sharedConfig.context;
   createEffect(
     () => {
       if (hydrating) getOwner().user = hydrating = false;
-      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));
+      content ||
+        (content = runWithOwner(owner, () => createMemo(() => props.children)));
       const el = mount();
       if (el instanceof HTMLHeadElement) {
         const [clean, setClean] = createSignal(false);
         const cleanup = () => setClean(true);
-        createRoot((dispose2) => insert(el, () => !clean() ? content() : dispose2(), null));
+        createRoot((dispose2) =>
+          insert(el, () => (!clean() ? content() : dispose2()), null)
+        );
         onCleanup(cleanup);
       } else {
-        const container = createElement(props.isSVG ? "g" : "div", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({
-          mode: "open"
-        }) : container;
+        const container = createElement(props.isSVG ? "g" : "div", props.isSVG),
+          renderRoot =
+            useShadow && container.attachShadow
+              ? container.attachShadow({
+                  mode: "open",
+                })
+              : container;
         Object.defineProperty(container, "_$host", {
           get() {
             return marker.parentNode;
           },
-          configurable: true
+          configurable: true,
         });
         insert(renderRoot, content);
         el.appendChild(container);
@@ -1893,7 +2157,7 @@ function Portal(props) {
     },
     void 0,
     {
-      render: !hydrating
+      render: !hydrating,
     }
   );
   return marker;
@@ -1907,7 +2171,9 @@ function createDynamic(component, props) {
         return untrack(() => component2(props));
       case "string":
         const isSvg = SVGElements.has(component2);
-        const el = sharedConfig.context ? getNextElement() : createElement(component2, isSvg);
+        const el = sharedConfig.context
+          ? getNextElement()
+          : createElement(component2, isSvg);
         spread(el, props, isSvg);
         return el;
     }
@@ -2051,15 +2317,13 @@ var getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);
 var isUndefined = (payload) => typeof payload === "undefined";
 var isNull = (payload) => payload === null;
 var isPlainObject = (payload) => {
-  if (typeof payload !== "object" || payload === null)
-    return false;
-  if (payload === Object.prototype)
-    return false;
-  if (Object.getPrototypeOf(payload) === null)
-    return true;
+  if (typeof payload !== "object" || payload === null) return false;
+  if (payload === Object.prototype) return false;
+  if (Object.getPrototypeOf(payload) === null) return true;
   return Object.getPrototypeOf(payload) === Object.prototype;
 };
-var isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;
+var isEmptyObject = (payload) =>
+  isPlainObject(payload) && Object.keys(payload).length === 0;
 var isArray = (payload) => Array.isArray(payload);
 var isString = (payload) => typeof payload === "string";
 var isNumber = (payload) => typeof payload === "number" && !isNaN(payload);
@@ -2071,10 +2335,17 @@ var isSymbol = (payload) => getType(payload) === "Symbol";
 var isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());
 var isError = (payload) => payload instanceof Error;
 var isNaNValue = (payload) => typeof payload === "number" && isNaN(payload);
-var isPrimitive = (payload) => isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);
+var isPrimitive = (payload) =>
+  isBoolean(payload) ||
+  isNull(payload) ||
+  isUndefined(payload) ||
+  isNumber(payload) ||
+  isString(payload) ||
+  isSymbol(payload);
 var isBigint = (payload) => typeof payload === "bigint";
 var isInfinite = (payload) => payload === Infinity || payload === -Infinity;
-var isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);
+var isTypedArray = (payload) =>
+  ArrayBuffer.isView(payload) && !(payload instanceof DataView);
 var isURL = (payload) => payload instanceof URL;
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/pathstringifier.js
@@ -2105,46 +2376,76 @@ var parsePath = (string) => {
 };
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js
-function simpleTransformation(isApplicable, annotation, transform, untransform) {
+function simpleTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
 var simpleRules = [
-  simpleTransformation(isUndefined, "undefined", () => null, () => void 0),
-  simpleTransformation(isBigint, "bigint", (v) => v.toString(), (v) => {
-    if (typeof BigInt !== "undefined") {
-      return BigInt(v);
+  simpleTransformation(
+    isUndefined,
+    "undefined",
+    () => null,
+    () => void 0
+  ),
+  simpleTransformation(
+    isBigint,
+    "bigint",
+    (v) => v.toString(),
+    (v) => {
+      if (typeof BigInt !== "undefined") {
+        return BigInt(v);
+      }
+      return v;
     }
-    return v;
-  }),
-  simpleTransformation(isDate, "Date", (v) => v.toISOString(), (v) => new Date(v)),
-  simpleTransformation(isError, "Error", (v, superJson) => {
-    const baseError = {
-      name: v.name,
-      message: v.message
-    };
-    superJson.allowedErrorProps.forEach((prop) => {
-      baseError[prop] = v[prop];
-    });
-    return baseError;
-  }, (v, superJson) => {
-    const e = new Error(v.message);
-    e.name = v.name;
-    e.stack = v.stack;
-    superJson.allowedErrorProps.forEach((prop) => {
-      e[prop] = v[prop];
-    });
-    return e;
-  }),
-  simpleTransformation(isRegExp, "regexp", (v) => "" + v, (regex) => {
-    const body = regex.slice(1, regex.lastIndexOf("/"));
-    const flags = regex.slice(regex.lastIndexOf("/") + 1);
-    return new RegExp(body, flags);
-  }),
+  ),
+  simpleTransformation(
+    isDate,
+    "Date",
+    (v) => v.toISOString(),
+    (v) => new Date(v)
+  ),
+  simpleTransformation(
+    isError,
+    "Error",
+    (v, superJson) => {
+      const baseError = {
+        name: v.name,
+        message: v.message,
+      };
+      superJson.allowedErrorProps.forEach((prop) => {
+        baseError[prop] = v[prop];
+      });
+      return baseError;
+    },
+    (v, superJson) => {
+      const e = new Error(v.message);
+      e.name = v.name;
+      e.stack = v.stack;
+      superJson.allowedErrorProps.forEach((prop) => {
+        e[prop] = v[prop];
+      });
+      return e;
+    }
+  ),
+  simpleTransformation(
+    isRegExp,
+    "regexp",
+    (v) => "" + v,
+    (regex) => {
+      const body = regex.slice(1, regex.lastIndexOf("/"));
+      const flags = regex.slice(regex.lastIndexOf("/") + 1);
+      return new RegExp(body, flags);
+    }
+  ),
   simpleTransformation(
     isSet,
     "set",
@@ -2153,46 +2454,76 @@ var simpleRules = [
     (v) => [...v.values()],
     (v) => new Set(v)
   ),
-  simpleTransformation(isMap, "map", (v) => [...v.entries()], (v) => new Map(v)),
-  simpleTransformation((v) => isNaNValue(v) || isInfinite(v), "number", (v) => {
-    if (isNaNValue(v)) {
-      return "NaN";
-    }
-    if (v > 0) {
-      return "Infinity";
-    } else {
-      return "-Infinity";
-    }
-  }, Number),
-  simpleTransformation((v) => v === 0 && 1 / v === -Infinity, "number", () => {
-    return "-0";
-  }, Number),
-  simpleTransformation(isURL, "URL", (v) => v.toString(), (v) => new URL(v))
+  simpleTransformation(
+    isMap,
+    "map",
+    (v) => [...v.entries()],
+    (v) => new Map(v)
+  ),
+  simpleTransformation(
+    (v) => isNaNValue(v) || isInfinite(v),
+    "number",
+    (v) => {
+      if (isNaNValue(v)) {
+        return "NaN";
+      }
+      if (v > 0) {
+        return "Infinity";
+      } else {
+        return "-Infinity";
+      }
+    },
+    Number
+  ),
+  simpleTransformation(
+    (v) => v === 0 && 1 / v === -Infinity,
+    "number",
+    () => {
+      return "-0";
+    },
+    Number
+  ),
+  simpleTransformation(
+    isURL,
+    "URL",
+    (v) => v.toString(),
+    (v) => new URL(v)
+  ),
 ];
-function compositeTransformation(isApplicable, annotation, transform, untransform) {
+function compositeTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
-var symbolRule = compositeTransformation((s, superJson) => {
-  if (isSymbol(s)) {
-    const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);
-    return isRegistered;
-  }
-  return false;
-}, (s, superJson) => {
-  const identifier = superJson.symbolRegistry.getIdentifier(s);
-  return ["symbol", identifier];
-}, (v) => v.description, (_, a, superJson) => {
-  const value = superJson.symbolRegistry.getValue(a[1]);
-  if (!value) {
-    throw new Error("Trying to deserialize unknown symbol");
+var symbolRule = compositeTransformation(
+  (s, superJson) => {
+    if (isSymbol(s)) {
+      const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);
+      return isRegistered;
+    }
+    return false;
+  },
+  (s, superJson) => {
+    const identifier = superJson.symbolRegistry.getIdentifier(s);
+    return ["symbol", identifier];
+  },
+  (v) => v.description,
+  (_, a, superJson) => {
+    const value = superJson.symbolRegistry.getValue(a[1]);
+    if (!value) {
+      throw new Error("Trying to deserialize unknown symbol");
+    }
+    return value;
   }
-  return value;
-});
+);
 var constructorToName = [
   Int8Array,
   Uint8Array,
@@ -2202,74 +2533,101 @@ var constructorToName = [
   Uint32Array,
   Float32Array,
   Float64Array,
-  Uint8ClampedArray
+  Uint8ClampedArray,
 ].reduce((obj, ctor) => {
   obj[ctor.name] = ctor;
   return obj;
 }, {});
-var typedArrayRule = compositeTransformation(isTypedArray, (v) => ["typed-array", v.constructor.name], (v) => [...v], (v, a) => {
-  const ctor = constructorToName[a[1]];
-  if (!ctor) {
-    throw new Error("Trying to deserialize unknown typed array");
-  }
-  return new ctor(v);
-});
+var typedArrayRule = compositeTransformation(
+  isTypedArray,
+  (v) => ["typed-array", v.constructor.name],
+  (v) => [...v],
+  (v, a) => {
+    const ctor = constructorToName[a[1]];
+    if (!ctor) {
+      throw new Error("Trying to deserialize unknown typed array");
+    }
+    return new ctor(v);
+  }
+);
 function isInstanceOfRegisteredClass(potentialClass, superJson) {
   if (potentialClass?.constructor) {
-    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);
+    const isRegistered = !!superJson.classRegistry.getIdentifier(
+      potentialClass.constructor
+    );
     return isRegistered;
   }
   return false;
 }
-var classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {
-  const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
-  return ["class", identifier];
-}, (clazz, superJson) => {
-  const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);
-  if (!allowedProps) {
-    return { ...clazz };
+var classRule = compositeTransformation(
+  isInstanceOfRegisteredClass,
+  (clazz, superJson) => {
+    const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
+    return ["class", identifier];
+  },
+  (clazz, superJson) => {
+    const allowedProps = superJson.classRegistry.getAllowedProps(
+      clazz.constructor
+    );
+    if (!allowedProps) {
+      return { ...clazz };
+    }
+    const result = {};
+    allowedProps.forEach((prop) => {
+      result[prop] = clazz[prop];
+    });
+    return result;
+  },
+  (v, a, superJson) => {
+    const clazz = superJson.classRegistry.getValue(a[1]);
+    if (!clazz) {
+      throw new Error(
+        "Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564"
+      );
+    }
+    return Object.assign(Object.create(clazz.prototype), v);
   }
-  const result = {};
-  allowedProps.forEach((prop) => {
-    result[prop] = clazz[prop];
-  });
-  return result;
-}, (v, a, superJson) => {
-  const clazz = superJson.classRegistry.getValue(a[1]);
-  if (!clazz) {
-    throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");
+);
+var customRule = compositeTransformation(
+  (value, superJson) => {
+    return !!superJson.customTransformerRegistry.findApplicable(value);
+  },
+  (value, superJson) => {
+    const transformer =
+      superJson.customTransformerRegistry.findApplicable(value);
+    return ["custom", transformer.name];
+  },
+  (value, superJson) => {
+    const transformer =
+      superJson.customTransformerRegistry.findApplicable(value);
+    return transformer.serialize(value);
+  },
+  (v, a, superJson) => {
+    const transformer = superJson.customTransformerRegistry.findByName(a[1]);
+    if (!transformer) {
+      throw new Error("Trying to deserialize unknown custom value");
+    }
+    return transformer.deserialize(v);
   }
-  return Object.assign(Object.create(clazz.prototype), v);
-});
-var customRule = compositeTransformation((value, superJson) => {
-  return !!superJson.customTransformerRegistry.findApplicable(value);
-}, (value, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findApplicable(value);
-  return ["custom", transformer.name];
-}, (value, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findApplicable(value);
-  return transformer.serialize(value);
-}, (v, a, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findByName(a[1]);
-  if (!transformer) {
-    throw new Error("Trying to deserialize unknown custom value");
-  }
-  return transformer.deserialize(v);
-});
+);
 var compositeRules = [classRule, symbolRule, customRule, typedArrayRule];
 var transformValue = (value, superJson) => {
-  const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));
+  const applicableCompositeRule = findArr(compositeRules, (rule) =>
+    rule.isApplicable(value, superJson)
+  );
   if (applicableCompositeRule) {
     return {
       value: applicableCompositeRule.transform(value, superJson),
-      type: applicableCompositeRule.annotation(value, superJson)
+      type: applicableCompositeRule.annotation(value, superJson),
     };
   }
-  const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));
+  const applicableSimpleRule = findArr(simpleRules, (rule) =>
+    rule.isApplicable(value, superJson)
+  );
   if (applicableSimpleRule) {
     return {
       value: applicableSimpleRule.transform(value, superJson),
-      type: applicableSimpleRule.annotation
+      type: applicableSimpleRule.annotation,
     };
   }
   return void 0;
@@ -2421,7 +2779,9 @@ function traverse(tree, walker2, origin = []) {
     return;
   }
   if (!isArray(tree)) {
-    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));
+    forEach(tree, (subtree, key) =>
+      traverse(subtree, walker2, [...origin, ...parsePath(key)])
+    );
     return;
   }
   const [nodeValue, children2] = tree;
@@ -2458,7 +2818,12 @@ function applyReferentialEqualityAnnotations(plain, annotations) {
   }
   return plain;
 }
-var isDeep = (object, superJson) => isPlainObject(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);
+var isDeep = (object, superJson) =>
+  isPlainObject(object) ||
+  isArray(object) ||
+  isMap(object) ||
+  isSet(object) ||
+  isInstanceOfRegisteredClass(object, superJson);
 function addIdentity(object, path, identities) {
   const existingSet = identities.get(object);
   if (existingSet) {
@@ -2475,13 +2840,16 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
       return;
     }
     if (!dedupe) {
-      paths = paths.map((path) => path.map(String)).sort((a, b) => a.length - b.length);
+      paths = paths
+        .map((path) => path.map(String))
+        .sort((a, b) => a.length - b.length);
     }
     const [representativePath, ...identicalPaths] = paths;
     if (representativePath.length === 0) {
       rootEqualityPaths = identicalPaths.map(stringifyPath);
     } else {
-      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);
+      result[stringifyPath(representativePath)] =
+        identicalPaths.map(stringifyPath);
     }
   });
   if (rootEqualityPaths) {
@@ -2494,25 +2862,37 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
     return isEmptyObject(result) ? void 0 : result;
   }
 }
-var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {
+var walker = (
+  object,
+  identities,
+  superJson,
+  dedupe,
+  path = [],
+  objectsInThisPath = [],
+  seenObjects = /* @__PURE__ */ new Map()
+) => {
   const primitive = isPrimitive(object);
   if (!primitive) {
     addIdentity(object, path, identities);
     const seen = seenObjects.get(object);
     if (seen) {
-      return dedupe ? {
-        transformedValue: null
-      } : seen;
+      return dedupe
+        ? {
+            transformedValue: null,
+          }
+        : seen;
     }
   }
   if (!isDeep(object, superJson)) {
     const transformed2 = transformValue(object, superJson);
-    const result2 = transformed2 ? {
-      transformedValue: transformed2.value,
-      annotations: [transformed2.type]
-    } : {
-      transformedValue: object
-    };
+    const result2 = transformed2
+      ? {
+          transformedValue: transformed2.value,
+          annotations: [transformed2.type],
+        }
+      : {
+          transformedValue: object,
+        };
     if (!primitive) {
       seenObjects.set(object, result2);
     }
@@ -2520,7 +2900,7 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
   }
   if (includes(objectsInThisPath, object)) {
     return {
-      transformedValue: null
+      transformedValue: null,
     };
   }
   const transformationResult = transformValue(object, superJson);
@@ -2528,10 +2908,24 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
   const transformedValue = isArray(transformed) ? [] : {};
   const innerAnnotations = {};
   forEach(transformed, (value, index) => {
-    if (index === "__proto__" || index === "constructor" || index === "prototype") {
-      throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);
+    if (
+      index === "__proto__" ||
+      index === "constructor" ||
+      index === "prototype"
+    ) {
+      throw new Error(
+        `Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`
+      );
     }
-    const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);
+    const recursiveResult = walker(
+      value,
+      identities,
+      superJson,
+      dedupe,
+      [...path, index],
+      [...objectsInThisPath, object],
+      seenObjects
+    );
     transformedValue[index] = recursiveResult.transformedValue;
     if (isArray(recursiveResult.annotations)) {
       innerAnnotations[index] = recursiveResult.annotations;
@@ -2541,13 +2935,19 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
       });
     }
   });
-  const result = isEmptyObject(innerAnnotations) ? {
-    transformedValue,
-    annotations: !!transformationResult ? [transformationResult.type] : void 0
-  } : {
-    transformedValue,
-    annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations
-  };
+  const result = isEmptyObject(innerAnnotations)
+    ? {
+        transformedValue,
+        annotations: !!transformationResult
+          ? [transformationResult.type]
+          : void 0,
+      }
+    : {
+        transformedValue,
+        annotations: !!transformationResult
+          ? [transformationResult.type, innerAnnotations]
+          : innerAnnotations,
+      };
   if (!primitive) {
     seenObjects.set(object, result);
   }
@@ -2562,23 +2962,27 @@ function isArray2(payload) {
   return getType2(payload) === "Array";
 }
 function isPlainObject2(payload) {
-  if (getType2(payload) !== "Object")
-    return false;
+  if (getType2(payload) !== "Object") return false;
   const prototype = Object.getPrototypeOf(payload);
-  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
+  return (
+    !!prototype &&
+    prototype.constructor === Object &&
+    prototype === Object.prototype
+  );
 }
 
 // ../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js
 function assignProp2(carry, key, newVal, originalObject, includeNonenumerable) {
-  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? "enumerable" : "nonenumerable";
-  if (propType === "enumerable")
-    carry[key] = newVal;
+  const propType = {}.propertyIsEnumerable.call(originalObject, key)
+    ? "enumerable"
+    : "nonenumerable";
+  if (propType === "enumerable") carry[key] = newVal;
   if (includeNonenumerable && propType === "nonenumerable") {
     Object.defineProperty(carry, key, {
       value: newVal,
       enumerable: false,
       writable: true,
-      configurable: true
+      configurable: true,
     });
   }
 }
@@ -2618,19 +3022,22 @@ var SuperJSON = class {
     const identities = /* @__PURE__ */ new Map();
     const output = walker(object, identities, this, this.dedupe);
     const res = {
-      json: output.transformedValue
+      json: output.transformedValue,
     };
     if (output.annotations) {
       res.meta = {
         ...res.meta,
-        values: output.annotations
+        values: output.annotations,
       };
     }
-    const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);
+    const equalityAnnotations = generateReferentialEqualityAnnotations(
+      identities,
+      this.dedupe
+    );
     if (equalityAnnotations) {
       res.meta = {
         ...res.meta,
-        referentialEqualities: equalityAnnotations
+        referentialEqualities: equalityAnnotations,
       };
     }
     return res;
@@ -2642,7 +3049,10 @@ var SuperJSON = class {
       result = applyValueAnnotations(result, meta.values, this);
     }
     if (meta?.referentialEqualities) {
-      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
+      result = applyReferentialEqualityAnnotations(
+        result,
+        meta.referentialEqualities
+      );
     }
     return result;
   }
@@ -2661,7 +3071,7 @@ var SuperJSON = class {
   registerCustom(transformer, name) {
     this.customTransformerRegistry.register({
       name,
-      ...transformer
+      ...transformer,
     });
   }
   allowErrorProps(...props) {
@@ -2669,14 +3079,30 @@ var SuperJSON = class {
   }
 };
 SuperJSON.defaultInstance = new SuperJSON();
-SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);
-SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);
-SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);
-SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);
-SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);
-SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);
-SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);
-SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);
+SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(
+  SuperJSON.defaultInstance
+);
 var serialize = SuperJSON.serialize;
 SuperJSON.deserialize;
 var stringify = SuperJSON.stringify;
@@ -2688,36 +3114,67 @@ SuperJSON.allowErrorProps;
 
 // src/utils.tsx
 function getQueryStatusLabel(query) {
-  return query.state.fetchStatus === "fetching" ? "fetching" : !query.getObserversCount() ? "inactive" : query.state.fetchStatus === "paused" ? "paused" : query.isStale() ? "stale" : "fresh";
+  return query.state.fetchStatus === "fetching"
+    ? "fetching"
+    : !query.getObserversCount()
+    ? "inactive"
+    : query.state.fetchStatus === "paused"
+    ? "paused"
+    : query.isStale()
+    ? "stale"
+    : "fresh";
 }
 function getSidedProp(prop, side) {
   return `${prop}${side.charAt(0).toUpperCase() + side.slice(1)}`;
 }
-function getQueryStatusColor({
-  queryState,
-  observerCount,
-  isStale
-}) {
-  return queryState.fetchStatus === "fetching" ? "blue" : !observerCount ? "gray" : queryState.fetchStatus === "paused" ? "purple" : isStale ? "yellow" : "green";
-}
-function getMutationStatusColor({
-  status,
-  isPaused
-}) {
-  return isPaused ? "purple" : status === "error" ? "red" : status === "pending" ? "yellow" : status === "success" ? "green" : "gray";
+function getQueryStatusColor({ queryState, observerCount, isStale }) {
+  return queryState?.fetchStatus === "fetching"
+    ? "blue"
+    : !observerCount
+    ? "gray"
+    : queryState.fetchStatus === "paused"
+    ? "purple"
+    : isStale
+    ? "yellow"
+    : "green";
+}
+function getMutationStatusColor({ status, isPaused }) {
+  return isPaused
+    ? "purple"
+    : status === "error"
+    ? "red"
+    : status === "pending"
+    ? "yellow"
+    : status === "success"
+    ? "green"
+    : "gray";
 }
 function getQueryStatusColorByLabel(label) {
-  return label === "fresh" ? "green" : label === "stale" ? "yellow" : label === "paused" ? "purple" : label === "inactive" ? "gray" : "blue";
+  return label === "fresh"
+    ? "green"
+    : label === "stale"
+    ? "yellow"
+    : label === "paused"
+    ? "purple"
+    : label === "inactive"
+    ? "gray"
+    : "blue";
 }
 var displayValue = (value, beautify = false) => {
-  const {
-    json
-  } = serialize(value);
+  const { json } = serialize(value);
   return JSON.stringify(json, null, beautify ? 2 : void 0);
 };
-var getStatusRank = (q) => q.state.fetchStatus !== "idle" ? 0 : !q.getObserversCount() ? 3 : q.isStale() ? 2 : 1;
+var getStatusRank = (q) =>
+  q.state.fetchStatus !== "idle"
+    ? 0
+    : !q.getObserversCount()
+    ? 3
+    : q.isStale()
+    ? 2
+    : 1;
 var queryHashSort = (a, b) => a.queryHash.localeCompare(b.queryHash);
-var dateSort = (a, b) => a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
+var dateSort = (a, b) =>
+  a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
 var statusAndDateSort = (a, b) => {
   if (getStatusRank(a) === getStatusRank(b)) {
     return dateSort(a, b);
@@ -2727,10 +3184,18 @@ var statusAndDateSort = (a, b) => {
 var sortFns = {
   status: statusAndDateSort,
   "query hash": queryHashSort,
-  "last updated": dateSort
+  "last updated": dateSort,
 };
-var getMutationStatusRank = (m) => m.state.isPaused ? 0 : m.state.status === "error" ? 2 : m.state.status === "pending" ? 1 : 3;
-var mutationDateSort = (a, b) => a.state.submittedAt < b.state.submittedAt ? 1 : -1;
+var getMutationStatusRank = (m) =>
+  m.state.isPaused
+    ? 0
+    : m.state.status === "error"
+    ? 2
+    : m.state.status === "pending"
+    ? 1
+    : 3;
+var mutationDateSort = (a, b) =>
+  a.state.submittedAt < b.state.submittedAt ? 1 : -1;
 var mutationStatusSort = (a, b) => {
   if (getMutationStatusRank(a) === getMutationStatusRank(b)) {
     return mutationDateSort(a, b);
@@ -2739,7 +3204,7 @@ var mutationStatusSort = (a, b) => {
 };
 var mutationSortFns = {
   status: mutationStatusSort,
-  "last updated": mutationDateSort
+  "last updated": mutationDateSort,
 };
 var convertRemToPixels = (rem) => {
   return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);
@@ -2772,7 +3237,11 @@ var updateNestedDataByPath = (oldData, updatePath, value) => {
     return newData;
   }
   if (oldData instanceof Set) {
-    const setAsArray = updateNestedDataByPath(Array.from(oldData), updatePath, value);
+    const setAsArray = updateNestedDataByPath(
+      Array.from(oldData),
+      updatePath,
+      value
+    );
     return new Set(setAsArray);
   }
   if (Array.isArray(oldData)) {
@@ -2787,7 +3256,7 @@ var updateNestedDataByPath = (oldData, updatePath, value) => {
   }
   if (oldData instanceof Object) {
     const newData = {
-      ...oldData
+      ...oldData,
     };
     if (updatePath.length === 1) {
       newData[updatePath[0]] = value;
@@ -2825,7 +3294,7 @@ var deleteNestedDataByPath = (oldData, deletePath) => {
   }
   if (oldData instanceof Object) {
     const newData = {
-      ...oldData
+      ...oldData,
     };
     if (deletePath.length === 1) {
       delete newData[deletePath[0]];
@@ -2839,7 +3308,8 @@ var deleteNestedDataByPath = (oldData, deletePath) => {
 };
 var setupStyleSheet = (nonce, target) => {
   if (!nonce) return;
-  const styleExists = document.querySelector("#_goober") || target?.querySelector("#_goober");
+  const styleExists =
+    document.querySelector("#_goober") || target?.querySelector("#_goober");
   if (styleExists) return;
   const styleTag = document.createElement("style");
   const textNode = document.createTextNode("");
@@ -2853,4 +3323,60 @@ var setupStyleSheet = (nonce, target) => {
   }
 };
 
-export { $TRACK, DEV, Dynamic, For, Index, Match, Portal, Show, Switch, addEventListener, batch, className, clearDelegatedEvents, convertRemToPixels, createComponent, createComputed, createContext, createEffect, createMemo, createRenderEffect, createRoot, createSignal, createUniqueId, delegateEvents, deleteNestedDataByPath, displayValue, getMutationStatusColor, getOwner, getPreferredColorScheme, getQueryStatusColor, getQueryStatusColorByLabel, getQueryStatusLabel, getSidedProp, insert, isServer, lazy, mergeProps, mutationSortFns, on, onCleanup, onMount, render, serialize, setAttribute, setupStyleSheet, sortFns, splitProps, spread, stringify, template, untrack, updateNestedDataByPath, use, useContext, useTransition };
+export {
+  $TRACK,
+  DEV,
+  Dynamic,
+  For,
+  Index,
+  Match,
+  Portal,
+  Show,
+  Switch,
+  addEventListener,
+  batch,
+  className,
+  clearDelegatedEvents,
+  convertRemToPixels,
+  createComponent,
+  createComputed,
+  createContext,
+  createEffect,
+  createMemo,
+  createRenderEffect,
+  createRoot,
+  createSignal,
+  createUniqueId,
+  delegateEvents,
+  deleteNestedDataByPath,
+  displayValue,
+  getMutationStatusColor,
+  getOwner,
+  getPreferredColorScheme,
+  getQueryStatusColor,
+  getQueryStatusColorByLabel,
+  getQueryStatusLabel,
+  getSidedProp,
+  insert,
+  isServer,
+  lazy,
+  mergeProps,
+  mutationSortFns,
+  on,
+  onCleanup,
+  onMount,
+  render,
+  serialize,
+  setAttribute,
+  setupStyleSheet,
+  sortFns,
+  splitProps,
+  spread,
+  stringify,
+  template,
+  untrack,
+  updateNestedDataByPath,
+  use,
+  useContext,
+  useTransition,
+};
diff --git a/build/chunk/V5T5VJKG.js b/build/chunk/V5T5VJKG.js
index 231e353b7b6337f11cb948d6e1c4688d77b31c27..58a7c96f8d97ff7b1c3f7b27da62a3f764459049 100644
--- a/build/chunk/V5T5VJKG.js
+++ b/build/chunk/V5T5VJKG.js
@@ -9,11 +9,14 @@ var sharedConfig = {
   },
   getNextContextId() {
     return getContextId(this.context.count++);
-  }
+  },
 };
 function getContextId(count) {
-  const num = String(count), len = num.length - 1;
-  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num;
+  const num = String(count),
+    len = num.length - 1;
+  return (
+    sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num
+  );
 }
 function setHydrateContext(context) {
   sharedConfig.context = context;
@@ -22,7 +25,7 @@ function nextHydrateContext() {
   return {
     ...sharedConfig.context,
     id: sharedConfig.getNextContextId(),
-    count: 0
+    count: 0,
   };
 }
 var IS_DEV = false;
@@ -31,7 +34,7 @@ var $PROXY = Symbol("solid-proxy");
 var SUPPORTS_PROXY = typeof Proxy === "function";
 var $TRACK = Symbol("solid-track");
 var signalOptions = {
-  equals: equalFn
+  equals: equalFn,
 };
 var ERROR = null;
 var runEffects = runQueue;
@@ -41,7 +44,7 @@ var UNOWNED = {
   owned: null,
   cleanups: null,
   context: null,
-  owner: null
+  owner: null,
 };
 var NO_INIT = {};
 var Owner = null;
@@ -53,12 +56,19 @@ var Updates = null;
 var Effects = null;
 var ExecCount = 0;
 function createRoot(fn, detachedOwner) {
-  const listener = Listener, owner = Owner, unowned = fn.length === 0, current = detachedOwner === void 0 ? owner : detachedOwner, root = unowned ? UNOWNED : {
-    owned: null,
-    cleanups: null,
-    context: current ? current.context : null,
-    owner: current
-  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
+  const listener = Listener,
+    owner = Owner,
+    unowned = fn.length === 0,
+    current = detachedOwner === void 0 ? owner : detachedOwner,
+    root = unowned
+      ? UNOWNED
+      : {
+          owned: null,
+          cleanups: null,
+          context: current ? current.context : null,
+          owner: current,
+        },
+    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
   Owner = root;
   Listener = null;
   try {
@@ -74,11 +84,12 @@ function createSignal(value, options) {
     value,
     observers: null,
     observerSlots: null,
-    comparator: options.equals || void 0
+    comparator: options.equals || void 0,
   };
   const setter = (value2) => {
     if (typeof value2 === "function") {
-      if (Transition && Transition.running && Transition.sources.has(s)) value2 = value2(s.tValue);
+      if (Transition && Transition.running && Transition.sources.has(s))
+        value2 = value2(s.tValue);
       else value2 = value2(s.value);
     }
     return writeSignal(s, value2);
@@ -97,7 +108,8 @@ function createRenderEffect(fn, value, options) {
 }
 function createEffect(fn, value, options) {
   runEffects = runUserEffects;
-  const c = createComputation(fn, value, false, STALE), s = SuspenseContext && useContext(SuspenseContext);
+  const c = createComputation(fn, value, false, STALE),
+    s = SuspenseContext && useContext(SuspenseContext);
   if (s) c.suspense = s;
   if (!options || !options.render) c.user = true;
   Effects ? Effects.push(c) : updateComputation(c);
@@ -126,23 +138,34 @@ function createResource(pSource, pFetcher, pOptions) {
     fetcher = pSource;
     options = {};
   }
-  let pr = null, initP = NO_INIT, id = null, loadedUnderTransition = false, scheduled = false, resolved = "initialValue" in options, dynamic = typeof source === "function" && createMemo(source);
-  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {
-    equals: false
-  }), [state, setState] = createSignal(resolved ? "ready" : "unresolved");
+  let pr = null,
+    initP = NO_INIT,
+    id = null,
+    loadedUnderTransition = false,
+    scheduled = false,
+    resolved = "initialValue" in options,
+    dynamic = typeof source === "function" && createMemo(source);
+  const contexts = /* @__PURE__ */ new Set(),
+    [value, setValue] = (options.storage || createSignal)(options.initialValue),
+    [error, setError] = createSignal(void 0),
+    [track, trigger] = createSignal(void 0, {
+      equals: false,
+    }),
+    [state, setState] = createSignal(resolved ? "ready" : "unresolved");
   if (sharedConfig.context) {
     id = sharedConfig.getNextContextId();
     if (options.ssrLoadFrom === "initial") initP = options.initialValue;
-    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);
+    else if (sharedConfig.load && sharedConfig.has(id))
+      initP = sharedConfig.load(id);
   }
   function loadEnd(p, v, error2, key) {
     if (pr === p) {
       pr = null;
       key !== void 0 && (resolved = true);
       if ((p === initP || v === initP) && options.onHydrated)
-        queueMicrotask(
-          () => options.onHydrated(key, {
-            value: v
+        queueMicrotask(() =>
+          options.onHydrated(key, {
+            value: v,
           })
         );
       initP = NO_INIT;
@@ -167,13 +190,16 @@ function createResource(pSource, pFetcher, pOptions) {
     }, false);
   }
   function read() {
-    const c = SuspenseContext && useContext(SuspenseContext), v = value(), err = error();
+    const c = SuspenseContext && useContext(SuspenseContext),
+      v = value(),
+      err = error();
     if (err !== void 0 && !pr) throw err;
     if (Listener && !Listener.user && c) {
       createComputed(() => {
         track();
         if (pr) {
-          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);
+          if (c.resolved && Transition && loadedUnderTransition)
+            Transition.promises.add(pr);
           else if (!contexts.has(c)) {
             c.increment();
             contexts.add(c);
@@ -193,12 +219,15 @@ function createResource(pSource, pFetcher, pOptions) {
       return;
     }
     if (Transition && pr) Transition.promises.delete(pr);
-    const p = initP !== NO_INIT ? initP : untrack(
-      () => fetcher(lookup, {
-        value: value(),
-        refetching
-      })
-    );
+    const p =
+      initP !== NO_INIT
+        ? initP
+        : untrack(() =>
+            fetcher(lookup, {
+              value: value(),
+              refetching,
+            })
+          );
     if (!isPromise(p)) {
       loadEnd(pr, p, void 0, lookup);
       return p;
@@ -210,7 +239,7 @@ function createResource(pSource, pFetcher, pOptions) {
       return p;
     }
     scheduled = true;
-    queueMicrotask(() => scheduled = false);
+    queueMicrotask(() => (scheduled = false));
     runUpdates(() => {
       setState(resolved ? "refreshing" : "pending");
       trigger();
@@ -222,16 +251,16 @@ function createResource(pSource, pFetcher, pOptions) {
   }
   Object.defineProperties(read, {
     state: {
-      get: () => state()
+      get: () => state(),
     },
     error: {
-      get: () => error()
+      get: () => error(),
     },
     loading: {
       get() {
         const s = state();
         return s === "pending" || s === "refreshing";
-      }
+      },
     },
     latest: {
       get() {
@@ -239,8 +268,8 @@ function createResource(pSource, pFetcher, pOptions) {
         const err = error();
         if (err && !pr) throw err;
         return value();
-      }
-    }
+      },
+    },
   });
   if (dynamic) createComputed(() => load(false));
   else load(false);
@@ -248,8 +277,8 @@ function createResource(pSource, pFetcher, pOptions) {
     read,
     {
       refetch: load,
-      mutate: setValue
-    }
+      mutate: setValue,
+    },
   ];
 }
 function batch(fn) {
@@ -289,7 +318,7 @@ function onMount(fn) {
   createEffect(() => untrack(fn));
 }
 function onCleanup(fn) {
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner.cleanups === null) Owner.cleanups = [fn];
   else Owner.cleanups.push(fn);
   return fn;
@@ -323,15 +352,17 @@ function startTransition(fn) {
     Owner = o;
     let t;
     if (Scheduler || SuspenseContext) {
-      t = Transition || (Transition = {
-        sources: /* @__PURE__ */ new Set(),
-        effects: [],
-        promises: /* @__PURE__ */ new Set(),
-        disposed: /* @__PURE__ */ new Set(),
-        queue: /* @__PURE__ */ new Set(),
-        running: true
-      });
-      t.done || (t.done = new Promise((res) => t.resolve = res));
+      t =
+        Transition ||
+        (Transition = {
+          sources: /* @__PURE__ */ new Set(),
+          effects: [],
+          promises: /* @__PURE__ */ new Set(),
+          disposed: /* @__PURE__ */ new Set(),
+          queue: /* @__PURE__ */ new Set(),
+          running: true,
+        });
+      t.done || (t.done = new Promise((res) => (t.resolve = res)));
       t.running = true;
     }
     runUpdates(fn, false);
@@ -348,12 +379,16 @@ function createContext(defaultValue, options) {
   return {
     id,
     Provider: createProvider(id),
-    defaultValue
+    defaultValue,
   };
 }
 function useContext(context) {
   let value;
-  return Owner && Owner.context && (value = Owner.context[context.id]) !== void 0 ? value : context.defaultValue;
+  return Owner &&
+    Owner.context &&
+    (value = Owner.context[context.id]) !== void 0
+    ? value
+    : context.defaultValue;
 }
 function children(fn) {
   const children2 = createMemo(fn);
@@ -368,7 +403,8 @@ var SuspenseContext;
 function readSignal() {
   const runningTransition = Transition && Transition.running;
   if (this.sources && (runningTransition ? this.tState : this.state)) {
-    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);
+    if ((runningTransition ? this.tState : this.state) === STALE)
+      updateComputation(this);
     else {
       const updates = Updates;
       Updates = null;
@@ -397,11 +433,14 @@ function readSignal() {
   return this.value;
 }
 function writeSignal(node, value, isComp) {
-  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;
+  let current =
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value;
   if (!node.comparator || !node.comparator(current, value)) {
     if (Transition) {
       const TransitionRunning = Transition.running;
-      if (TransitionRunning || !isComp && Transition.sources.has(node)) {
+      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {
         Transition.sources.add(node);
         node.tValue = value;
       }
@@ -423,7 +462,7 @@ function writeSignal(node, value, isComp) {
         }
         if (Updates.length > 1e6) {
           Updates = [];
-          if (IS_DEV) ;
+          if (IS_DEV);
           throw new Error();
         }
       }, false);
@@ -437,7 +476,9 @@ function updateComputation(node) {
   const time = ExecCount;
   runComputation(
     node,
-    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value,
     time
   );
   if (Transition && !Transition.running && Transition.sources.has(node)) {
@@ -453,7 +494,8 @@ function updateComputation(node) {
 }
 function runComputation(node, value, time) {
   let nextValue;
-  const owner = Owner, listener = Listener;
+  const owner = Owner,
+    listener = Listener;
   Listener = Owner = node;
   try {
     nextValue = node.fn(value);
@@ -497,13 +539,13 @@ function createComputation(fn, init, pure, state = STALE, options) {
     value: init,
     owner: Owner,
     context: Owner ? Owner.context : null,
-    pure
+    pure,
   };
   if (Transition && Transition.running) {
     c.state = 0;
     c.tState = state;
   }
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner !== UNOWNED) {
     if (Transition && Transition.running && Owner.pure) {
       if (!Owner.tOwned) Owner.tOwned = [c];
@@ -515,15 +557,21 @@ function createComputation(fn, init, pure, state = STALE, options) {
   }
   if (ExternalSourceConfig && c.fn) {
     const [track, trigger] = createSignal(void 0, {
-      equals: false
+      equals: false,
     });
     const ordinary = ExternalSourceConfig.factory(c.fn, trigger);
     onCleanup(() => ordinary.dispose());
-    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());
-    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);
+    const triggerInTransition = () =>
+      startTransition(trigger).then(() => inTransition.dispose());
+    const inTransition = ExternalSourceConfig.factory(
+      c.fn,
+      triggerInTransition
+    );
     c.fn = (x) => {
       track();
-      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);
+      return Transition && Transition.running
+        ? inTransition.track(x)
+        : ordinary.track(x);
     };
   }
   return c;
@@ -531,17 +579,23 @@ function createComputation(fn, init, pure, state = STALE, options) {
 function runTop(node) {
   const runningTransition = Transition && Transition.running;
   if ((runningTransition ? node.tState : node.state) === 0) return;
-  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);
-  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);
+  if ((runningTransition ? node.tState : node.state) === PENDING)
+    return lookUpstream(node);
+  if (node.suspense && untrack(node.suspense.inFallback))
+    return node.suspense.effects.push(node);
   const ancestors = [node];
-  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {
+  while (
+    (node = node.owner) &&
+    (!node.updatedAt || node.updatedAt < ExecCount)
+  ) {
     if (runningTransition && Transition.disposed.has(node)) return;
     if (runningTransition ? node.tState : node.state) ancestors.push(node);
   }
   for (let i = ancestors.length - 1; i >= 0; i--) {
     node = ancestors[i];
     if (runningTransition) {
-      let top = node, prev = ancestors[i + 1];
+      let top = node,
+        prev = ancestors[i + 1];
       while ((top = top.owner) && top !== prev) {
         if (Transition.disposed.has(top)) return;
       }
@@ -597,7 +651,8 @@ function completeUpdates(wait) {
         for (const v of sources) {
           v.value = v.tValue;
           if (v.owned) {
-            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);
+            for (let i = 0, len = v.owned.length; i < len; i++)
+              cleanNode(v.owned[i]);
           }
           if (v.tOwned) v.owned = v.tOwned;
           delete v.tValue;
@@ -640,7 +695,8 @@ function scheduleQueue(queue) {
   }
 }
 function runUserEffects(queue) {
-  let i, userLength = 0;
+  let i,
+    userLength = 0;
   for (i = 0; i < queue.length; i++) {
     const e = queue[i];
     if (!e.user) runTop(e);
@@ -670,7 +726,10 @@ function lookUpstream(node, ignore) {
     if (source.sources) {
       const state = runningTransition ? source.tState : source.state;
       if (state === STALE) {
-        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))
+        if (
+          source !== ignore &&
+          (!source.updatedAt || source.updatedAt < ExecCount)
+        )
           runTop(source);
       } else if (state === PENDING) lookUpstream(source, ignore);
     }
@@ -693,9 +752,12 @@ function cleanNode(node) {
   let i;
   if (node.sources) {
     while (node.sources.length) {
-      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;
+      const source = node.sources.pop(),
+        index = node.sourceSlots.pop(),
+        obs = source.observers;
       if (obs && obs.length) {
-        const n = obs.pop(), s = source.observerSlots.pop();
+        const n = obs.pop(),
+          s = source.observerSlots.pop();
         if (index < obs.length) {
           n.sourceSlots[s] = index;
           obs[index] = n;
@@ -733,14 +795,14 @@ function reset(node, top) {
 function castError(err) {
   if (err instanceof Error) return err;
   return new Error(typeof err === "string" ? err : "Unknown error", {
-    cause: err
+    cause: err,
   });
 }
 function runErrors(err, fns, owner) {
   try {
     for (const f of fns) f(err);
   } catch (e) {
-    handleError(e, owner && owner.owner || null);
+    handleError(e, (owner && owner.owner) || null);
   }
 }
 function handleError(err, owner = Owner) {
@@ -752,17 +814,20 @@ function handleError(err, owner = Owner) {
       fn() {
         runErrors(error, fns, owner);
       },
-      state: STALE
+      state: STALE,
     });
   else runErrors(error, fns, owner);
 }
 function resolveChildren(children2) {
-  if (typeof children2 === "function" && !children2.length) return resolveChildren(children2());
+  if (typeof children2 === "function" && !children2.length)
+    return resolveChildren(children2());
   if (Array.isArray(children2)) {
     const results = [];
     for (let i = 0; i < children2.length; i++) {
       const result = resolveChildren(children2[i]);
-      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+      Array.isArray(result)
+        ? results.push.apply(results, result)
+        : results.push(result);
     }
     return results;
   }
@@ -772,13 +837,14 @@ function createProvider(id, options) {
   return function provider(props) {
     let res;
     createRenderEffect(
-      () => res = untrack(() => {
-        Owner.context = {
-          ...Owner.context,
-          [id]: props.value
-        };
-        return children(() => props.children);
-      }),
+      () =>
+        (res = untrack(() => {
+          Owner.context = {
+            ...Owner.context,
+            [id]: props.value,
+          };
+          return children(() => props.children);
+        })),
       void 0
     );
     return res;
@@ -789,13 +855,28 @@ function dispose(d) {
   for (let i = 0; i < d.length; i++) d[i]();
 }
 function mapArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    len = 0,
+    indexes = mapFn.length > 1 ? [] : null;
   onCleanup(() => dispose(disposers));
   return () => {
-    let newItems = list() || [], newLen = newItems.length, i, j;
+    let newItems = list() || [],
+      newLen = newItems.length,
+      i,
+      j;
     newItems[$TRACK];
     return untrack(() => {
-      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;
+      let newIndices,
+        newIndicesNext,
+        temp,
+        tempdisposers,
+        tempIndexes,
+        start,
+        end,
+        newEnd,
+        item;
       if (newLen === 0) {
         if (len !== 0) {
           dispose(disposers);
@@ -824,8 +905,16 @@ function mapArray(list, mapFn, options = {}) {
         temp = new Array(newLen);
         tempdisposers = new Array(newLen);
         indexes && (tempIndexes = new Array(newLen));
-        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++) ;
-        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {
+        for (
+          start = 0, end = Math.min(len, newLen);
+          start < end && items[start] === newItems[start];
+          start++
+        );
+        for (
+          end = len - 1, newEnd = newLen - 1;
+          end >= start && newEnd >= start && items[end] === newItems[newEnd];
+          end--, newEnd--
+        ) {
           temp[newEnd] = mapped[end];
           tempdisposers[newEnd] = disposers[end];
           indexes && (tempIndexes[newEnd] = indexes[end]);
@@ -859,7 +948,7 @@ function mapArray(list, mapFn, options = {}) {
             }
           } else mapped[j] = createRoot(mapper);
         }
-        mapped = mapped.slice(0, len = newLen);
+        mapped = mapped.slice(0, (len = newLen));
         items = newItems.slice(0);
       }
       return mapped;
@@ -876,10 +965,16 @@ function mapArray(list, mapFn, options = {}) {
   };
 }
 function indexArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], signals = [], len = 0, i;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    signals = [],
+    len = 0,
+    i;
   onCleanup(() => dispose(disposers));
   return () => {
-    const newItems = list() || [], newLen = newItems.length;
+    const newItems = list() || [],
+      newLen = newItems.length;
     newItems[$TRACK];
     return untrack(() => {
       if (newLen === 0) {
@@ -920,7 +1015,7 @@ function indexArray(list, mapFn, options = {}) {
       }
       len = signals.length = disposers.length = newLen;
       items = newItems.slice(0);
-      return mapped = mapped.slice(0, len);
+      return (mapped = mapped.slice(0, len));
     });
     function mapper(disposer) {
       disposers[i] = disposer;
@@ -965,12 +1060,12 @@ var propTraps = {
         return _.get(property);
       },
       set: trueFn,
-      deleteProperty: trueFn
+      deleteProperty: trueFn,
     };
   },
   ownKeys(_) {
     return _.keys();
-  }
+  },
 };
 function resolveSource(s) {
   return !(s = typeof s === "function" ? s() : s) ? {} : s;
@@ -985,8 +1080,8 @@ function mergeProps(...sources) {
   let proxy = false;
   for (let i = 0; i < sources.length; i++) {
     const s = sources[i];
-    proxy = proxy || !!s && $PROXY in s;
-    sources[i] = typeof s === "function" ? (proxy = true, createMemo(s)) : s;
+    proxy = proxy || (!!s && $PROXY in s);
+    sources[i] = typeof s === "function" ? ((proxy = true), createMemo(s)) : s;
   }
   if (SUPPORTS_PROXY && proxy) {
     return new Proxy(
@@ -1008,7 +1103,7 @@ function mergeProps(...sources) {
           for (let i = 0; i < sources.length; i++)
             keys.push(...Object.keys(resolveSource(sources[i])));
           return [...new Set(keys)];
-        }
+        },
       },
       propTraps
     );
@@ -1024,11 +1119,17 @@ function mergeProps(...sources) {
       if (key === "__proto__" || key === "constructor") continue;
       const desc = Object.getOwnPropertyDescriptor(source, key);
       if (!defined[key]) {
-        defined[key] = desc.get ? {
-          enumerable: true,
-          configurable: true,
-          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])
-        } : desc.value !== void 0 ? desc : void 0;
+        defined[key] = desc.get
+          ? {
+              enumerable: true,
+              configurable: true,
+              get: resolveSources.bind(
+                (sourcesMap[key] = [desc.get.bind(source)])
+              ),
+            }
+          : desc.value !== void 0
+          ? desc
+          : void 0;
       } else {
         const sources2 = sourcesMap[key];
         if (sources2) {
@@ -1041,7 +1142,8 @@ function mergeProps(...sources) {
   const target = {};
   const definedKeys = Object.keys(defined);
   for (let i = definedKeys.length - 1; i >= 0; i--) {
-    const key = definedKeys[i], desc = defined[key];
+    const key = definedKeys[i],
+      desc = defined[key];
     if (desc && desc.get) Object.defineProperty(target, key, desc);
     else target[key] = desc ? desc.value : void 0;
   }
@@ -1061,7 +1163,7 @@ function splitProps(props, ...keys) {
           },
           keys() {
             return k.filter((property) => property in props);
-          }
+          },
         },
         propTraps
       );
@@ -1077,7 +1179,7 @@ function splitProps(props, ...keys) {
           },
           keys() {
             return Object.keys(props).filter((k) => !blocked.has(k));
-          }
+          },
         },
         propTraps
       )
@@ -1088,18 +1190,27 @@ function splitProps(props, ...keys) {
   const objects = keys.map(() => ({}));
   for (const propName of Object.getOwnPropertyNames(props)) {
     const desc = Object.getOwnPropertyDescriptor(props, propName);
-    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;
+    const isDefaultDesc =
+      !desc.get &&
+      !desc.set &&
+      desc.enumerable &&
+      desc.writable &&
+      desc.configurable;
     let blocked = false;
     let objectIndex = 0;
     for (const k of keys) {
       if (k.includes(propName)) {
         blocked = true;
-        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);
+        isDefaultDesc
+          ? (objects[objectIndex][propName] = desc.value)
+          : Object.defineProperty(objects[objectIndex], propName, desc);
       }
       ++objectIndex;
     }
     if (!blocked) {
-      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);
+      isDefaultDesc
+        ? (otherObject[propName] = desc.value)
+        : Object.defineProperty(otherObject, propName, desc);
     }
   }
   return [...objects, otherObject];
@@ -1121,23 +1232,28 @@ function lazy(fn) {
       });
       comp = s;
     } else if (!comp) {
-      const [s] = createResource(() => (p || (p = fn())).then((mod) => mod.default));
+      const [s] = createResource(() =>
+        (p || (p = fn())).then((mod) => mod.default)
+      );
       comp = s;
     }
     let Comp;
-    return createMemo(
-      () => (Comp = comp()) ? untrack(() => {
-        if (IS_DEV) ;
-        if (!ctx || sharedConfig.done) return Comp(props);
-        const c = sharedConfig.context;
-        setHydrateContext(ctx);
-        const r = Comp(props);
-        setHydrateContext(c);
-        return r;
-      }) : ""
+    return createMemo(() =>
+      (Comp = comp())
+        ? untrack(() => {
+            if (IS_DEV);
+            if (!ctx || sharedConfig.done) return Comp(props);
+            const c = sharedConfig.context;
+            setHydrateContext(ctx);
+            const r = Comp(props);
+            setHydrateContext(c);
+            return r;
+          })
+        : ""
     );
   };
-  wrap.preload = () => p || ((p = fn()).then((mod) => comp = () => mod.default), p);
+  wrap.preload = () =>
+    p || ((p = fn()).then((mod) => (comp = () => mod.default)), p);
   return wrap;
 }
 var counter = 0;
@@ -1148,36 +1264,46 @@ function createUniqueId() {
 var narrowedError = (name) => `Stale read from <${name}>.`;
 function For(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    mapArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Index(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(indexArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    indexArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Show(props) {
   const keyed = props.keyed;
   const conditionValue = createMemo(() => props.when, void 0, void 0);
-  const condition = keyed ? conditionValue : createMemo(conditionValue, void 0, {
-    equals: (a, b) => !a === !b
-  });
+  const condition = keyed
+    ? conditionValue
+    : createMemo(conditionValue, void 0, {
+        equals: (a, b) => !a === !b,
+      });
   return createMemo(
     () => {
       const c = condition();
       if (c) {
         const child = props.children;
         const fn = typeof child === "function" && child.length > 0;
-        return fn ? untrack(
-          () => child(
-            keyed ? c : () => {
-              if (!untrack(condition)) throw narrowedError("Show");
-              return conditionValue();
-            }
-          )
-        ) : child;
+        return fn
+          ? untrack(() =>
+              child(
+                keyed
+                  ? c
+                  : () => {
+                      if (!untrack(condition)) throw narrowedError("Show");
+                      return conditionValue();
+                    }
+              )
+            )
+          : child;
       }
       return props.fallback;
     },
@@ -1196,14 +1322,17 @@ function Switch(props) {
       const mp = mps[i];
       const prevFunc = func;
       const conditionValue = createMemo(
-        () => prevFunc() ? void 0 : mp.when,
+        () => (prevFunc() ? void 0 : mp.when),
         void 0,
         void 0
       );
-      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, void 0, {
-        equals: (a, b) => !a === !b
-      });
-      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
+      const condition = mp.keyed
+        ? conditionValue
+        : createMemo(conditionValue, void 0, {
+            equals: (a, b) => !a === !b,
+          });
+      func = () =>
+        prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
     }
     return func;
   });
@@ -1214,14 +1343,19 @@ function Switch(props) {
       const [index, conditionValue, mp] = sel;
       const child = mp.children;
       const fn = typeof child === "function" && child.length > 0;
-      return fn ? untrack(
-        () => child(
-          mp.keyed ? conditionValue() : () => {
-            if (untrack(switchFunc)()?.[0] !== index) throw narrowedError("Match");
-            return conditionValue();
-          }
-        )
-      ) : child;
+      return fn
+        ? untrack(() =>
+            child(
+              mp.keyed
+                ? conditionValue()
+                : () => {
+                    if (untrack(switchFunc)()?.[0] !== index)
+                      throw narrowedError("Match");
+                    return conditionValue();
+                  }
+            )
+          )
+        : child;
     },
     void 0,
     void 0
@@ -1258,7 +1392,7 @@ var booleans = [
   "required",
   "reversed",
   "seamless",
-  "selected"
+  "selected",
 ];
 var Properties = /* @__PURE__ */ new Set([
   "className",
@@ -1268,46 +1402,52 @@ var Properties = /* @__PURE__ */ new Set([
   "isMap",
   "noModule",
   "playsInline",
-  ...booleans
+  ...booleans,
 ]);
 var ChildProperties = /* @__PURE__ */ new Set([
   "innerHTML",
   "textContent",
   "innerText",
-  "children"
+  "children",
 ]);
-var Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-  className: "class",
-  htmlFor: "for"
-});
-var PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-  class: "className",
-  formnovalidate: {
-    $: "formNoValidate",
-    BUTTON: 1,
-    INPUT: 1
-  },
-  ismap: {
-    $: "isMap",
-    IMG: 1
-  },
-  nomodule: {
-    $: "noModule",
-    SCRIPT: 1
-  },
-  playsinline: {
-    $: "playsInline",
-    VIDEO: 1
-  },
-  readonly: {
-    $: "readOnly",
-    INPUT: 1,
-    TEXTAREA: 1
+var Aliases = /* @__PURE__ */ Object.assign(
+  /* @__PURE__ */ Object.create(null),
+  {
+    className: "class",
+    htmlFor: "for",
   }
-});
+);
+var PropAliases = /* @__PURE__ */ Object.assign(
+  /* @__PURE__ */ Object.create(null),
+  {
+    class: "className",
+    formnovalidate: {
+      $: "formNoValidate",
+      BUTTON: 1,
+      INPUT: 1,
+    },
+    ismap: {
+      $: "isMap",
+      IMG: 1,
+    },
+    nomodule: {
+      $: "noModule",
+      SCRIPT: 1,
+    },
+    playsinline: {
+      $: "playsInline",
+      VIDEO: 1,
+    },
+    readonly: {
+      $: "readOnly",
+      INPUT: 1,
+      TEXTAREA: 1,
+    },
+  }
+);
 function getPropAlias(prop, tagName) {
   const a = PropAliases[prop];
-  return typeof a === "object" ? a[tagName] ? a["$"] : void 0 : a;
+  return typeof a === "object" ? (a[tagName] ? a["$"] : void 0) : a;
 }
 var DelegatedEvents = /* @__PURE__ */ new Set([
   "beforeinput",
@@ -1331,7 +1471,7 @@ var DelegatedEvents = /* @__PURE__ */ new Set([
   "pointerup",
   "touchend",
   "touchmove",
-  "touchstart"
+  "touchstart",
 ]);
 var SVGElements = /* @__PURE__ */ new Set([
   "altGlyph",
@@ -1410,14 +1550,20 @@ var SVGElements = /* @__PURE__ */ new Set([
   "tspan",
   "use",
   "view",
-  "vkern"
+  "vkern",
 ]);
 var SVGNamespace = {
   xlink: "http://www.w3.org/1999/xlink",
-  xml: "http://www.w3.org/XML/1998/namespace"
+  xml: "http://www.w3.org/XML/1998/namespace",
 };
 function reconcileArrays(parentNode, a, b) {
-  let bLength = b.length, aEnd = a.length, bEnd = bLength, aStart = 0, bStart = 0, after = a[aEnd - 1].nextSibling, map = null;
+  let bLength = b.length,
+    aEnd = a.length,
+    bEnd = bLength,
+    aStart = 0,
+    bStart = 0,
+    after = a[aEnd - 1].nextSibling,
+    map = null;
   while (aStart < aEnd || bStart < bEnd) {
     if (a[aStart] === b[bStart]) {
       aStart++;
@@ -1429,7 +1575,12 @@ function reconcileArrays(parentNode, a, b) {
       bEnd--;
     }
     if (aEnd === aStart) {
-      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;
+      const node =
+        bEnd < bLength
+          ? bStart
+            ? b[bStart - 1].nextSibling
+            : b[bEnd - bStart]
+          : after;
       while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);
     } else if (bEnd === bStart) {
       while (aStart < aEnd) {
@@ -1450,7 +1601,9 @@ function reconcileArrays(parentNode, a, b) {
       const index = map.get(a[aStart]);
       if (index != null) {
         if (bStart < index && index < bEnd) {
-          let i = aStart, sequence = 1, t;
+          let i = aStart,
+            sequence = 1,
+            t;
           while (++i < aEnd && i < bEnd) {
             if ((t = map.get(a[i])) == null || t !== index + sequence) break;
             sequence++;
@@ -1469,7 +1622,9 @@ function render(code, element, init, options = {}) {
   let disposer;
   createRoot((dispose2) => {
     disposer = dispose2;
-    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);
+    element === document
+      ? code()
+      : insert(element, code(), element.firstChild ? null : void 0, init);
   }, options.owner);
   return () => {
     disposer();
@@ -1479,16 +1634,28 @@ function render(code, element, init, options = {}) {
 function template(html, isImportNode, isSVG, isMathML) {
   let node;
   const create = () => {
-    const t = isMathML ? document.createElementNS("http://www.w3.org/1998/Math/MathML", "template") : document.createElement("template");
+    const t = isMathML
+      ? document.createElementNS(
+          "http://www.w3.org/1998/Math/MathML",
+          "template"
+        )
+      : document.createElement("template");
     t.innerHTML = html;
-    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;
+    return isSVG
+      ? t.content.firstChild.firstChild
+      : isMathML
+      ? t.firstChild
+      : t.content.firstChild;
   };
-  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);
+  const fn = isImportNode
+    ? () => untrack(() => document.importNode(node || (node = create()), true))
+    : () => (node || (node = create())).cloneNode(true);
   fn.cloneNode = fn;
   return fn;
 }
 function delegateEvents(eventNames, document2 = window.document) {
-  const e = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
+  const e =
+    document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
   for (let i = 0, l = eventNames.length; i < l; i++) {
     const name = eventNames[i];
     if (!e.has(name)) {
@@ -1499,7 +1666,8 @@ function delegateEvents(eventNames, document2 = window.document) {
 }
 function clearDelegatedEvents(document2 = window.document) {
   if (document2[$$EVENTS]) {
-    for (let name of document2[$$EVENTS].keys()) document2.removeEventListener(name, eventHandler);
+    for (let name of document2[$$EVENTS].keys())
+      document2.removeEventListener(name, eventHandler);
     delete document2[$$EVENTS];
   }
 }
@@ -1530,11 +1698,20 @@ function addEventListener(node, name, handler, delegate) {
     } else node[`$$${name}`] = handler;
   } else if (Array.isArray(handler)) {
     const handlerFn = handler[0];
-    node.addEventListener(name, handler[0] = (e) => handlerFn.call(node, handler[1], e));
-  } else node.addEventListener(name, handler, typeof handler !== "function" && handler);
+    node.addEventListener(
+      name,
+      (handler[0] = (e) => handlerFn.call(node, handler[1], e))
+    );
+  } else
+    node.addEventListener(
+      name,
+      handler,
+      typeof handler !== "function" && handler
+    );
 }
 function classList(node, value, prev = {}) {
-  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);
+  const classKeys = Object.keys(value || {}),
+    prevKeys = Object.keys(prev);
   let i, len;
   for (i = 0, len = prevKeys.length; i < len; i++) {
     const key = prevKeys[i];
@@ -1543,8 +1720,10 @@ function classList(node, value, prev = {}) {
     delete prev[key];
   }
   for (i = 0, len = classKeys.length; i < len; i++) {
-    const key = classKeys[i], classValue = !!value[key];
-    if (!key || key === "undefined" || prev[key] === classValue || !classValue) continue;
+    const key = classKeys[i],
+      classValue = !!value[key];
+    if (!key || key === "undefined" || prev[key] === classValue || !classValue)
+      continue;
     toggleClassKey(node, key, true);
     prev[key] = classValue;
   }
@@ -1553,7 +1732,7 @@ function classList(node, value, prev = {}) {
 function style(node, value, prev) {
   if (!value) return prev ? setAttribute(node, "style") : value;
   const nodeStyle = node.style;
-  if (typeof value === "string") return nodeStyle.cssText = value;
+  if (typeof value === "string") return (nodeStyle.cssText = value);
   typeof prev === "string" && (nodeStyle.cssText = prev = void 0);
   prev || (prev = {});
   value || (value = {});
@@ -1575,10 +1754,17 @@ function spread(node, props = {}, isSVG, skipChildren) {
   const prevProps = {};
   if (!skipChildren) {
     createRenderEffect(
-      () => prevProps.children = insertExpression(node, props.children, prevProps.children)
+      () =>
+        (prevProps.children = insertExpression(
+          node,
+          props.children,
+          prevProps.children
+        ))
     );
   }
-  createRenderEffect(() => typeof props.ref === "function" && use(props.ref, node));
+  createRenderEffect(
+    () => typeof props.ref === "function" && use(props.ref, node)
+  );
   createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));
   return prevProps;
 }
@@ -1587,15 +1773,34 @@ function use(fn, element, arg) {
 }
 function insert(parent, accessor, marker, initial) {
   if (marker !== void 0 && !initial) initial = [];
-  if (typeof accessor !== "function") return insertExpression(parent, accessor, initial, marker);
-  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);
+  if (typeof accessor !== "function")
+    return insertExpression(parent, accessor, initial, marker);
+  createRenderEffect(
+    (current) => insertExpression(parent, accessor(), current, marker),
+    initial
+  );
 }
-function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {
+function assign(
+  node,
+  props,
+  isSVG,
+  skipChildren,
+  prevProps = {},
+  skipRef = false
+) {
   props || (props = {});
   for (const prop in prevProps) {
     if (!(prop in props)) {
       if (prop === "children") continue;
-      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);
+      prevProps[prop] = assignProp(
+        node,
+        prop,
+        null,
+        prevProps[prop],
+        isSVG,
+        skipRef,
+        props
+      );
     }
   }
   for (const prop in props) {
@@ -1603,12 +1808,25 @@ function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = fals
       continue;
     }
     const value = props[prop];
-    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);
+    prevProps[prop] = assignProp(
+      node,
+      prop,
+      value,
+      prevProps[prop],
+      isSVG,
+      skipRef,
+      props
+    );
   }
 }
 function getNextElement(template2) {
-  let node, key, hydrating = isHydrating();
-  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {
+  let node,
+    key,
+    hydrating = isHydrating();
+  if (
+    !hydrating ||
+    !(node = sharedConfig.registry.get((key = getHydrationKey())))
+  ) {
     return template2();
   }
   if (sharedConfig.completed) sharedConfig.completed.add(node);
@@ -1616,7 +1834,9 @@ function getNextElement(template2) {
   return node;
 }
 function isHydrating(node) {
-  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);
+  return (
+    !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected)
+  );
 }
 function toPropertyName(name) {
   return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());
@@ -1635,8 +1855,10 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     if (!skipRef) value(node);
   } else if (prop.slice(0, 3) === "on:") {
     const e = prop.slice(3);
-    prev && node.removeEventListener(e, prev, typeof prev !== "function" && prev);
-    value && node.addEventListener(e, value, typeof value !== "function" && value);
+    prev &&
+      node.removeEventListener(e, prev, typeof prev !== "function" && prev);
+    value &&
+      node.addEventListener(e, value, typeof value !== "function" && value);
   } else if (prop.slice(0, 10) === "oncapture:") {
     const e = prop.slice(10);
     prev && node.removeEventListener(e, prev, true);
@@ -1656,16 +1878,25 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     setAttribute(node, prop.slice(5), value);
   } else if (prop.slice(0, 5) === "bool:") {
     setBoolAttribute(node, prop.slice(5), value);
-  } else if ((forceProp = prop.slice(0, 5) === "prop:") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes("-") || "is" in props)) {
+  } else if (
+    (forceProp = prop.slice(0, 5) === "prop:") ||
+    (isChildProp = ChildProperties.has(prop)) ||
+    (!isSVG &&
+      ((propAlias = getPropAlias(prop, node.tagName)) ||
+        (isProp = Properties.has(prop)))) ||
+    (isCE = node.nodeName.includes("-") || "is" in props)
+  ) {
     if (forceProp) {
       prop = prop.slice(5);
       isProp = true;
     } else if (isHydrating(node)) return value;
     if (prop === "class" || prop === "className") className(node, value);
-    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;
+    else if (isCE && !isProp && !isChildProp)
+      node[toPropertyName(prop)] = value;
     else node[propAlias || prop] = value;
   } else {
-    const ns = isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
+    const ns =
+      isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
     if (ns) setAttributeNS(node, ns, prop, value);
     else setAttribute(node, Aliases[prop] || prop, value);
   }
@@ -1679,10 +1910,11 @@ function eventHandler(e) {
   const key = `$$${e.type}`;
   const oriTarget = e.target;
   const oriCurrentTarget = e.currentTarget;
-  const retarget = (value) => Object.defineProperty(e, "target", {
-    configurable: true,
-    value
-  });
+  const retarget = (value) =>
+    Object.defineProperty(e, "target", {
+      configurable: true,
+      value,
+    });
   const handleNode = () => {
     const handler = node[key];
     if (handler && !node.disabled) {
@@ -1690,19 +1922,27 @@ function eventHandler(e) {
       data !== void 0 ? handler.call(node, data, e) : handler.call(node, e);
       if (e.cancelBubble) return;
     }
-    node.host && typeof node.host !== "string" && !node.host._$host && node.contains(e.target) && retarget(node.host);
+    node.host &&
+      typeof node.host !== "string" &&
+      !node.host._$host &&
+      node.contains(e.target) &&
+      retarget(node.host);
     return true;
   };
   const walkUpTree = () => {
-    while (handleNode() && (node = node._$host || node.parentNode || node.host)) ;
+    while (
+      handleNode() &&
+      (node = node._$host || node.parentNode || node.host)
+    );
   };
   Object.defineProperty(e, "currentTarget", {
     configurable: true,
     get() {
       return node || document;
-    }
+    },
   });
-  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;
+  if (sharedConfig.registry && !sharedConfig.done)
+    sharedConfig.done = _$HY.done = true;
   if (e.composedPath) {
     const path = e.composedPath();
     retarget(path[0]);
@@ -1735,8 +1975,9 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
   }
   while (typeof current === "function") current = current();
   if (value === current) return current;
-  const t = typeof value, multi = marker !== void 0;
-  parent = multi && current[0] && current[0].parentNode || parent;
+  const t = typeof value,
+    multi = marker !== void 0;
+  parent = (multi && current[0] && current[0].parentNode) || parent;
   if (t === "string" || t === "number") {
     if (hydrating) return current;
     if (t === "number") {
@@ -1768,17 +2009,19 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     const array = [];
     const currentArray = current && Array.isArray(current);
     if (normalizeIncomingArray(array, value, current, unwrapArray)) {
-      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));
+      createRenderEffect(
+        () => (current = insertExpression(parent, array, current, marker, true))
+      );
       return () => current;
     }
     if (hydrating) {
       if (!array.length) return current;
-      if (marker === void 0) return current = [...parent.childNodes];
+      if (marker === void 0) return (current = [...parent.childNodes]);
       let node = array[0];
       if (node.parentNode !== parent) return current;
       const nodes = [node];
       while ((node = node.nextSibling) !== marker) nodes.push(node);
-      return current = nodes;
+      return (current = nodes);
     }
     if (array.length === 0) {
       current = cleanChildren(parent, current, marker);
@@ -1793,22 +2036,26 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     }
     current = array;
   } else if (value.nodeType) {
-    if (hydrating && value.parentNode) return current = multi ? [value] : value;
+    if (hydrating && value.parentNode)
+      return (current = multi ? [value] : value);
     if (Array.isArray(current)) {
-      if (multi) return current = cleanChildren(parent, current, marker, value);
+      if (multi)
+        return (current = cleanChildren(parent, current, marker, value));
       cleanChildren(parent, current, null, value);
     } else if (current == null || current === "" || !parent.firstChild) {
       parent.appendChild(value);
     } else parent.replaceChild(value, parent.firstChild);
     current = value;
-  } else ;
+  } else;
   return current;
 }
 function normalizeIncomingArray(normalized, array, current, unwrap) {
   let dynamic = false;
   for (let i = 0, len = array.length; i < len; i++) {
-    let item = array[i], prev = current && current[normalized.length], t;
-    if (item == null || item === true || item === false) ;
+    let item = array[i],
+      prev = current && current[normalized.length],
+      t;
+    if (item == null || item === true || item === false);
     else if ((t = typeof item) === "object" && item.nodeType) {
       normalized.push(item);
     } else if (Array.isArray(item)) {
@@ -1816,28 +2063,31 @@ function normalizeIncomingArray(normalized, array, current, unwrap) {
     } else if (t === "function") {
       if (unwrap) {
         while (typeof item === "function") item = item();
-        dynamic = normalizeIncomingArray(
-          normalized,
-          Array.isArray(item) ? item : [item],
-          Array.isArray(prev) ? prev : [prev]
-        ) || dynamic;
+        dynamic =
+          normalizeIncomingArray(
+            normalized,
+            Array.isArray(item) ? item : [item],
+            Array.isArray(prev) ? prev : [prev]
+          ) || dynamic;
       } else {
         normalized.push(item);
         dynamic = true;
       }
     } else {
       const value = String(item);
-      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);
+      if (prev && prev.nodeType === 3 && prev.data === value)
+        normalized.push(prev);
       else normalized.push(document.createTextNode(value));
     }
   }
   return dynamic;
 }
 function appendNodes(parent, array, marker = null) {
-  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);
+  for (let i = 0, len = array.length; i < len; i++)
+    parent.insertBefore(array[i], marker);
 }
 function cleanChildren(parent, current, marker, replacement) {
-  if (marker === void 0) return parent.textContent = "";
+  if (marker === void 0) return (parent.textContent = "");
   const node = replacement || document.createTextNode("");
   if (current.length) {
     let inserted = false;
@@ -1846,7 +2096,9 @@ function cleanChildren(parent, current, marker, replacement) {
       if (node !== el) {
         const isParent = el.parentNode === parent;
         if (!inserted && !i)
-          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);
+          isParent
+            ? parent.replaceChild(node, el)
+            : parent.insertBefore(node, marker);
         else isParent && el.remove();
       } else inserted = true;
     }
@@ -1859,31 +2111,43 @@ function getHydrationKey() {
 var isServer = false;
 var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
 function createElement(tagName, isSVG = false) {
-  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);
+  return isSVG
+    ? document.createElementNS(SVG_NAMESPACE, tagName)
+    : document.createElement(tagName);
 }
 function Portal(props) {
-  const { useShadow } = props, marker = document.createTextNode(""), mount = () => props.mount || document.body, owner = getOwner();
+  const { useShadow } = props,
+    marker = document.createTextNode(""),
+    mount = () => props.mount || document.body,
+    owner = getOwner();
   let content;
   let hydrating = !!sharedConfig.context;
   createEffect(
     () => {
       if (hydrating) getOwner().user = hydrating = false;
-      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));
+      content ||
+        (content = runWithOwner(owner, () => createMemo(() => props.children)));
       const el = mount();
       if (el instanceof HTMLHeadElement) {
         const [clean, setClean] = createSignal(false);
         const cleanup = () => setClean(true);
-        createRoot((dispose2) => insert(el, () => !clean() ? content() : dispose2(), null));
+        createRoot((dispose2) =>
+          insert(el, () => (!clean() ? content() : dispose2()), null)
+        );
         onCleanup(cleanup);
       } else {
-        const container = createElement(props.isSVG ? "g" : "div", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({
-          mode: "open"
-        }) : container;
+        const container = createElement(props.isSVG ? "g" : "div", props.isSVG),
+          renderRoot =
+            useShadow && container.attachShadow
+              ? container.attachShadow({
+                  mode: "open",
+                })
+              : container;
         Object.defineProperty(container, "_$host", {
           get() {
             return marker.parentNode;
           },
-          configurable: true
+          configurable: true,
         });
         insert(renderRoot, content);
         el.appendChild(container);
@@ -1893,7 +2157,7 @@ function Portal(props) {
     },
     void 0,
     {
-      render: !hydrating
+      render: !hydrating,
     }
   );
   return marker;
@@ -1907,7 +2171,9 @@ function createDynamic(component, props) {
         return untrack(() => component2(props));
       case "string":
         const isSvg = SVGElements.has(component2);
-        const el = sharedConfig.context ? getNextElement() : createElement(component2, isSvg);
+        const el = sharedConfig.context
+          ? getNextElement()
+          : createElement(component2, isSvg);
         spread(el, props, isSvg);
         return el;
     }
@@ -2051,15 +2317,13 @@ var getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);
 var isUndefined = (payload) => typeof payload === "undefined";
 var isNull = (payload) => payload === null;
 var isPlainObject = (payload) => {
-  if (typeof payload !== "object" || payload === null)
-    return false;
-  if (payload === Object.prototype)
-    return false;
-  if (Object.getPrototypeOf(payload) === null)
-    return true;
+  if (typeof payload !== "object" || payload === null) return false;
+  if (payload === Object.prototype) return false;
+  if (Object.getPrototypeOf(payload) === null) return true;
   return Object.getPrototypeOf(payload) === Object.prototype;
 };
-var isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;
+var isEmptyObject = (payload) =>
+  isPlainObject(payload) && Object.keys(payload).length === 0;
 var isArray = (payload) => Array.isArray(payload);
 var isString = (payload) => typeof payload === "string";
 var isNumber = (payload) => typeof payload === "number" && !isNaN(payload);
@@ -2071,10 +2335,17 @@ var isSymbol = (payload) => getType(payload) === "Symbol";
 var isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());
 var isError = (payload) => payload instanceof Error;
 var isNaNValue = (payload) => typeof payload === "number" && isNaN(payload);
-var isPrimitive = (payload) => isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);
+var isPrimitive = (payload) =>
+  isBoolean(payload) ||
+  isNull(payload) ||
+  isUndefined(payload) ||
+  isNumber(payload) ||
+  isString(payload) ||
+  isSymbol(payload);
 var isBigint = (payload) => typeof payload === "bigint";
 var isInfinite = (payload) => payload === Infinity || payload === -Infinity;
-var isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);
+var isTypedArray = (payload) =>
+  ArrayBuffer.isView(payload) && !(payload instanceof DataView);
 var isURL = (payload) => payload instanceof URL;
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/pathstringifier.js
@@ -2105,47 +2376,77 @@ var parsePath = (string) => {
 };
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js
-function simpleTransformation(isApplicable, annotation, transform, untransform) {
+function simpleTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
 var simpleRules = [
-  simpleTransformation(isUndefined, "undefined", () => null, () => void 0),
-  simpleTransformation(isBigint, "bigint", (v) => v.toString(), (v) => {
-    if (typeof BigInt !== "undefined") {
-      return BigInt(v);
+  simpleTransformation(
+    isUndefined,
+    "undefined",
+    () => null,
+    () => void 0
+  ),
+  simpleTransformation(
+    isBigint,
+    "bigint",
+    (v) => v.toString(),
+    (v) => {
+      if (typeof BigInt !== "undefined") {
+        return BigInt(v);
+      }
+      console.error("Please add a BigInt polyfill.");
+      return v;
     }
-    console.error("Please add a BigInt polyfill.");
-    return v;
-  }),
-  simpleTransformation(isDate, "Date", (v) => v.toISOString(), (v) => new Date(v)),
-  simpleTransformation(isError, "Error", (v, superJson) => {
-    const baseError = {
-      name: v.name,
-      message: v.message
-    };
-    superJson.allowedErrorProps.forEach((prop) => {
-      baseError[prop] = v[prop];
-    });
-    return baseError;
-  }, (v, superJson) => {
-    const e = new Error(v.message);
-    e.name = v.name;
-    e.stack = v.stack;
-    superJson.allowedErrorProps.forEach((prop) => {
-      e[prop] = v[prop];
-    });
-    return e;
-  }),
-  simpleTransformation(isRegExp, "regexp", (v) => "" + v, (regex) => {
-    const body = regex.slice(1, regex.lastIndexOf("/"));
-    const flags = regex.slice(regex.lastIndexOf("/") + 1);
-    return new RegExp(body, flags);
-  }),
+  ),
+  simpleTransformation(
+    isDate,
+    "Date",
+    (v) => v.toISOString(),
+    (v) => new Date(v)
+  ),
+  simpleTransformation(
+    isError,
+    "Error",
+    (v, superJson) => {
+      const baseError = {
+        name: v.name,
+        message: v.message,
+      };
+      superJson.allowedErrorProps.forEach((prop) => {
+        baseError[prop] = v[prop];
+      });
+      return baseError;
+    },
+    (v, superJson) => {
+      const e = new Error(v.message);
+      e.name = v.name;
+      e.stack = v.stack;
+      superJson.allowedErrorProps.forEach((prop) => {
+        e[prop] = v[prop];
+      });
+      return e;
+    }
+  ),
+  simpleTransformation(
+    isRegExp,
+    "regexp",
+    (v) => "" + v,
+    (regex) => {
+      const body = regex.slice(1, regex.lastIndexOf("/"));
+      const flags = regex.slice(regex.lastIndexOf("/") + 1);
+      return new RegExp(body, flags);
+    }
+  ),
   simpleTransformation(
     isSet,
     "set",
@@ -2154,46 +2455,76 @@ var simpleRules = [
     (v) => [...v.values()],
     (v) => new Set(v)
   ),
-  simpleTransformation(isMap, "map", (v) => [...v.entries()], (v) => new Map(v)),
-  simpleTransformation((v) => isNaNValue(v) || isInfinite(v), "number", (v) => {
-    if (isNaNValue(v)) {
-      return "NaN";
-    }
-    if (v > 0) {
-      return "Infinity";
-    } else {
-      return "-Infinity";
-    }
-  }, Number),
-  simpleTransformation((v) => v === 0 && 1 / v === -Infinity, "number", () => {
-    return "-0";
-  }, Number),
-  simpleTransformation(isURL, "URL", (v) => v.toString(), (v) => new URL(v))
+  simpleTransformation(
+    isMap,
+    "map",
+    (v) => [...v.entries()],
+    (v) => new Map(v)
+  ),
+  simpleTransformation(
+    (v) => isNaNValue(v) || isInfinite(v),
+    "number",
+    (v) => {
+      if (isNaNValue(v)) {
+        return "NaN";
+      }
+      if (v > 0) {
+        return "Infinity";
+      } else {
+        return "-Infinity";
+      }
+    },
+    Number
+  ),
+  simpleTransformation(
+    (v) => v === 0 && 1 / v === -Infinity,
+    "number",
+    () => {
+      return "-0";
+    },
+    Number
+  ),
+  simpleTransformation(
+    isURL,
+    "URL",
+    (v) => v.toString(),
+    (v) => new URL(v)
+  ),
 ];
-function compositeTransformation(isApplicable, annotation, transform, untransform) {
+function compositeTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
-var symbolRule = compositeTransformation((s, superJson) => {
-  if (isSymbol(s)) {
-    const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);
-    return isRegistered;
-  }
-  return false;
-}, (s, superJson) => {
-  const identifier = superJson.symbolRegistry.getIdentifier(s);
-  return ["symbol", identifier];
-}, (v) => v.description, (_, a, superJson) => {
-  const value = superJson.symbolRegistry.getValue(a[1]);
-  if (!value) {
-    throw new Error("Trying to deserialize unknown symbol");
+var symbolRule = compositeTransformation(
+  (s, superJson) => {
+    if (isSymbol(s)) {
+      const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);
+      return isRegistered;
+    }
+    return false;
+  },
+  (s, superJson) => {
+    const identifier = superJson.symbolRegistry.getIdentifier(s);
+    return ["symbol", identifier];
+  },
+  (v) => v.description,
+  (_, a, superJson) => {
+    const value = superJson.symbolRegistry.getValue(a[1]);
+    if (!value) {
+      throw new Error("Trying to deserialize unknown symbol");
+    }
+    return value;
   }
-  return value;
-});
+);
 var constructorToName = [
   Int8Array,
   Uint8Array,
@@ -2203,74 +2534,101 @@ var constructorToName = [
   Uint32Array,
   Float32Array,
   Float64Array,
-  Uint8ClampedArray
+  Uint8ClampedArray,
 ].reduce((obj, ctor) => {
   obj[ctor.name] = ctor;
   return obj;
 }, {});
-var typedArrayRule = compositeTransformation(isTypedArray, (v) => ["typed-array", v.constructor.name], (v) => [...v], (v, a) => {
-  const ctor = constructorToName[a[1]];
-  if (!ctor) {
-    throw new Error("Trying to deserialize unknown typed array");
-  }
-  return new ctor(v);
-});
+var typedArrayRule = compositeTransformation(
+  isTypedArray,
+  (v) => ["typed-array", v.constructor.name],
+  (v) => [...v],
+  (v, a) => {
+    const ctor = constructorToName[a[1]];
+    if (!ctor) {
+      throw new Error("Trying to deserialize unknown typed array");
+    }
+    return new ctor(v);
+  }
+);
 function isInstanceOfRegisteredClass(potentialClass, superJson) {
   if (potentialClass?.constructor) {
-    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);
+    const isRegistered = !!superJson.classRegistry.getIdentifier(
+      potentialClass.constructor
+    );
     return isRegistered;
   }
   return false;
 }
-var classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {
-  const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
-  return ["class", identifier];
-}, (clazz, superJson) => {
-  const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);
-  if (!allowedProps) {
-    return { ...clazz };
+var classRule = compositeTransformation(
+  isInstanceOfRegisteredClass,
+  (clazz, superJson) => {
+    const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
+    return ["class", identifier];
+  },
+  (clazz, superJson) => {
+    const allowedProps = superJson.classRegistry.getAllowedProps(
+      clazz.constructor
+    );
+    if (!allowedProps) {
+      return { ...clazz };
+    }
+    const result = {};
+    allowedProps.forEach((prop) => {
+      result[prop] = clazz[prop];
+    });
+    return result;
+  },
+  (v, a, superJson) => {
+    const clazz = superJson.classRegistry.getValue(a[1]);
+    if (!clazz) {
+      throw new Error(
+        "Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564"
+      );
+    }
+    return Object.assign(Object.create(clazz.prototype), v);
   }
-  const result = {};
-  allowedProps.forEach((prop) => {
-    result[prop] = clazz[prop];
-  });
-  return result;
-}, (v, a, superJson) => {
-  const clazz = superJson.classRegistry.getValue(a[1]);
-  if (!clazz) {
-    throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");
+);
+var customRule = compositeTransformation(
+  (value, superJson) => {
+    return !!superJson.customTransformerRegistry.findApplicable(value);
+  },
+  (value, superJson) => {
+    const transformer =
+      superJson.customTransformerRegistry.findApplicable(value);
+    return ["custom", transformer.name];
+  },
+  (value, superJson) => {
+    const transformer =
+      superJson.customTransformerRegistry.findApplicable(value);
+    return transformer.serialize(value);
+  },
+  (v, a, superJson) => {
+    const transformer = superJson.customTransformerRegistry.findByName(a[1]);
+    if (!transformer) {
+      throw new Error("Trying to deserialize unknown custom value");
+    }
+    return transformer.deserialize(v);
   }
-  return Object.assign(Object.create(clazz.prototype), v);
-});
-var customRule = compositeTransformation((value, superJson) => {
-  return !!superJson.customTransformerRegistry.findApplicable(value);
-}, (value, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findApplicable(value);
-  return ["custom", transformer.name];
-}, (value, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findApplicable(value);
-  return transformer.serialize(value);
-}, (v, a, superJson) => {
-  const transformer = superJson.customTransformerRegistry.findByName(a[1]);
-  if (!transformer) {
-    throw new Error("Trying to deserialize unknown custom value");
-  }
-  return transformer.deserialize(v);
-});
+);
 var compositeRules = [classRule, symbolRule, customRule, typedArrayRule];
 var transformValue = (value, superJson) => {
-  const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));
+  const applicableCompositeRule = findArr(compositeRules, (rule) =>
+    rule.isApplicable(value, superJson)
+  );
   if (applicableCompositeRule) {
     return {
       value: applicableCompositeRule.transform(value, superJson),
-      type: applicableCompositeRule.annotation(value, superJson)
+      type: applicableCompositeRule.annotation(value, superJson),
     };
   }
-  const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));
+  const applicableSimpleRule = findArr(simpleRules, (rule) =>
+    rule.isApplicable(value, superJson)
+  );
   if (applicableSimpleRule) {
     return {
       value: applicableSimpleRule.transform(value, superJson),
-      type: applicableSimpleRule.annotation
+      type: applicableSimpleRule.annotation,
     };
   }
   return void 0;
@@ -2422,7 +2780,9 @@ function traverse(tree, walker2, origin = []) {
     return;
   }
   if (!isArray(tree)) {
-    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));
+    forEach(tree, (subtree, key) =>
+      traverse(subtree, walker2, [...origin, ...parsePath(key)])
+    );
     return;
   }
   const [nodeValue, children2] = tree;
@@ -2459,7 +2819,12 @@ function applyReferentialEqualityAnnotations(plain, annotations) {
   }
   return plain;
 }
-var isDeep = (object, superJson) => isPlainObject(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);
+var isDeep = (object, superJson) =>
+  isPlainObject(object) ||
+  isArray(object) ||
+  isMap(object) ||
+  isSet(object) ||
+  isInstanceOfRegisteredClass(object, superJson);
 function addIdentity(object, path, identities) {
   const existingSet = identities.get(object);
   if (existingSet) {
@@ -2476,13 +2841,16 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
       return;
     }
     if (!dedupe) {
-      paths = paths.map((path) => path.map(String)).sort((a, b) => a.length - b.length);
+      paths = paths
+        .map((path) => path.map(String))
+        .sort((a, b) => a.length - b.length);
     }
     const [representativePath, ...identicalPaths] = paths;
     if (representativePath.length === 0) {
       rootEqualityPaths = identicalPaths.map(stringifyPath);
     } else {
-      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);
+      result[stringifyPath(representativePath)] =
+        identicalPaths.map(stringifyPath);
     }
   });
   if (rootEqualityPaths) {
@@ -2495,25 +2863,37 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
     return isEmptyObject(result) ? void 0 : result;
   }
 }
-var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {
+var walker = (
+  object,
+  identities,
+  superJson,
+  dedupe,
+  path = [],
+  objectsInThisPath = [],
+  seenObjects = /* @__PURE__ */ new Map()
+) => {
   const primitive = isPrimitive(object);
   if (!primitive) {
     addIdentity(object, path, identities);
     const seen = seenObjects.get(object);
     if (seen) {
-      return dedupe ? {
-        transformedValue: null
-      } : seen;
+      return dedupe
+        ? {
+            transformedValue: null,
+          }
+        : seen;
     }
   }
   if (!isDeep(object, superJson)) {
     const transformed2 = transformValue(object, superJson);
-    const result2 = transformed2 ? {
-      transformedValue: transformed2.value,
-      annotations: [transformed2.type]
-    } : {
-      transformedValue: object
-    };
+    const result2 = transformed2
+      ? {
+          transformedValue: transformed2.value,
+          annotations: [transformed2.type],
+        }
+      : {
+          transformedValue: object,
+        };
     if (!primitive) {
       seenObjects.set(object, result2);
     }
@@ -2521,7 +2901,7 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
   }
   if (includes(objectsInThisPath, object)) {
     return {
-      transformedValue: null
+      transformedValue: null,
     };
   }
   const transformationResult = transformValue(object, superJson);
@@ -2529,10 +2909,24 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
   const transformedValue = isArray(transformed) ? [] : {};
   const innerAnnotations = {};
   forEach(transformed, (value, index) => {
-    if (index === "__proto__" || index === "constructor" || index === "prototype") {
-      throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);
+    if (
+      index === "__proto__" ||
+      index === "constructor" ||
+      index === "prototype"
+    ) {
+      throw new Error(
+        `Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`
+      );
     }
-    const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);
+    const recursiveResult = walker(
+      value,
+      identities,
+      superJson,
+      dedupe,
+      [...path, index],
+      [...objectsInThisPath, object],
+      seenObjects
+    );
     transformedValue[index] = recursiveResult.transformedValue;
     if (isArray(recursiveResult.annotations)) {
       innerAnnotations[index] = recursiveResult.annotations;
@@ -2542,13 +2936,19 @@ var walker = (object, identities, superJson, dedupe, path = [], objectsInThisPat
       });
     }
   });
-  const result = isEmptyObject(innerAnnotations) ? {
-    transformedValue,
-    annotations: !!transformationResult ? [transformationResult.type] : void 0
-  } : {
-    transformedValue,
-    annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations
-  };
+  const result = isEmptyObject(innerAnnotations)
+    ? {
+        transformedValue,
+        annotations: !!transformationResult
+          ? [transformationResult.type]
+          : void 0,
+      }
+    : {
+        transformedValue,
+        annotations: !!transformationResult
+          ? [transformationResult.type, innerAnnotations]
+          : innerAnnotations,
+      };
   if (!primitive) {
     seenObjects.set(object, result);
   }
@@ -2563,23 +2963,27 @@ function isArray2(payload) {
   return getType2(payload) === "Array";
 }
 function isPlainObject2(payload) {
-  if (getType2(payload) !== "Object")
-    return false;
+  if (getType2(payload) !== "Object") return false;
   const prototype = Object.getPrototypeOf(payload);
-  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
+  return (
+    !!prototype &&
+    prototype.constructor === Object &&
+    prototype === Object.prototype
+  );
 }
 
 // ../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js
 function assignProp2(carry, key, newVal, originalObject, includeNonenumerable) {
-  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? "enumerable" : "nonenumerable";
-  if (propType === "enumerable")
-    carry[key] = newVal;
+  const propType = {}.propertyIsEnumerable.call(originalObject, key)
+    ? "enumerable"
+    : "nonenumerable";
+  if (propType === "enumerable") carry[key] = newVal;
   if (includeNonenumerable && propType === "nonenumerable") {
     Object.defineProperty(carry, key, {
       value: newVal,
       enumerable: false,
       writable: true,
-      configurable: true
+      configurable: true,
     });
   }
 }
@@ -2619,19 +3023,22 @@ var SuperJSON = class {
     const identities = /* @__PURE__ */ new Map();
     const output = walker(object, identities, this, this.dedupe);
     const res = {
-      json: output.transformedValue
+      json: output.transformedValue,
     };
     if (output.annotations) {
       res.meta = {
         ...res.meta,
-        values: output.annotations
+        values: output.annotations,
       };
     }
-    const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);
+    const equalityAnnotations = generateReferentialEqualityAnnotations(
+      identities,
+      this.dedupe
+    );
     if (equalityAnnotations) {
       res.meta = {
         ...res.meta,
-        referentialEqualities: equalityAnnotations
+        referentialEqualities: equalityAnnotations,
       };
     }
     return res;
@@ -2643,7 +3050,10 @@ var SuperJSON = class {
       result = applyValueAnnotations(result, meta.values, this);
     }
     if (meta?.referentialEqualities) {
-      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
+      result = applyReferentialEqualityAnnotations(
+        result,
+        meta.referentialEqualities
+      );
     }
     return result;
   }
@@ -2662,7 +3072,7 @@ var SuperJSON = class {
   registerCustom(transformer, name) {
     this.customTransformerRegistry.register({
       name,
-      ...transformer
+      ...transformer,
     });
   }
   allowErrorProps(...props) {
@@ -2670,14 +3080,30 @@ var SuperJSON = class {
   }
 };
 SuperJSON.defaultInstance = new SuperJSON();
-SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);
-SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);
-SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);
-SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);
-SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);
-SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);
-SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);
-SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);
+SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(
+  SuperJSON.defaultInstance
+);
+SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(
+  SuperJSON.defaultInstance
+);
 var serialize = SuperJSON.serialize;
 SuperJSON.deserialize;
 var stringify = SuperJSON.stringify;
@@ -2689,36 +3115,67 @@ SuperJSON.allowErrorProps;
 
 // src/utils.tsx
 function getQueryStatusLabel(query) {
-  return query.state.fetchStatus === "fetching" ? "fetching" : !query.getObserversCount() ? "inactive" : query.state.fetchStatus === "paused" ? "paused" : query.isStale() ? "stale" : "fresh";
+  return query.state.fetchStatus === "fetching"
+    ? "fetching"
+    : !query.getObserversCount()
+    ? "inactive"
+    : query.state.fetchStatus === "paused"
+    ? "paused"
+    : query.isStale()
+    ? "stale"
+    : "fresh";
 }
 function getSidedProp(prop, side) {
   return `${prop}${side.charAt(0).toUpperCase() + side.slice(1)}`;
 }
-function getQueryStatusColor({
-  queryState,
-  observerCount,
-  isStale
-}) {
-  return queryState.fetchStatus === "fetching" ? "blue" : !observerCount ? "gray" : queryState.fetchStatus === "paused" ? "purple" : isStale ? "yellow" : "green";
-}
-function getMutationStatusColor({
-  status,
-  isPaused
-}) {
-  return isPaused ? "purple" : status === "error" ? "red" : status === "pending" ? "yellow" : status === "success" ? "green" : "gray";
+function getQueryStatusColor({ queryState, observerCount, isStale }) {
+  return queryState?.fetchStatus === "fetching"
+    ? "blue"
+    : !observerCount
+    ? "gray"
+    : queryState.fetchStatus === "paused"
+    ? "purple"
+    : isStale
+    ? "yellow"
+    : "green";
+}
+function getMutationStatusColor({ status, isPaused }) {
+  return isPaused
+    ? "purple"
+    : status === "error"
+    ? "red"
+    : status === "pending"
+    ? "yellow"
+    : status === "success"
+    ? "green"
+    : "gray";
 }
 function getQueryStatusColorByLabel(label) {
-  return label === "fresh" ? "green" : label === "stale" ? "yellow" : label === "paused" ? "purple" : label === "inactive" ? "gray" : "blue";
+  return label === "fresh"
+    ? "green"
+    : label === "stale"
+    ? "yellow"
+    : label === "paused"
+    ? "purple"
+    : label === "inactive"
+    ? "gray"
+    : "blue";
 }
 var displayValue = (value, beautify = false) => {
-  const {
-    json
-  } = serialize(value);
+  const { json } = serialize(value);
   return JSON.stringify(json, null, beautify ? 2 : void 0);
 };
-var getStatusRank = (q) => q.state.fetchStatus !== "idle" ? 0 : !q.getObserversCount() ? 3 : q.isStale() ? 2 : 1;
+var getStatusRank = (q) =>
+  q.state.fetchStatus !== "idle"
+    ? 0
+    : !q.getObserversCount()
+    ? 3
+    : q.isStale()
+    ? 2
+    : 1;
 var queryHashSort = (a, b) => a.queryHash.localeCompare(b.queryHash);
-var dateSort = (a, b) => a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
+var dateSort = (a, b) =>
+  a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
 var statusAndDateSort = (a, b) => {
   if (getStatusRank(a) === getStatusRank(b)) {
     return dateSort(a, b);
@@ -2728,10 +3185,18 @@ var statusAndDateSort = (a, b) => {
 var sortFns = {
   status: statusAndDateSort,
   "query hash": queryHashSort,
-  "last updated": dateSort
+  "last updated": dateSort,
 };
-var getMutationStatusRank = (m) => m.state.isPaused ? 0 : m.state.status === "error" ? 2 : m.state.status === "pending" ? 1 : 3;
-var mutationDateSort = (a, b) => a.state.submittedAt < b.state.submittedAt ? 1 : -1;
+var getMutationStatusRank = (m) =>
+  m.state.isPaused
+    ? 0
+    : m.state.status === "error"
+    ? 2
+    : m.state.status === "pending"
+    ? 1
+    : 3;
+var mutationDateSort = (a, b) =>
+  a.state.submittedAt < b.state.submittedAt ? 1 : -1;
 var mutationStatusSort = (a, b) => {
   if (getMutationStatusRank(a) === getMutationStatusRank(b)) {
     return mutationDateSort(a, b);
@@ -2740,7 +3205,7 @@ var mutationStatusSort = (a, b) => {
 };
 var mutationSortFns = {
   status: mutationStatusSort,
-  "last updated": mutationDateSort
+  "last updated": mutationDateSort,
 };
 var convertRemToPixels = (rem) => {
   return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);
@@ -2773,7 +3238,11 @@ var updateNestedDataByPath = (oldData, updatePath, value) => {
     return newData;
   }
   if (oldData instanceof Set) {
-    const setAsArray = updateNestedDataByPath(Array.from(oldData), updatePath, value);
+    const setAsArray = updateNestedDataByPath(
+      Array.from(oldData),
+      updatePath,
+      value
+    );
     return new Set(setAsArray);
   }
   if (Array.isArray(oldData)) {
@@ -2788,7 +3257,7 @@ var updateNestedDataByPath = (oldData, updatePath, value) => {
   }
   if (oldData instanceof Object) {
     const newData = {
-      ...oldData
+      ...oldData,
     };
     if (updatePath.length === 1) {
       newData[updatePath[0]] = value;
@@ -2826,7 +3295,7 @@ var deleteNestedDataByPath = (oldData, deletePath) => {
   }
   if (oldData instanceof Object) {
     const newData = {
-      ...oldData
+      ...oldData,
     };
     if (deletePath.length === 1) {
       delete newData[deletePath[0]];
@@ -2840,7 +3309,8 @@ var deleteNestedDataByPath = (oldData, deletePath) => {
 };
 var setupStyleSheet = (nonce, target) => {
   if (!nonce) return;
-  const styleExists = document.querySelector("#_goober") || target?.querySelector("#_goober");
+  const styleExists =
+    document.querySelector("#_goober") || target?.querySelector("#_goober");
   if (styleExists) return;
   const styleTag = document.createElement("style");
   const textNode = document.createTextNode("");
@@ -2854,4 +3324,60 @@ var setupStyleSheet = (nonce, target) => {
   }
 };
 
-export { $TRACK, DEV, Dynamic, For, Index, Match, Portal, Show, Switch, addEventListener, batch, className, clearDelegatedEvents, convertRemToPixels, createComponent, createComputed, createContext, createEffect, createMemo, createRenderEffect, createRoot, createSignal, createUniqueId, delegateEvents, deleteNestedDataByPath, displayValue, getMutationStatusColor, getOwner, getPreferredColorScheme, getQueryStatusColor, getQueryStatusColorByLabel, getQueryStatusLabel, getSidedProp, insert, isServer, lazy, mergeProps, mutationSortFns, on, onCleanup, onMount, render, serialize, setAttribute, setupStyleSheet, sortFns, splitProps, spread, stringify, template, untrack, updateNestedDataByPath, use, useContext, useTransition };
+export {
+  $TRACK,
+  DEV,
+  Dynamic,
+  For,
+  Index,
+  Match,
+  Portal,
+  Show,
+  Switch,
+  addEventListener,
+  batch,
+  className,
+  clearDelegatedEvents,
+  convertRemToPixels,
+  createComponent,
+  createComputed,
+  createContext,
+  createEffect,
+  createMemo,
+  createRenderEffect,
+  createRoot,
+  createSignal,
+  createUniqueId,
+  delegateEvents,
+  deleteNestedDataByPath,
+  displayValue,
+  getMutationStatusColor,
+  getOwner,
+  getPreferredColorScheme,
+  getQueryStatusColor,
+  getQueryStatusColorByLabel,
+  getQueryStatusLabel,
+  getSidedProp,
+  insert,
+  isServer,
+  lazy,
+  mergeProps,
+  mutationSortFns,
+  on,
+  onCleanup,
+  onMount,
+  render,
+  serialize,
+  setAttribute,
+  setupStyleSheet,
+  sortFns,
+  splitProps,
+  spread,
+  stringify,
+  template,
+  untrack,
+  updateNestedDataByPath,
+  use,
+  useContext,
+  useTransition,
+};
diff --git a/build/dev.cjs b/build/dev.cjs
index 98f1cfd5a1f008c4bcb98d35ab931969de709077..06d2400e015bc737f6892e808fa1e46b0312e5b1 100644
--- a/build/dev.cjs
+++ b/build/dev.cjs
@@ -1,10 +1,11 @@
-'use strict';
+"use strict";
 
 var __defProp = Object.defineProperty;
 var __getOwnPropNames = Object.getOwnPropertyNames;
-var __esm = (fn, res) => function __init() {
-  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
-};
+var __esm = (fn, res) =>
+  function __init() {
+    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])((fn = 0))), res;
+  };
 var __export = (target, all) => {
   for (var name in all)
     __defProp(target, name, { get: all[name], enumerable: true });
@@ -12,8 +13,11 @@ var __export = (target, all) => {
 
 // ../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/dist/solid.js
 function getContextId(count) {
-  const num = String(count), len = num.length - 1;
-  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num;
+  const num = String(count),
+    len = num.length - 1;
+  return (
+    sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num
+  );
 }
 function setHydrateContext(context) {
   sharedConfig.context = context;
@@ -22,16 +26,23 @@ function nextHydrateContext() {
   return {
     ...sharedConfig.context,
     id: sharedConfig.getNextContextId(),
-    count: 0
+    count: 0,
   };
 }
 function createRoot(fn, detachedOwner) {
-  const listener = Listener, owner = Owner, unowned = fn.length === 0, current = detachedOwner === void 0 ? owner : detachedOwner, root = unowned ? UNOWNED : {
-    owned: null,
-    cleanups: null,
-    context: current ? current.context : null,
-    owner: current
-  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
+  const listener = Listener,
+    owner = Owner,
+    unowned = fn.length === 0,
+    current = detachedOwner === void 0 ? owner : detachedOwner,
+    root = unowned
+      ? UNOWNED
+      : {
+          owned: null,
+          cleanups: null,
+          context: current ? current.context : null,
+          owner: current,
+        },
+    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
   Owner = root;
   Listener = null;
   try {
@@ -47,11 +58,12 @@ function createSignal(value, options) {
     value,
     observers: null,
     observerSlots: null,
-    comparator: options.equals || void 0
+    comparator: options.equals || void 0,
   };
   const setter = (value2) => {
     if (typeof value2 === "function") {
-      if (Transition && Transition.running && Transition.sources.has(s2)) value2 = value2(s2.tValue);
+      if (Transition && Transition.running && Transition.sources.has(s2))
+        value2 = value2(s2.tValue);
       else value2 = value2(s2.value);
     }
     return writeSignal(s2, value2);
@@ -70,7 +82,8 @@ function createRenderEffect(fn, value, options) {
 }
 function createEffect(fn, value, options) {
   runEffects = runUserEffects;
-  const c2 = createComputation(fn, value, false, STALE), s2 = SuspenseContext && useContext(SuspenseContext);
+  const c2 = createComputation(fn, value, false, STALE),
+    s2 = SuspenseContext && useContext(SuspenseContext);
   if (s2) c2.suspense = s2;
   if (!options || !options.render) c2.user = true;
   Effects ? Effects.push(c2) : updateComputation(c2);
@@ -99,23 +112,34 @@ function createResource(pSource, pFetcher, pOptions) {
     fetcher = pSource;
     options = {};
   }
-  let pr = null, initP = NO_INIT, id = null, loadedUnderTransition = false, scheduled = false, resolved = "initialValue" in options, dynamic = typeof source === "function" && createMemo(source);
-  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {
-    equals: false
-  }), [state, setState] = createSignal(resolved ? "ready" : "unresolved");
+  let pr = null,
+    initP = NO_INIT,
+    id = null,
+    loadedUnderTransition = false,
+    scheduled = false,
+    resolved = "initialValue" in options,
+    dynamic = typeof source === "function" && createMemo(source);
+  const contexts = /* @__PURE__ */ new Set(),
+    [value, setValue] = (options.storage || createSignal)(options.initialValue),
+    [error, setError] = createSignal(void 0),
+    [track, trigger] = createSignal(void 0, {
+      equals: false,
+    }),
+    [state, setState] = createSignal(resolved ? "ready" : "unresolved");
   if (sharedConfig.context) {
     id = sharedConfig.getNextContextId();
     if (options.ssrLoadFrom === "initial") initP = options.initialValue;
-    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);
+    else if (sharedConfig.load && sharedConfig.has(id))
+      initP = sharedConfig.load(id);
   }
   function loadEnd(p2, v, error2, key) {
     if (pr === p2) {
       pr = null;
       key !== void 0 && (resolved = true);
       if ((p2 === initP || v === initP) && options.onHydrated)
-        queueMicrotask(
-          () => options.onHydrated(key, {
-            value: v
+        queueMicrotask(() =>
+          options.onHydrated(key, {
+            value: v,
           })
         );
       initP = NO_INIT;
@@ -140,13 +164,16 @@ function createResource(pSource, pFetcher, pOptions) {
     }, false);
   }
   function read() {
-    const c2 = SuspenseContext && useContext(SuspenseContext), v = value(), err = error();
+    const c2 = SuspenseContext && useContext(SuspenseContext),
+      v = value(),
+      err = error();
     if (err !== void 0 && !pr) throw err;
     if (Listener && !Listener.user && c2) {
       createComputed(() => {
         track();
         if (pr) {
-          if (c2.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);
+          if (c2.resolved && Transition && loadedUnderTransition)
+            Transition.promises.add(pr);
           else if (!contexts.has(c2)) {
             c2.increment();
             contexts.add(c2);
@@ -166,12 +193,15 @@ function createResource(pSource, pFetcher, pOptions) {
       return;
     }
     if (Transition && pr) Transition.promises.delete(pr);
-    const p2 = initP !== NO_INIT ? initP : untrack(
-      () => fetcher(lookup, {
-        value: value(),
-        refetching
-      })
-    );
+    const p2 =
+      initP !== NO_INIT
+        ? initP
+        : untrack(() =>
+            fetcher(lookup, {
+              value: value(),
+              refetching,
+            })
+          );
     if (!isPromise(p2)) {
       loadEnd(pr, p2, void 0, lookup);
       return p2;
@@ -183,7 +213,7 @@ function createResource(pSource, pFetcher, pOptions) {
       return p2;
     }
     scheduled = true;
-    queueMicrotask(() => scheduled = false);
+    queueMicrotask(() => (scheduled = false));
     runUpdates(() => {
       setState(resolved ? "refreshing" : "pending");
       trigger();
@@ -195,16 +225,16 @@ function createResource(pSource, pFetcher, pOptions) {
   }
   Object.defineProperties(read, {
     state: {
-      get: () => state()
+      get: () => state(),
     },
     error: {
-      get: () => error()
+      get: () => error(),
     },
     loading: {
       get() {
         const s2 = state();
         return s2 === "pending" || s2 === "refreshing";
-      }
+      },
     },
     latest: {
       get() {
@@ -212,8 +242,8 @@ function createResource(pSource, pFetcher, pOptions) {
         const err = error();
         if (err && !pr) throw err;
         return value();
-      }
-    }
+      },
+    },
   });
   if (dynamic) createComputed(() => load(false));
   else load(false);
@@ -221,8 +251,8 @@ function createResource(pSource, pFetcher, pOptions) {
     read,
     {
       refetch: load,
-      mutate: setValue
-    }
+      mutate: setValue,
+    },
   ];
 }
 function batch(fn) {
@@ -262,7 +292,7 @@ function onMount(fn) {
   createEffect(() => untrack(fn));
 }
 function onCleanup(fn) {
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner.cleanups === null) Owner.cleanups = [fn];
   else Owner.cleanups.push(fn);
   return fn;
@@ -296,15 +326,17 @@ function startTransition(fn) {
     Owner = o2;
     let t2;
     if (Scheduler || SuspenseContext) {
-      t2 = Transition || (Transition = {
-        sources: /* @__PURE__ */ new Set(),
-        effects: [],
-        promises: /* @__PURE__ */ new Set(),
-        disposed: /* @__PURE__ */ new Set(),
-        queue: /* @__PURE__ */ new Set(),
-        running: true
-      });
-      t2.done || (t2.done = new Promise((res) => t2.resolve = res));
+      t2 =
+        Transition ||
+        (Transition = {
+          sources: /* @__PURE__ */ new Set(),
+          effects: [],
+          promises: /* @__PURE__ */ new Set(),
+          disposed: /* @__PURE__ */ new Set(),
+          queue: /* @__PURE__ */ new Set(),
+          running: true,
+        });
+      t2.done || (t2.done = new Promise((res) => (t2.resolve = res)));
       t2.running = true;
     }
     runUpdates(fn, false);
@@ -320,12 +352,16 @@ function createContext(defaultValue, options) {
   return {
     id,
     Provider: createProvider(id),
-    defaultValue
+    defaultValue,
   };
 }
 function useContext(context) {
   let value;
-  return Owner && Owner.context && (value = Owner.context[context.id]) !== void 0 ? value : context.defaultValue;
+  return Owner &&
+    Owner.context &&
+    (value = Owner.context[context.id]) !== void 0
+    ? value
+    : context.defaultValue;
 }
 function children(fn) {
   const children2 = createMemo(fn);
@@ -339,7 +375,8 @@ function children(fn) {
 function readSignal() {
   const runningTransition = Transition && Transition.running;
   if (this.sources && (runningTransition ? this.tState : this.state)) {
-    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);
+    if ((runningTransition ? this.tState : this.state) === STALE)
+      updateComputation(this);
     else {
       const updates = Updates;
       Updates = null;
@@ -368,11 +405,14 @@ function readSignal() {
   return this.value;
 }
 function writeSignal(node, value, isComp) {
-  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;
+  let current =
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value;
   if (!node.comparator || !node.comparator(current, value)) {
     if (Transition) {
       const TransitionRunning = Transition.running;
-      if (TransitionRunning || !isComp && Transition.sources.has(node)) {
+      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {
         Transition.sources.add(node);
         node.tValue = value;
       }
@@ -394,7 +434,7 @@ function writeSignal(node, value, isComp) {
         }
         if (Updates.length > 1e6) {
           Updates = [];
-          if (IS_DEV) ;
+          if (IS_DEV);
           throw new Error();
         }
       }, false);
@@ -408,7 +448,9 @@ function updateComputation(node) {
   const time = ExecCount;
   runComputation(
     node,
-    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value,
     time
   );
   if (Transition && !Transition.running && Transition.sources.has(node)) {
@@ -424,7 +466,8 @@ function updateComputation(node) {
 }
 function runComputation(node, value, time) {
   let nextValue;
-  const owner = Owner, listener = Listener;
+  const owner = Owner,
+    listener = Listener;
   Listener = Owner = node;
   try {
     nextValue = node.fn(value);
@@ -468,13 +511,13 @@ function createComputation(fn, init, pure, state = STALE, options) {
     value: init,
     owner: Owner,
     context: Owner ? Owner.context : null,
-    pure
+    pure,
   };
   if (Transition && Transition.running) {
     c2.state = 0;
     c2.tState = state;
   }
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner !== UNOWNED) {
     if (Transition && Transition.running && Owner.pure) {
       if (!Owner.tOwned) Owner.tOwned = [c2];
@@ -486,15 +529,21 @@ function createComputation(fn, init, pure, state = STALE, options) {
   }
   if (ExternalSourceConfig && c2.fn) {
     const [track, trigger] = createSignal(void 0, {
-      equals: false
+      equals: false,
     });
     const ordinary = ExternalSourceConfig.factory(c2.fn, trigger);
     onCleanup(() => ordinary.dispose());
-    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());
-    const inTransition = ExternalSourceConfig.factory(c2.fn, triggerInTransition);
+    const triggerInTransition = () =>
+      startTransition(trigger).then(() => inTransition.dispose());
+    const inTransition = ExternalSourceConfig.factory(
+      c2.fn,
+      triggerInTransition
+    );
     c2.fn = (x) => {
       track();
-      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);
+      return Transition && Transition.running
+        ? inTransition.track(x)
+        : ordinary.track(x);
     };
   }
   return c2;
@@ -502,17 +551,23 @@ function createComputation(fn, init, pure, state = STALE, options) {
 function runTop(node) {
   const runningTransition = Transition && Transition.running;
   if ((runningTransition ? node.tState : node.state) === 0) return;
-  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);
-  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);
+  if ((runningTransition ? node.tState : node.state) === PENDING)
+    return lookUpstream(node);
+  if (node.suspense && untrack(node.suspense.inFallback))
+    return node.suspense.effects.push(node);
   const ancestors = [node];
-  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {
+  while (
+    (node = node.owner) &&
+    (!node.updatedAt || node.updatedAt < ExecCount)
+  ) {
     if (runningTransition && Transition.disposed.has(node)) return;
     if (runningTransition ? node.tState : node.state) ancestors.push(node);
   }
   for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {
     node = ancestors[i2];
     if (runningTransition) {
-      let top = node, prev = ancestors[i2 + 1];
+      let top = node,
+        prev = ancestors[i2 + 1];
       while ((top = top.owner) && top !== prev) {
         if (Transition.disposed.has(top)) return;
       }
@@ -568,7 +623,8 @@ function completeUpdates(wait) {
         for (const v of sources) {
           v.value = v.tValue;
           if (v.owned) {
-            for (let i2 = 0, len = v.owned.length; i2 < len; i2++) cleanNode(v.owned[i2]);
+            for (let i2 = 0, len = v.owned.length; i2 < len; i2++)
+              cleanNode(v.owned[i2]);
           }
           if (v.tOwned) v.owned = v.tOwned;
           delete v.tValue;
@@ -611,7 +667,8 @@ function scheduleQueue(queue) {
   }
 }
 function runUserEffects(queue) {
-  let i2, userLength = 0;
+  let i2,
+    userLength = 0;
   for (i2 = 0; i2 < queue.length; i2++) {
     const e2 = queue[i2];
     if (!e2.user) runTop(e2);
@@ -641,7 +698,10 @@ function lookUpstream(node, ignore) {
     if (source.sources) {
       const state = runningTransition ? source.tState : source.state;
       if (state === STALE) {
-        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))
+        if (
+          source !== ignore &&
+          (!source.updatedAt || source.updatedAt < ExecCount)
+        )
           runTop(source);
       } else if (state === PENDING) lookUpstream(source, ignore);
     }
@@ -664,9 +724,12 @@ function cleanNode(node) {
   let i2;
   if (node.sources) {
     while (node.sources.length) {
-      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;
+      const source = node.sources.pop(),
+        index = node.sourceSlots.pop(),
+        obs = source.observers;
       if (obs && obs.length) {
-        const n2 = obs.pop(), s2 = source.observerSlots.pop();
+        const n2 = obs.pop(),
+          s2 = source.observerSlots.pop();
         if (index < obs.length) {
           n2.sourceSlots[s2] = index;
           obs[index] = n2;
@@ -704,14 +767,14 @@ function reset(node, top) {
 function castError(err) {
   if (err instanceof Error) return err;
   return new Error(typeof err === "string" ? err : "Unknown error", {
-    cause: err
+    cause: err,
   });
 }
 function runErrors(err, fns, owner) {
   try {
     for (const f of fns) f(err);
   } catch (e2) {
-    handleError(e2, owner && owner.owner || null);
+    handleError(e2, (owner && owner.owner) || null);
   }
 }
 function handleError(err, owner = Owner) {
@@ -723,17 +786,20 @@ function handleError(err, owner = Owner) {
       fn() {
         runErrors(error, fns, owner);
       },
-      state: STALE
+      state: STALE,
     });
   else runErrors(error, fns, owner);
 }
 function resolveChildren(children2) {
-  if (typeof children2 === "function" && !children2.length) return resolveChildren(children2());
+  if (typeof children2 === "function" && !children2.length)
+    return resolveChildren(children2());
   if (Array.isArray(children2)) {
     const results = [];
     for (let i2 = 0; i2 < children2.length; i2++) {
       const result = resolveChildren(children2[i2]);
-      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+      Array.isArray(result)
+        ? results.push.apply(results, result)
+        : results.push(result);
     }
     return results;
   }
@@ -743,13 +809,14 @@ function createProvider(id, options) {
   return function provider(props) {
     let res;
     createRenderEffect(
-      () => res = untrack(() => {
-        Owner.context = {
-          ...Owner.context,
-          [id]: props.value
-        };
-        return children(() => props.children);
-      }),
+      () =>
+        (res = untrack(() => {
+          Owner.context = {
+            ...Owner.context,
+            [id]: props.value,
+          };
+          return children(() => props.children);
+        })),
       void 0
     );
     return res;
@@ -759,13 +826,28 @@ function dispose(d) {
   for (let i2 = 0; i2 < d.length; i2++) d[i2]();
 }
 function mapArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    len = 0,
+    indexes = mapFn.length > 1 ? [] : null;
   onCleanup(() => dispose(disposers));
   return () => {
-    let newItems = list() || [], newLen = newItems.length, i2, j;
+    let newItems = list() || [],
+      newLen = newItems.length,
+      i2,
+      j;
     newItems[$TRACK];
     return untrack(() => {
-      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;
+      let newIndices,
+        newIndicesNext,
+        temp,
+        tempdisposers,
+        tempIndexes,
+        start,
+        end,
+        newEnd,
+        item;
       if (newLen === 0) {
         if (len !== 0) {
           dispose(disposers);
@@ -794,8 +876,16 @@ function mapArray(list, mapFn, options = {}) {
         temp = new Array(newLen);
         tempdisposers = new Array(newLen);
         indexes && (tempIndexes = new Array(newLen));
-        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++) ;
-        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {
+        for (
+          start = 0, end = Math.min(len, newLen);
+          start < end && items[start] === newItems[start];
+          start++
+        );
+        for (
+          end = len - 1, newEnd = newLen - 1;
+          end >= start && newEnd >= start && items[end] === newItems[newEnd];
+          end--, newEnd--
+        ) {
           temp[newEnd] = mapped[end];
           tempdisposers[newEnd] = disposers[end];
           indexes && (tempIndexes[newEnd] = indexes[end]);
@@ -829,7 +919,7 @@ function mapArray(list, mapFn, options = {}) {
             }
           } else mapped[j] = createRoot(mapper);
         }
-        mapped = mapped.slice(0, len = newLen);
+        mapped = mapped.slice(0, (len = newLen));
         items = newItems.slice(0);
       }
       return mapped;
@@ -846,10 +936,16 @@ function mapArray(list, mapFn, options = {}) {
   };
 }
 function indexArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], signals = [], len = 0, i2;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    signals = [],
+    len = 0,
+    i2;
   onCleanup(() => dispose(disposers));
   return () => {
-    const newItems = list() || [], newLen = newItems.length;
+    const newItems = list() || [],
+      newLen = newItems.length;
     newItems[$TRACK];
     return untrack(() => {
       if (newLen === 0) {
@@ -890,7 +986,7 @@ function indexArray(list, mapFn, options = {}) {
       }
       len = signals.length = disposers.length = newLen;
       items = newItems.slice(0);
-      return mapped = mapped.slice(0, len);
+      return (mapped = mapped.slice(0, len));
     });
     function mapper(disposer) {
       disposers[i2] = disposer;
@@ -928,8 +1024,9 @@ function mergeProps(...sources) {
   let proxy = false;
   for (let i2 = 0; i2 < sources.length; i2++) {
     const s2 = sources[i2];
-    proxy = proxy || !!s2 && $PROXY in s2;
-    sources[i2] = typeof s2 === "function" ? (proxy = true, createMemo(s2)) : s2;
+    proxy = proxy || (!!s2 && $PROXY in s2);
+    sources[i2] =
+      typeof s2 === "function" ? ((proxy = true), createMemo(s2)) : s2;
   }
   if (SUPPORTS_PROXY && proxy) {
     return new Proxy(
@@ -951,7 +1048,7 @@ function mergeProps(...sources) {
           for (let i2 = 0; i2 < sources.length; i2++)
             keys2.push(...Object.keys(resolveSource(sources[i2])));
           return [...new Set(keys2)];
-        }
+        },
       },
       propTraps
     );
@@ -967,11 +1064,17 @@ function mergeProps(...sources) {
       if (key === "__proto__" || key === "constructor") continue;
       const desc = Object.getOwnPropertyDescriptor(source, key);
       if (!defined[key]) {
-        defined[key] = desc.get ? {
-          enumerable: true,
-          configurable: true,
-          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])
-        } : desc.value !== void 0 ? desc : void 0;
+        defined[key] = desc.get
+          ? {
+              enumerable: true,
+              configurable: true,
+              get: resolveSources.bind(
+                (sourcesMap[key] = [desc.get.bind(source)])
+              ),
+            }
+          : desc.value !== void 0
+          ? desc
+          : void 0;
       } else {
         const sources2 = sourcesMap[key];
         if (sources2) {
@@ -984,7 +1087,8 @@ function mergeProps(...sources) {
   const target = {};
   const definedKeys = Object.keys(defined);
   for (let i2 = definedKeys.length - 1; i2 >= 0; i2--) {
-    const key = definedKeys[i2], desc = defined[key];
+    const key = definedKeys[i2],
+      desc = defined[key];
     if (desc && desc.get) Object.defineProperty(target, key, desc);
     else target[key] = desc ? desc.value : void 0;
   }
@@ -1004,7 +1108,7 @@ function splitProps(props, ...keys2) {
           },
           keys() {
             return k.filter((property) => property in props);
-          }
+          },
         },
         propTraps
       );
@@ -1020,7 +1124,7 @@ function splitProps(props, ...keys2) {
           },
           keys() {
             return Object.keys(props).filter((k) => !blocked.has(k));
-          }
+          },
         },
         propTraps
       )
@@ -1031,18 +1135,27 @@ function splitProps(props, ...keys2) {
   const objects = keys2.map(() => ({}));
   for (const propName of Object.getOwnPropertyNames(props)) {
     const desc = Object.getOwnPropertyDescriptor(props, propName);
-    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;
+    const isDefaultDesc =
+      !desc.get &&
+      !desc.set &&
+      desc.enumerable &&
+      desc.writable &&
+      desc.configurable;
     let blocked = false;
     let objectIndex = 0;
     for (const k of keys2) {
       if (k.includes(propName)) {
         blocked = true;
-        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);
+        isDefaultDesc
+          ? (objects[objectIndex][propName] = desc.value)
+          : Object.defineProperty(objects[objectIndex], propName, desc);
       }
       ++objectIndex;
     }
     if (!blocked) {
-      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);
+      isDefaultDesc
+        ? (otherObject[propName] = desc.value)
+        : Object.defineProperty(otherObject, propName, desc);
     }
   }
   return [...objects, otherObject];
@@ -1064,23 +1177,28 @@ function lazy(fn) {
       });
       comp = s2;
     } else if (!comp) {
-      const [s2] = createResource(() => (p2 || (p2 = fn())).then((mod) => mod.default));
+      const [s2] = createResource(() =>
+        (p2 || (p2 = fn())).then((mod) => mod.default)
+      );
       comp = s2;
     }
     let Comp;
-    return createMemo(
-      () => (Comp = comp()) ? untrack(() => {
-        if (IS_DEV) ;
-        if (!ctx || sharedConfig.done) return Comp(props);
-        const c2 = sharedConfig.context;
-        setHydrateContext(ctx);
-        const r2 = Comp(props);
-        setHydrateContext(c2);
-        return r2;
-      }) : ""
+    return createMemo(() =>
+      (Comp = comp())
+        ? untrack(() => {
+            if (IS_DEV);
+            if (!ctx || sharedConfig.done) return Comp(props);
+            const c2 = sharedConfig.context;
+            setHydrateContext(ctx);
+            const r2 = Comp(props);
+            setHydrateContext(c2);
+            return r2;
+          })
+        : ""
     );
   };
-  wrap.preload = () => p2 || ((p2 = fn()).then((mod) => comp = () => mod.default), p2);
+  wrap.preload = () =>
+    p2 || ((p2 = fn()).then((mod) => (comp = () => mod.default)), p2);
   return wrap;
 }
 function createUniqueId() {
@@ -1089,36 +1207,46 @@ function createUniqueId() {
 }
 function For(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    mapArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Index(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(indexArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    indexArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Show(props) {
   const keyed = props.keyed;
   const conditionValue = createMemo(() => props.when, void 0, void 0);
-  const condition = keyed ? conditionValue : createMemo(conditionValue, void 0, {
-    equals: (a2, b2) => !a2 === !b2
-  });
+  const condition = keyed
+    ? conditionValue
+    : createMemo(conditionValue, void 0, {
+        equals: (a2, b2) => !a2 === !b2,
+      });
   return createMemo(
     () => {
       const c2 = condition();
       if (c2) {
         const child = props.children;
         const fn = typeof child === "function" && child.length > 0;
-        return fn ? untrack(
-          () => child(
-            keyed ? c2 : () => {
-              if (!untrack(condition)) throw narrowedError("Show");
-              return conditionValue();
-            }
-          )
-        ) : child;
+        return fn
+          ? untrack(() =>
+              child(
+                keyed
+                  ? c2
+                  : () => {
+                      if (!untrack(condition)) throw narrowedError("Show");
+                      return conditionValue();
+                    }
+              )
+            )
+          : child;
       }
       return props.fallback;
     },
@@ -1137,14 +1265,17 @@ function Switch(props) {
       const mp = mps[i2];
       const prevFunc = func;
       const conditionValue = createMemo(
-        () => prevFunc() ? void 0 : mp.when,
+        () => (prevFunc() ? void 0 : mp.when),
         void 0,
         void 0
       );
-      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, void 0, {
-        equals: (a2, b2) => !a2 === !b2
-      });
-      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
+      const condition = mp.keyed
+        ? conditionValue
+        : createMemo(conditionValue, void 0, {
+            equals: (a2, b2) => !a2 === !b2,
+          });
+      func = () =>
+        prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
     }
     return func;
   });
@@ -1155,14 +1286,19 @@ function Switch(props) {
       const [index, conditionValue, mp] = sel;
       const child = mp.children;
       const fn = typeof child === "function" && child.length > 0;
-      return fn ? untrack(
-        () => child(
-          mp.keyed ? conditionValue() : () => {
-            if (untrack(switchFunc)()?.[0] !== index) throw narrowedError("Match");
-            return conditionValue();
-          }
-        )
-      ) : child;
+      return fn
+        ? untrack(() =>
+            child(
+              mp.keyed
+                ? conditionValue()
+                : () => {
+                    if (untrack(switchFunc)()?.[0] !== index)
+                      throw narrowedError("Match");
+                    return conditionValue();
+                  }
+            )
+          )
+        : child;
     },
     void 0,
     void 0
@@ -1171,7 +1307,36 @@ function Switch(props) {
 function Match(props) {
   return props;
 }
-var sharedConfig, IS_DEV, equalFn, $PROXY, SUPPORTS_PROXY, $TRACK, signalOptions, ERROR, runEffects, STALE, PENDING, UNOWNED, NO_INIT, Owner, Transition, Scheduler, ExternalSourceConfig, Listener, Updates, Effects, ExecCount, transPending, setTransPending, SuspenseContext, FALLBACK, hydrationEnabled, propTraps, counter, narrowedError, DEV;
+var sharedConfig,
+  IS_DEV,
+  equalFn,
+  $PROXY,
+  SUPPORTS_PROXY,
+  $TRACK,
+  signalOptions,
+  ERROR,
+  runEffects,
+  STALE,
+  PENDING,
+  UNOWNED,
+  NO_INIT,
+  Owner,
+  Transition,
+  Scheduler,
+  ExternalSourceConfig,
+  Listener,
+  Updates,
+  Effects,
+  ExecCount,
+  transPending,
+  setTransPending,
+  SuspenseContext,
+  FALLBACK,
+  hydrationEnabled,
+  propTraps,
+  counter,
+  narrowedError,
+  DEV;
 var init_solid = __esm({
   "../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/dist/solid.js"() {
     sharedConfig = {
@@ -1184,7 +1349,7 @@ var init_solid = __esm({
       },
       getNextContextId() {
         return getContextId(this.context.count++);
-      }
+      },
     };
     IS_DEV = false;
     equalFn = (a2, b2) => a2 === b2;
@@ -1192,7 +1357,7 @@ var init_solid = __esm({
     SUPPORTS_PROXY = typeof Proxy === "function";
     $TRACK = Symbol("solid-track");
     signalOptions = {
-      equals: equalFn
+      equals: equalFn,
     };
     ERROR = null;
     runEffects = runQueue;
@@ -1202,7 +1367,7 @@ var init_solid = __esm({
       owned: null,
       cleanups: null,
       context: null,
-      owner: null
+      owner: null,
     };
     NO_INIT = {};
     Owner = null;
@@ -1235,26 +1400,32 @@ var init_solid = __esm({
             return _.get(property);
           },
           set: trueFn,
-          deleteProperty: trueFn
+          deleteProperty: trueFn,
         };
       },
       ownKeys(_) {
         return _.keys();
-      }
+      },
     };
     counter = 0;
     narrowedError = (name) => `Stale read from <${name}>.`;
     DEV = void 0;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/web/dist/web.js
 function getPropAlias(prop, tagName) {
   const a2 = PropAliases[prop];
-  return typeof a2 === "object" ? a2[tagName] ? a2["$"] : void 0 : a2;
+  return typeof a2 === "object" ? (a2[tagName] ? a2["$"] : void 0) : a2;
 }
 function reconcileArrays(parentNode, a2, b2) {
-  let bLength = b2.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;
+  let bLength = b2.length,
+    aEnd = a2.length,
+    bEnd = bLength,
+    aStart = 0,
+    bStart = 0,
+    after = a2[aEnd - 1].nextSibling,
+    map = null;
   while (aStart < aEnd || bStart < bEnd) {
     if (a2[aStart] === b2[bStart]) {
       aStart++;
@@ -1266,7 +1437,12 @@ function reconcileArrays(parentNode, a2, b2) {
       bEnd--;
     }
     if (aEnd === aStart) {
-      const node = bEnd < bLength ? bStart ? b2[bStart - 1].nextSibling : b2[bEnd - bStart] : after;
+      const node =
+        bEnd < bLength
+          ? bStart
+            ? b2[bStart - 1].nextSibling
+            : b2[bEnd - bStart]
+          : after;
       while (bStart < bEnd) parentNode.insertBefore(b2[bStart++], node);
     } else if (bEnd === bStart) {
       while (aStart < aEnd) {
@@ -1287,9 +1463,12 @@ function reconcileArrays(parentNode, a2, b2) {
       const index = map.get(a2[aStart]);
       if (index != null) {
         if (bStart < index && index < bEnd) {
-          let i2 = aStart, sequence = 1, t2;
+          let i2 = aStart,
+            sequence = 1,
+            t2;
           while (++i2 < aEnd && i2 < bEnd) {
-            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence) break;
+            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)
+              break;
             sequence++;
           }
           if (sequence > index - bStart) {
@@ -1305,7 +1484,9 @@ function render(code, element, init, options = {}) {
   let disposer;
   createRoot((dispose3) => {
     disposer = dispose3;
-    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);
+    element === document
+      ? code()
+      : insert(element, code(), element.firstChild ? null : void 0, init);
   }, options.owner);
   return () => {
     disposer();
@@ -1319,12 +1500,15 @@ function template(html, isImportNode, isSVG, isMathML) {
     t2.innerHTML = html;
     return t2.content.firstChild;
   };
-  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);
+  const fn = isImportNode
+    ? () => untrack(() => document.importNode(node || (node = create()), true))
+    : () => (node || (node = create())).cloneNode(true);
   fn.cloneNode = fn;
   return fn;
 }
 function delegateEvents(eventNames, document2 = window.document) {
-  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
+  const e2 =
+    document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
   for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {
     const name = eventNames[i2];
     if (!e2.has(name)) {
@@ -1335,7 +1519,8 @@ function delegateEvents(eventNames, document2 = window.document) {
 }
 function clearDelegatedEvents(document2 = window.document) {
   if (document2[$$EVENTS]) {
-    for (let name of document2[$$EVENTS].keys()) document2.removeEventListener(name, eventHandler);
+    for (let name of document2[$$EVENTS].keys())
+      document2.removeEventListener(name, eventHandler);
     delete document2[$$EVENTS];
   }
 }
@@ -1366,11 +1551,20 @@ function addEventListener(node, name, handler, delegate) {
     } else node[`$$${name}`] = handler;
   } else if (Array.isArray(handler)) {
     const handlerFn = handler[0];
-    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));
-  } else node.addEventListener(name, handler, typeof handler !== "function" && handler);
+    node.addEventListener(
+      name,
+      (handler[0] = (e2) => handlerFn.call(node, handler[1], e2))
+    );
+  } else
+    node.addEventListener(
+      name,
+      handler,
+      typeof handler !== "function" && handler
+    );
 }
 function classList(node, value, prev = {}) {
-  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);
+  const classKeys = Object.keys(value || {}),
+    prevKeys = Object.keys(prev);
   let i2, len;
   for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {
     const key = prevKeys[i2];
@@ -1379,8 +1573,10 @@ function classList(node, value, prev = {}) {
     delete prev[key];
   }
   for (i2 = 0, len = classKeys.length; i2 < len; i2++) {
-    const key = classKeys[i2], classValue = !!value[key];
-    if (!key || key === "undefined" || prev[key] === classValue || !classValue) continue;
+    const key = classKeys[i2],
+      classValue = !!value[key];
+    if (!key || key === "undefined" || prev[key] === classValue || !classValue)
+      continue;
     toggleClassKey(node, key, true);
     prev[key] = classValue;
   }
@@ -1389,7 +1585,7 @@ function classList(node, value, prev = {}) {
 function style(node, value, prev) {
   if (!value) return prev ? setAttribute(node, "style") : value;
   const nodeStyle = node.style;
-  if (typeof value === "string") return nodeStyle.cssText = value;
+  if (typeof value === "string") return (nodeStyle.cssText = value);
   typeof prev === "string" && (nodeStyle.cssText = prev = void 0);
   prev || (prev = {});
   value || (value = {});
@@ -1411,10 +1607,17 @@ function spread(node, props = {}, isSVG, skipChildren) {
   const prevProps = {};
   if (!skipChildren) {
     createRenderEffect(
-      () => prevProps.children = insertExpression(node, props.children, prevProps.children)
+      () =>
+        (prevProps.children = insertExpression(
+          node,
+          props.children,
+          prevProps.children
+        ))
     );
   }
-  createRenderEffect(() => typeof props.ref === "function" && use(props.ref, node));
+  createRenderEffect(
+    () => typeof props.ref === "function" && use(props.ref, node)
+  );
   createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));
   return prevProps;
 }
@@ -1423,15 +1626,34 @@ function use(fn, element, arg) {
 }
 function insert(parent, accessor, marker, initial) {
   if (marker !== void 0 && !initial) initial = [];
-  if (typeof accessor !== "function") return insertExpression(parent, accessor, initial, marker);
-  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);
+  if (typeof accessor !== "function")
+    return insertExpression(parent, accessor, initial, marker);
+  createRenderEffect(
+    (current) => insertExpression(parent, accessor(), current, marker),
+    initial
+  );
 }
-function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {
+function assign(
+  node,
+  props,
+  isSVG,
+  skipChildren,
+  prevProps = {},
+  skipRef = false
+) {
   props || (props = {});
   for (const prop in prevProps) {
     if (!(prop in props)) {
       if (prop === "children") continue;
-      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);
+      prevProps[prop] = assignProp(
+        node,
+        prop,
+        null,
+        prevProps[prop],
+        isSVG,
+        skipRef,
+        props
+      );
     }
   }
   for (const prop in props) {
@@ -1439,12 +1661,25 @@ function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = fals
       continue;
     }
     const value = props[prop];
-    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);
+    prevProps[prop] = assignProp(
+      node,
+      prop,
+      value,
+      prevProps[prop],
+      isSVG,
+      skipRef,
+      props
+    );
   }
 }
 function getNextElement(template2) {
-  let node, key, hydrating = isHydrating();
-  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {
+  let node,
+    key,
+    hydrating = isHydrating();
+  if (
+    !hydrating ||
+    !(node = sharedConfig.registry.get((key = getHydrationKey())))
+  ) {
     return template2();
   }
   if (sharedConfig.completed) sharedConfig.completed.add(node);
@@ -1452,7 +1687,9 @@ function getNextElement(template2) {
   return node;
 }
 function isHydrating(node) {
-  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);
+  return (
+    !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected)
+  );
 }
 function toPropertyName(name) {
   return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());
@@ -1471,8 +1708,10 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     if (!skipRef) value(node);
   } else if (prop.slice(0, 3) === "on:") {
     const e2 = prop.slice(3);
-    prev && node.removeEventListener(e2, prev, typeof prev !== "function" && prev);
-    value && node.addEventListener(e2, value, typeof value !== "function" && value);
+    prev &&
+      node.removeEventListener(e2, prev, typeof prev !== "function" && prev);
+    value &&
+      node.addEventListener(e2, value, typeof value !== "function" && value);
   } else if (prop.slice(0, 10) === "oncapture:") {
     const e2 = prop.slice(10);
     prev && node.removeEventListener(e2, prev, true);
@@ -1492,16 +1731,25 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     setAttribute(node, prop.slice(5), value);
   } else if (prop.slice(0, 5) === "bool:") {
     setBoolAttribute(node, prop.slice(5), value);
-  } else if ((forceProp = prop.slice(0, 5) === "prop:") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes("-") || "is" in props)) {
+  } else if (
+    (forceProp = prop.slice(0, 5) === "prop:") ||
+    (isChildProp = ChildProperties.has(prop)) ||
+    (!isSVG &&
+      ((propAlias = getPropAlias(prop, node.tagName)) ||
+        (isProp = Properties.has(prop)))) ||
+    (isCE = node.nodeName.includes("-") || "is" in props)
+  ) {
     if (forceProp) {
       prop = prop.slice(5);
       isProp = true;
     } else if (isHydrating(node)) return value;
     if (prop === "class" || prop === "className") className(node, value);
-    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;
+    else if (isCE && !isProp && !isChildProp)
+      node[toPropertyName(prop)] = value;
     else node[propAlias || prop] = value;
   } else {
-    const ns = isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
+    const ns =
+      isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
     if (ns) setAttributeNS(node, ns, prop, value);
     else setAttribute(node, Aliases[prop] || prop, value);
   }
@@ -1515,10 +1763,11 @@ function eventHandler(e2) {
   const key = `$$${e2.type}`;
   const oriTarget = e2.target;
   const oriCurrentTarget = e2.currentTarget;
-  const retarget = (value) => Object.defineProperty(e2, "target", {
-    configurable: true,
-    value
-  });
+  const retarget = (value) =>
+    Object.defineProperty(e2, "target", {
+      configurable: true,
+      value,
+    });
   const handleNode = () => {
     const handler = node[key];
     if (handler && !node.disabled) {
@@ -1526,19 +1775,27 @@ function eventHandler(e2) {
       data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);
       if (e2.cancelBubble) return;
     }
-    node.host && typeof node.host !== "string" && !node.host._$host && node.contains(e2.target) && retarget(node.host);
+    node.host &&
+      typeof node.host !== "string" &&
+      !node.host._$host &&
+      node.contains(e2.target) &&
+      retarget(node.host);
     return true;
   };
   const walkUpTree = () => {
-    while (handleNode() && (node = node._$host || node.parentNode || node.host)) ;
+    while (
+      handleNode() &&
+      (node = node._$host || node.parentNode || node.host)
+    );
   };
   Object.defineProperty(e2, "currentTarget", {
     configurable: true,
     get() {
       return node || document;
-    }
+    },
   });
-  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;
+  if (sharedConfig.registry && !sharedConfig.done)
+    sharedConfig.done = _$HY.done = true;
   if (e2.composedPath) {
     const path = e2.composedPath();
     retarget(path[0]);
@@ -1571,8 +1828,9 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
   }
   while (typeof current === "function") current = current();
   if (value === current) return current;
-  const t2 = typeof value, multi = marker !== void 0;
-  parent = multi && current[0] && current[0].parentNode || parent;
+  const t2 = typeof value,
+    multi = marker !== void 0;
+  parent = (multi && current[0] && current[0].parentNode) || parent;
   if (t2 === "string" || t2 === "number") {
     if (hydrating) return current;
     if (t2 === "number") {
@@ -1604,17 +1862,19 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     const array = [];
     const currentArray = current && Array.isArray(current);
     if (normalizeIncomingArray(array, value, current, unwrapArray)) {
-      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));
+      createRenderEffect(
+        () => (current = insertExpression(parent, array, current, marker, true))
+      );
       return () => current;
     }
     if (hydrating) {
       if (!array.length) return current;
-      if (marker === void 0) return current = [...parent.childNodes];
+      if (marker === void 0) return (current = [...parent.childNodes]);
       let node = array[0];
       if (node.parentNode !== parent) return current;
       const nodes = [node];
       while ((node = node.nextSibling) !== marker) nodes.push(node);
-      return current = nodes;
+      return (current = nodes);
     }
     if (array.length === 0) {
       current = cleanChildren(parent, current, marker);
@@ -1629,22 +1889,26 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     }
     current = array;
   } else if (value.nodeType) {
-    if (hydrating && value.parentNode) return current = multi ? [value] : value;
+    if (hydrating && value.parentNode)
+      return (current = multi ? [value] : value);
     if (Array.isArray(current)) {
-      if (multi) return current = cleanChildren(parent, current, marker, value);
+      if (multi)
+        return (current = cleanChildren(parent, current, marker, value));
       cleanChildren(parent, current, null, value);
     } else if (current == null || current === "" || !parent.firstChild) {
       parent.appendChild(value);
     } else parent.replaceChild(value, parent.firstChild);
     current = value;
-  } else ;
+  } else;
   return current;
 }
 function normalizeIncomingArray(normalized, array, current, unwrap) {
   let dynamic = false;
   for (let i2 = 0, len = array.length; i2 < len; i2++) {
-    let item = array[i2], prev = current && current[normalized.length], t2;
-    if (item == null || item === true || item === false) ;
+    let item = array[i2],
+      prev = current && current[normalized.length],
+      t2;
+    if (item == null || item === true || item === false);
     else if ((t2 = typeof item) === "object" && item.nodeType) {
       normalized.push(item);
     } else if (Array.isArray(item)) {
@@ -1652,28 +1916,31 @@ function normalizeIncomingArray(normalized, array, current, unwrap) {
     } else if (t2 === "function") {
       if (unwrap) {
         while (typeof item === "function") item = item();
-        dynamic = normalizeIncomingArray(
-          normalized,
-          Array.isArray(item) ? item : [item],
-          Array.isArray(prev) ? prev : [prev]
-        ) || dynamic;
+        dynamic =
+          normalizeIncomingArray(
+            normalized,
+            Array.isArray(item) ? item : [item],
+            Array.isArray(prev) ? prev : [prev]
+          ) || dynamic;
       } else {
         normalized.push(item);
         dynamic = true;
       }
     } else {
       const value = String(item);
-      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);
+      if (prev && prev.nodeType === 3 && prev.data === value)
+        normalized.push(prev);
       else normalized.push(document.createTextNode(value));
     }
   }
   return dynamic;
 }
 function appendNodes(parent, array, marker = null) {
-  for (let i2 = 0, len = array.length; i2 < len; i2++) parent.insertBefore(array[i2], marker);
+  for (let i2 = 0, len = array.length; i2 < len; i2++)
+    parent.insertBefore(array[i2], marker);
 }
 function cleanChildren(parent, current, marker, replacement) {
-  if (marker === void 0) return parent.textContent = "";
+  if (marker === void 0) return (parent.textContent = "");
   const node = replacement || document.createTextNode("");
   if (current.length) {
     let inserted = false;
@@ -1682,7 +1949,9 @@ function cleanChildren(parent, current, marker, replacement) {
       if (node !== el) {
         const isParent = el.parentNode === parent;
         if (!inserted && !i2)
-          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);
+          isParent
+            ? parent.replaceChild(node, el)
+            : parent.insertBefore(node, marker);
         else isParent && el.remove();
       } else inserted = true;
     }
@@ -1693,31 +1962,43 @@ function getHydrationKey() {
   return sharedConfig.getNextContextId();
 }
 function createElement(tagName, isSVG = false) {
-  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);
+  return isSVG
+    ? document.createElementNS(SVG_NAMESPACE, tagName)
+    : document.createElement(tagName);
 }
 function Portal(props) {
-  const { useShadow } = props, marker = document.createTextNode(""), mount = () => props.mount || document.body, owner = getOwner();
+  const { useShadow } = props,
+    marker = document.createTextNode(""),
+    mount = () => props.mount || document.body,
+    owner = getOwner();
   let content;
   let hydrating = !!sharedConfig.context;
   createEffect(
     () => {
       if (hydrating) getOwner().user = hydrating = false;
-      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));
+      content ||
+        (content = runWithOwner(owner, () => createMemo(() => props.children)));
       const el = mount();
       if (el instanceof HTMLHeadElement) {
         const [clean, setClean] = createSignal(false);
         const cleanup = () => setClean(true);
-        createRoot((dispose3) => insert(el, () => !clean() ? content() : dispose3(), null));
+        createRoot((dispose3) =>
+          insert(el, () => (!clean() ? content() : dispose3()), null)
+        );
         onCleanup(cleanup);
       } else {
-        const container = createElement(props.isSVG ? "g" : "div", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({
-          mode: "open"
-        }) : container;
+        const container = createElement(props.isSVG ? "g" : "div", props.isSVG),
+          renderRoot =
+            useShadow && container.attachShadow
+              ? container.attachShadow({
+                  mode: "open",
+                })
+              : container;
         Object.defineProperty(container, "_$host", {
           get() {
             return marker.parentNode;
           },
-          configurable: true
+          configurable: true,
         });
         insert(renderRoot, content);
         el.appendChild(container);
@@ -1727,7 +2008,7 @@ function Portal(props) {
     },
     void 0,
     {
-      render: !hydrating
+      render: !hydrating,
     }
   );
   return marker;
@@ -1741,7 +2022,9 @@ function createDynamic(component, props) {
         return untrack(() => component2(props));
       case "string":
         const isSvg = SVGElements.has(component2);
-        const el = sharedConfig.context ? getNextElement() : createElement(component2, isSvg);
+        const el = sharedConfig.context
+          ? getNextElement()
+          : createElement(component2, isSvg);
         spread(el, props, isSvg);
         return el;
     }
@@ -1751,7 +2034,17 @@ function Dynamic(props) {
   const [, others] = splitProps(props, ["component"]);
   return createDynamic(() => props.component, others);
 }
-var booleans, Properties, ChildProperties, Aliases, PropAliases, DelegatedEvents, SVGElements, SVGNamespace, $$EVENTS, isServer, SVG_NAMESPACE;
+var booleans,
+  Properties,
+  ChildProperties,
+  Aliases,
+  PropAliases,
+  DelegatedEvents,
+  SVGElements,
+  SVGNamespace,
+  $$EVENTS,
+  isServer,
+  SVG_NAMESPACE;
 var init_web = __esm({
   "../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/web/dist/web.js"() {
     init_solid();
@@ -1781,7 +2074,7 @@ var init_web = __esm({
       "required",
       "reversed",
       "seamless",
-      "selected"
+      "selected",
     ];
     Properties = /* @__PURE__ */ new Set([
       "className",
@@ -1791,43 +2084,49 @@ var init_web = __esm({
       "isMap",
       "noModule",
       "playsInline",
-      ...booleans
+      ...booleans,
     ]);
     ChildProperties = /* @__PURE__ */ new Set([
       "innerHTML",
       "textContent",
       "innerText",
-      "children"
+      "children",
     ]);
-    Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-      className: "class",
-      htmlFor: "for"
-    });
-    PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-      class: "className",
-      formnovalidate: {
-        $: "formNoValidate",
-        BUTTON: 1,
-        INPUT: 1
-      },
-      ismap: {
-        $: "isMap",
-        IMG: 1
-      },
-      nomodule: {
-        $: "noModule",
-        SCRIPT: 1
-      },
-      playsinline: {
-        $: "playsInline",
-        VIDEO: 1
-      },
-      readonly: {
-        $: "readOnly",
-        INPUT: 1,
-        TEXTAREA: 1
+    Aliases = /* @__PURE__ */ Object.assign(
+      /* @__PURE__ */ Object.create(null),
+      {
+        className: "class",
+        htmlFor: "for",
       }
-    });
+    );
+    PropAliases = /* @__PURE__ */ Object.assign(
+      /* @__PURE__ */ Object.create(null),
+      {
+        class: "className",
+        formnovalidate: {
+          $: "formNoValidate",
+          BUTTON: 1,
+          INPUT: 1,
+        },
+        ismap: {
+          $: "isMap",
+          IMG: 1,
+        },
+        nomodule: {
+          $: "noModule",
+          SCRIPT: 1,
+        },
+        playsinline: {
+          $: "playsInline",
+          VIDEO: 1,
+        },
+        readonly: {
+          $: "readOnly",
+          INPUT: 1,
+          TEXTAREA: 1,
+        },
+      }
+    );
     DelegatedEvents = /* @__PURE__ */ new Set([
       "beforeinput",
       "click",
@@ -1850,7 +2149,7 @@ var init_web = __esm({
       "pointerup",
       "touchend",
       "touchmove",
-      "touchstart"
+      "touchstart",
     ]);
     SVGElements = /* @__PURE__ */ new Set([
       "altGlyph",
@@ -1929,16 +2228,16 @@ var init_web = __esm({
       "tspan",
       "use",
       "view",
-      "vkern"
+      "vkern",
     ]);
     SVGNamespace = {
       xlink: "http://www.w3.org/1999/xlink",
-      xml: "http://www.w3.org/XML/1998/namespace"
+      xml: "http://www.w3.org/XML/1998/namespace",
     };
     $$EVENTS = "_$DX_DELEGATE";
     isServer = false;
     SVG_NAMESPACE = "http://www.w3.org/2000/svg";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/double-indexed-kv.js
@@ -1965,7 +2264,7 @@ var init_double_indexed_kv = __esm({
         this.valueToKey.clear();
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/registry.js
@@ -1997,7 +2296,7 @@ var init_registry = __esm({
         return this.kv.getByKey(identifier);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/class-registry.js
@@ -2024,7 +2323,7 @@ var init_class_registry = __esm({
         return this.classToAllowedProps.get(value);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js
@@ -2070,8 +2369,7 @@ function findArr(record, predicate) {
   return void 0;
 }
 var init_util = __esm({
-  "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js"() {
-  }
+  "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js"() {},
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/custom-transformer-registry.js
@@ -2087,32 +2385,52 @@ var init_custom_transformer_registry = __esm({
         this.transfomers[transformer.name] = transformer;
       }
       findApplicable(v) {
-        return find(this.transfomers, (transformer) => transformer.isApplicable(v));
+        return find(this.transfomers, (transformer) =>
+          transformer.isApplicable(v)
+        );
       }
       findByName(name) {
         return this.transfomers[name];
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/is.js
-var getType, isUndefined, isNull, isPlainObject, isEmptyObject, isArray, isString, isNumber, isBoolean, isRegExp, isMap, isSet, isSymbol, isDate, isError, isNaNValue, isPrimitive, isBigint, isInfinite, isTypedArray, isURL;
+var getType,
+  isUndefined,
+  isNull,
+  isPlainObject,
+  isEmptyObject,
+  isArray,
+  isString,
+  isNumber,
+  isBoolean,
+  isRegExp,
+  isMap,
+  isSet,
+  isSymbol,
+  isDate,
+  isError,
+  isNaNValue,
+  isPrimitive,
+  isBigint,
+  isInfinite,
+  isTypedArray,
+  isURL;
 var init_is = __esm({
   "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/is.js"() {
     getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);
     isUndefined = (payload) => typeof payload === "undefined";
     isNull = (payload) => payload === null;
     isPlainObject = (payload) => {
-      if (typeof payload !== "object" || payload === null)
-        return false;
-      if (payload === Object.prototype)
-        return false;
-      if (Object.getPrototypeOf(payload) === null)
-        return true;
+      if (typeof payload !== "object" || payload === null) return false;
+      if (payload === Object.prototype) return false;
+      if (Object.getPrototypeOf(payload) === null) return true;
       return Object.getPrototypeOf(payload) === Object.prototype;
     };
-    isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;
+    isEmptyObject = (payload) =>
+      isPlainObject(payload) && Object.keys(payload).length === 0;
     isArray = (payload) => Array.isArray(payload);
     isString = (payload) => typeof payload === "string";
     isNumber = (payload) => typeof payload === "number" && !isNaN(payload);
@@ -2124,12 +2442,19 @@ var init_is = __esm({
     isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());
     isError = (payload) => payload instanceof Error;
     isNaNValue = (payload) => typeof payload === "number" && isNaN(payload);
-    isPrimitive = (payload) => isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);
+    isPrimitive = (payload) =>
+      isBoolean(payload) ||
+      isNull(payload) ||
+      isUndefined(payload) ||
+      isNumber(payload) ||
+      isString(payload) ||
+      isSymbol(payload);
     isBigint = (payload) => typeof payload === "bigint";
     isInfinite = (payload) => payload === Infinity || payload === -Infinity;
-    isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);
+    isTypedArray = (payload) =>
+      ArrayBuffer.isView(payload) && !(payload instanceof DataView);
     isURL = (payload) => payload instanceof URL;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/pathstringifier.js
@@ -2161,71 +2486,117 @@ var init_pathstringifier = __esm({
       result.push(lastSegment);
       return result;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js
-function simpleTransformation(isApplicable, annotation, transform, untransform) {
+function simpleTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
-function compositeTransformation(isApplicable, annotation, transform, untransform) {
+function compositeTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
 function isInstanceOfRegisteredClass(potentialClass, superJson) {
   if (potentialClass?.constructor) {
-    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);
+    const isRegistered = !!superJson.classRegistry.getIdentifier(
+      potentialClass.constructor
+    );
     return isRegistered;
   }
   return false;
 }
-var simpleRules, symbolRule, constructorToName, typedArrayRule, classRule, customRule, compositeRules, transformValue, simpleRulesByAnnotation, untransformValue;
+var simpleRules,
+  symbolRule,
+  constructorToName,
+  typedArrayRule,
+  classRule,
+  customRule,
+  compositeRules,
+  transformValue,
+  simpleRulesByAnnotation,
+  untransformValue;
 var init_transformer = __esm({
   "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js"() {
     init_is();
     init_util();
     simpleRules = [
-      simpleTransformation(isUndefined, "undefined", () => null, () => void 0),
-      simpleTransformation(isBigint, "bigint", (v) => v.toString(), (v) => {
-        if (typeof BigInt !== "undefined") {
-          return BigInt(v);
+      simpleTransformation(
+        isUndefined,
+        "undefined",
+        () => null,
+        () => void 0
+      ),
+      simpleTransformation(
+        isBigint,
+        "bigint",
+        (v) => v.toString(),
+        (v) => {
+          if (typeof BigInt !== "undefined") {
+            return BigInt(v);
+          }
+          console.error("Please add a BigInt polyfill.");
+          return v;
         }
-        console.error("Please add a BigInt polyfill.");
-        return v;
-      }),
-      simpleTransformation(isDate, "Date", (v) => v.toISOString(), (v) => new Date(v)),
-      simpleTransformation(isError, "Error", (v, superJson) => {
-        const baseError = {
-          name: v.name,
-          message: v.message
-        };
-        superJson.allowedErrorProps.forEach((prop) => {
-          baseError[prop] = v[prop];
-        });
-        return baseError;
-      }, (v, superJson) => {
-        const e2 = new Error(v.message);
-        e2.name = v.name;
-        e2.stack = v.stack;
-        superJson.allowedErrorProps.forEach((prop) => {
-          e2[prop] = v[prop];
-        });
-        return e2;
-      }),
-      simpleTransformation(isRegExp, "regexp", (v) => "" + v, (regex) => {
-        const body = regex.slice(1, regex.lastIndexOf("/"));
-        const flags = regex.slice(regex.lastIndexOf("/") + 1);
-        return new RegExp(body, flags);
-      }),
+      ),
+      simpleTransformation(
+        isDate,
+        "Date",
+        (v) => v.toISOString(),
+        (v) => new Date(v)
+      ),
+      simpleTransformation(
+        isError,
+        "Error",
+        (v, superJson) => {
+          const baseError = {
+            name: v.name,
+            message: v.message,
+          };
+          superJson.allowedErrorProps.forEach((prop) => {
+            baseError[prop] = v[prop];
+          });
+          return baseError;
+        },
+        (v, superJson) => {
+          const e2 = new Error(v.message);
+          e2.name = v.name;
+          e2.stack = v.stack;
+          superJson.allowedErrorProps.forEach((prop) => {
+            e2[prop] = v[prop];
+          });
+          return e2;
+        }
+      ),
+      simpleTransformation(
+        isRegExp,
+        "regexp",
+        (v) => "" + v,
+        (regex) => {
+          const body = regex.slice(1, regex.lastIndexOf("/"));
+          const flags = regex.slice(regex.lastIndexOf("/") + 1);
+          return new RegExp(body, flags);
+        }
+      ),
       simpleTransformation(
         isSet,
         "set",
@@ -2234,38 +2605,63 @@ var init_transformer = __esm({
         (v) => [...v.values()],
         (v) => new Set(v)
       ),
-      simpleTransformation(isMap, "map", (v) => [...v.entries()], (v) => new Map(v)),
-      simpleTransformation((v) => isNaNValue(v) || isInfinite(v), "number", (v) => {
-        if (isNaNValue(v)) {
-          return "NaN";
+      simpleTransformation(
+        isMap,
+        "map",
+        (v) => [...v.entries()],
+        (v) => new Map(v)
+      ),
+      simpleTransformation(
+        (v) => isNaNValue(v) || isInfinite(v),
+        "number",
+        (v) => {
+          if (isNaNValue(v)) {
+            return "NaN";
+          }
+          if (v > 0) {
+            return "Infinity";
+          } else {
+            return "-Infinity";
+          }
+        },
+        Number
+      ),
+      simpleTransformation(
+        (v) => v === 0 && 1 / v === -Infinity,
+        "number",
+        () => {
+          return "-0";
+        },
+        Number
+      ),
+      simpleTransformation(
+        isURL,
+        "URL",
+        (v) => v.toString(),
+        (v) => new URL(v)
+      ),
+    ];
+    symbolRule = compositeTransformation(
+      (s2, superJson) => {
+        if (isSymbol(s2)) {
+          const isRegistered = !!superJson.symbolRegistry.getIdentifier(s2);
+          return isRegistered;
         }
-        if (v > 0) {
-          return "Infinity";
-        } else {
-          return "-Infinity";
+        return false;
+      },
+      (s2, superJson) => {
+        const identifier = superJson.symbolRegistry.getIdentifier(s2);
+        return ["symbol", identifier];
+      },
+      (v) => v.description,
+      (_, a2, superJson) => {
+        const value = superJson.symbolRegistry.getValue(a2[1]);
+        if (!value) {
+          throw new Error("Trying to deserialize unknown symbol");
         }
-      }, Number),
-      simpleTransformation((v) => v === 0 && 1 / v === -Infinity, "number", () => {
-        return "-0";
-      }, Number),
-      simpleTransformation(isURL, "URL", (v) => v.toString(), (v) => new URL(v))
-    ];
-    symbolRule = compositeTransformation((s2, superJson) => {
-      if (isSymbol(s2)) {
-        const isRegistered = !!superJson.symbolRegistry.getIdentifier(s2);
-        return isRegistered;
-      }
-      return false;
-    }, (s2, superJson) => {
-      const identifier = superJson.symbolRegistry.getIdentifier(s2);
-      return ["symbol", identifier];
-    }, (v) => v.description, (_, a2, superJson) => {
-      const value = superJson.symbolRegistry.getValue(a2[1]);
-      if (!value) {
-        throw new Error("Trying to deserialize unknown symbol");
+        return value;
       }
-      return value;
-    });
+    );
     constructorToName = [
       Int8Array,
       Uint8Array,
@@ -2275,67 +2671,96 @@ var init_transformer = __esm({
       Uint32Array,
       Float32Array,
       Float64Array,
-      Uint8ClampedArray
+      Uint8ClampedArray,
     ].reduce((obj, ctor) => {
       obj[ctor.name] = ctor;
       return obj;
     }, {});
-    typedArrayRule = compositeTransformation(isTypedArray, (v) => ["typed-array", v.constructor.name], (v) => [...v], (v, a2) => {
-      const ctor = constructorToName[a2[1]];
-      if (!ctor) {
-        throw new Error("Trying to deserialize unknown typed array");
-      }
-      return new ctor(v);
-    });
-    classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {
-      const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
-      return ["class", identifier];
-    }, (clazz, superJson) => {
-      const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);
-      if (!allowedProps) {
-        return { ...clazz };
+    typedArrayRule = compositeTransformation(
+      isTypedArray,
+      (v) => ["typed-array", v.constructor.name],
+      (v) => [...v],
+      (v, a2) => {
+        const ctor = constructorToName[a2[1]];
+        if (!ctor) {
+          throw new Error("Trying to deserialize unknown typed array");
+        }
+        return new ctor(v);
       }
-      const result = {};
-      allowedProps.forEach((prop) => {
-        result[prop] = clazz[prop];
-      });
-      return result;
-    }, (v, a2, superJson) => {
-      const clazz = superJson.classRegistry.getValue(a2[1]);
-      if (!clazz) {
-        throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");
+    );
+    classRule = compositeTransformation(
+      isInstanceOfRegisteredClass,
+      (clazz, superJson) => {
+        const identifier = superJson.classRegistry.getIdentifier(
+          clazz.constructor
+        );
+        return ["class", identifier];
+      },
+      (clazz, superJson) => {
+        const allowedProps = superJson.classRegistry.getAllowedProps(
+          clazz.constructor
+        );
+        if (!allowedProps) {
+          return { ...clazz };
+        }
+        const result = {};
+        allowedProps.forEach((prop) => {
+          result[prop] = clazz[prop];
+        });
+        return result;
+      },
+      (v, a2, superJson) => {
+        const clazz = superJson.classRegistry.getValue(a2[1]);
+        if (!clazz) {
+          throw new Error(
+            "Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564"
+          );
+        }
+        return Object.assign(Object.create(clazz.prototype), v);
       }
-      return Object.assign(Object.create(clazz.prototype), v);
-    });
-    customRule = compositeTransformation((value, superJson) => {
-      return !!superJson.customTransformerRegistry.findApplicable(value);
-    }, (value, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findApplicable(value);
-      return ["custom", transformer.name];
-    }, (value, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findApplicable(value);
-      return transformer.serialize(value);
-    }, (v, a2, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findByName(a2[1]);
-      if (!transformer) {
-        throw new Error("Trying to deserialize unknown custom value");
+    );
+    customRule = compositeTransformation(
+      (value, superJson) => {
+        return !!superJson.customTransformerRegistry.findApplicable(value);
+      },
+      (value, superJson) => {
+        const transformer =
+          superJson.customTransformerRegistry.findApplicable(value);
+        return ["custom", transformer.name];
+      },
+      (value, superJson) => {
+        const transformer =
+          superJson.customTransformerRegistry.findApplicable(value);
+        return transformer.serialize(value);
+      },
+      (v, a2, superJson) => {
+        const transformer = superJson.customTransformerRegistry.findByName(
+          a2[1]
+        );
+        if (!transformer) {
+          throw new Error("Trying to deserialize unknown custom value");
+        }
+        return transformer.deserialize(v);
       }
-      return transformer.deserialize(v);
-    });
+    );
     compositeRules = [classRule, symbolRule, customRule, typedArrayRule];
     transformValue = (value, superJson) => {
-      const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));
+      const applicableCompositeRule = findArr(compositeRules, (rule) =>
+        rule.isApplicable(value, superJson)
+      );
       if (applicableCompositeRule) {
         return {
           value: applicableCompositeRule.transform(value, superJson),
-          type: applicableCompositeRule.annotation(value, superJson)
+          type: applicableCompositeRule.annotation(value, superJson),
         };
       }
-      const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));
+      const applicableSimpleRule = findArr(simpleRules, (rule) =>
+        rule.isApplicable(value, superJson)
+      );
       if (applicableSimpleRule) {
         return {
           value: applicableSimpleRule.transform(value, superJson),
-          type: applicableSimpleRule.annotation
+          type: applicableSimpleRule.annotation,
         };
       }
       return void 0;
@@ -2366,7 +2791,7 @@ var init_transformer = __esm({
         return transformation.untransform(json, superJson);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/accessDeep.js
@@ -2487,7 +2912,7 @@ var init_accessDeep = __esm({
       }
       return object;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/plainer.js
@@ -2496,7 +2921,9 @@ function traverse(tree, walker2, origin = []) {
     return;
   }
   if (!isArray(tree)) {
-    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));
+    forEach(tree, (subtree, key) =>
+      traverse(subtree, walker2, [...origin, ...parsePath(key)])
+    );
     return;
   }
   const [nodeValue, children2] = tree;
@@ -2549,13 +2976,16 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
       return;
     }
     if (!dedupe) {
-      paths = paths.map((path) => path.map(String)).sort((a2, b2) => a2.length - b2.length);
+      paths = paths
+        .map((path) => path.map(String))
+        .sort((a2, b2) => a2.length - b2.length);
     }
     const [representativePath, ...identicalPaths] = paths;
     if (representativePath.length === 0) {
       rootEqualityPaths = identicalPaths.map(stringifyPath);
     } else {
-      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);
+      result[stringifyPath(representativePath)] =
+        identicalPaths.map(stringifyPath);
     }
   });
   if (rootEqualityPaths) {
@@ -2577,26 +3007,43 @@ var init_plainer = __esm({
     init_util();
     init_pathstringifier();
     init_accessDeep();
-    isDeep = (object, superJson) => isPlainObject(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);
-    walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {
+    isDeep = (object, superJson) =>
+      isPlainObject(object) ||
+      isArray(object) ||
+      isMap(object) ||
+      isSet(object) ||
+      isInstanceOfRegisteredClass(object, superJson);
+    walker = (
+      object,
+      identities,
+      superJson,
+      dedupe,
+      path = [],
+      objectsInThisPath = [],
+      seenObjects = /* @__PURE__ */ new Map()
+    ) => {
       const primitive = isPrimitive(object);
       if (!primitive) {
         addIdentity(object, path, identities);
         const seen = seenObjects.get(object);
         if (seen) {
-          return dedupe ? {
-            transformedValue: null
-          } : seen;
+          return dedupe
+            ? {
+                transformedValue: null,
+              }
+            : seen;
         }
       }
       if (!isDeep(object, superJson)) {
         const transformed2 = transformValue(object, superJson);
-        const result2 = transformed2 ? {
-          transformedValue: transformed2.value,
-          annotations: [transformed2.type]
-        } : {
-          transformedValue: object
-        };
+        const result2 = transformed2
+          ? {
+              transformedValue: transformed2.value,
+              annotations: [transformed2.type],
+            }
+          : {
+              transformedValue: object,
+            };
         if (!primitive) {
           seenObjects.set(object, result2);
         }
@@ -2604,7 +3051,7 @@ var init_plainer = __esm({
       }
       if (includes(objectsInThisPath, object)) {
         return {
-          transformedValue: null
+          transformedValue: null,
         };
       }
       const transformationResult = transformValue(object, superJson);
@@ -2612,10 +3059,24 @@ var init_plainer = __esm({
       const transformedValue = isArray(transformed) ? [] : {};
       const innerAnnotations = {};
       forEach(transformed, (value, index) => {
-        if (index === "__proto__" || index === "constructor" || index === "prototype") {
-          throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);
+        if (
+          index === "__proto__" ||
+          index === "constructor" ||
+          index === "prototype"
+        ) {
+          throw new Error(
+            `Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`
+          );
         }
-        const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);
+        const recursiveResult = walker(
+          value,
+          identities,
+          superJson,
+          dedupe,
+          [...path, index],
+          [...objectsInThisPath, object],
+          seenObjects
+        );
         transformedValue[index] = recursiveResult.transformedValue;
         if (isArray(recursiveResult.annotations)) {
           innerAnnotations[index] = recursiveResult.annotations;
@@ -2625,19 +3086,25 @@ var init_plainer = __esm({
           });
         }
       });
-      const result = isEmptyObject(innerAnnotations) ? {
-        transformedValue,
-        annotations: !!transformationResult ? [transformationResult.type] : void 0
-      } : {
-        transformedValue,
-        annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations
-      };
+      const result = isEmptyObject(innerAnnotations)
+        ? {
+            transformedValue,
+            annotations: !!transformationResult
+              ? [transformationResult.type]
+              : void 0,
+          }
+        : {
+            transformedValue,
+            annotations: !!transformationResult
+              ? [transformationResult.type, innerAnnotations]
+              : innerAnnotations,
+          };
       if (!primitive) {
         seenObjects.set(object, result);
       }
       return result;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js
@@ -2648,27 +3115,30 @@ function isArray2(payload) {
   return getType2(payload) === "Array";
 }
 function isPlainObject2(payload) {
-  if (getType2(payload) !== "Object")
-    return false;
+  if (getType2(payload) !== "Object") return false;
   const prototype = Object.getPrototypeOf(payload);
-  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
+  return (
+    !!prototype &&
+    prototype.constructor === Object &&
+    prototype === Object.prototype
+  );
 }
 var init_dist = __esm({
-  "../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js"() {
-  }
+  "../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js"() {},
 });
 
 // ../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js
 function assignProp2(carry, key, newVal, originalObject, includeNonenumerable) {
-  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? "enumerable" : "nonenumerable";
-  if (propType === "enumerable")
-    carry[key] = newVal;
+  const propType = {}.propertyIsEnumerable.call(originalObject, key)
+    ? "enumerable"
+    : "nonenumerable";
+  if (propType === "enumerable") carry[key] = newVal;
   if (includeNonenumerable && propType === "nonenumerable") {
     Object.defineProperty(carry, key, {
       value: newVal,
       enumerable: false,
       writable: true,
-      configurable: true
+      configurable: true,
     });
   }
 }
@@ -2694,7 +3164,7 @@ function copy(target, options = {}) {
 var init_dist2 = __esm({
   "../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js"() {
     init_dist();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/index.js
@@ -2721,19 +3191,22 @@ var init_dist3 = __esm({
         const identities = /* @__PURE__ */ new Map();
         const output = walker(object, identities, this, this.dedupe);
         const res = {
-          json: output.transformedValue
+          json: output.transformedValue,
         };
         if (output.annotations) {
           res.meta = {
             ...res.meta,
-            values: output.annotations
+            values: output.annotations,
           };
         }
-        const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);
+        const equalityAnnotations = generateReferentialEqualityAnnotations(
+          identities,
+          this.dedupe
+        );
         if (equalityAnnotations) {
           res.meta = {
             ...res.meta,
-            referentialEqualities: equalityAnnotations
+            referentialEqualities: equalityAnnotations,
           };
         }
         return res;
@@ -2745,7 +3218,10 @@ var init_dist3 = __esm({
           result = applyValueAnnotations(result, meta.values, this);
         }
         if (meta?.referentialEqualities) {
-          result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
+          result = applyReferentialEqualityAnnotations(
+            result,
+            meta.referentialEqualities
+          );
         }
         return result;
       }
@@ -2764,7 +3240,7 @@ var init_dist3 = __esm({
       registerCustom(transformer, name) {
         this.customTransformerRegistry.register({
           name,
-          ...transformer
+          ...transformer,
         });
       }
       allowErrorProps(...props) {
@@ -2772,14 +3248,30 @@ var init_dist3 = __esm({
       }
     };
     SuperJSON.defaultInstance = new SuperJSON();
-    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);
-    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);
-    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);
-    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);
-    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);
+    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(
+      SuperJSON.defaultInstance
+    );
     serialize = SuperJSON.serialize;
     SuperJSON.deserialize;
     stringify = SuperJSON.stringify;
@@ -2788,46 +3280,91 @@ var init_dist3 = __esm({
     SuperJSON.registerCustom;
     SuperJSON.registerSymbol;
     SuperJSON.allowErrorProps;
-  }
+  },
 });
 
 // src/utils.tsx
 function getQueryStatusLabel(query) {
-  return query.state.fetchStatus === "fetching" ? "fetching" : !query.getObserversCount() ? "inactive" : query.state.fetchStatus === "paused" ? "paused" : query.isStale() ? "stale" : "fresh";
+  return query.state.fetchStatus === "fetching"
+    ? "fetching"
+    : !query.getObserversCount()
+    ? "inactive"
+    : query.state.fetchStatus === "paused"
+    ? "paused"
+    : query.isStale()
+    ? "stale"
+    : "fresh";
 }
 function getSidedProp(prop, side) {
   return `${prop}${side.charAt(0).toUpperCase() + side.slice(1)}`;
 }
-function getQueryStatusColor({
-  queryState,
-  observerCount,
-  isStale
-}) {
-  return queryState.fetchStatus === "fetching" ? "blue" : !observerCount ? "gray" : queryState.fetchStatus === "paused" ? "purple" : isStale ? "yellow" : "green";
-}
-function getMutationStatusColor({
-  status,
-  isPaused
-}) {
-  return isPaused ? "purple" : status === "error" ? "red" : status === "pending" ? "yellow" : status === "success" ? "green" : "gray";
+function getQueryStatusColor({ queryState, observerCount, isStale }) {
+  return queryState?.fetchStatus === "fetching"
+    ? "blue"
+    : !observerCount
+    ? "gray"
+    : queryState.fetchStatus === "paused"
+    ? "purple"
+    : isStale
+    ? "yellow"
+    : "green";
+}
+function getMutationStatusColor({ status, isPaused }) {
+  return isPaused
+    ? "purple"
+    : status === "error"
+    ? "red"
+    : status === "pending"
+    ? "yellow"
+    : status === "success"
+    ? "green"
+    : "gray";
 }
 function getQueryStatusColorByLabel(label) {
-  return label === "fresh" ? "green" : label === "stale" ? "yellow" : label === "paused" ? "purple" : label === "inactive" ? "gray" : "blue";
-}
-var displayValue, getStatusRank, queryHashSort, dateSort, statusAndDateSort, sortFns, getMutationStatusRank, mutationDateSort, mutationStatusSort, mutationSortFns, convertRemToPixels, getPreferredColorScheme, updateNestedDataByPath, deleteNestedDataByPath, setupStyleSheet;
+  return label === "fresh"
+    ? "green"
+    : label === "stale"
+    ? "yellow"
+    : label === "paused"
+    ? "purple"
+    : label === "inactive"
+    ? "gray"
+    : "blue";
+}
+var displayValue,
+  getStatusRank,
+  queryHashSort,
+  dateSort,
+  statusAndDateSort,
+  sortFns,
+  getMutationStatusRank,
+  mutationDateSort,
+  mutationStatusSort,
+  mutationSortFns,
+  convertRemToPixels,
+  getPreferredColorScheme,
+  updateNestedDataByPath,
+  deleteNestedDataByPath,
+  setupStyleSheet;
 var init_utils = __esm({
   "src/utils.tsx"() {
     init_dist3();
     init_solid();
     displayValue = (value, beautify = false) => {
-      const {
-        json
-      } = serialize(value);
+      const { json } = serialize(value);
       return JSON.stringify(json, null, beautify ? 2 : void 0);
     };
-    getStatusRank = (q) => q.state.fetchStatus !== "idle" ? 0 : !q.getObserversCount() ? 3 : q.isStale() ? 2 : 1;
+    getStatusRank = (q) =>
+      q.state.fetchStatus !== "idle"
+        ? 0
+        : !q.getObserversCount()
+        ? 3
+        : q.isStale()
+        ? 2
+        : 1;
     queryHashSort = (a2, b2) => a2.queryHash.localeCompare(b2.queryHash);
-    dateSort = (a2, b2) => a2.state.dataUpdatedAt < b2.state.dataUpdatedAt ? 1 : -1;
+    dateSort = (a2, b2) =>
+      a2.state.dataUpdatedAt < b2.state.dataUpdatedAt ? 1 : -1;
     statusAndDateSort = (a2, b2) => {
       if (getStatusRank(a2) === getStatusRank(b2)) {
         return dateSort(a2, b2);
@@ -2837,10 +3374,18 @@ var init_utils = __esm({
     sortFns = {
       status: statusAndDateSort,
       "query hash": queryHashSort,
-      "last updated": dateSort
+      "last updated": dateSort,
     };
-    getMutationStatusRank = (m) => m.state.isPaused ? 0 : m.state.status === "error" ? 2 : m.state.status === "pending" ? 1 : 3;
-    mutationDateSort = (a2, b2) => a2.state.submittedAt < b2.state.submittedAt ? 1 : -1;
+    getMutationStatusRank = (m) =>
+      m.state.isPaused
+        ? 0
+        : m.state.status === "error"
+        ? 2
+        : m.state.status === "pending"
+        ? 1
+        : 3;
+    mutationDateSort = (a2, b2) =>
+      a2.state.submittedAt < b2.state.submittedAt ? 1 : -1;
     mutationStatusSort = (a2, b2) => {
       if (getMutationStatusRank(a2) === getMutationStatusRank(b2)) {
         return mutationDateSort(a2, b2);
@@ -2849,10 +3394,12 @@ var init_utils = __esm({
     };
     mutationSortFns = {
       status: mutationStatusSort,
-      "last updated": mutationDateSort
+      "last updated": mutationDateSort,
     };
     convertRemToPixels = (rem) => {
-      return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);
+      return (
+        rem * parseFloat(getComputedStyle(document.documentElement).fontSize)
+      );
     };
     getPreferredColorScheme = () => {
       const [colorScheme, setColorScheme] = createSignal("dark");
@@ -2878,11 +3425,18 @@ var init_utils = __esm({
           return newData;
         }
         const [head, ...tail] = updatePath;
-        newData.set(head, updateNestedDataByPath(newData.get(head), tail, value));
+        newData.set(
+          head,
+          updateNestedDataByPath(newData.get(head), tail, value)
+        );
         return newData;
       }
       if (oldData instanceof Set) {
-        const setAsArray = updateNestedDataByPath(Array.from(oldData), updatePath, value);
+        const setAsArray = updateNestedDataByPath(
+          Array.from(oldData),
+          updatePath,
+          value
+        );
         return new Set(setAsArray);
       }
       if (Array.isArray(oldData)) {
@@ -2897,7 +3451,7 @@ var init_utils = __esm({
       }
       if (oldData instanceof Object) {
         const newData = {
-          ...oldData
+          ...oldData,
         };
         if (updatePath.length === 1) {
           newData[updatePath[0]] = value;
@@ -2921,7 +3475,10 @@ var init_utils = __esm({
         return newData;
       }
       if (oldData instanceof Set) {
-        const setAsArray = deleteNestedDataByPath(Array.from(oldData), deletePath);
+        const setAsArray = deleteNestedDataByPath(
+          Array.from(oldData),
+          deletePath
+        );
         return new Set(setAsArray);
       }
       if (Array.isArray(oldData)) {
@@ -2935,7 +3492,7 @@ var init_utils = __esm({
       }
       if (oldData instanceof Object) {
         const newData = {
-          ...oldData
+          ...oldData,
         };
         if (deletePath.length === 1) {
           delete newData[deletePath[0]];
@@ -2949,7 +3506,8 @@ var init_utils = __esm({
     };
     setupStyleSheet = (nonce, target) => {
       if (!nonce) return;
-      const styleExists = document.querySelector("#_goober") || target?.querySelector("#_goober");
+      const styleExists =
+        document.querySelector("#_goober") || target?.querySelector("#_goober");
       if (styleExists) return;
       const styleTag = document.createElement("style");
       const textNode = document.createTextNode("");
@@ -2962,14 +3520,13 @@ var init_utils = __esm({
         document.head.appendChild(styleTag);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js
 function chain(callbacks) {
   return (...args) => {
-    for (const callback of callbacks)
-      callback && callback(...args);
+    for (const callback of callbacks) callback && callback(...args);
   };
 }
 function accessWith(valueOrFn, ...args) {
@@ -2980,33 +3537,35 @@ function handleDiffArray(current, prev, handleAdded, handleRemoved) {
   const prevLength = prev.length;
   let i2 = 0;
   if (!prevLength) {
-    for (; i2 < currLength; i2++)
-      handleAdded(current[i2]);
+    for (; i2 < currLength; i2++) handleAdded(current[i2]);
     return;
   }
   if (!currLength) {
-    for (; i2 < prevLength; i2++)
-      handleRemoved(prev[i2]);
+    for (; i2 < prevLength; i2++) handleRemoved(prev[i2]);
     return;
   }
   for (; i2 < prevLength; i2++) {
-    if (prev[i2] !== current[i2])
-      break;
+    if (prev[i2] !== current[i2]) break;
   }
   let prevEl;
   let currEl;
   prev = prev.slice(i2);
   current = current.slice(i2);
   for (prevEl of prev) {
-    if (!current.includes(prevEl))
-      handleRemoved(prevEl);
+    if (!current.includes(prevEl)) handleRemoved(prevEl);
   }
   for (currEl of current) {
-    if (!prev.includes(currEl))
-      handleAdded(currEl);
+    if (!prev.includes(currEl)) handleAdded(currEl);
   }
 }
-var isClient, isDev, noop, isNonNullable, filterNonNullable, access, asArray, tryOnCleanup;
+var isClient,
+  isDev,
+  noop,
+  isNonNullable,
+  filterNonNullable,
+  access,
+  asArray,
+  tryOnCleanup;
 var init_R5675YMU = __esm({
   "../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js"() {
     init_solid();
@@ -3016,29 +3575,37 @@ var init_R5675YMU = __esm({
     noop = () => void 0;
     isNonNullable = (i2) => i2 != null;
     filterNonNullable = (arr) => arr.filter(isNonNullable);
-    access = (v) => typeof v === "function" && !v.length ? v() : v;
-    asArray = (value) => Array.isArray(value) ? value : value ? [value] : [];
-    tryOnCleanup = isDev ? (fn) => getOwner() ? onCleanup(fn) : fn : onCleanup;
-  }
+    access = (v) => (typeof v === "function" && !v.length ? v() : v);
+    asArray = (value) => (Array.isArray(value) ? value : value ? [value] : []);
+    tryOnCleanup = isDev
+      ? (fn) => (getOwner() ? onCleanup(fn) : fn)
+      : onCleanup;
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/index/index.js
 var init_index = __esm({
   "../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/index/index.js"() {
     init_R5675YMU();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+storage@1.3.11_solid-js@1.9.5/node_modules/@solid-primitives/storage/dist/index.js
 function createStorage(props) {
   const [error, setError] = createSignal();
-  const handleError2 = props?.throw ? (err, fallback) => {
-    setError(err instanceof Error ? err : new Error(fallback));
-    throw err;
-  } : (err, fallback) => {
-    setError(err instanceof Error ? err : new Error(fallback));
-  };
-  const apis = props?.api ? Array.isArray(props.api) ? props.api : [props.api] : [globalThis.localStorage].filter(Boolean);
+  const handleError2 = props?.throw
+    ? (err, fallback) => {
+        setError(err instanceof Error ? err : new Error(fallback));
+        throw err;
+      }
+    : (err, fallback) => {
+        setError(err instanceof Error ? err : new Error(fallback));
+      };
+  const apis = props?.api
+    ? Array.isArray(props.api)
+      ? props.api
+      : [props.api]
+    : [globalThis.localStorage].filter(Boolean);
   const prefix = props?.prefix ? `${props.prefix}.` : "";
   const signals = /* @__PURE__ */ new Map();
   const store = new Proxy(
@@ -3051,59 +3618,70 @@ function createStorage(props) {
           signals.set(key, node);
         }
         node[0]();
-        const value = apis.reduce(
-          (result, api) => {
-            if (result !== null || !api) {
-              return result;
-            }
-            try {
-              return api.getItem(`${prefix}${key}`);
-            } catch (err) {
-              handleError2(err, `Error reading ${prefix}${key} from ${api["name"]}`);
-              return null;
-            }
-          },
-          null
-        );
+        const value = apis.reduce((result, api) => {
+          if (result !== null || !api) {
+            return result;
+          }
+          try {
+            return api.getItem(`${prefix}${key}`);
+          } catch (err) {
+            handleError2(
+              err,
+              `Error reading ${prefix}${key} from ${api["name"]}`
+            );
+            return null;
+          }
+        }, null);
         if (value !== null && props?.deserializer) {
           return props.deserializer(value, key, props.options);
         }
         return value;
-      }
+      },
     }
   );
   const setter = (key, value, options) => {
-    const filteredValue = props?.serializer ? props.serializer(value, key, options ?? props.options) : value;
+    const filteredValue = props?.serializer
+      ? props.serializer(value, key, options ?? props.options)
+      : value;
     const apiKey = `${prefix}${key}`;
     apis.forEach((api) => {
       try {
-        api.getItem(apiKey) !== filteredValue && api.setItem(apiKey, filteredValue);
+        api.getItem(apiKey) !== filteredValue &&
+          api.setItem(apiKey, filteredValue);
       } catch (err) {
-        handleError2(err, `Error setting ${prefix}${key} to ${filteredValue} in ${api.name}`);
+        handleError2(
+          err,
+          `Error setting ${prefix}${key} to ${filteredValue} in ${api.name}`
+        );
       }
     });
     const node = signals.get(key);
     node && node[1]();
   };
-  const remove = (key) => apis.forEach((api) => {
-    try {
-      api.removeItem(`${prefix}${key}`);
-    } catch (err) {
-      handleError2(err, `Error removing ${prefix}${key} from ${api.name}`);
-    }
-  });
-  const clear = () => apis.forEach((api) => {
-    try {
-      api.clear();
-    } catch (err) {
-      handleError2(err, `Error clearing ${api.name}`);
-    }
-  });
+  const remove = (key) =>
+    apis.forEach((api) => {
+      try {
+        api.removeItem(`${prefix}${key}`);
+      } catch (err) {
+        handleError2(err, `Error removing ${prefix}${key} from ${api.name}`);
+      }
+    });
+  const clear = () =>
+    apis.forEach((api) => {
+      try {
+        api.clear();
+      } catch (err) {
+        handleError2(err, `Error clearing ${api.name}`);
+      }
+    });
   const toJSON = () => {
     const result = {};
     const addValue = (key, value) => {
       if (!result.hasOwnProperty(key)) {
-        const filteredValue = value && props?.deserializer ? props.deserializer(value, key, props.options) : value;
+        const filteredValue =
+          value && props?.deserializer
+            ? props.deserializer(value, key, props.options)
+            : value;
         if (filteredValue) {
           result[key] = filteredValue;
         }
@@ -3121,9 +3699,10 @@ function createStorage(props) {
           addValue(key, values[key]);
         }
       } else {
-        let index = 0, key;
+        let index = 0,
+          key;
         try {
-          while (key = api.key(index++)) {
+          while ((key = api.key(index++))) {
             if (!result.hasOwnProperty(key)) {
               addValue(key, api.getItem(key));
             }
@@ -3135,32 +3714,41 @@ function createStorage(props) {
     });
     return result;
   };
-  props?.sync !== false && onMount(() => {
-    const listener = (ev) => {
-      let changed = false;
-      apis.forEach((api) => {
-        try {
-          if (api !== ev.storageArea && ev.key && ev.newValue !== api.getItem(ev.key)) {
-            ev.newValue ? api.setItem(ev.key, ev.newValue) : api.removeItem(ev.key);
-            changed = true;
+  props?.sync !== false &&
+    onMount(() => {
+      const listener = (ev) => {
+        let changed = false;
+        apis.forEach((api) => {
+          try {
+            if (
+              api !== ev.storageArea &&
+              ev.key &&
+              ev.newValue !== api.getItem(ev.key)
+            ) {
+              ev.newValue
+                ? api.setItem(ev.key, ev.newValue)
+                : api.removeItem(ev.key);
+              changed = true;
+            }
+          } catch (err) {
+            handleError2(
+              err,
+              `Error synching api ${api.name} from storage event (${ev.key}=${ev.newValue})`
+            );
           }
-        } catch (err) {
-          handleError2(
-            err,
-            `Error synching api ${api.name} from storage event (${ev.key}=${ev.newValue})`
-          );
-        }
-      });
-      changed && ev.key && signals.get(ev.key)?.[1]();
-    };
-    if ("addEventListener" in globalThis) {
-      globalThis.addEventListener("storage", listener);
-      onCleanup(() => globalThis.removeEventListener("storage", listener));
-    } else {
-      apis.forEach((api) => api.addEventListener?.("storage", listener));
-      onCleanup(() => apis.forEach((api) => api.removeEventListener?.("storage", listener)));
-    }
-  });
+        });
+        changed && ev.key && signals.get(ev.key)?.[1]();
+      };
+      if ("addEventListener" in globalThis) {
+        globalThis.addEventListener("storage", listener);
+        onCleanup(() => globalThis.removeEventListener("storage", listener));
+      } else {
+        apis.forEach((api) => api.addEventListener?.("storage", listener));
+        onCleanup(() =>
+          apis.forEach((api) => api.removeEventListener?.("storage", listener))
+        );
+      }
+    });
   return [
     store,
     setter,
@@ -3168,8 +3756,8 @@ function createStorage(props) {
       clear,
       error,
       remove,
-      toJSON
-    }
+      toJSON,
+    },
   ];
 }
 var createLocalStorage, addClearMethod, serializeCookieOptions, cookieStorage;
@@ -3183,7 +3771,7 @@ var init_dist4 = __esm({
       }
       storage.clear = () => {
         let key;
-        while (key = storage.key(0)) {
+        while ((key = storage.key(0))) {
           storage.removeItem(key);
         }
       };
@@ -3199,30 +3787,40 @@ var init_dist4 = __esm({
           continue;
         }
         const value = options[key];
-        memo += value instanceof Date ? `; ${key}=${value.toUTCString()}` : typeof value === "boolean" ? `; ${key}` : `; ${key}=${value}`;
+        memo +=
+          value instanceof Date
+            ? `; ${key}=${value.toUTCString()}`
+            : typeof value === "boolean"
+            ? `; ${key}`
+            : `; ${key}=${value}`;
       }
       return memo;
     };
     cookieStorage = addClearMethod({
       _cookies: [globalThis.document, "cookie"],
-      getItem: (key) => cookieStorage._cookies[0][cookieStorage._cookies[1]].match("(^|;)\\s*" + key + "\\s*=\\s*([^;]+)")?.pop() ?? null,
+      getItem: (key) =>
+        cookieStorage._cookies[0][cookieStorage._cookies[1]]
+          .match("(^|;)\\s*" + key + "\\s*=\\s*([^;]+)")
+          ?.pop() ?? null,
       setItem: (key, value, options) => {
         const oldValue = cookieStorage.getItem(key);
-        cookieStorage._cookies[0][cookieStorage._cookies[1]] = `${key}=${value}${serializeCookieOptions(
-          options
-        )}`;
+        cookieStorage._cookies[0][
+          cookieStorage._cookies[1]
+        ] = `${key}=${value}${serializeCookieOptions(options)}`;
         const storageEvent = Object.assign(new Event("storage"), {
           key,
           oldValue,
           newValue: value,
           url: globalThis.document.URL,
-          storageArea: cookieStorage
+          storageArea: cookieStorage,
         });
         window.dispatchEvent(storageEvent);
       },
       removeItem: (key) => {
-        cookieStorage._cookies[0][cookieStorage._cookies[1]] = `${key}=deleted${serializeCookieOptions({
-          expires: /* @__PURE__ */ new Date(0)
+        cookieStorage._cookies[0][
+          cookieStorage._cookies[1]
+        ] = `${key}=deleted${serializeCookieOptions({
+          expires: /* @__PURE__ */ new Date(0),
         })}`;
       },
       key: (index) => {
@@ -3249,9 +3847,9 @@ var init_dist4 = __esm({
           }
         );
         return length;
-      }
+      },
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.19.4/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs
@@ -3263,7 +3861,10 @@ function removeAccents(str) {
 function rankItem(item, value, options) {
   var _options$threshold;
   options = options || {};
-  options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;
+  options.threshold =
+    (_options$threshold = options.threshold) != null
+      ? _options$threshold
+      : rankings.MATCHES;
   if (!options.accessors) {
     const rank = getMatchRanking(item, value, options);
     return {
@@ -3272,7 +3873,7 @@ function rankItem(item, value, options) {
       rank,
       accessorIndex: -1,
       accessorThreshold: options.threshold,
-      passed: rank >= options.threshold
+      passed: rank >= options.threshold,
     };
   }
   const valuesToRank = getAllValuesToRank(item, options.accessors);
@@ -3281,7 +3882,7 @@ function rankItem(item, value, options) {
     rank: rankings.NO_MATCH,
     accessorIndex: -1,
     accessorThreshold: options.threshold,
-    passed: false
+    passed: false,
   };
   for (let i2 = 0; i2 < valuesToRank.length; i2++) {
     const rankValue = valuesToRank[i2];
@@ -3289,7 +3890,7 @@ function rankItem(item, value, options) {
     const {
       minRanking,
       maxRanking,
-      threshold = options.threshold
+      threshold = options.threshold,
     } = rankValue.attributes;
     if (newRank < minRanking && newRank >= rankings.MATCHES) {
       newRank = minRanking;
@@ -3384,9 +3985,7 @@ function getClosenessRanking(testString, stringToRank) {
   return getRanking(spread2);
 }
 function prepareValueForComparison(value, _ref) {
-  let {
-    keepDiacritics
-  } = _ref;
+  let { keepDiacritics } = _ref;
   value = `${value}`;
   if (!keepDiacritics) {
     value = removeAccents(value);
@@ -3416,7 +4015,7 @@ function getAllValuesToRank(item, accessors) {
     for (let i2 = 0, I = itemValues.length; i2 < I; i2++) {
       allValues.push({
         itemValue: itemValues[i2],
-        attributes
+        attributes,
       });
     }
   }
@@ -3428,412 +4027,412 @@ function getAccessorAttributes(accessor) {
   }
   return {
     ...defaultKeyAttributes,
-    ...accessor
+    ...accessor,
   };
 }
 var characterMap, chars, allAccents, rankings, defaultKeyAttributes;
 var init_lib = __esm({
   "../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.19.4/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs"() {
     characterMap = {
-      \u00C0: "A",
-      \u00C1: "A",
-      \u00C2: "A",
-      \u00C3: "A",
-      \u00C4: "A",
-      \u00C5: "A",
-      \u1EA4: "A",
-      \u1EAE: "A",
-      \u1EB2: "A",
-      \u1EB4: "A",
-      \u1EB6: "A",
-      \u00C6: "AE",
-      \u1EA6: "A",
-      \u1EB0: "A",
-      \u0202: "A",
-      \u00C7: "C",
-      \u1E08: "C",
-      \u00C8: "E",
-      \u00C9: "E",
-      \u00CA: "E",
-      \u00CB: "E",
-      \u1EBE: "E",
-      \u1E16: "E",
-      \u1EC0: "E",
-      \u1E14: "E",
-      \u1E1C: "E",
-      \u0206: "E",
-      \u00CC: "I",
-      \u00CD: "I",
-      \u00CE: "I",
-      \u00CF: "I",
-      \u1E2E: "I",
-      \u020A: "I",
-      \u00D0: "D",
-      \u00D1: "N",
-      \u00D2: "O",
-      \u00D3: "O",
-      \u00D4: "O",
-      \u00D5: "O",
-      \u00D6: "O",
-      \u00D8: "O",
-      \u1ED0: "O",
-      \u1E4C: "O",
-      \u1E52: "O",
-      \u020E: "O",
-      \u00D9: "U",
-      \u00DA: "U",
-      \u00DB: "U",
-      \u00DC: "U",
-      \u00DD: "Y",
-      \u00E0: "a",
-      \u00E1: "a",
-      \u00E2: "a",
-      \u00E3: "a",
-      \u00E4: "a",
-      \u00E5: "a",
-      \u1EA5: "a",
-      \u1EAF: "a",
-      \u1EB3: "a",
-      \u1EB5: "a",
-      \u1EB7: "a",
-      \u00E6: "ae",
-      \u1EA7: "a",
-      \u1EB1: "a",
-      \u0203: "a",
-      \u00E7: "c",
-      \u1E09: "c",
-      \u00E8: "e",
-      \u00E9: "e",
-      \u00EA: "e",
-      \u00EB: "e",
-      \u1EBF: "e",
-      \u1E17: "e",
-      \u1EC1: "e",
-      \u1E15: "e",
-      \u1E1D: "e",
-      \u0207: "e",
-      \u00EC: "i",
-      \u00ED: "i",
-      \u00EE: "i",
-      \u00EF: "i",
-      \u1E2F: "i",
-      \u020B: "i",
-      \u00F0: "d",
-      \u00F1: "n",
-      \u00F2: "o",
-      \u00F3: "o",
-      \u00F4: "o",
-      \u00F5: "o",
-      \u00F6: "o",
-      \u00F8: "o",
-      \u1ED1: "o",
-      \u1E4D: "o",
-      \u1E53: "o",
-      \u020F: "o",
-      \u00F9: "u",
-      \u00FA: "u",
-      \u00FB: "u",
-      \u00FC: "u",
-      \u00FD: "y",
-      \u00FF: "y",
-      \u0100: "A",
-      \u0101: "a",
-      \u0102: "A",
-      \u0103: "a",
-      \u0104: "A",
-      \u0105: "a",
-      \u0106: "C",
-      \u0107: "c",
-      \u0108: "C",
-      \u0109: "c",
-      \u010A: "C",
-      \u010B: "c",
-      \u010C: "C",
-      \u010D: "c",
-      C\u0306: "C",
-      c\u0306: "c",
-      \u010E: "D",
-      \u010F: "d",
-      \u0110: "D",
-      \u0111: "d",
-      \u0112: "E",
-      \u0113: "e",
-      \u0114: "E",
-      \u0115: "e",
-      \u0116: "E",
-      \u0117: "e",
-      \u0118: "E",
-      \u0119: "e",
-      \u011A: "E",
-      \u011B: "e",
-      \u011C: "G",
-      \u01F4: "G",
-      \u011D: "g",
-      \u01F5: "g",
-      \u011E: "G",
-      \u011F: "g",
-      \u0120: "G",
-      \u0121: "g",
-      \u0122: "G",
-      \u0123: "g",
-      \u0124: "H",
-      \u0125: "h",
-      \u0126: "H",
-      \u0127: "h",
-      \u1E2A: "H",
-      \u1E2B: "h",
-      \u0128: "I",
-      \u0129: "i",
-      \u012A: "I",
-      \u012B: "i",
-      \u012C: "I",
-      \u012D: "i",
-      \u012E: "I",
-      \u012F: "i",
-      \u0130: "I",
-      \u0131: "i",
-      \u0132: "IJ",
-      \u0133: "ij",
-      \u0134: "J",
-      \u0135: "j",
-      \u0136: "K",
-      \u0137: "k",
-      \u1E30: "K",
-      \u1E31: "k",
-      K\u0306: "K",
-      k\u0306: "k",
-      \u0139: "L",
-      \u013A: "l",
-      \u013B: "L",
-      \u013C: "l",
-      \u013D: "L",
-      \u013E: "l",
-      \u013F: "L",
-      \u0140: "l",
-      \u0141: "l",
-      \u0142: "l",
-      \u1E3E: "M",
-      \u1E3F: "m",
-      M\u0306: "M",
-      m\u0306: "m",
-      \u0143: "N",
-      \u0144: "n",
-      \u0145: "N",
-      \u0146: "n",
-      \u0147: "N",
-      \u0148: "n",
-      \u0149: "n",
-      N\u0306: "N",
-      n\u0306: "n",
-      \u014C: "O",
-      \u014D: "o",
-      \u014E: "O",
-      \u014F: "o",
-      \u0150: "O",
-      \u0151: "o",
-      \u0152: "OE",
-      \u0153: "oe",
-      P\u0306: "P",
-      p\u0306: "p",
-      \u0154: "R",
-      \u0155: "r",
-      \u0156: "R",
-      \u0157: "r",
-      \u0158: "R",
-      \u0159: "r",
-      R\u0306: "R",
-      r\u0306: "r",
-      \u0212: "R",
-      \u0213: "r",
-      \u015A: "S",
-      \u015B: "s",
-      \u015C: "S",
-      \u015D: "s",
-      \u015E: "S",
-      \u0218: "S",
-      \u0219: "s",
-      \u015F: "s",
-      \u0160: "S",
-      \u0161: "s",
-      \u0162: "T",
-      \u0163: "t",
-      \u021B: "t",
-      \u021A: "T",
-      \u0164: "T",
-      \u0165: "t",
-      \u0166: "T",
-      \u0167: "t",
-      T\u0306: "T",
-      t\u0306: "t",
-      \u0168: "U",
-      \u0169: "u",
-      \u016A: "U",
-      \u016B: "u",
-      \u016C: "U",
-      \u016D: "u",
-      \u016E: "U",
-      \u016F: "u",
-      \u0170: "U",
-      \u0171: "u",
-      \u0172: "U",
-      \u0173: "u",
-      \u0216: "U",
-      \u0217: "u",
-      V\u0306: "V",
-      v\u0306: "v",
-      \u0174: "W",
-      \u0175: "w",
-      \u1E82: "W",
-      \u1E83: "w",
-      X\u0306: "X",
-      x\u0306: "x",
-      \u0176: "Y",
-      \u0177: "y",
-      \u0178: "Y",
-      Y\u0306: "Y",
-      y\u0306: "y",
-      \u0179: "Z",
-      \u017A: "z",
-      \u017B: "Z",
-      \u017C: "z",
-      \u017D: "Z",
-      \u017E: "z",
-      \u017F: "s",
-      \u0192: "f",
-      \u01A0: "O",
-      \u01A1: "o",
-      \u01AF: "U",
-      \u01B0: "u",
-      \u01CD: "A",
-      \u01CE: "a",
-      \u01CF: "I",
-      \u01D0: "i",
-      \u01D1: "O",
-      \u01D2: "o",
-      \u01D3: "U",
-      \u01D4: "u",
-      \u01D5: "U",
-      \u01D6: "u",
-      \u01D7: "U",
-      \u01D8: "u",
-      \u01D9: "U",
-      \u01DA: "u",
-      \u01DB: "U",
-      \u01DC: "u",
-      \u1EE8: "U",
-      \u1EE9: "u",
-      \u1E78: "U",
-      \u1E79: "u",
-      \u01FA: "A",
-      \u01FB: "a",
-      \u01FC: "AE",
-      \u01FD: "ae",
-      \u01FE: "O",
-      \u01FF: "o",
-      \u00DE: "TH",
-      \u00FE: "th",
-      \u1E54: "P",
-      \u1E55: "p",
-      \u1E64: "S",
-      \u1E65: "s",
-      X\u0301: "X",
-      x\u0301: "x",
-      \u0403: "\u0413",
-      \u0453: "\u0433",
-      \u040C: "\u041A",
-      \u045C: "\u043A",
-      A\u030B: "A",
-      a\u030B: "a",
-      E\u030B: "E",
-      e\u030B: "e",
-      I\u030B: "I",
-      i\u030B: "i",
-      \u01F8: "N",
-      \u01F9: "n",
-      \u1ED2: "O",
-      \u1ED3: "o",
-      \u1E50: "O",
-      \u1E51: "o",
-      \u1EEA: "U",
-      \u1EEB: "u",
-      \u1E80: "W",
-      \u1E81: "w",
-      \u1EF2: "Y",
-      \u1EF3: "y",
-      \u0200: "A",
-      \u0201: "a",
-      \u0204: "E",
-      \u0205: "e",
-      \u0208: "I",
-      \u0209: "i",
-      \u020C: "O",
-      \u020D: "o",
-      \u0210: "R",
-      \u0211: "r",
-      \u0214: "U",
-      \u0215: "u",
-      B\u030C: "B",
-      b\u030C: "b",
-      \u010C\u0323: "C",
-      \u010D\u0323: "c",
-      \u00CA\u030C: "E",
-      \u00EA\u030C: "e",
-      F\u030C: "F",
-      f\u030C: "f",
-      \u01E6: "G",
-      \u01E7: "g",
-      \u021E: "H",
-      \u021F: "h",
-      J\u030C: "J",
-      \u01F0: "j",
-      \u01E8: "K",
-      \u01E9: "k",
-      M\u030C: "M",
-      m\u030C: "m",
-      P\u030C: "P",
-      p\u030C: "p",
-      Q\u030C: "Q",
-      q\u030C: "q",
-      \u0158\u0329: "R",
-      \u0159\u0329: "r",
-      \u1E66: "S",
-      \u1E67: "s",
-      V\u030C: "V",
-      v\u030C: "v",
-      W\u030C: "W",
-      w\u030C: "w",
-      X\u030C: "X",
-      x\u030C: "x",
-      Y\u030C: "Y",
-      y\u030C: "y",
-      A\u0327: "A",
-      a\u0327: "a",
-      B\u0327: "B",
-      b\u0327: "b",
-      \u1E10: "D",
-      \u1E11: "d",
-      \u0228: "E",
-      \u0229: "e",
-      \u0190\u0327: "E",
-      \u025B\u0327: "e",
-      \u1E28: "H",
-      \u1E29: "h",
-      I\u0327: "I",
-      i\u0327: "i",
-      \u0197\u0327: "I",
-      \u0268\u0327: "i",
-      M\u0327: "M",
-      m\u0327: "m",
-      O\u0327: "O",
-      o\u0327: "o",
-      Q\u0327: "Q",
-      q\u0327: "q",
-      U\u0327: "U",
-      u\u0327: "u",
-      X\u0327: "X",
-      x\u0327: "x",
-      Z\u0327: "Z",
-      z\u0327: "z"
+      À: "A",
+      Á: "A",
+      Â: "A",
+      Ã: "A",
+      Ä: "A",
+      Å: "A",
+      Ấ: "A",
+      Ắ: "A",
+      Ẳ: "A",
+      Ẵ: "A",
+      Ặ: "A",
+      Æ: "AE",
+      Ầ: "A",
+      Ằ: "A",
+      Ȃ: "A",
+      Ç: "C",
+      Ḉ: "C",
+      È: "E",
+      É: "E",
+      Ê: "E",
+      Ë: "E",
+      Ế: "E",
+      Ḗ: "E",
+      Ề: "E",
+      Ḕ: "E",
+      Ḝ: "E",
+      Ȇ: "E",
+      Ì: "I",
+      Í: "I",
+      Î: "I",
+      Ï: "I",
+      Ḯ: "I",
+      Ȋ: "I",
+      Ð: "D",
+      Ñ: "N",
+      Ò: "O",
+      Ó: "O",
+      Ô: "O",
+      Õ: "O",
+      Ö: "O",
+      Ø: "O",
+      Ố: "O",
+      Ṍ: "O",
+      Ṓ: "O",
+      Ȏ: "O",
+      Ù: "U",
+      Ú: "U",
+      Û: "U",
+      Ü: "U",
+      Ý: "Y",
+      à: "a",
+      á: "a",
+      â: "a",
+      ã: "a",
+      ä: "a",
+      å: "a",
+      ấ: "a",
+      ắ: "a",
+      ẳ: "a",
+      ẵ: "a",
+      ặ: "a",
+      æ: "ae",
+      ầ: "a",
+      ằ: "a",
+      ȃ: "a",
+      ç: "c",
+      ḉ: "c",
+      è: "e",
+      é: "e",
+      ê: "e",
+      ë: "e",
+      ế: "e",
+      ḗ: "e",
+      ề: "e",
+      ḕ: "e",
+      ḝ: "e",
+      ȇ: "e",
+      ì: "i",
+      í: "i",
+      î: "i",
+      ï: "i",
+      ḯ: "i",
+      ȋ: "i",
+      ð: "d",
+      ñ: "n",
+      ò: "o",
+      ó: "o",
+      ô: "o",
+      õ: "o",
+      ö: "o",
+      ø: "o",
+      ố: "o",
+      ṍ: "o",
+      ṓ: "o",
+      ȏ: "o",
+      ù: "u",
+      ú: "u",
+      û: "u",
+      ü: "u",
+      ý: "y",
+      ÿ: "y",
+      Ā: "A",
+      ā: "a",
+      Ă: "A",
+      ă: "a",
+      Ą: "A",
+      ą: "a",
+      Ć: "C",
+      ć: "c",
+      Ĉ: "C",
+      ĉ: "c",
+      Ċ: "C",
+      ċ: "c",
+      Č: "C",
+      č: "c",
+      C̆: "C",
+      c̆: "c",
+      Ď: "D",
+      ď: "d",
+      Đ: "D",
+      đ: "d",
+      Ē: "E",
+      ē: "e",
+      Ĕ: "E",
+      ĕ: "e",
+      Ė: "E",
+      ė: "e",
+      Ę: "E",
+      ę: "e",
+      Ě: "E",
+      ě: "e",
+      Ĝ: "G",
+      Ǵ: "G",
+      ĝ: "g",
+      ǵ: "g",
+      Ğ: "G",
+      ğ: "g",
+      Ġ: "G",
+      ġ: "g",
+      Ģ: "G",
+      ģ: "g",
+      Ĥ: "H",
+      ĥ: "h",
+      Ħ: "H",
+      ħ: "h",
+      Ḫ: "H",
+      ḫ: "h",
+      Ĩ: "I",
+      ĩ: "i",
+      Ī: "I",
+      ī: "i",
+      Ĭ: "I",
+      ĭ: "i",
+      Į: "I",
+      į: "i",
+      İ: "I",
+      ı: "i",
+      Ĳ: "IJ",
+      ĳ: "ij",
+      Ĵ: "J",
+      ĵ: "j",
+      Ķ: "K",
+      ķ: "k",
+      Ḱ: "K",
+      ḱ: "k",
+      K̆: "K",
+      k̆: "k",
+      Ĺ: "L",
+      ĺ: "l",
+      Ļ: "L",
+      ļ: "l",
+      Ľ: "L",
+      ľ: "l",
+      Ŀ: "L",
+      ŀ: "l",
+      Ł: "l",
+      ł: "l",
+      Ḿ: "M",
+      ḿ: "m",
+      M̆: "M",
+      m̆: "m",
+      Ń: "N",
+      ń: "n",
+      Ņ: "N",
+      ņ: "n",
+      Ň: "N",
+      ň: "n",
+      ŉ: "n",
+      N̆: "N",
+      n̆: "n",
+      Ō: "O",
+      ō: "o",
+      Ŏ: "O",
+      ŏ: "o",
+      Ő: "O",
+      ő: "o",
+      Œ: "OE",
+      œ: "oe",
+      P̆: "P",
+      p̆: "p",
+      Ŕ: "R",
+      ŕ: "r",
+      Ŗ: "R",
+      ŗ: "r",
+      Ř: "R",
+      ř: "r",
+      R̆: "R",
+      r̆: "r",
+      Ȓ: "R",
+      ȓ: "r",
+      Ś: "S",
+      ś: "s",
+      Ŝ: "S",
+      ŝ: "s",
+      Ş: "S",
+      Ș: "S",
+      ș: "s",
+      ş: "s",
+      Š: "S",
+      š: "s",
+      Ţ: "T",
+      ţ: "t",
+      ț: "t",
+      Ț: "T",
+      Ť: "T",
+      ť: "t",
+      Ŧ: "T",
+      ŧ: "t",
+      T̆: "T",
+      t̆: "t",
+      Ũ: "U",
+      ũ: "u",
+      Ū: "U",
+      ū: "u",
+      Ŭ: "U",
+      ŭ: "u",
+      Ů: "U",
+      ů: "u",
+      Ű: "U",
+      ű: "u",
+      Ų: "U",
+      ų: "u",
+      Ȗ: "U",
+      ȗ: "u",
+      V̆: "V",
+      v̆: "v",
+      Ŵ: "W",
+      ŵ: "w",
+      Ẃ: "W",
+      ẃ: "w",
+      X̆: "X",
+      x̆: "x",
+      Ŷ: "Y",
+      ŷ: "y",
+      Ÿ: "Y",
+      Y̆: "Y",
+      y̆: "y",
+      Ź: "Z",
+      ź: "z",
+      Ż: "Z",
+      ż: "z",
+      Ž: "Z",
+      ž: "z",
+      ſ: "s",
+      ƒ: "f",
+      Ơ: "O",
+      ơ: "o",
+      Ư: "U",
+      ư: "u",
+      Ǎ: "A",
+      ǎ: "a",
+      Ǐ: "I",
+      ǐ: "i",
+      Ǒ: "O",
+      ǒ: "o",
+      Ǔ: "U",
+      ǔ: "u",
+      Ǖ: "U",
+      ǖ: "u",
+      Ǘ: "U",
+      ǘ: "u",
+      Ǚ: "U",
+      ǚ: "u",
+      Ǜ: "U",
+      ǜ: "u",
+      Ứ: "U",
+      ứ: "u",
+      Ṹ: "U",
+      ṹ: "u",
+      Ǻ: "A",
+      ǻ: "a",
+      Ǽ: "AE",
+      ǽ: "ae",
+      Ǿ: "O",
+      ǿ: "o",
+      Þ: "TH",
+      þ: "th",
+      Ṕ: "P",
+      ṕ: "p",
+      Ṥ: "S",
+      ṥ: "s",
+      X́: "X",
+      x́: "x",
+      Ѓ: "\u0413",
+      ѓ: "\u0433",
+      Ќ: "\u041A",
+      ќ: "\u043A",
+      A̋: "A",
+      a̋: "a",
+      E̋: "E",
+      e̋: "e",
+      I̋: "I",
+      i̋: "i",
+      Ǹ: "N",
+      ǹ: "n",
+      Ồ: "O",
+      ồ: "o",
+      Ṑ: "O",
+      ṑ: "o",
+      Ừ: "U",
+      ừ: "u",
+      Ẁ: "W",
+      ẁ: "w",
+      Ỳ: "Y",
+      ỳ: "y",
+      Ȁ: "A",
+      ȁ: "a",
+      Ȅ: "E",
+      ȅ: "e",
+      Ȉ: "I",
+      ȉ: "i",
+      Ȍ: "O",
+      ȍ: "o",
+      Ȑ: "R",
+      ȑ: "r",
+      Ȕ: "U",
+      ȕ: "u",
+      B̌: "B",
+      b̌: "b",
+      Č̣: "C",
+      č̣: "c",
+      Ê̌: "E",
+      ê̌: "e",
+      F̌: "F",
+      f̌: "f",
+      Ǧ: "G",
+      ǧ: "g",
+      Ȟ: "H",
+      ȟ: "h",
+      J̌: "J",
+      ǰ: "j",
+      Ǩ: "K",
+      ǩ: "k",
+      M̌: "M",
+      m̌: "m",
+      P̌: "P",
+      p̌: "p",
+      Q̌: "Q",
+      q̌: "q",
+      Ř̩: "R",
+      ř̩: "r",
+      Ṧ: "S",
+      ṧ: "s",
+      V̌: "V",
+      v̌: "v",
+      W̌: "W",
+      w̌: "w",
+      X̌: "X",
+      x̌: "x",
+      Y̌: "Y",
+      y̌: "y",
+      A̧: "A",
+      a̧: "a",
+      B̧: "B",
+      b̧: "b",
+      Ḑ: "D",
+      ḑ: "d",
+      Ȩ: "E",
+      ȩ: "e",
+      Ɛ̧: "E",
+      ɛ̧: "e",
+      Ḩ: "H",
+      ḩ: "h",
+      I̧: "I",
+      i̧: "i",
+      Ɨ̧: "I",
+      ɨ̧: "i",
+      M̧: "M",
+      m̧: "m",
+      O̧: "O",
+      o̧: "o",
+      Q̧: "Q",
+      q̧: "q",
+      U̧: "U",
+      u̧: "u",
+      X̧: "X",
+      x̧: "x",
+      Z̧: "Z",
+      z̧: "z",
     };
     chars = Object.keys(characterMap).join("|");
     allAccents = new RegExp(chars, "g");
@@ -3845,33 +4444,86 @@ var init_lib = __esm({
       CONTAINS: 3,
       ACRONYM: 2,
       MATCHES: 1,
-      NO_MATCH: 0
+      NO_MATCH: 0,
     };
     defaultKeyAttributes = {
       maxRanking: Infinity,
-      minRanking: -Infinity
+      minRanking: -Infinity,
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/goober@2.1.16_csstype@3.1.3/node_modules/goober/dist/goober.modern.js
 function u(e2) {
-  let r2 = this || {}, l2 = e2.call ? e2(r2.p) : e2;
-  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r2.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2), {}) : l2, t(r2.target), r2.g, r2.o, r2.k);
+  let r2 = this || {},
+    l2 = e2.call ? e2(r2.p) : e2;
+  return i(
+    l2.unshift
+      ? l2.raw
+        ? p(l2, [].slice.call(arguments, 1), r2.p)
+        : l2.reduce(
+            (e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2),
+            {}
+          )
+      : l2,
+    t(r2.target),
+    r2.g,
+    r2.o,
+    r2.k
+  );
 }
 var e, t, l, a, n, o, c, s, i, p;
 var init_goober_modern = __esm({
   "../../node_modules/.pnpm/goober@2.1.16_csstype@3.1.3/node_modules/goober/dist/goober.modern.js"() {
     e = { data: "" };
-    t = (t2) => "object" == typeof window ? ((t2 ? t2.querySelector("#_goober") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement("style")), { innerHTML: " ", id: "_goober" })).firstChild : t2 || e;
+    t = (t2) =>
+      "object" == typeof window
+        ? (
+            (t2 ? t2.querySelector("#_goober") : window._goober) ||
+            Object.assign(
+              (t2 || document.head).appendChild(
+                document.createElement("style")
+              ),
+              { innerHTML: " ", id: "_goober" }
+            )
+          ).firstChild
+        : t2 || e;
     l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g;
     a = /\/\*[^]*?\*\/|  +/g;
     n = /\n+/g;
     o = (e2, t2) => {
-      let r2 = "", l2 = "", a2 = "";
+      let r2 = "",
+        l2 = "",
+        a2 = "";
       for (let n2 in e2) {
         let c2 = e2[n2];
-        "@" == n2[0] ? "i" == n2[1] ? r2 = n2 + " " + c2 + ";" : l2 += "f" == n2[1] ? o(c2, n2) : n2 + "{" + o(c2, "k" == n2[1] ? "" : t2) + "}" : "object" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + " " + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, "-$&").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + ":" + c2 + ";");
+        "@" == n2[0]
+          ? "i" == n2[1]
+            ? (r2 = n2 + " " + c2 + ";")
+            : (l2 +=
+                "f" == n2[1]
+                  ? o(c2, n2)
+                  : n2 + "{" + o(c2, "k" == n2[1] ? "" : t2) + "}")
+          : "object" == typeof c2
+          ? (l2 += o(
+              c2,
+              t2
+                ? t2.replace(/([^,])+/g, (e3) =>
+                    n2.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t3) =>
+                      /&/.test(t3)
+                        ? t3.replace(/&/g, e3)
+                        : e3
+                        ? e3 + " " + t3
+                        : t3
+                    )
+                  )
+                : n2
+            ))
+          : null != c2 &&
+            ((n2 = /^--/.test(n2)
+              ? n2
+              : n2.replace(/[A-Z]/g, "-$&").toLowerCase()),
+            (a2 += o.p ? o.p(n2, c2) : n2 + ":" + c2 + ";"));
       }
       return r2 + (t2 && a2 ? t2 + "{" + a2 + "}" : a2) + l2;
     };
@@ -3885,54 +4537,92 @@ var init_goober_modern = __esm({
       return e2;
     };
     i = (e2, t2, r2, i2, p2) => {
-      let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {
-        let t3 = 0, r3 = 11;
-        for (; t3 < e3.length; ) r3 = 101 * r3 + e3.charCodeAt(t3++) >>> 0;
-        return "go" + r3;
-      })(u2));
+      let u2 = s(e2),
+        d =
+          c[u2] ||
+          (c[u2] = ((e3) => {
+            let t3 = 0,
+              r3 = 11;
+            for (; t3 < e3.length; )
+              r3 = (101 * r3 + e3.charCodeAt(t3++)) >>> 0;
+            return "go" + r3;
+          })(u2));
       if (!c[d]) {
-        let t3 = u2 !== e2 ? e2 : ((e3) => {
-          let t4, r3, o2 = [{}];
-          for (; t4 = l.exec(e3.replace(a, "")); ) t4[4] ? o2.shift() : t4[3] ? (r3 = t4[3].replace(n, " ").trim(), o2.unshift(o2[0][r3] = o2[0][r3] || {})) : o2[0][t4[1]] = t4[2].replace(n, " ").trim();
-          return o2[0];
-        })(e2);
+        let t3 =
+          u2 !== e2
+            ? e2
+            : ((e3) => {
+                let t4,
+                  r3,
+                  o2 = [{}];
+                for (; (t4 = l.exec(e3.replace(a, ""))); )
+                  t4[4]
+                    ? o2.shift()
+                    : t4[3]
+                    ? ((r3 = t4[3].replace(n, " ").trim()),
+                      o2.unshift((o2[0][r3] = o2[0][r3] || {})))
+                    : (o2[0][t4[1]] = t4[2].replace(n, " ").trim());
+                return o2[0];
+              })(e2);
         c[d] = o(p2 ? { ["@keyframes " + d]: t3 } : t3, r2 ? "" : "." + d);
       }
       let f = r2 && c.g ? c.g : null;
-      return r2 && (c.g = c[d]), ((e3, t3, r3, l2) => {
-        l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r3 ? e3 + t3.data : t3.data + e3);
-      })(c[d], t2, i2, f), d;
+      return (
+        r2 && (c.g = c[d]),
+        ((e3, t3, r3, l2) => {
+          l2
+            ? (t3.data = t3.data.replace(l2, e3))
+            : -1 === t3.data.indexOf(e3) &&
+              (t3.data = r3 ? e3 + t3.data : t3.data + e3);
+        })(c[d], t2, i2, f),
+        d
+      );
     };
-    p = (e2, t2, r2) => e2.reduce((e3, l2, a2) => {
-      let n2 = t2[a2];
-      if (n2 && n2.call) {
-        let e4 = n2(r2), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;
-        n2 = t3 ? "." + t3 : e4 && "object" == typeof e4 ? e4.props ? "" : o(e4, "") : false === e4 ? "" : e4;
-      }
-      return e3 + l2 + (null == n2 ? "" : n2);
-    }, "");
+    p = (e2, t2, r2) =>
+      e2.reduce((e3, l2, a2) => {
+        let n2 = t2[a2];
+        if (n2 && n2.call) {
+          let e4 = n2(r2),
+            t3 =
+              (e4 && e4.props && e4.props.className) || (/^go/.test(e4) && e4);
+          n2 = t3
+            ? "." + t3
+            : e4 && "object" == typeof e4
+            ? e4.props
+              ? ""
+              : o(e4, "")
+            : false === e4
+            ? ""
+            : e4;
+        }
+        return e3 + l2 + (null == n2 ? "" : n2);
+      }, "");
     u.bind({ g: 1 });
     u.bind({ k: 1 });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs
 function r(e2) {
-  var t2, f, n2 = "";
+  var t2,
+    f,
+    n2 = "";
   if ("string" == typeof e2 || "number" == typeof e2) n2 += e2;
-  else if ("object" == typeof e2) if (Array.isArray(e2)) {
-    var o2 = e2.length;
-    for (t2 = 0; t2 < o2; t2++) e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += " "), n2 += f);
-  } else for (f in e2) e2[f] && (n2 && (n2 += " "), n2 += f);
+  else if ("object" == typeof e2)
+    if (Array.isArray(e2)) {
+      var o2 = e2.length;
+      for (t2 = 0; t2 < o2; t2++)
+        e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += " "), (n2 += f));
+    } else for (f in e2) e2[f] && (n2 && (n2 += " "), (n2 += f));
   return n2;
 }
 function clsx() {
-  for (var e2, t2, f = 0, n2 = "", o2 = arguments.length; f < o2; f++) (e2 = arguments[f]) && (t2 = r(e2)) && (n2 && (n2 += " "), n2 += t2);
+  for (var e2, t2, f = 0, n2 = "", o2 = arguments.length; f < o2; f++)
+    (e2 = arguments[f]) && (t2 = r(e2)) && (n2 && (n2 += " "), (n2 += t2));
   return n2;
 }
 var init_clsx = __esm({
-  "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"() {
-  }
+  "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"() {},
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.5_solid-js@1.9.5/node_modules/@solid-primitives/transition-group/dist/index.js
@@ -3949,10 +4639,9 @@ function createListTransition(source, options) {
   const [isTransitionPending] = useTransition();
   const finishRemoved = (els) => {
     setToRemove((p2) => (p2.push.apply(p2, els), p2));
-    for (const el of els)
-      exiting.delete(el);
+    for (const el of els) exiting.delete(el);
   };
-  const handleRemoved = (els, el, i2) => els.splice(i2, 0, el) ;
+  const handleRemoved = (els, el, i2) => els.splice(i2, 0, el);
   return createMemo(
     (prev) => {
       const elsToRemove = toRemove();
@@ -3965,7 +4654,13 @@ function createListTransition(source, options) {
       if (elsToRemove.length) {
         const next = prev.filter((e2) => !elsToRemove.includes(e2));
         elsToRemove.length = 0;
-        onChange({ list: next, added: [], removed: [], unchanged: next, finishRemoved });
+        onChange({
+          list: next,
+          added: [],
+          removed: [],
+          unchanged: next,
+          finishRemoved,
+        });
         return next;
       }
       return untrack(() => {
@@ -3987,11 +4682,9 @@ function createListTransition(source, options) {
             }
             handleRemoved(next, el, i2);
           }
-          if (nothingChanged && el !== next[i2])
-            nothingChanged = false;
+          if (nothingChanged && el !== next[i2]) nothingChanged = false;
         }
-        if (!removed.length && nothingChanged)
-          return prev;
+        if (!removed.length && nothingChanged) return prev;
         onChange({ list: next, added, removed, unchanged, finishRemoved });
         prevSet = nextSet;
         return next;
@@ -4004,7 +4697,7 @@ var init_dist5 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.5_solid-js@1.9.5/node_modules/@solid-primitives/transition-group/dist/index.js"() {
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+refs@1.0.8_solid-js@1.9.5/node_modules/@solid-primitives/refs/dist/index.js
@@ -4012,8 +4705,7 @@ function mergeRefs(...refs) {
   return chain(refs);
 }
 function getResolvedElements(value, predicate) {
-  if (predicate(value))
-    return value;
+  if (predicate(value)) return value;
   if (typeof value === "function" && !value.length)
     return getResolvedElements(value(), predicate);
   if (Array.isArray(value)) {
@@ -4021,16 +4713,22 @@ function getResolvedElements(value, predicate) {
     for (const item of value) {
       const result = getResolvedElements(item, predicate);
       if (result)
-        Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+        Array.isArray(result)
+          ? results.push.apply(results, result)
+          : results.push(result);
     }
     return results.length ? results : null;
   }
   return null;
 }
-function resolveElements(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {
+function resolveElements(
+  fn,
+  predicate = defaultElementPredicate,
+  serverPredicate = defaultElementPredicate
+) {
   const children2 = createMemo(fn);
-  const memo = createMemo(
-    () => getResolvedElements(children2(), isServer ? serverPredicate : predicate)
+  const memo = createMemo(() =>
+    getResolvedElements(children2(), isServer ? serverPredicate : predicate)
   );
   memo.toArray = () => {
     const value = memo();
@@ -4044,8 +4742,10 @@ var init_dist6 = __esm({
     init_index();
     init_solid();
     init_web();
-    defaultElementPredicate = isServer ? (item) => item != null && typeof item === "object" && "t" in item : (item) => item instanceof Element;
-  }
+    defaultElementPredicate = isServer
+      ? (item) => item != null && typeof item === "object" && "t" in item
+      : (item) => item instanceof Element;
+  },
 });
 
 // ../../node_modules/.pnpm/solid-transition-group@0.2.3_solid-js@1.9.5/node_modules/solid-transition-group/dist/index.js
@@ -4053,13 +4753,15 @@ function createClassnames(props) {
   return createMemo(() => {
     const name = props.name || "s";
     return {
-      enterActive: (props.enterActiveClass || name + "-enter-active").split(" "),
+      enterActive: (props.enterActiveClass || name + "-enter-active").split(
+        " "
+      ),
       enter: (props.enterClass || name + "-enter").split(" "),
       enterTo: (props.enterToClass || name + "-enter-to").split(" "),
       exitActive: (props.exitActiveClass || name + "-exit-active").split(" "),
       exit: (props.exitClass || name + "-exit").split(" "),
       exitTo: (props.exitToClass || name + "-exit-to").split(" "),
-      move: (props.moveClass || name + "-move").split(" ")
+      move: (props.moveClass || name + "-move").split(" "),
     };
   });
 }
@@ -4072,8 +4774,7 @@ function enterTransition(classes, events, el, done) {
   el.classList.add(...classes.enter);
   el.classList.add(...classes.enterActive);
   queueMicrotask(() => {
-    if (!el.parentNode)
-      return done?.();
+    if (!el.parentNode) return done?.();
     onEnter?.(el, () => endTransition());
   });
   nextFrame(() => {
@@ -4096,8 +4797,7 @@ function enterTransition(classes, events, el, done) {
 }
 function exitTransition(classes, events, el, done) {
   const { onBeforeExit, onExit, onAfterExit } = events;
-  if (!el.parentNode)
-    return done?.();
+  if (!el.parentNode) return done?.();
   onBeforeExit?.(el);
   el.classList.add(...classes.exit);
   el.classList.add(...classes.exitActive);
@@ -4129,57 +4829,64 @@ var init_dist7 = __esm({
     init_dist6();
     TransitionGroup = (props) => {
       const classnames = createClassnames(props);
-      return createListTransition(resolveElements(() => props.children).toArray, {
-        appear: props.appear,
-        onChange({ added, removed, finishRemoved, list }) {
-          const classes = classnames();
-          for (const el of added) {
-            enterTransition(classes, props, el);
-          }
-          const toMove = [];
-          for (const el of list) {
-            if (el.isConnected && (el instanceof HTMLElement || el instanceof SVGElement)) {
-              toMove.push({ el, rect: el.getBoundingClientRect() });
+      return createListTransition(
+        resolveElements(() => props.children).toArray,
+        {
+          appear: props.appear,
+          onChange({ added, removed, finishRemoved, list }) {
+            const classes = classnames();
+            for (const el of added) {
+              enterTransition(classes, props, el);
             }
-          }
-          queueMicrotask(() => {
-            const moved = [];
-            for (const { el, rect } of toMove) {
-              if (el.isConnected) {
-                const newRect = el.getBoundingClientRect(), dX = rect.left - newRect.left, dY = rect.top - newRect.top;
-                if (dX || dY) {
-                  el.style.transform = `translate(${dX}px, ${dY}px)`;
-                  el.style.transitionDuration = "0s";
-                  moved.push(el);
-                }
+            const toMove = [];
+            for (const el of list) {
+              if (
+                el.isConnected &&
+                (el instanceof HTMLElement || el instanceof SVGElement)
+              ) {
+                toMove.push({ el, rect: el.getBoundingClientRect() });
               }
             }
-            document.body.offsetHeight;
-            for (const el of moved) {
-              let endTransition2 = function(e2) {
-                if (e2.target === el || /transform$/.test(e2.propertyName)) {
-                  el.removeEventListener("transitionend", endTransition2);
-                  el.classList.remove(...classes.move);
+            queueMicrotask(() => {
+              const moved = [];
+              for (const { el, rect } of toMove) {
+                if (el.isConnected) {
+                  const newRect = el.getBoundingClientRect(),
+                    dX = rect.left - newRect.left,
+                    dY = rect.top - newRect.top;
+                  if (dX || dY) {
+                    el.style.transform = `translate(${dX}px, ${dY}px)`;
+                    el.style.transitionDuration = "0s";
+                    moved.push(el);
+                  }
                 }
-              };
-              el.classList.add(...classes.move);
-              el.style.transform = el.style.transitionDuration = "";
-              el.addEventListener("transitionend", endTransition2);
+              }
+              document.body.offsetHeight;
+              for (const el of moved) {
+                let endTransition2 = function (e2) {
+                  if (e2.target === el || /transform$/.test(e2.propertyName)) {
+                    el.removeEventListener("transitionend", endTransition2);
+                    el.classList.remove(...classes.move);
+                  }
+                };
+                el.classList.add(...classes.move);
+                el.style.transform = el.style.transitionDuration = "";
+                el.addEventListener("transitionend", endTransition2);
+              }
+            });
+            for (const el of removed) {
+              exitTransition(classes, props, el, () => finishRemoved([el]));
             }
-          });
-          for (const el of removed) {
-            exitTransition(classes, props, el, () => finishRemoved([el]));
-          }
+          },
         }
-      });
+      );
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+keyed@1.2.2_solid-js@1.9.5/node_modules/@solid-primitives/keyed/dist/index.js
 function dispose2(list) {
-  for (const o2 of list)
-    o2.dispose();
+  for (const o2 of list) o2.dispose();
 }
 function keyArray(items, keyFn, mapFn, options = {}) {
   if (isServer) {
@@ -4193,8 +4900,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
             () => i2
           )
         );
-    } else if (options.fallback)
-      s2 = [options.fallback()];
+    } else if (options.fallback) s2 = [options.fallback()];
     return () => s2;
   }
   const prev = /* @__PURE__ */ new Map();
@@ -4206,8 +4912,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
       if (!list.length) {
         dispose2(prev.values());
         prev.clear();
-        if (!options.fallback)
-          return [];
+        if (!options.fallback) return [];
         const fb2 = createRoot((dispose22) => {
           prev.set(FALLBACK2, { dispose: dispose22 });
           return options.fallback();
@@ -4236,8 +4941,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
           result[i2] = lookup.mapped;
           lookup.setIndex?.(i2);
           lookup.setItem(() => item);
-        } else
-          addNewItem(result, item, i2, key);
+        } else addNewItem(result, item, i2, key);
       }
       for (const key of prevKeys) {
         prev.get(key)?.dispose();
@@ -4254,8 +4958,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
         const [index, setIndex] = createSignal(i2);
         save.setIndex = setIndex;
         save.mapped = mapFn(getItem, index);
-      } else
-        save.mapped = mapFn(getItem);
+      } else save.mapped = mapFn(getItem);
       prev.set(key, save);
       list[i2] = save.mapped;
     });
@@ -4278,34 +4981,35 @@ var init_dist8 = __esm({
     init_solid();
     init_web();
     FALLBACK2 = Symbol("fallback");
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.3_solid-js@1.9.5/node_modules/@solid-primitives/event-listener/dist/index.js
 function makeEventListener(target, type, handler, options) {
   target.addEventListener(type, handler, options);
-  return tryOnCleanup(target.removeEventListener.bind(target, type, handler, options));
+  return tryOnCleanup(
+    target.removeEventListener.bind(target, type, handler, options)
+  );
 }
 function createEventListener(targets, type, handler, options) {
-  if (isServer)
-    return;
+  if (isServer) return;
   const attachListeners = () => {
     asArray(access(targets)).forEach((el) => {
       if (el)
-        asArray(access(type)).forEach((type2) => makeEventListener(el, type2, handler, options));
+        asArray(access(type)).forEach((type2) =>
+          makeEventListener(el, type2, handler, options)
+        );
     });
   };
-  if (typeof targets === "function")
-    createEffect(attachListeners);
-  else
-    createRenderEffect(attachListeners);
+  if (typeof targets === "function") createEffect(attachListeners);
+  else createRenderEffect(attachListeners);
 }
 var init_dist9 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.3_solid-js@1.9.5/node_modules/@solid-primitives/event-listener/dist/index.js"() {
     init_index();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+resize-observer@2.0.26_solid-js@1.9.5/node_modules/@solid-primitives/resize-observer/dist/index.js
@@ -4317,21 +5021,28 @@ function makeResizeObserver(callback, options) {
   onCleanup(observer.disconnect.bind(observer));
   return {
     observe: (ref) => observer.observe(ref, options),
-    unobserve: observer.unobserve.bind(observer)
+    unobserve: observer.unobserve.bind(observer),
   };
 }
 function createResizeObserver(targets, onResize, options) {
-  if (isServer)
-    return;
-  const previousMap = /* @__PURE__ */ new WeakMap(), { observe, unobserve } = makeResizeObserver((entries2) => {
-    for (const entry of entries2) {
-      const { contentRect, target } = entry, width = Math.round(contentRect.width), height = Math.round(contentRect.height), previous = previousMap.get(target);
-      if (!previous || previous.width !== width || previous.height !== height) {
-        onResize(contentRect, target, entry);
-        previousMap.set(target, { width, height });
+  if (isServer) return;
+  const previousMap = /* @__PURE__ */ new WeakMap(),
+    { observe, unobserve } = makeResizeObserver((entries2) => {
+      for (const entry of entries2) {
+        const { contentRect, target } = entry,
+          width = Math.round(contentRect.width),
+          height = Math.round(contentRect.height),
+          previous = previousMap.get(target);
+        if (
+          !previous ||
+          previous.width !== width ||
+          previous.height !== height
+        ) {
+          onResize(contentRect, target, entry);
+          previousMap.set(target, { width, height });
+        }
       }
-    }
-  }, options);
+    }, options);
   createEffect((prev) => {
     const refs = filterNonNullable(asArray(access(targets)));
     handleDiffArray(refs, prev, observe, unobserve);
@@ -4343,22 +5054,21 @@ var init_dist10 = __esm({
     init_index();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+props@3.1.11_solid-js@1.9.5/node_modules/@solid-primitives/props/dist/index.js
 function stringStyleToObject(style2) {
   const object = {};
   let match;
-  while (match = extractCSSregex.exec(style2)) {
+  while ((match = extractCSSregex.exec(style2))) {
     object[match[1]] = match[2];
   }
   return object;
 }
 function combineStyle(a2, b2) {
   if (typeof a2 === "string") {
-    if (typeof b2 === "string")
-      return `${a2};${b2}`;
+    if (typeof b2 === "string") return `${a2};${b2}`;
     a2 = stringStyleToObject(a2);
   } else if (typeof b2 === "string") {
     b2 = stringStyleToObject(b2);
@@ -4369,7 +5079,7 @@ var extractCSSregex;
 var init_dist11 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+props@3.1.11_solid-js@1.9.5/node_modules/@solid-primitives/props/dist/index.js"() {
     extractCSSregex = /((?:--)?(?:\w+-?)+)\s*:\s*([^;]*)/g;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.9.5/node_modules/@kobalte/utils/dist/index.js
@@ -4411,7 +5121,10 @@ function getActiveElement(node, activeDescendant = false) {
     return null;
   }
   if (isFrame(activeElement) && activeElement.contentDocument) {
-    return getActiveElement(activeElement.contentDocument.body, activeDescendant);
+    return getActiveElement(
+      activeElement.contentDocument.body,
+      activeDescendant
+    );
   }
   if (activeDescendant) {
     const id = activeElement.getAttribute("aria-activedescendant");
@@ -4434,10 +5147,12 @@ function isFrame(element) {
   return element.tagName === "IFRAME";
 }
 function testPlatform(re) {
-  return typeof window !== "undefined" && window.navigator != null ? (
-    // @ts-ignore
-    re.test(window.navigator["userAgentData"]?.platform || window.navigator.platform)
-  ) : false;
+  return typeof window !== "undefined" && window.navigator != null
+    ? // @ts-ignore
+      re.test(
+        window.navigator["userAgentData"]?.platform || window.navigator.platform
+      )
+    : false;
 }
 function isMac() {
   return testPlatform(/^Mac/i);
@@ -4446,8 +5161,10 @@ function isIPhone() {
   return testPlatform(/^iPhone/i);
 }
 function isIPad() {
-  return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
-  isMac() && navigator.maxTouchPoints > 1;
+  return (
+    testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
+    (isMac() && navigator.maxTouchPoints > 1)
+  );
 }
 function isIOS() {
   return isIPhone() || isIPad();
@@ -4499,23 +5216,26 @@ function supportsPreventScroll() {
         get preventScroll() {
           supportsPreventScrollCached = true;
           return true;
-        }
+        },
       });
-    } catch (e2) {
-    }
+    } catch (e2) {}
   }
   return supportsPreventScrollCached;
 }
 function getScrollableElements(element) {
   let parent = element.parentNode;
   const scrollableElements = [];
-  const rootScrollingElement = document.scrollingElement || document.documentElement;
+  const rootScrollingElement =
+    document.scrollingElement || document.documentElement;
   while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
-    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
+    if (
+      parent.offsetHeight < parent.scrollHeight ||
+      parent.offsetWidth < parent.scrollWidth
+    ) {
       scrollableElements.push({
         element: parent,
         scrollTop: parent.scrollTop,
-        scrollLeft: parent.scrollLeft
+        scrollLeft: parent.scrollLeft,
       });
     }
     parent = parent.parentNode;
@@ -4524,7 +5244,7 @@ function getScrollableElements(element) {
     scrollableElements.push({
       element: rootScrollingElement,
       scrollTop: rootScrollingElement.scrollTop,
-      scrollLeft: rootScrollingElement.scrollLeft
+      scrollLeft: rootScrollingElement.scrollLeft,
     });
   }
   return scrollableElements;
@@ -4536,7 +5256,9 @@ function restoreScrollPosition(scrollableElements) {
   }
 }
 function getAllTabbableIn(container, includeContainer) {
-  const elements = Array.from(container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR));
+  const elements = Array.from(
+    container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR)
+  );
   const tabbableElements2 = elements.filter(isTabbable);
   if (includeContainer && isTabbable(container)) {
     tabbableElements2.unshift(container);
@@ -4554,46 +5276,73 @@ function isTabbable(element) {
   return isFocusable(element) && !hasNegativeTabIndex(element);
 }
 function isFocusable(element) {
-  return element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element);
+  return (
+    element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element)
+  );
 }
 function hasNegativeTabIndex(element) {
   const tabIndex = parseInt(element.getAttribute("tabindex") || "0", 10);
   return tabIndex < 0;
 }
 function isElementVisible(element, childElement) {
-  return element.nodeName !== "#comment" && isStyleVisible(element) && isAttributeVisible(element, childElement) && (!element.parentElement || isElementVisible(element.parentElement, element));
+  return (
+    element.nodeName !== "#comment" &&
+    isStyleVisible(element) &&
+    isAttributeVisible(element, childElement) &&
+    (!element.parentElement || isElementVisible(element.parentElement, element))
+  );
 }
 function isStyleVisible(element) {
   if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {
     return false;
   }
   const { display, visibility } = element.style;
-  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
+  let isVisible =
+    display !== "none" && visibility !== "hidden" && visibility !== "collapse";
   if (isVisible) {
     if (!element.ownerDocument.defaultView) {
       return isVisible;
     }
-    const { getComputedStyle: getComputedStyle3 } = element.ownerDocument.defaultView;
-    const { display: computedDisplay, visibility: computedVisibility } = getComputedStyle3(element);
-    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
+    const { getComputedStyle: getComputedStyle3 } =
+      element.ownerDocument.defaultView;
+    const { display: computedDisplay, visibility: computedVisibility } =
+      getComputedStyle3(element);
+    isVisible =
+      computedDisplay !== "none" &&
+      computedVisibility !== "hidden" &&
+      computedVisibility !== "collapse";
   }
   return isVisible;
 }
 function isAttributeVisible(element, childElement) {
-  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
+  return (
+    !element.hasAttribute("hidden") &&
+    (element.nodeName === "DETAILS" &&
+    childElement &&
+    childElement.nodeName !== "SUMMARY"
+      ? element.hasAttribute("open")
+      : true)
+  );
 }
 function getFocusableTreeWalker(root, opts, scope) {
-  const selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;
+  const selector = opts?.tabbable
+    ? TABBABLE_ELEMENT_SELECTOR
+    : FOCUSABLE_ELEMENT_SELECTOR;
   const walker2 = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
     acceptNode(node) {
       if (opts?.from?.contains(node)) {
         return NodeFilter.FILTER_REJECT;
       }
-      if (node.matches(selector) && isElementVisible(node) && (true) && (!opts?.accept || opts.accept(node))) {
+      if (
+        node.matches(selector) &&
+        isElementVisible(node) &&
+        true &&
+        (!opts?.accept || opts.accept(node))
+      ) {
         return NodeFilter.FILTER_ACCEPT;
       }
       return NodeFilter.FILTER_SKIP;
-    }
+    },
   });
   if (opts?.from) {
     walker2.currentNode = opts.from;
@@ -4608,7 +5357,9 @@ function getScrollParent(node) {
 }
 function isScrollable(node) {
   const style2 = window.getComputedStyle(node);
-  return /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
+  return /(auto|scroll)/.test(
+    style2.overflow + style2.overflowX + style2.overflowY
+  );
 }
 function noop3() {
   return;
@@ -4624,8 +5375,7 @@ function isPointInPolygon(point, polygon) {
     const where = (yi - yj) * (x - xi) - (xi - xj) * (y - yi);
     if (yj < yi) {
       if (y >= yj && y < yi) {
-        if (where === 0)
-          return true;
+        if (where === 0) return true;
         if (where > 0) {
           if (y === yj) {
             if (y > vy) {
@@ -4638,8 +5388,7 @@ function isPointInPolygon(point, polygon) {
       }
     } else if (yi < yj) {
       if (y > yi && y <= yj) {
-        if (where === 0)
-          return true;
+        if (where === 0) return true;
         if (where < 0) {
           if (y === yj) {
             if (y < vy) {
@@ -4650,7 +5399,7 @@ function isPointInPolygon(point, polygon) {
           }
         }
       }
-    } else if (y == yi && (x >= xj && x <= xi || x >= xi && x <= xj)) {
+    } else if (y == yi && ((x >= xj && x <= xi) || (x >= xi && x <= xj))) {
       return true;
     }
   }
@@ -4738,17 +5487,28 @@ function relativeOffset(ancestor, child, axis) {
 function scrollIntoViewport(targetElement, opts) {
   if (document.contains(targetElement)) {
     const root = document.scrollingElement || document.documentElement;
-    const isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
+    const isScrollPrevented =
+      window.getComputedStyle(root).overflow === "hidden";
     if (!isScrollPrevented) {
-      const { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
+      const { left: originalLeft, top: originalTop } =
+        targetElement.getBoundingClientRect();
       targetElement?.scrollIntoView?.({ block: "nearest" });
-      const { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
-      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
+      const { left: newLeft, top: newTop } =
+        targetElement.getBoundingClientRect();
+      if (
+        Math.abs(originalLeft - newLeft) > 1 ||
+        Math.abs(originalTop - newTop) > 1
+      ) {
         targetElement.scrollIntoView?.({ block: "nearest" });
       }
     } else {
       let scrollParent = getScrollParent(targetElement);
-      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
+      while (
+        targetElement &&
+        scrollParent &&
+        targetElement !== root &&
+        scrollParent !== root
+      ) {
         scrollIntoView(scrollParent, targetElement);
         targetElement = scrollParent;
         scrollParent = getScrollParent(targetElement);
@@ -4756,7 +5516,15 @@ function scrollIntoViewport(targetElement, opts) {
     }
   }
 }
-var EventKey, supportsPreventScrollCached, focusableElements, tabbableElements, FOCUSABLE_ELEMENT_SELECTOR, TABBABLE_ELEMENT_SELECTOR, transitionsByElement, transitionCallbacks, visuallyHiddenStyles;
+var EventKey,
+  supportsPreventScrollCached,
+  focusableElements,
+  tabbableElements,
+  FOCUSABLE_ELEMENT_SELECTOR,
+  TABBABLE_ELEMENT_SELECTOR,
+  transitionsByElement,
+  transitionCallbacks,
+  visuallyHiddenStyles;
 var init_dist12 = __esm({
   "../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.9.5/node_modules/@kobalte/utils/dist/index.js"() {
     init_solid();
@@ -4792,10 +5560,15 @@ var init_dist12 = __esm({
       "embed",
       "audio[controls]",
       "video[controls]",
-      "[contenteditable]:not([contenteditable='false'])"
+      "[contenteditable]:not([contenteditable='false'])",
+    ];
+    tabbableElements = [
+      ...focusableElements,
+      '[tabindex]:not([tabindex="-1"]):not([disabled])',
     ];
-    tabbableElements = [...focusableElements, '[tabindex]:not([tabindex="-1"]):not([disabled])'];
-    FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
+    FOCUSABLE_ELEMENT_SELECTOR =
+      focusableElements.join(":not([hidden]),") +
+      ",[tabindex]:not([disabled]):not([hidden])";
     TABBABLE_ELEMENT_SELECTOR = tabbableElements.join(
       ':not([hidden]):not([tabindex="-1"]),'
     );
@@ -4818,9 +5591,9 @@ var init_dist12 = __esm({
       padding: "0",
       position: "absolute",
       width: "1px",
-      "white-space": "nowrap"
+      "white-space": "nowrap",
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js
@@ -4831,8 +5604,7 @@ function createRegisterId(setter) {
   };
 }
 var init_E4R2EMM4 = __esm({
-  "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js"() {
-  }
+  "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js"() {},
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ET5T45DO.js
@@ -4850,65 +5622,82 @@ var init_ET5T45DO = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ET5T45DO.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/6Y7B2NEO.js
 function Polymorphic(props) {
   const [local, others] = splitProps(props, ["as"]);
   if (!local.as) {
-    throw new Error("[kobalte]: Polymorphic is missing the required `as` prop.");
+    throw new Error(
+      "[kobalte]: Polymorphic is missing the required `as` prop."
+    );
   }
   return (
     // @ts-ignore: Props are valid but not worth calculating
-    createComponent(Dynamic, mergeProps(others, {
-      get component() {
-        return local.as;
-      }
-    }))
+    createComponent(
+      Dynamic,
+      mergeProps(others, {
+        get component() {
+          return local.as;
+        },
+      })
+    )
   );
 }
 var init_Y7B2NEO = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/6Y7B2NEO.js"() {
     init_web();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/Q2DJLZQE.js
 function createFormControl(props) {
   const defaultId = `form-control-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
   const [labelId, setLabelId] = createSignal();
   const [fieldId, setFieldId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
   const [errorMessageId, setErrorMessageId] = createSignal();
   const getAriaLabelledBy = (fieldId2, fieldAriaLabel, fieldAriaLabelledBy) => {
     const hasAriaLabelledBy = fieldAriaLabelledBy != null || labelId() != null;
-    return [
-      fieldAriaLabelledBy,
-      labelId(),
-      // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby
-      hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        fieldAriaLabelledBy,
+        labelId(),
+        // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby
+        hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const getAriaDescribedBy = (fieldAriaDescribedBy) => {
-    return [
-      descriptionId(),
-      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.
-      // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
-      errorMessageId(),
-      fieldAriaDescribedBy
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        descriptionId(),
+        // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.
+        // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
+        errorMessageId(),
+        fieldAriaDescribedBy,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const dataset = createMemo(() => ({
     "data-valid": access(mergedProps.validationState) === "valid" ? "" : void 0,
-    "data-invalid": access(mergedProps.validationState) === "invalid" ? "" : void 0,
+    "data-invalid":
+      access(mergedProps.validationState) === "invalid" ? "" : void 0,
     "data-required": access(mergedProps.required) ? "" : void 0,
     "data-disabled": access(mergedProps.disabled) ? "" : void 0,
-    "data-readonly": access(mergedProps.readOnly) ? "" : void 0
+    "data-readonly": access(mergedProps.readOnly) ? "" : void 0,
   }));
   const formControlContext = {
     name: () => access(mergedProps.name) ?? access(mergedProps.id),
@@ -4927,34 +5716,49 @@ function createFormControl(props) {
     registerLabel: createRegisterId(setLabelId),
     registerField: createRegisterId(setFieldId),
     registerDescription: createRegisterId(setDescriptionId),
-    registerErrorMessage: createRegisterId(setErrorMessageId)
+    registerErrorMessage: createRegisterId(setErrorMessageId),
   };
   return {
-    formControlContext
+    formControlContext,
   };
 }
 function useFormControlContext() {
   const context = useContext(FormControlContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component");
+    throw new Error(
+      "[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component"
+    );
   }
   return context;
 }
 function FormControlDescription(props) {
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerDescription(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div"
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function FormControlErrorMessage(props) {
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("error-message")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("error-message"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["forceMount"]);
   const isInvalid = () => context.validationState() === "invalid";
   createEffect(() => {
@@ -4968,31 +5772,53 @@ function FormControlErrorMessage(props) {
       return local.forceMount || isInvalid();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div"
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function FormControlLabel(props) {
   let ref;
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref"]);
-  const tagName = createTagName(() => ref, () => "label");
+  const tagName = createTagName(
+    () => ref,
+    () => "label"
+  );
   createEffect(() => onCleanup(context.registerLabel(others.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "label",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get ["for"]() {
-      return createMemo(() => tagName() === "label")() ? context.fieldId() : void 0;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "label",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get ["for"]() {
+          return createMemo(() => tagName() === "label")()
+            ? context.fieldId()
+            : void 0;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 var FORM_CONTROL_PROP_NAMES, FormControlContext;
 var init_Q2DJLZQE = __esm({
@@ -5003,9 +5829,16 @@ var init_Q2DJLZQE = __esm({
     init_dist12();
     init_solid();
     init_web();
-    FORM_CONTROL_PROP_NAMES = ["id", "name", "validationState", "required", "disabled", "readOnly"];
+    FORM_CONTROL_PROP_NAMES = [
+      "id",
+      "name",
+      "validationState",
+      "required",
+      "disabled",
+      "readOnly",
+    ];
     FormControlContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ANN3A2QM.js
@@ -5035,14 +5868,14 @@ function isFormElement(element) {
 var init_ANN3A2QM = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ANN3A2QM.js"() {
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/BLN63FDC.js
 function createControllableSignal(props) {
   const [_value, _setValue] = createSignal(props.defaultValue?.());
   const isControlled = createMemo(() => props.value?.() !== void 0);
-  const value = createMemo(() => isControlled() ? props.value?.() : _value());
+  const value = createMemo(() => (isControlled() ? props.value?.() : _value()));
   const setValue = (next) => {
     untrack(() => {
       const nextValue = accessWith(next, value());
@@ -5071,7 +5904,7 @@ var init_BLN63FDC = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/BLN63FDC.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YGDQXQ2B.js
@@ -5079,7 +5912,7 @@ function createToggleState(props = {}) {
   const [isSelected, _setIsSelected] = createControllableBooleanSignal({
     value: () => access(props.isSelected),
     defaultValue: () => !!access(props.defaultIsSelected),
-    onChange: (value) => props.onSelectedChange?.(value)
+    onChange: (value) => props.onSelectedChange?.(value),
   });
   const setIsSelected = (value) => {
     if (!access(props.isReadOnly) && !access(props.isDisabled)) {
@@ -5094,14 +5927,14 @@ function createToggleState(props = {}) {
   return {
     isSelected,
     setIsSelected,
-    toggle
+    toggle,
   };
 }
 var init_YGDQXQ2B = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YGDQXQ2B.js"() {
     init_BLN63FDC();
     init_dist12();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/5ZKAE4VZ.js
@@ -5113,7 +5946,7 @@ var init_ZKAE4VZ = __esm({
       for (var name in all)
         __defProp2(target, name, { get: all[name], enumerable: true });
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7CVNMTYF.js
@@ -5237,7 +6070,7 @@ function createSortBasedOnDOMPosition(items, setItems) {
 function createDomCollection(props = {}) {
   const [items, setItems] = createControllableArraySignal({
     value: () => access(props.items),
-    onChange: (value) => props.onItemsChange?.(value)
+    onChange: (value) => props.onItemsChange?.(value),
   });
   createSortBasedOnDOMPosition(items, setItems);
   const registerItem = (item) => {
@@ -5262,7 +6095,7 @@ function createDomCollection(props = {}) {
       value: { registerItem },
       get children() {
         return props2.children;
-      }
+      },
     });
   };
   return { DomCollectionProvider };
@@ -5285,7 +6118,7 @@ var init_CVNMTYF = __esm({
     init_dist12();
     init_solid();
     DomCollectionContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/JMA2RWU6.js
@@ -5306,7 +6139,9 @@ function buildNodes(params) {
       return "";
     }
     const _getTextValue = params.getTextValue ?? "textValue";
-    const dataTextValue = isString2(_getTextValue) ? data[_getTextValue] : _getTextValue(data);
+    const dataTextValue = isString2(_getTextValue)
+      ? data[_getTextValue]
+      : _getTextValue(data);
     return dataTextValue != null ? String(dataTextValue) : "";
   };
   const getDisabled = (data) => {
@@ -5314,7 +6149,10 @@ function buildNodes(params) {
       return false;
     }
     const _getDisabled = params.getDisabled ?? "disabled";
-    return (isString2(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) ?? false;
+    return (
+      (isString2(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) ??
+      false
+    );
   };
   const getSectionChildren = (data) => {
     if (data == null) {
@@ -5334,7 +6172,7 @@ function buildNodes(params) {
         textValue: String(data),
         disabled: getDisabled(data),
         level,
-        index
+        index,
       });
       index++;
       continue;
@@ -5350,7 +6188,7 @@ function buildNodes(params) {
         disabled: false,
         // not applicable here
         level,
-        index
+        index,
       });
       index++;
       const sectionChildren = getSectionChildren(data) ?? [];
@@ -5362,7 +6200,7 @@ function buildNodes(params) {
           getDisabled: params.getDisabled,
           getSectionChildren: params.getSectionChildren,
           startIndex: index,
-          startLevel: level + 1
+          startLevel: level + 1,
         });
         nodes.push(...childNodes);
         index += childNodes.length;
@@ -5375,7 +6213,7 @@ function buildNodes(params) {
         textValue: getTextValue(data),
         disabled: getDisabled(data),
         level,
-        index
+        index,
       });
       index++;
     }
@@ -5389,10 +6227,9 @@ function createCollection(props, deps = []) {
       getKey: access(props.getKey),
       getTextValue: access(props.getTextValue),
       getDisabled: access(props.getDisabled),
-      getSectionChildren: access(props.getSectionChildren)
+      getSectionChildren: access(props.getSectionChildren),
     });
-    for (let i2 = 0; i2 < deps.length; i2++)
-      deps[i2]();
+    for (let i2 = 0; i2 < deps.length; i2++) deps[i2]();
     return props.factory(nodes);
   });
 }
@@ -5400,7 +6237,7 @@ var init_JMA2RWU6 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/JMA2RWU6.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/XHJPQEZP.js
@@ -5416,11 +6253,13 @@ function getReadingDirection(locale) {
   return isRTL(locale) ? "rtl" : "ltr";
 }
 function getDefaultLocale() {
-  let locale = typeof navigator !== "undefined" && // @ts-ignore
-  (navigator.language || navigator.userLanguage) || "en-US";
+  let locale =
+    (typeof navigator !== "undefined" && // @ts-ignore
+      (navigator.language || navigator.userLanguage)) ||
+    "en-US";
   return {
     locale,
-    direction: getReadingDirection(locale)
+    direction: getReadingDirection(locale),
   };
 }
 function updateLocale() {
@@ -5432,11 +6271,12 @@ function updateLocale() {
 function createDefaultLocale() {
   const defaultSSRLocale = {
     locale: "en-US",
-    direction: "ltr"
+    direction: "ltr",
   };
-  const [defaultClientLocale, setDefaultClientLocale] = createSignal(currentLocale);
-  const defaultLocale = createMemo(
-    () => isServer ? defaultSSRLocale : defaultClientLocale()
+  const [defaultClientLocale, setDefaultClientLocale] =
+    createSignal(currentLocale);
+  const defaultLocale = createMemo(() =>
+    isServer ? defaultSSRLocale : defaultClientLocale()
   );
   onMount(() => {
     if (listeners.size === 0) {
@@ -5452,7 +6292,7 @@ function createDefaultLocale() {
   });
   return {
     locale: () => defaultLocale().locale,
-    direction: () => defaultLocale().direction
+    direction: () => defaultLocale().direction,
   };
 }
 function useLocale() {
@@ -5463,7 +6303,14 @@ function useLocale() {
 function createCollator(options) {
   const { locale } = useLocale();
   const cacheKey = createMemo(() => {
-    return locale() + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
+    return (
+      locale() +
+      (options
+        ? Object.entries(options)
+            .sort((a2, b2) => (a2[0] < b2[0] ? -1 : 1))
+            .join()
+        : "")
+    );
   });
   return createMemo(() => {
     const key = cacheKey();
@@ -5495,7 +6342,7 @@ var init_XHJPQEZP = __esm({
       "Nkoo",
       "Adlm",
       "Rohg",
-      "Hebr"
+      "Hebr",
     ]);
     RTL_LANGS = /* @__PURE__ */ new Set([
       "ae",
@@ -5516,13 +6363,13 @@ var init_XHJPQEZP = __esm({
       "sd",
       "ug",
       "ur",
-      "yi"
+      "yi",
     ]);
     currentLocale = getDefaultLocale();
     listeners = /* @__PURE__ */ new Set();
     I18nContext = createContext();
     cache = /* @__PURE__ */ new Map();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/H6DSIDEC.js
@@ -5558,7 +6405,7 @@ function createMultipleSelectionState(props) {
   const mergedProps = mergeDefaultProps(
     {
       selectionMode: "none",
-      selectionBehavior: "toggle"
+      selectionBehavior: "toggle",
     },
     props
   );
@@ -5581,19 +6428,30 @@ function createMultipleSelectionState(props) {
   const [selectedKeys, _setSelectedKeys] = createControllableSelectionSignal({
     value: selectedKeysProp,
     defaultValue: defaultSelectedKeys,
-    onChange: (value) => mergedProps.onSelectionChange?.(value)
+    onChange: (value) => mergedProps.onSelectionChange?.(value),
   });
-  const [selectionBehavior, setSelectionBehavior] = createSignal(access(mergedProps.selectionBehavior));
+  const [selectionBehavior, setSelectionBehavior] = createSignal(
+    access(mergedProps.selectionBehavior)
+  );
   const selectionMode = () => access(mergedProps.selectionMode);
-  const disallowEmptySelection = () => access(mergedProps.disallowEmptySelection) ?? false;
+  const disallowEmptySelection = () =>
+    access(mergedProps.disallowEmptySelection) ?? false;
   const setSelectedKeys = (keys2) => {
-    if (access(mergedProps.allowDuplicateSelectionEvents) || !isSameSelection(keys2, selectedKeys())) {
+    if (
+      access(mergedProps.allowDuplicateSelectionEvents) ||
+      !isSameSelection(keys2, selectedKeys())
+    ) {
       _setSelectedKeys(keys2);
     }
   };
   createEffect(() => {
     const selection = selectedKeys();
-    if (access(mergedProps.selectionBehavior) === "replace" && selectionBehavior() === "toggle" && typeof selection === "object" && selection.size === 0) {
+    if (
+      access(mergedProps.selectionBehavior) === "replace" &&
+      selectionBehavior() === "toggle" &&
+      typeof selection === "object" &&
+      selection.size === 0
+    ) {
       setSelectionBehavior("replace");
     }
   });
@@ -5610,7 +6468,7 @@ function createMultipleSelectionState(props) {
     focusedKey,
     setFocusedKey,
     selectedKeys,
-    setSelectedKeys
+    setSelectedKeys,
   };
 }
 function createTypeSelect(props) {
@@ -5634,10 +6492,14 @@ function createTypeSelect(props) {
       e2.stopPropagation();
     }
     let newSearch = setSearch((prev) => prev + character);
-    let key = delegate.getKeyForSearch(newSearch, manager.focusedKey()) ?? delegate.getKeyForSearch(newSearch);
+    let key =
+      delegate.getKeyForSearch(newSearch, manager.focusedKey()) ??
+      delegate.getKeyForSearch(newSearch);
     if (key == null && isAllSameLetter(newSearch)) {
       newSearch = newSearch[0];
-      key = delegate.getKeyForSearch(newSearch, manager.focusedKey()) ?? delegate.getKeyForSearch(newSearch);
+      key =
+        delegate.getKeyForSearch(newSearch, manager.focusedKey()) ??
+        delegate.getKeyForSearch(newSearch);
     }
     if (key != null) {
       manager.setFocusedKey(key);
@@ -5648,8 +6510,8 @@ function createTypeSelect(props) {
   };
   return {
     typeSelectHandlers: {
-      onKeyDown
-    }
+      onKeyDown,
+    },
   };
 }
 function getStringForKey(key) {
@@ -5663,14 +6525,15 @@ function isAllSameLetter(search) {
 }
 function createSelectableCollection(props, ref, scrollRef) {
   const defaultProps = {
-    selectOnFocus: () => access(props.selectionManager).selectionBehavior() === "replace"
+    selectOnFocus: () =>
+      access(props.selectionManager).selectionBehavior() === "replace",
   };
   const mergedProps = mergeProps(defaultProps, props);
   const finalScrollRef = () => ref();
   const { direction } = useLocale();
   let scrollPos = { top: 0, left: 0 };
   createEventListener(
-    () => !access(mergedProps.isVirtualized) ? finalScrollRef() : void 0,
+    () => (!access(mergedProps.isVirtualized) ? finalScrollRef() : void 0),
     "scroll",
     () => {
       const scrollEl = finalScrollRef();
@@ -5679,14 +6542,14 @@ function createSelectableCollection(props, ref, scrollRef) {
       }
       scrollPos = {
         top: scrollEl.scrollTop,
-        left: scrollEl.scrollLeft
+        left: scrollEl.scrollLeft,
       };
     }
   );
   const { typeSelectHandlers } = createTypeSelect({
     isDisabled: () => access(mergedProps.disallowTypeAhead),
     keyboardDelegate: () => access(mergedProps.keyboardDelegate),
-    selectionManager: () => access(mergedProps.selectionManager)
+    selectionManager: () => access(mergedProps.selectionManager),
   });
   const orientation = () => access(mergedProps.orientation) ?? "vertical";
   const onKeyDown = (e2) => {
@@ -5714,7 +6577,7 @@ function createSelectableCollection(props, ref, scrollRef) {
     const shouldFocusWrap = access(mergedProps.shouldFocusWrap);
     const focusedKey = manager.focusedKey();
     switch (e2.key) {
-      case (orientation() === "vertical" ? "ArrowDown" : "ArrowRight"): {
+      case orientation() === "vertical" ? "ArrowDown" : "ArrowRight": {
         if (delegate.getKeyBelow) {
           e2.preventDefault();
           let nextKey;
@@ -5730,7 +6593,7 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowUp" : "ArrowLeft"): {
+      case orientation() === "vertical" ? "ArrowUp" : "ArrowLeft": {
         if (delegate.getKeyAbove) {
           e2.preventDefault();
           let nextKey;
@@ -5746,7 +6609,7 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowLeft" : "ArrowUp"): {
+      case orientation() === "vertical" ? "ArrowLeft" : "ArrowUp": {
         if (delegate.getKeyLeftOf) {
           e2.preventDefault();
           const isRTL3 = direction() === "rtl";
@@ -5754,13 +6617,15 @@ function createSelectableCollection(props, ref, scrollRef) {
           if (focusedKey != null) {
             nextKey = delegate.getKeyLeftOf(focusedKey);
           } else {
-            nextKey = isRTL3 ? delegate.getFirstKey?.() : delegate.getLastKey?.();
+            nextKey = isRTL3
+              ? delegate.getFirstKey?.()
+              : delegate.getLastKey?.();
           }
           navigateToKey(nextKey);
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowRight" : "ArrowDown"): {
+      case orientation() === "vertical" ? "ArrowRight" : "ArrowDown": {
         if (delegate.getKeyRightOf) {
           e2.preventDefault();
           const isRTL3 = direction() === "rtl";
@@ -5768,7 +6633,9 @@ function createSelectableCollection(props, ref, scrollRef) {
           if (focusedKey != null) {
             nextKey = delegate.getKeyRightOf(focusedKey);
           } else {
-            nextKey = isRTL3 ? delegate.getLastKey?.() : delegate.getFirstKey?.();
+            nextKey = isRTL3
+              ? delegate.getLastKey?.()
+              : delegate.getFirstKey?.();
           }
           navigateToKey(nextKey);
         }
@@ -5783,7 +6650,11 @@ function createSelectableCollection(props, ref, scrollRef) {
           );
           if (firstKey != null) {
             manager.setFocusedKey(firstKey);
-            if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === "multiple") {
+            if (
+              isCtrlKeyPressed(e2) &&
+              e2.shiftKey &&
+              manager.selectionMode() === "multiple"
+            ) {
               manager.extendSelection(firstKey);
             } else if (selectOnFocus) {
               manager.replaceSelection(firstKey);
@@ -5797,7 +6668,11 @@ function createSelectableCollection(props, ref, scrollRef) {
           const lastKey = delegate.getLastKey(focusedKey, isCtrlKeyPressed(e2));
           if (lastKey != null) {
             manager.setFocusedKey(lastKey);
-            if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === "multiple") {
+            if (
+              isCtrlKeyPressed(e2) &&
+              e2.shiftKey &&
+              manager.selectionMode() === "multiple"
+            ) {
               manager.extendSelection(lastKey);
             } else if (selectOnFocus) {
               manager.replaceSelection(lastKey);
@@ -5820,7 +6695,11 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       case "a":
-        if (isCtrlKeyPressed(e2) && manager.selectionMode() === "multiple" && access(mergedProps.disallowSelectAll) !== true) {
+        if (
+          isCtrlKeyPressed(e2) &&
+          manager.selectionMode() === "multiple" &&
+          access(mergedProps.disallowSelectAll) !== true
+        ) {
           e2.preventDefault();
           manager.selectAll();
         }
@@ -5881,7 +6760,11 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
       };
       const relatedTarget = e2.relatedTarget;
-      if (relatedTarget && e2.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) {
+      if (
+        relatedTarget &&
+        e2.currentTarget.compareDocumentPosition(relatedTarget) &
+          Node.DOCUMENT_POSITION_FOLLOWING
+      ) {
         navigateToFirstKey(
           manager.lastSelectedKey() ?? delegate.getLastKey?.()
         );
@@ -5937,7 +6820,11 @@ function createSelectableCollection(props, ref, scrollRef) {
     manager.setFocused(true);
     manager.setFocusedKey(focusedKey);
     const refEl = ref();
-    if (refEl && focusedKey == null && !access(mergedProps.shouldUseVirtualFocus)) {
+    if (
+      refEl &&
+      focusedKey == null &&
+      !access(mergedProps.shouldUseVirtualFocus)
+    ) {
       focusWithoutScrolling(refEl);
     }
   };
@@ -5953,7 +6840,7 @@ function createSelectableCollection(props, ref, scrollRef) {
       [
         finalScrollRef,
         () => access(mergedProps.isVirtualized),
-        () => access(mergedProps.selectionManager).focusedKey()
+        () => access(mergedProps.selectionManager).focusedKey(),
       ],
       (newValue) => {
         const [scrollEl, isVirtualized, focusedKey] = newValue;
@@ -5983,7 +6870,7 @@ function createSelectableCollection(props, ref, scrollRef) {
     onKeyDown,
     onMouseDown,
     onFocusIn,
-    onFocusOut
+    onFocusOut,
   };
 }
 function createSelectableItem(props, ref) {
@@ -6002,14 +6889,19 @@ function createSelectableItem(props, ref) {
       }
     } else if (e2?.shiftKey) {
       manager().extendSelection(key());
-    } else if (manager().selectionBehavior() === "toggle" || isCtrlKeyPressed(e2) || "pointerType" in e2 && e2.pointerType === "touch") {
+    } else if (
+      manager().selectionBehavior() === "toggle" ||
+      isCtrlKeyPressed(e2) ||
+      ("pointerType" in e2 && e2.pointerType === "touch")
+    ) {
       manager().toggleSelection(key());
     } else {
       manager().replaceSelection(key());
     }
   };
   const isSelected = () => manager().isSelected(key());
-  const isDisabled = () => access(props.disabled) || manager().isDisabled(key());
+  const isDisabled = () =>
+    access(props.disabled) || manager().isDisabled(key());
   const allowsSelection = () => !isDisabled() && manager().canSelectItem(key());
   let pointerDownType = null;
   const onPointerDown = (e2) => {
@@ -6017,7 +6909,11 @@ function createSelectableItem(props, ref) {
       return;
     }
     pointerDownType = e2.pointerType;
-    if (e2.pointerType === "mouse" && e2.button === 0 && !access(props.shouldSelectOnPressUp)) {
+    if (
+      e2.pointerType === "mouse" &&
+      e2.button === 0 &&
+      !access(props.shouldSelectOnPressUp)
+    ) {
       onSelect(e2);
     }
   };
@@ -6025,7 +6921,12 @@ function createSelectableItem(props, ref) {
     if (!allowsSelection()) {
       return;
     }
-    if (e2.pointerType === "mouse" && e2.button === 0 && access(props.shouldSelectOnPressUp) && access(props.allowsDifferentPressOrigin)) {
+    if (
+      e2.pointerType === "mouse" &&
+      e2.button === 0 &&
+      access(props.shouldSelectOnPressUp) &&
+      access(props.allowsDifferentPressOrigin)
+    ) {
       onSelect(e2);
     }
   };
@@ -6033,7 +6934,11 @@ function createSelectableItem(props, ref) {
     if (!allowsSelection()) {
       return;
     }
-    if (access(props.shouldSelectOnPressUp) && !access(props.allowsDifferentPressOrigin) || pointerDownType !== "mouse") {
+    if (
+      (access(props.shouldSelectOnPressUp) &&
+        !access(props.allowsDifferentPressOrigin)) ||
+      pointerDownType !== "mouse"
+    ) {
       onSelect(e2);
     }
   };
@@ -6077,10 +6982,16 @@ function createSelectableItem(props, ref) {
         key,
         shouldUseVirtualFocus,
         () => manager().focusedKey(),
-        () => manager().isFocused()
+        () => manager().isFocused(),
       ],
       ([refEl, key2, shouldUseVirtualFocus2, focusedKey, isFocused]) => {
-        if (refEl && key2 === focusedKey && isFocused && !shouldUseVirtualFocus2 && document.activeElement !== refEl) {
+        if (
+          refEl &&
+          key2 === focusedKey &&
+          isFocused &&
+          !shouldUseVirtualFocus2 &&
+          document.activeElement !== refEl
+        ) {
           if (props.focus) {
             props.focus();
           } else {
@@ -6101,13 +7012,15 @@ function createSelectableItem(props, ref) {
     onClick,
     onKeyDown,
     onMouseDown,
-    onFocus
+    onFocus,
   };
 }
 function createListState(props) {
   const selectionState = createMultipleSelectionState(props);
   const factory = (nodes) => {
-    return props.filter ? new ListCollection(props.filter(nodes)) : new ListCollection(nodes);
+    return props.filter
+      ? new ListCollection(props.filter(nodes))
+      : new ListCollection(nodes);
   };
   const collection = createCollection(
     {
@@ -6116,7 +7029,7 @@ function createListState(props) {
       getTextValue: () => access(props.getTextValue),
       getDisabled: () => access(props.getDisabled),
       getSectionChildren: () => access(props.getSectionChildren),
-      factory
+      factory,
     },
     [() => props.filter]
   );
@@ -6129,7 +7042,7 @@ function createListState(props) {
   });
   return {
     collection,
-    selectionManager: () => selectionManager
+    selectionManager: () => selectionManager,
   };
 }
 var Selection, SelectionManager, ListCollection;
@@ -6226,7 +7139,10 @@ var init_H6DSIDEC = __esm({
         let first;
         for (const key of this.state.selectedKeys()) {
           const item = this.collection().getItem(key);
-          const isItemBeforeFirst = item?.index != null && first?.index != null && item.index < first.index;
+          const isItemBeforeFirst =
+            item?.index != null &&
+            first?.index != null &&
+            item.index < first.index;
           if (!first || isItemBeforeFirst) {
             first = item;
           }
@@ -6237,7 +7153,10 @@ var init_H6DSIDEC = __esm({
         let last;
         for (const key of this.state.selectedKeys()) {
           const item = this.collection().getItem(key);
-          const isItemAfterLast = item?.index != null && last?.index != null && item.index > last.index;
+          const isItemAfterLast =
+            item?.index != null &&
+            last?.index != null &&
+            item.index > last.index;
           if (!last || isItemAfterLast) {
             last = item;
           }
@@ -6259,7 +7178,11 @@ var init_H6DSIDEC = __esm({
         }
         const selectedKeys = this.state.selectedKeys();
         const anchorKey = selectedKeys.anchorKey || retrievedToKey;
-        const selection = new Selection(selectedKeys, anchorKey, retrievedToKey);
+        const selection = new Selection(
+          selectedKeys,
+          anchorKey,
+          retrievedToKey
+        );
         for (const key of this.getKeyRange(
           anchorKey,
           selectedKeys.currentKey || retrievedToKey
@@ -6277,7 +7200,11 @@ var init_H6DSIDEC = __esm({
         const fromItem = this.collection().getItem(from);
         const toItem = this.collection().getItem(to);
         if (fromItem && toItem) {
-          if (fromItem.index != null && toItem.index != null && fromItem.index <= toItem.index) {
+          if (
+            fromItem.index != null &&
+            toItem.index != null &&
+            fromItem.index <= toItem.index
+          ) {
             return this.getKeyRangeInternal(from, to);
           }
           return this.getKeyRangeInternal(to, from);
@@ -6344,7 +7271,9 @@ var init_H6DSIDEC = __esm({
         if (retrievedKey == null) {
           return;
         }
-        const selection = this.canSelectItem(retrievedKey) ? new Selection([retrievedKey], retrievedKey, retrievedKey) : new Selection();
+        const selection = this.canSelectItem(retrievedKey)
+          ? new Selection([retrievedKey], retrievedKey, retrievedKey)
+          : new Selection();
         this.state.setSelectedKeys(selection);
       }
       /** Replaces the selection with the given keys. */
@@ -6399,7 +7328,10 @@ var init_H6DSIDEC = __esm({
           } else {
             this.replaceSelection(key);
           }
-        } else if (this.selectionBehavior() === "toggle" || e2 && e2.pointerType === "touch") {
+        } else if (
+          this.selectionBehavior() === "toggle" ||
+          (e2 && e2.pointerType === "touch")
+        ) {
           this.toggleSelection(key);
         } else {
           this.replaceSelection(key);
@@ -6517,22 +7449,22 @@ var init_H6DSIDEC = __esm({
         return this.getItem(keys2[idx]);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/ZV6G25TT.js
 var access2;
 var init_ZV6G25TT = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/ZV6G25TT.js"() {
-    access2 = (v) => typeof v === "function" ? v() : v;
-  }
+    access2 = (v) => (typeof v === "function" ? v() : v);
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/reactivity/index.js
 var init_reactivity = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/reactivity/index.js"() {
     init_ZV6G25TT();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-presence@0.1.7_solid-js@1.9.5/node_modules/solid-presence/dist/index.js
@@ -6550,7 +7482,9 @@ var init_dist13 = __esm({
       const getAnimationName = () => {
         return refStyles()?.animationName ?? "none";
       };
-      const [presentState, setPresentState] = createSignal(access2(props.show) ? "present" : "hidden");
+      const [presentState, setPresentState] = createSignal(
+        access2(props.show) ? "present" : "hidden"
+      );
       let animationName = "none";
       createEffect((prevShow) => {
         const show = access2(props.show);
@@ -6560,7 +7494,10 @@ var init_dist13 = __esm({
           const currentAnimationName = getAnimationName();
           if (show) {
             setPresentState("present");
-          } else if (currentAnimationName === "none" || refStyles()?.display === "none") {
+          } else if (
+            currentAnimationName === "none" ||
+            refStyles()?.display === "none"
+          ) {
             setPresentState("hidden");
           } else {
             const isAnimating = prevAnimationName !== currentAnimationName;
@@ -6586,7 +7523,11 @@ var init_dist13 = __esm({
           const isCurrentAnimation = currentAnimationName.includes(
             event.animationName
           );
-          if (event.target === element && isCurrentAnimation && presentState() === "hiding") {
+          if (
+            event.target === element &&
+            isCurrentAnimation &&
+            presentState() === "hiding"
+          ) {
             setPresentState("hidden");
           }
         };
@@ -6600,13 +7541,14 @@ var init_dist13 = __esm({
         });
       });
       return {
-        present: () => presentState() === "present" || presentState() === "hiding",
-        state: presentState
+        present: () =>
+          presentState() === "present" || presentState() === "hiding",
+        state: presentState,
       };
     };
     presence_default = createPresence;
     src_default = presence_default;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ZKYDDHM6.js
@@ -6643,10 +7585,10 @@ function removeLayer(node) {
   layers.splice(index, 1);
 }
 function assignPointerEventToLayers() {
-  for (const {
-    node
-  } of layers) {
-    node.style.pointerEvents = isBelowPointerBlockingLayer(node) ? "none" : "auto";
+  for (const { node } of layers) {
+    node.style.pointerEvents = isBelowPointerBlockingLayer(node)
+      ? "none"
+      : "auto";
   }
 }
 function disableBodyPointerEvents(node) {
@@ -6668,7 +7610,11 @@ function restoreBodyPointerEvents(node) {
   }
   hasDisabledBodyPointerEvents = false;
 }
-var DATA_TOP_LAYER_ATTR, originalBodyPointerEvents, hasDisabledBodyPointerEvents, layers, layerStack;
+var DATA_TOP_LAYER_ATTR,
+  originalBodyPointerEvents,
+  hasDisabledBodyPointerEvents,
+  layers,
+  layerStack;
 var init_ZKYDDHM6 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ZKYDDHM6.js"() {
     init_dist12();
@@ -6686,9 +7632,9 @@ var init_ZKYDDHM6 = __esm({
       find: find2,
       assignPointerEventToLayers,
       disableBodyPointerEvents,
-      restoreBodyPointerEvents
+      restoreBodyPointerEvents,
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7OVKXYPU.js
@@ -6704,11 +7650,17 @@ function isButton(element) {
 }
 function ButtonRoot(props) {
   let ref;
-  const mergedProps = mergeDefaultProps({
-    type: "button"
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      type: "button",
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "type", "disabled"]);
-  const tagName = createTagName(() => ref, () => "button");
+  const tagName = createTagName(
+    () => ref,
+    () => "button"
+  );
   const isNativeButton = createMemo(() => {
     const elementTagName = tagName();
     if (elementTagName == null) {
@@ -6716,7 +7668,7 @@ function ButtonRoot(props) {
     }
     return isButton({
       tagName: elementTagName,
-      type: local.type
+      type: local.type,
     });
   });
   const isNativeInput = createMemo(() => {
@@ -6725,31 +7677,41 @@ function ButtonRoot(props) {
   const isNativeLink = createMemo(() => {
     return tagName() === "a" && ref?.getAttribute("href") != null;
   });
-  return createComponent(Polymorphic, mergeProps({
-    as: "button",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get type() {
-      return isNativeButton() || isNativeInput() ? local.type : void 0;
-    },
-    get role() {
-      return !isNativeButton() && !isNativeLink() ? "button" : void 0;
-    },
-    get tabIndex() {
-      return !isNativeButton() && !isNativeLink() && !local.disabled ? 0 : void 0;
-    },
-    get disabled() {
-      return isNativeButton() || isNativeInput() ? local.disabled : void 0;
-    },
-    get ["aria-disabled"]() {
-      return !isNativeButton() && !isNativeInput() && local.disabled ? true : void 0;
-    },
-    get ["data-disabled"]() {
-      return local.disabled ? "" : void 0;
-    }
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "button",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get type() {
+          return isNativeButton() || isNativeInput() ? local.type : void 0;
+        },
+        get role() {
+          return !isNativeButton() && !isNativeLink() ? "button" : void 0;
+        },
+        get tabIndex() {
+          return !isNativeButton() && !isNativeLink() && !local.disabled
+            ? 0
+            : void 0;
+        },
+        get disabled() {
+          return isNativeButton() || isNativeInput() ? local.disabled : void 0;
+        },
+        get ["aria-disabled"]() {
+          return !isNativeButton() && !isNativeInput() && local.disabled
+            ? true
+            : void 0;
+        },
+        get ["data-disabled"]() {
+          return local.disabled ? "" : void 0;
+        },
+      },
+      others
+    )
+  );
 }
 var button_exports, BUTTON_INPUT_TYPES, Button;
 var init_OVKXYPU = __esm({
@@ -6763,7 +7725,7 @@ var init_OVKXYPU = __esm({
     button_exports = {};
     __export2(button_exports, {
       Button: () => Button,
-      Root: () => ButtonRoot
+      Root: () => ButtonRoot,
     });
     BUTTON_INPUT_TYPES = [
       "button",
@@ -6771,10 +7733,10 @@ var init_OVKXYPU = __esm({
       "file",
       "image",
       "reset",
-      "submit"
+      "submit",
     ];
     Button = ButtonRoot;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
@@ -6809,7 +7771,14 @@ function getAlignmentSides(placement, rects, rtl) {
   const alignment = getAlignment(placement);
   const alignmentAxis = getAlignmentAxis(placement);
   const length = getAxisLength(alignmentAxis);
-  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
+  let mainAlignmentSide =
+    alignmentAxis === "x"
+      ? alignment === (rtl ? "end" : "start")
+        ? "right"
+        : "left"
+      : alignment === "start"
+      ? "bottom"
+      : "top";
   if (rects.reference[length] > rects.floating[length]) {
     mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
   }
@@ -6817,10 +7786,17 @@ function getAlignmentSides(placement, rects, rtl) {
 }
 function getExpandedPlacements(placement) {
   const oppositePlacement = getOppositePlacement(placement);
-  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
+  return [
+    getOppositeAlignmentPlacement(placement),
+    oppositePlacement,
+    getOppositeAlignmentPlacement(oppositePlacement),
+  ];
 }
 function getOppositeAlignmentPlacement(placement) {
-  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
+  return placement.replace(
+    /start|end/g,
+    (alignment) => oppositeAlignmentMap[alignment]
+  );
 }
 function getSideList(side, isStart, rtl) {
   const lr = ["left", "right"];
@@ -6851,7 +7827,10 @@ function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
   return list;
 }
 function getOppositePlacement(placement) {
-  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
+  return placement.replace(
+    /left|right|bottom|top/g,
+    (side) => oppositeSideMap[side]
+  );
 }
 function expandPaddingObject(padding) {
   return {
@@ -6859,24 +7838,21 @@ function expandPaddingObject(padding) {
     right: 0,
     bottom: 0,
     left: 0,
-    ...padding
+    ...padding,
   };
 }
 function getPaddingObject(padding) {
-  return typeof padding !== "number" ? expandPaddingObject(padding) : {
-    top: padding,
-    right: padding,
-    bottom: padding,
-    left: padding
-  };
+  return typeof padding !== "number"
+    ? expandPaddingObject(padding)
+    : {
+        top: padding,
+        right: padding,
+        bottom: padding,
+        left: padding,
+      };
 }
 function rectToClientRect(rect) {
-  const {
-    x,
-    y,
-    width,
-    height
-  } = rect;
+  const { x, y, width, height } = rect;
   return {
     width,
     height,
@@ -6885,10 +7861,17 @@ function rectToClientRect(rect) {
     right: x + width,
     bottom: y + height,
     x,
-    y
+    y,
   };
 }
-var sides, min, max, round, floor, createCoords, oppositeSideMap, oppositeAlignmentMap;
+var sides,
+  min,
+  max,
+  round,
+  floor,
+  createCoords,
+  oppositeSideMap,
+  oppositeAlignmentMap;
 var init_floating_ui_utils = __esm({
   "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"() {
     sides = ["top", "right", "bottom", "left"];
@@ -6898,27 +7881,24 @@ var init_floating_ui_utils = __esm({
     floor = Math.floor;
     createCoords = (v) => ({
       x: v,
-      y: v
+      y: v,
     });
     oppositeSideMap = {
       left: "right",
       right: "left",
       bottom: "top",
-      top: "bottom"
+      top: "bottom",
     };
     oppositeAlignmentMap = {
       start: "end",
-      end: "start"
+      end: "start",
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+core@1.6.5/node_modules/@floating-ui/core/dist/floating-ui.core.mjs
 function computeCoordsFromPlacement(_ref, placement, rtl) {
-  let {
-    reference,
-    floating
-  } = _ref;
+  let { reference, floating } = _ref;
   const sideAxis = getSideAxis(placement);
   const alignmentAxis = getAlignmentAxis(placement);
   const alignLength = getAxisLength(alignmentAxis);
@@ -6932,31 +7912,31 @@ function computeCoordsFromPlacement(_ref, placement, rtl) {
     case "top":
       coords = {
         x: commonX,
-        y: reference.y - floating.height
+        y: reference.y - floating.height,
       };
       break;
     case "bottom":
       coords = {
         x: commonX,
-        y: reference.y + reference.height
+        y: reference.y + reference.height,
       };
       break;
     case "right":
       coords = {
         x: reference.x + reference.width,
-        y: commonY
+        y: commonY,
       };
       break;
     case "left":
       coords = {
         x: reference.x - floating.width,
-        y: commonY
+        y: commonY,
       };
       break;
     default:
       coords = {
         x: reference.x,
-        y: reference.y
+        y: reference.y,
       };
   }
   switch (getAlignment(placement)) {
@@ -6974,55 +7954,88 @@ async function detectOverflow(state, options) {
   if (options === void 0) {
     options = {};
   }
-  const {
-    x,
-    y,
-    platform: platform2,
-    rects,
-    elements,
-    strategy
-  } = state;
+  const { x, y, platform: platform2, rects, elements, strategy } = state;
   const {
     boundary = "clippingAncestors",
     rootBoundary = "viewport",
     elementContext = "floating",
     altBoundary = false,
-    padding = 0
+    padding = 0,
   } = evaluate(options, state);
   const paddingObject = getPaddingObject(padding);
   const altContext = elementContext === "floating" ? "reference" : "floating";
   const element = elements[altBoundary ? altContext : elementContext];
-  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
-    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
-    boundary,
-    rootBoundary,
-    strategy
-  }));
-  const rect = elementContext === "floating" ? {
-    x,
-    y,
-    width: rects.floating.width,
-    height: rects.floating.height
-  } : rects.reference;
-  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
-  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
-    x: 1,
-    y: 1
-  } : {
-    x: 1,
-    y: 1
-  };
-  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
-    elements,
-    rect,
-    offsetParent,
-    strategy
-  }) : rect);
+  const clippingClientRect = rectToClientRect(
+    await platform2.getClippingRect({
+      element: (
+        (_await$platform$isEle = await (platform2.isElement == null
+          ? void 0
+          : platform2.isElement(element))) != null
+          ? _await$platform$isEle
+          : true
+      )
+        ? element
+        : element.contextElement ||
+          (await (platform2.getDocumentElement == null
+            ? void 0
+            : platform2.getDocumentElement(elements.floating))),
+      boundary,
+      rootBoundary,
+      strategy,
+    })
+  );
+  const rect =
+    elementContext === "floating"
+      ? {
+          x,
+          y,
+          width: rects.floating.width,
+          height: rects.floating.height,
+        }
+      : rects.reference;
+  const offsetParent = await (platform2.getOffsetParent == null
+    ? void 0
+    : platform2.getOffsetParent(elements.floating));
+  const offsetScale = (await (platform2.isElement == null
+    ? void 0
+    : platform2.isElement(offsetParent)))
+    ? (await (platform2.getScale == null
+        ? void 0
+        : platform2.getScale(offsetParent))) || {
+        x: 1,
+        y: 1,
+      }
+    : {
+        x: 1,
+        y: 1,
+      };
+  const elementClientRect = rectToClientRect(
+    platform2.convertOffsetParentRelativeRectToViewportRelativeRect
+      ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
+          elements,
+          rect,
+          offsetParent,
+          strategy,
+        })
+      : rect
+  );
   return {
-    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
-    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
-    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
-    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
+    top:
+      (clippingClientRect.top - elementClientRect.top + paddingObject.top) /
+      offsetScale.y,
+    bottom:
+      (elementClientRect.bottom -
+        clippingClientRect.bottom +
+        paddingObject.bottom) /
+      offsetScale.y,
+    left:
+      (clippingClientRect.left - elementClientRect.left + paddingObject.left) /
+      offsetScale.x,
+    right:
+      (elementClientRect.right -
+        clippingClientRect.right +
+        paddingObject.right) /
+      offsetScale.x,
   };
 }
 function getSideOffsets(overflow, rect) {
@@ -7030,49 +8043,48 @@ function getSideOffsets(overflow, rect) {
     top: overflow.top - rect.height,
     right: overflow.right - rect.width,
     bottom: overflow.bottom - rect.height,
-    left: overflow.left - rect.width
+    left: overflow.left - rect.width,
   };
 }
 function isAnySideFullyClipped(overflow) {
   return sides.some((side) => overflow[side] >= 0);
 }
 async function convertValueToCoords(state, options) {
-  const {
-    placement,
-    platform: platform2,
-    elements
-  } = state;
-  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
+  const { placement, platform: platform2, elements } = state;
+  const rtl = await (platform2.isRTL == null
+    ? void 0
+    : platform2.isRTL(elements.floating));
   const side = getSide(placement);
   const alignment = getAlignment(placement);
   const isVertical = getSideAxis(placement) === "y";
   const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
   const crossAxisMulti = rtl && isVertical ? -1 : 1;
   const rawValue = evaluate(options, state);
-  let {
-    mainAxis,
-    crossAxis,
-    alignmentAxis
-  } = typeof rawValue === "number" ? {
-    mainAxis: rawValue,
-    crossAxis: 0,
-    alignmentAxis: null
-  } : {
-    mainAxis: 0,
-    crossAxis: 0,
-    alignmentAxis: null,
-    ...rawValue
-  };
+  let { mainAxis, crossAxis, alignmentAxis } =
+    typeof rawValue === "number"
+      ? {
+          mainAxis: rawValue,
+          crossAxis: 0,
+          alignmentAxis: null,
+        }
+      : {
+          mainAxis: 0,
+          crossAxis: 0,
+          alignmentAxis: null,
+          ...rawValue,
+        };
   if (alignment && typeof alignmentAxis === "number") {
     crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
   }
-  return isVertical ? {
-    x: crossAxis * crossAxisMulti,
-    y: mainAxis * mainAxisMulti
-  } : {
-    x: mainAxis * mainAxisMulti,
-    y: crossAxis * crossAxisMulti
-  };
+  return isVertical
+    ? {
+        x: crossAxis * crossAxisMulti,
+        y: mainAxis * mainAxisMulti,
+      }
+    : {
+        x: mainAxis * mainAxisMulti,
+        y: crossAxis * crossAxisMulti,
+      };
 }
 var computePosition, arrow, flip, hide, offset, shift, size;
 var init_floating_ui_core = __esm({
@@ -7084,32 +8096,28 @@ var init_floating_ui_core = __esm({
         placement = "bottom",
         strategy = "absolute",
         middleware = [],
-        platform: platform2
+        platform: platform2,
       } = config;
       const validMiddleware = middleware.filter(Boolean);
-      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
+      const rtl = await (platform2.isRTL == null
+        ? void 0
+        : platform2.isRTL(floating));
       let rects = await platform2.getElementRects({
         reference,
         floating,
-        strategy
+        strategy,
       });
-      let {
-        x,
-        y
-      } = computeCoordsFromPlacement(rects, placement, rtl);
+      let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);
       let statefulPlacement = placement;
       let middlewareData = {};
       let resetCount = 0;
       for (let i2 = 0; i2 < validMiddleware.length; i2++) {
-        const {
-          name,
-          fn
-        } = validMiddleware[i2];
+        const { name, fn } = validMiddleware[i2];
         const {
           x: nextX,
           y: nextY,
           data,
-          reset: reset2
+          reset: reset2,
         } = await fn({
           x,
           y,
@@ -7121,8 +8129,8 @@ var init_floating_ui_core = __esm({
           platform: platform2,
           elements: {
             reference,
-            floating
-          }
+            floating,
+          },
         });
         x = nextX != null ? nextX : x;
         y = nextY != null ? nextY : y;
@@ -7130,8 +8138,8 @@ var init_floating_ui_core = __esm({
           ...middlewareData,
           [name]: {
             ...middlewareData[name],
-            ...data
-          }
+            ...data,
+          },
         };
         if (reset2 && resetCount <= 50) {
           resetCount++;
@@ -7140,16 +8148,20 @@ var init_floating_ui_core = __esm({
               statefulPlacement = reset2.placement;
             }
             if (reset2.rects) {
-              rects = reset2.rects === true ? await platform2.getElementRects({
-                reference,
-                floating,
-                strategy
-              }) : reset2.rects;
+              rects =
+                reset2.rects === true
+                  ? await platform2.getElementRects({
+                      reference,
+                      floating,
+                      strategy,
+                    })
+                  : reset2.rects;
             }
-            ({
-              x,
-              y
-            } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
+            ({ x, y } = computeCoordsFromPlacement(
+              rects,
+              statefulPlacement,
+              rtl
+            ));
           }
           i2 = -1;
         }
@@ -7159,7 +8171,7 @@ var init_floating_ui_core = __esm({
         y,
         placement: statefulPlacement,
         strategy,
-        middlewareData
+        middlewareData,
       };
     };
     arrow = (options) => ({
@@ -7173,19 +8185,16 @@ var init_floating_ui_core = __esm({
           rects,
           platform: platform2,
           elements,
-          middlewareData
+          middlewareData,
         } = state;
-        const {
-          element,
-          padding = 0
-        } = evaluate(options, state) || {};
+        const { element, padding = 0 } = evaluate(options, state) || {};
         if (element == null) {
           return {};
         }
         const paddingObject = getPaddingObject(padding);
         const coords = {
           x,
-          y
+          y,
         };
         const axis = getAlignmentAxis(placement);
         const length = getAxisLength(axis);
@@ -7194,37 +8203,61 @@ var init_floating_ui_core = __esm({
         const minProp = isYAxis ? "top" : "left";
         const maxProp = isYAxis ? "bottom" : "right";
         const clientProp = isYAxis ? "clientHeight" : "clientWidth";
-        const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
+        const endDiff =
+          rects.reference[length] +
+          rects.reference[axis] -
+          coords[axis] -
+          rects.floating[length];
         const startDiff = coords[axis] - rects.reference[axis];
-        const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
+        const arrowOffsetParent = await (platform2.getOffsetParent == null
+          ? void 0
+          : platform2.getOffsetParent(element));
         let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
-        if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
+        if (
+          !clientSize ||
+          !(await (platform2.isElement == null
+            ? void 0
+            : platform2.isElement(arrowOffsetParent)))
+        ) {
           clientSize = elements.floating[clientProp] || rects.floating[length];
         }
         const centerToReference = endDiff / 2 - startDiff / 2;
-        const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
+        const largestPossiblePadding =
+          clientSize / 2 - arrowDimensions[length] / 2 - 1;
         const minPadding = min(paddingObject[minProp], largestPossiblePadding);
         const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
         const min$1 = minPadding;
         const max2 = clientSize - arrowDimensions[length] - maxPadding;
-        const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
+        const center =
+          clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
         const offset3 = clamp2(min$1, center, max2);
-        const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset3 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
-        const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
+        const shouldAddOffset =
+          !middlewareData.arrow &&
+          getAlignment(placement) != null &&
+          center !== offset3 &&
+          rects.reference[length] / 2 -
+            (center < min$1 ? minPadding : maxPadding) -
+            arrowDimensions[length] / 2 <
+            0;
+        const alignmentOffset = shouldAddOffset
+          ? center < min$1
+            ? center - min$1
+            : center - max2
+          : 0;
         return {
           [axis]: coords[axis] + alignmentOffset,
           data: {
             [axis]: offset3,
             centerOffset: center - offset3 - alignmentOffset,
-            ...shouldAddOffset && {
-              alignmentOffset
-            }
+            ...(shouldAddOffset && {
+              alignmentOffset,
+            }),
           },
-          reset: shouldAddOffset
+          reset: shouldAddOffset,
         };
-      }
+      },
     });
-    flip = function(options) {
+    flip = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7239,7 +8272,7 @@ var init_floating_ui_core = __esm({
             rects,
             initialPlacement,
             platform: platform2,
-            elements
+            elements,
           } = state;
           const {
             mainAxis: checkMainAxis = true,
@@ -7250,22 +8283,43 @@ var init_floating_ui_core = __esm({
             flipAlignment = true,
             ...detectOverflowOptions
           } = evaluate(options, state);
-          if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
+          if (
+            (_middlewareData$arrow = middlewareData.arrow) != null &&
+            _middlewareData$arrow.alignmentOffset
+          ) {
             return {};
           }
           const side = getSide(placement);
           const initialSideAxis = getSideAxis(initialPlacement);
-          const isBasePlacement = getSide(initialPlacement) === initialPlacement;
-          const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
-          const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
-          const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
+          const isBasePlacement =
+            getSide(initialPlacement) === initialPlacement;
+          const rtl = await (platform2.isRTL == null
+            ? void 0
+            : platform2.isRTL(elements.floating));
+          const fallbackPlacements =
+            specifiedFallbackPlacements ||
+            (isBasePlacement || !flipAlignment
+              ? [getOppositePlacement(initialPlacement)]
+              : getExpandedPlacements(initialPlacement));
+          const hasFallbackAxisSideDirection =
+            fallbackAxisSideDirection !== "none";
           if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
-            fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
+            fallbackPlacements.push(
+              ...getOppositeAxisPlacements(
+                initialPlacement,
+                flipAlignment,
+                fallbackAxisSideDirection,
+                rtl
+              )
+            );
           }
           const placements2 = [initialPlacement, ...fallbackPlacements];
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const overflows = [];
-          let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
+          let overflowsData =
+            ((_middlewareData$flip = middlewareData.flip) == null
+              ? void 0
+              : _middlewareData$flip.overflows) || [];
           if (checkMainAxis) {
             overflows.push(overflow[side]);
           }
@@ -7273,39 +8327,63 @@ var init_floating_ui_core = __esm({
             const sides2 = getAlignmentSides(placement, rects, rtl);
             overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
           }
-          overflowsData = [...overflowsData, {
-            placement,
-            overflows
-          }];
+          overflowsData = [
+            ...overflowsData,
+            {
+              placement,
+              overflows,
+            },
+          ];
           if (!overflows.every((side2) => side2 <= 0)) {
             var _middlewareData$flip2, _overflowsData$filter;
-            const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
+            const nextIndex =
+              (((_middlewareData$flip2 = middlewareData.flip) == null
+                ? void 0
+                : _middlewareData$flip2.index) || 0) + 1;
             const nextPlacement = placements2[nextIndex];
             if (nextPlacement) {
               return {
                 data: {
                   index: nextIndex,
-                  overflows: overflowsData
+                  overflows: overflowsData,
                 },
                 reset: {
-                  placement: nextPlacement
-                }
+                  placement: nextPlacement,
+                },
               };
             }
-            let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
+            let resetPlacement =
+              (_overflowsData$filter = overflowsData
+                .filter((d) => d.overflows[0] <= 0)
+                .sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null
+                ? void 0
+                : _overflowsData$filter.placement;
             if (!resetPlacement) {
               switch (fallbackStrategy) {
                 case "bestFit": {
                   var _overflowsData$filter2;
-                  const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
-                    if (hasFallbackAxisSideDirection) {
-                      const currentSideAxis = getSideAxis(d.placement);
-                      return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
-                      // reading directions favoring greater width.
-                      currentSideAxis === "y";
-                    }
-                    return true;
-                  }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b2) => a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
+                  const placement2 =
+                    (_overflowsData$filter2 = overflowsData
+                      .filter((d) => {
+                        if (hasFallbackAxisSideDirection) {
+                          const currentSideAxis = getSideAxis(d.placement);
+                          return (
+                            currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
+                            // reading directions favoring greater width.
+                            currentSideAxis === "y"
+                          );
+                        }
+                        return true;
+                      })
+                      .map((d) => [
+                        d.placement,
+                        d.overflows
+                          .filter((overflow2) => overflow2 > 0)
+                          .reduce((acc, overflow2) => acc + overflow2, 0),
+                      ])
+                      .sort((a2, b2) => a2[1] - b2[1])[0]) == null
+                      ? void 0
+                      : _overflowsData$filter2[0];
                   if (placement2) {
                     resetPlacement = placement2;
                   }
@@ -7319,16 +8397,16 @@ var init_floating_ui_core = __esm({
             if (placement !== resetPlacement) {
               return {
                 reset: {
-                  placement: resetPlacement
-                }
+                  placement: resetPlacement,
+                },
               };
             }
           }
           return {};
-        }
+        },
       };
     };
-    hide = function(options) {
+    hide = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7336,48 +8414,44 @@ var init_floating_ui_core = __esm({
         name: "hide",
         options,
         async fn(state) {
-          const {
-            rects
-          } = state;
-          const {
-            strategy = "referenceHidden",
-            ...detectOverflowOptions
-          } = evaluate(options, state);
+          const { rects } = state;
+          const { strategy = "referenceHidden", ...detectOverflowOptions } =
+            evaluate(options, state);
           switch (strategy) {
             case "referenceHidden": {
               const overflow = await detectOverflow(state, {
                 ...detectOverflowOptions,
-                elementContext: "reference"
+                elementContext: "reference",
               });
               const offsets = getSideOffsets(overflow, rects.reference);
               return {
                 data: {
                   referenceHiddenOffsets: offsets,
-                  referenceHidden: isAnySideFullyClipped(offsets)
-                }
+                  referenceHidden: isAnySideFullyClipped(offsets),
+                },
               };
             }
             case "escaped": {
               const overflow = await detectOverflow(state, {
                 ...detectOverflowOptions,
-                altBoundary: true
+                altBoundary: true,
               });
               const offsets = getSideOffsets(overflow, rects.floating);
               return {
                 data: {
                   escapedOffsets: offsets,
-                  escaped: isAnySideFullyClipped(offsets)
-                }
+                  escaped: isAnySideFullyClipped(offsets),
+                },
               };
             }
             default: {
               return {};
             }
           }
-        }
+        },
       };
     };
-    offset = function(options) {
+    offset = function (options) {
       if (options === void 0) {
         options = 0;
       }
@@ -7386,14 +8460,16 @@ var init_floating_ui_core = __esm({
         options,
         async fn(state) {
           var _middlewareData$offse, _middlewareData$arrow;
-          const {
-            x,
-            y,
-            placement,
-            middlewareData
-          } = state;
+          const { x, y, placement, middlewareData } = state;
           const diffCoords = await convertValueToCoords(state, options);
-          if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
+          if (
+            placement ===
+              ((_middlewareData$offse = middlewareData.offset) == null
+                ? void 0
+                : _middlewareData$offse.placement) &&
+            (_middlewareData$arrow = middlewareData.arrow) != null &&
+            _middlewareData$arrow.alignmentOffset
+          ) {
             return {};
           }
           return {
@@ -7401,13 +8477,13 @@ var init_floating_ui_core = __esm({
             y: y + diffCoords.y,
             data: {
               ...diffCoords,
-              placement
-            }
+              placement,
+            },
           };
-        }
+        },
       };
     };
-    shift = function(options) {
+    shift = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7415,31 +8491,24 @@ var init_floating_ui_core = __esm({
         name: "shift",
         options,
         async fn(state) {
-          const {
-            x,
-            y,
-            placement
-          } = state;
+          const { x, y, placement } = state;
           const {
             mainAxis: checkMainAxis = true,
             crossAxis: checkCrossAxis = false,
             limiter = {
               fn: (_ref) => {
-                let {
-                  x: x2,
-                  y: y2
-                } = _ref;
+                let { x: x2, y: y2 } = _ref;
                 return {
                   x: x2,
-                  y: y2
+                  y: y2,
                 };
-              }
+              },
             },
             ...detectOverflowOptions
           } = evaluate(options, state);
           const coords = {
             x,
-            y
+            y,
           };
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const crossAxis = getSideAxis(getSide(placement));
@@ -7463,19 +8532,19 @@ var init_floating_ui_core = __esm({
           const limitedCoords = limiter.fn({
             ...state,
             [mainAxis]: mainAxisCoord,
-            [crossAxis]: crossAxisCoord
+            [crossAxis]: crossAxisCoord,
           });
           return {
             ...limitedCoords,
             data: {
               x: limitedCoords.x - x,
-              y: limitedCoords.y - y
-            }
+              y: limitedCoords.y - y,
+            },
           };
-        }
+        },
       };
     };
-    size = function(options) {
+    size = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7483,45 +8552,56 @@ var init_floating_ui_core = __esm({
         name: "size",
         options,
         async fn(state) {
-          const {
-            placement,
-            rects,
-            platform: platform2,
-            elements
-          } = state;
-          const {
-            apply = () => {
-            },
-            ...detectOverflowOptions
-          } = evaluate(options, state);
+          const { placement, rects, platform: platform2, elements } = state;
+          const { apply = () => {}, ...detectOverflowOptions } = evaluate(
+            options,
+            state
+          );
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const side = getSide(placement);
           const alignment = getAlignment(placement);
           const isYAxis = getSideAxis(placement) === "y";
-          const {
-            width,
-            height
-          } = rects.floating;
+          const { width, height } = rects.floating;
           let heightSide;
           let widthSide;
           if (side === "top" || side === "bottom") {
             heightSide = side;
-            widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
+            widthSide =
+              alignment ===
+              ((await (platform2.isRTL == null
+                ? void 0
+                : platform2.isRTL(elements.floating)))
+                ? "start"
+                : "end")
+                ? "left"
+                : "right";
           } else {
             widthSide = side;
             heightSide = alignment === "end" ? "top" : "bottom";
           }
           const maximumClippingHeight = height - overflow.top - overflow.bottom;
           const maximumClippingWidth = width - overflow.left - overflow.right;
-          const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
-          const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
+          const overflowAvailableHeight = min(
+            height - overflow[heightSide],
+            maximumClippingHeight
+          );
+          const overflowAvailableWidth = min(
+            width - overflow[widthSide],
+            maximumClippingWidth
+          );
           const noShift = !state.middlewareData.shift;
           let availableHeight = overflowAvailableHeight;
           let availableWidth = overflowAvailableWidth;
           if (isYAxis) {
-            availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
+            availableWidth =
+              alignment || noShift
+                ? min(overflowAvailableWidth, maximumClippingWidth)
+                : maximumClippingWidth;
           } else {
-            availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
+            availableHeight =
+              alignment || noShift
+                ? min(overflowAvailableHeight, maximumClippingHeight)
+                : maximumClippingHeight;
           }
           if (noShift && !alignment) {
             const xMin = max(overflow.left, 0);
@@ -7529,29 +8609,44 @@ var init_floating_ui_core = __esm({
             const yMin = max(overflow.top, 0);
             const yMax = max(overflow.bottom, 0);
             if (isYAxis) {
-              availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
+              availableWidth =
+                width -
+                2 *
+                  (xMin !== 0 || xMax !== 0
+                    ? xMin + xMax
+                    : max(overflow.left, overflow.right));
             } else {
-              availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
+              availableHeight =
+                height -
+                2 *
+                  (yMin !== 0 || yMax !== 0
+                    ? yMin + yMax
+                    : max(overflow.top, overflow.bottom));
             }
           }
           await apply({
             ...state,
             availableWidth,
-            availableHeight
+            availableHeight,
           });
-          const nextDimensions = await platform2.getDimensions(elements.floating);
-          if (width !== nextDimensions.width || height !== nextDimensions.height) {
+          const nextDimensions = await platform2.getDimensions(
+            elements.floating
+          );
+          if (
+            width !== nextDimensions.width ||
+            height !== nextDimensions.height
+          ) {
             return {
               reset: {
-                rects: true
-              }
+                rects: true,
+              },
             };
           }
           return {};
-        }
+        },
       };
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
@@ -7563,11 +8658,19 @@ function getNodeName(node) {
 }
 function getWindow2(node) {
   var _node$ownerDocument;
-  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
+  return (
+    (node == null || (_node$ownerDocument = node.ownerDocument) == null
+      ? void 0
+      : _node$ownerDocument.defaultView) || window
+  );
 }
 function getDocumentElement(node) {
   var _ref;
-  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
+  return (_ref =
+    (isNode(node) ? node.ownerDocument : node.document) || window.document) ==
+    null
+    ? void 0
+    : _ref.documentElement;
 }
 function isNode(value) {
   return value instanceof Node || value instanceof getWindow2(value).Node;
@@ -7576,22 +8679,26 @@ function isElement(value) {
   return value instanceof Element || value instanceof getWindow2(value).Element;
 }
 function isHTMLElement(value) {
-  return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;
+  return (
+    value instanceof HTMLElement ||
+    value instanceof getWindow2(value).HTMLElement
+  );
 }
 function isShadowRoot(value) {
   if (typeof ShadowRoot === "undefined") {
     return false;
   }
-  return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;
+  return (
+    value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot
+  );
 }
 function isOverflowElement(element) {
-  const {
-    overflow,
-    overflowX,
-    overflowY,
-    display
-  } = getComputedStyle2(element);
-  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
+  const { overflow, overflowX, overflowY, display } =
+    getComputedStyle2(element);
+  return (
+    /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) &&
+    !["inline", "contents"].includes(display)
+  );
 }
 function isTableElement(element) {
   return ["table", "td", "th"].includes(getNodeName(element));
@@ -7607,8 +8714,22 @@ function isTopLayer(element) {
 }
 function isContainingBlock(elementOrCss) {
   const webkit = isWebKit();
-  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
-  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
+  const css = isElement(elementOrCss)
+    ? getComputedStyle2(elementOrCss)
+    : elementOrCss;
+  return (
+    css.transform !== "none" ||
+    css.perspective !== "none" ||
+    (css.containerType ? css.containerType !== "normal" : false) ||
+    (!webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false)) ||
+    (!webkit && (css.filter ? css.filter !== "none" : false)) ||
+    ["transform", "perspective", "filter"].some((value) =>
+      (css.willChange || "").includes(value)
+    ) ||
+    ["paint", "layout", "strict", "content"].some((value) =>
+      (css.contain || "").includes(value)
+    )
+  );
 }
 function getContainingBlock(element) {
   let currentNode = getParentNode(element);
@@ -7636,25 +8757,24 @@ function getNodeScroll(element) {
   if (isElement(element)) {
     return {
       scrollLeft: element.scrollLeft,
-      scrollTop: element.scrollTop
+      scrollTop: element.scrollTop,
     };
   }
   return {
     scrollLeft: element.scrollX,
-    scrollTop: element.scrollY
+    scrollTop: element.scrollY,
   };
 }
 function getParentNode(node) {
   if (getNodeName(node) === "html") {
     return node;
   }
-  const result = (
+  const result =
     // Step into the shadow DOM of the parent of a slotted node.
     node.assignedSlot || // DOM Element detected.
     node.parentNode || // ShadowRoot detected.
-    isShadowRoot(node) && node.host || // Fallback.
-    getDocumentElement(node)
-  );
+    (isShadowRoot(node) && node.host) || // Fallback.
+    getDocumentElement(node);
   return isShadowRoot(result) ? result.host : result;
 }
 function getNearestOverflowAncestor(node) {
@@ -7676,16 +8796,29 @@ function getOverflowAncestors(node, list, traverseIframes) {
     traverseIframes = true;
   }
   const scrollableAncestor = getNearestOverflowAncestor(node);
-  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
+  const isBody =
+    scrollableAncestor ===
+    ((_node$ownerDocument2 = node.ownerDocument) == null
+      ? void 0
+      : _node$ownerDocument2.body);
   const win = getWindow2(scrollableAncestor);
   if (isBody) {
-    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
+    return list.concat(
+      win,
+      win.visualViewport || [],
+      isOverflowElement(scrollableAncestor) ? scrollableAncestor : [],
+      win.frameElement && traverseIframes
+        ? getOverflowAncestors(win.frameElement)
+        : []
+    );
   }
-  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
+  return list.concat(
+    scrollableAncestor,
+    getOverflowAncestors(scrollableAncestor, [], traverseIframes)
+  );
 }
 var init_floating_ui_utils_dom = __esm({
-  "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"() {
-  }
+  "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"() {},
 });
 
 // ../../node_modules/.pnpm/@floating-ui+dom@1.6.8/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
@@ -7696,7 +8829,8 @@ function getCssDimensions(element) {
   const hasOffset = isHTMLElement(element);
   const offsetWidth = hasOffset ? element.offsetWidth : width;
   const offsetHeight = hasOffset ? element.offsetHeight : height;
-  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
+  const shouldFallback =
+    round(width) !== offsetWidth || round(height) !== offsetHeight;
   if (shouldFallback) {
     width = offsetWidth;
     height = offsetHeight;
@@ -7704,7 +8838,7 @@ function getCssDimensions(element) {
   return {
     width,
     height,
-    $: shouldFallback
+    $: shouldFallback,
   };
 }
 function unwrapElement(element) {
@@ -7716,11 +8850,7 @@ function getScale(element) {
     return createCoords(1);
   }
   const rect = domElement.getBoundingClientRect();
-  const {
-    width,
-    height,
-    $
-  } = getCssDimensions(domElement);
+  const { width, height, $ } = getCssDimensions(domElement);
   let x = ($ ? round(rect.width) : rect.width) / width;
   let y = ($ ? round(rect.height) : rect.height) / height;
   if (!x || !Number.isFinite(x)) {
@@ -7731,7 +8861,7 @@ function getScale(element) {
   }
   return {
     x,
-    y
+    y,
   };
 }
 function getVisualOffsets(element) {
@@ -7741,19 +8871,27 @@ function getVisualOffsets(element) {
   }
   return {
     x: win.visualViewport.offsetLeft,
-    y: win.visualViewport.offsetTop
+    y: win.visualViewport.offsetTop,
   };
 }
 function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
   if (isFixed === void 0) {
     isFixed = false;
   }
-  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {
+  if (
+    !floatingOffsetParent ||
+    (isFixed && floatingOffsetParent !== getWindow2(element))
+  ) {
     return false;
   }
   return isFixed;
 }
-function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
+function getBoundingClientRect(
+  element,
+  includeScale,
+  isFixedStrategy,
+  offsetParent
+) {
   if (includeScale === void 0) {
     includeScale = false;
   }
@@ -7772,22 +8910,36 @@ function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetPar
       scale = getScale(element);
     }
   }
-  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
+  const visualOffsets = shouldAddVisualOffsets(
+    domElement,
+    isFixedStrategy,
+    offsetParent
+  )
+    ? getVisualOffsets(domElement)
+    : createCoords(0);
   let x = (clientRect.left + visualOffsets.x) / scale.x;
   let y = (clientRect.top + visualOffsets.y) / scale.y;
   let width = clientRect.width / scale.x;
   let height = clientRect.height / scale.y;
   if (domElement) {
     const win = getWindow2(domElement);
-    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow2(offsetParent) : offsetParent;
+    const offsetWin =
+      offsetParent && isElement(offsetParent)
+        ? getWindow2(offsetParent)
+        : offsetParent;
     let currentWin = win;
     let currentIFrame = currentWin.frameElement;
     while (currentIFrame && offsetParent && offsetWin !== currentWin) {
       const iframeScale = getScale(currentIFrame);
       const iframeRect = currentIFrame.getBoundingClientRect();
       const css = getComputedStyle2(currentIFrame);
-      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
-      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
+      const left =
+        iframeRect.left +
+        (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) *
+          iframeScale.x;
+      const top =
+        iframeRect.top +
+        (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
       x *= iframeScale.x;
       y *= iframeScale.y;
       width *= iframeScale.x;
@@ -7802,31 +8954,29 @@ function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetPar
     width,
     height,
     x,
-    y
+    y,
   });
 }
 function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
-  let {
-    elements,
-    rect,
-    offsetParent,
-    strategy
-  } = _ref;
+  let { elements, rect, offsetParent, strategy } = _ref;
   const isFixed = strategy === "fixed";
   const documentElement = getDocumentElement(offsetParent);
   const topLayer = elements ? isTopLayer(elements.floating) : false;
-  if (offsetParent === documentElement || topLayer && isFixed) {
+  if (offsetParent === documentElement || (topLayer && isFixed)) {
     return rect;
   }
   let scroll = {
     scrollLeft: 0,
-    scrollTop: 0
+    scrollTop: 0,
   };
   let scale = createCoords(1);
   const offsets = createCoords(0);
   const isOffsetParentAnElement = isHTMLElement(offsetParent);
-  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
-    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
+  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {
+    if (
+      getNodeName(offsetParent) !== "body" ||
+      isOverflowElement(documentElement)
+    ) {
       scroll = getNodeScroll(offsetParent);
     }
     if (isHTMLElement(offsetParent)) {
@@ -7840,21 +8990,34 @@ function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
     width: rect.width * scale.x,
     height: rect.height * scale.y,
     x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
-    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
+    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y,
   };
 }
 function getClientRects(element) {
   return Array.from(element.getClientRects());
 }
 function getWindowScrollBarX(element) {
-  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
+  return (
+    getBoundingClientRect(getDocumentElement(element)).left +
+    getNodeScroll(element).scrollLeft
+  );
 }
 function getDocumentRect(element) {
   const html = getDocumentElement(element);
   const scroll = getNodeScroll(element);
   const body = element.ownerDocument.body;
-  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
-  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
+  const width = max(
+    html.scrollWidth,
+    html.clientWidth,
+    body.scrollWidth,
+    body.clientWidth
+  );
+  const height = max(
+    html.scrollHeight,
+    html.clientHeight,
+    body.scrollHeight,
+    body.clientHeight
+  );
   let x = -scroll.scrollLeft + getWindowScrollBarX(element);
   const y = -scroll.scrollTop;
   if (getComputedStyle2(body).direction === "rtl") {
@@ -7864,7 +9027,7 @@ function getDocumentRect(element) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
 function getViewportRect(element, strategy) {
@@ -7879,7 +9042,7 @@ function getViewportRect(element, strategy) {
     width = visualViewport.width;
     height = visualViewport.height;
     const visualViewportBased = isWebKit();
-    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
+    if (!visualViewportBased || (visualViewportBased && strategy === "fixed")) {
       x = visualViewport.offsetLeft;
       y = visualViewport.offsetTop;
     }
@@ -7888,7 +9051,7 @@ function getViewportRect(element, strategy) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
 function getInnerBoundingClientRect(element, strategy) {
@@ -7904,10 +9067,14 @@ function getInnerBoundingClientRect(element, strategy) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
-function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
+function getClientRectFromClippingAncestor(
+  element,
+  clippingAncestor,
+  strategy
+) {
   let rect;
   if (clippingAncestor === "viewport") {
     rect = getViewportRect(element, strategy);
@@ -7920,24 +9087,33 @@ function getClientRectFromClippingAncestor(element, clippingAncestor, strategy)
     rect = {
       ...clippingAncestor,
       x: clippingAncestor.x - visualOffsets.x,
-      y: clippingAncestor.y - visualOffsets.y
+      y: clippingAncestor.y - visualOffsets.y,
     };
   }
   return rectToClientRect(rect);
 }
 function hasFixedPositionAncestor(element, stopNode) {
   const parentNode = getParentNode(element);
-  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
+  if (
+    parentNode === stopNode ||
+    !isElement(parentNode) ||
+    isLastTraversableNode(parentNode)
+  ) {
     return false;
   }
-  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
+  return (
+    getComputedStyle2(parentNode).position === "fixed" ||
+    hasFixedPositionAncestor(parentNode, stopNode)
+  );
 }
 function getClippingElementAncestors(element, cache2) {
   const cachedResult = cache2.get(element);
   if (cachedResult) {
     return cachedResult;
   }
-  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
+  let result = getOverflowAncestors(element, [], false).filter(
+    (el) => isElement(el) && getNodeName(el) !== "body"
+  );
   let currentContainingBlockComputedStyle = null;
   const elementIsFixed = getComputedStyle2(element).position === "fixed";
   let currentNode = elementIsFixed ? getParentNode(element) : element;
@@ -7947,7 +9123,17 @@ function getClippingElementAncestors(element, cache2) {
     if (!currentNodeIsContaining && computedStyle.position === "fixed") {
       currentContainingBlockComputedStyle = null;
     }
-    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
+    const shouldDropCurrentNode = elementIsFixed
+      ? !currentNodeIsContaining && !currentContainingBlockComputedStyle
+      : (!currentNodeIsContaining &&
+          computedStyle.position === "static" &&
+          !!currentContainingBlockComputedStyle &&
+          ["absolute", "fixed"].includes(
+            currentContainingBlockComputedStyle.position
+          )) ||
+        (isOverflowElement(currentNode) &&
+          !currentNodeIsContaining &&
+          hasFixedPositionAncestor(element, currentNode));
     if (shouldDropCurrentNode) {
       result = result.filter((ancestor) => ancestor !== currentNode);
     } else {
@@ -7959,17 +9145,21 @@ function getClippingElementAncestors(element, cache2) {
   return result;
 }
 function getClippingRect(_ref) {
-  let {
-    element,
-    boundary,
-    rootBoundary,
-    strategy
-  } = _ref;
-  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
+  let { element, boundary, rootBoundary, strategy } = _ref;
+  const elementClippingAncestors =
+    boundary === "clippingAncestors"
+      ? isTopLayer(element)
+        ? []
+        : getClippingElementAncestors(element, this._c)
+      : [].concat(boundary);
   const clippingAncestors = [...elementClippingAncestors, rootBoundary];
   const firstClippingAncestor = clippingAncestors[0];
   const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
-    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
+    const rect = getClientRectFromClippingAncestor(
+      element,
+      clippingAncestor,
+      strategy
+    );
     accRect.top = max(rect.top, accRect.top);
     accRect.right = min(rect.right, accRect.right);
     accRect.bottom = min(rect.bottom, accRect.bottom);
@@ -7980,17 +9170,14 @@ function getClippingRect(_ref) {
     width: clippingRect.right - clippingRect.left,
     height: clippingRect.bottom - clippingRect.top,
     x: clippingRect.left,
-    y: clippingRect.top
+    y: clippingRect.top,
   };
 }
 function getDimensions(element) {
-  const {
-    width,
-    height
-  } = getCssDimensions(element);
+  const { width, height } = getCssDimensions(element);
   return {
     width,
-    height
+    height,
   };
 }
 function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
@@ -8000,15 +9187,23 @@ function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
   const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
   let scroll = {
     scrollLeft: 0,
-    scrollTop: 0
+    scrollTop: 0,
   };
   const offsets = createCoords(0);
-  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
-    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
+  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {
+    if (
+      getNodeName(offsetParent) !== "body" ||
+      isOverflowElement(documentElement)
+    ) {
       scroll = getNodeScroll(offsetParent);
     }
     if (isOffsetParentAnElement) {
-      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
+      const offsetRect = getBoundingClientRect(
+        offsetParent,
+        true,
+        isFixed,
+        offsetParent
+      );
       offsets.x = offsetRect.x + offsetParent.clientLeft;
       offsets.y = offsetRect.y + offsetParent.clientTop;
     } else if (documentElement) {
@@ -8021,14 +9216,17 @@ function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
     x,
     y,
     width: rect.width,
-    height: rect.height
+    height: rect.height,
   };
 }
 function isStaticPositioned(element) {
   return getComputedStyle2(element).position === "static";
 }
 function getTrueOffsetParent(element, polyfill) {
-  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
+  if (
+    !isHTMLElement(element) ||
+    getComputedStyle2(element).position === "fixed"
+  ) {
     return null;
   }
   if (polyfill) {
@@ -8052,10 +9250,19 @@ function getOffsetParent(element, polyfill) {
     return win;
   }
   let offsetParent = getTrueOffsetParent(element, polyfill);
-  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
+  while (
+    offsetParent &&
+    isTableElement(offsetParent) &&
+    isStaticPositioned(offsetParent)
+  ) {
     offsetParent = getTrueOffsetParent(offsetParent, polyfill);
   }
-  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
+  if (
+    offsetParent &&
+    isLastTraversableNode(offsetParent) &&
+    isStaticPositioned(offsetParent) &&
+    !isContainingBlock(offsetParent)
+  ) {
     return win;
   }
   return offsetParent || getContainingBlock(element) || win;
@@ -8081,12 +9288,7 @@ function observeMove(element, onMove) {
       threshold = 1;
     }
     cleanup();
-    const {
-      left,
-      top,
-      width,
-      height
-    } = element.getBoundingClientRect();
+    const { left, top, width, height } = element.getBoundingClientRect();
     if (!skip) {
       onMove();
     }
@@ -8097,10 +9299,18 @@ function observeMove(element, onMove) {
     const insetRight = floor(root.clientWidth - (left + width));
     const insetBottom = floor(root.clientHeight - (top + height));
     const insetLeft = floor(left);
-    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
+    const rootMargin =
+      -insetTop +
+      "px " +
+      -insetRight +
+      "px " +
+      -insetBottom +
+      "px " +
+      -insetLeft +
+      "px";
     const options = {
       rootMargin,
-      threshold: max(0, min(1, threshold)) || 1
+      threshold: max(0, min(1, threshold)) || 1,
     };
     let isFirstUpdate = true;
     function handleObserve(entries2) {
@@ -8123,7 +9333,7 @@ function observeMove(element, onMove) {
       io = new IntersectionObserver(handleObserve, {
         ...options,
         // Handle <iframe>s
-        root: root.ownerDocument
+        root: root.ownerDocument,
       });
     } catch (e2) {
       io = new IntersectionObserver(handleObserve, options);
@@ -8142,17 +9352,25 @@ function autoUpdate(reference, floating, update, options) {
     ancestorResize = true,
     elementResize = typeof ResizeObserver === "function",
     layoutShift = typeof IntersectionObserver === "function",
-    animationFrame = false
+    animationFrame = false,
   } = options;
   const referenceEl = unwrapElement(reference);
-  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
+  const ancestors =
+    ancestorScroll || ancestorResize
+      ? [
+          ...(referenceEl ? getOverflowAncestors(referenceEl) : []),
+          ...getOverflowAncestors(floating),
+        ]
+      : [];
   ancestors.forEach((ancestor) => {
-    ancestorScroll && ancestor.addEventListener("scroll", update, {
-      passive: true
-    });
+    ancestorScroll &&
+      ancestor.addEventListener("scroll", update, {
+        passive: true,
+      });
     ancestorResize && ancestor.addEventListener("resize", update);
   });
-  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
+  const cleanupIo =
+    referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
   let reobserveFrame = -1;
   let resizeObserver = null;
   if (elementResize) {
@@ -8163,7 +9381,8 @@ function autoUpdate(reference, floating, update, options) {
         cancelAnimationFrame(reobserveFrame);
         reobserveFrame = requestAnimationFrame(() => {
           var _resizeObserver;
-          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
+          (_resizeObserver = resizeObserver) == null ||
+            _resizeObserver.observe(floating);
         });
       }
       update();
@@ -8180,7 +9399,13 @@ function autoUpdate(reference, floating, update, options) {
   }
   function frameLoop() {
     const nextRefRect = getBoundingClientRect(reference);
-    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
+    if (
+      prevRefRect &&
+      (nextRefRect.x !== prevRefRect.x ||
+        nextRefRect.y !== prevRefRect.y ||
+        nextRefRect.width !== prevRefRect.width ||
+        nextRefRect.height !== prevRefRect.height)
+    ) {
       update();
     }
     prevRefRect = nextRefRect;
@@ -8194,32 +9419,46 @@ function autoUpdate(reference, floating, update, options) {
       ancestorResize && ancestor.removeEventListener("resize", update);
     });
     cleanupIo == null || cleanupIo();
-    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
+    (_resizeObserver2 = resizeObserver) == null ||
+      _resizeObserver2.disconnect();
     resizeObserver = null;
     if (animationFrame) {
       cancelAnimationFrame(frameId);
     }
   };
 }
-var noOffsets, getElementRects, platform, offset2, shift2, flip2, size2, hide2, arrow2, computePosition2;
+var noOffsets,
+  getElementRects,
+  platform,
+  offset2,
+  shift2,
+  flip2,
+  size2,
+  hide2,
+  arrow2,
+  computePosition2;
 var init_floating_ui_dom = __esm({
   "../../node_modules/.pnpm/@floating-ui+dom@1.6.8/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"() {
     init_floating_ui_core();
     init_floating_ui_utils();
     init_floating_ui_utils_dom();
     noOffsets = /* @__PURE__ */ createCoords(0);
-    getElementRects = async function(data) {
+    getElementRects = async function (data) {
       const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
       const getDimensionsFn = this.getDimensions;
       const floatingDimensions = await getDimensionsFn(data.floating);
       return {
-        reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
+        reference: getRectRelativeToOffsetParent(
+          data.reference,
+          await getOffsetParentFn(data.floating),
+          data.strategy
+        ),
         floating: {
           x: 0,
           y: 0,
           width: floatingDimensions.width,
-          height: floatingDimensions.height
-        }
+          height: floatingDimensions.height,
+        },
       };
     };
     platform = {
@@ -8232,7 +9471,7 @@ var init_floating_ui_dom = __esm({
       getDimensions,
       getScale,
       isElement,
-      isRTL: isRTL2
+      isRTL: isRTL2,
     };
     offset2 = offset;
     shift2 = shift;
@@ -8244,72 +9483,93 @@ var init_floating_ui_dom = __esm({
       const cache2 = /* @__PURE__ */ new Map();
       const mergedOptions = {
         platform,
-        ...options
+        ...options,
       };
       const platformWithCache = {
         ...mergedOptions.platform,
-        _c: cache2
+        _c: cache2,
       };
       return computePosition(reference, floating, {
         ...mergedOptions,
-        platform: platformWithCache
+        platform: platformWithCache,
       });
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/4X2EKUJ3.js
 function usePopperContext() {
   const context = useContext(PopperContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `usePopperContext` must be used within a `Popper` component");
+    throw new Error(
+      "[kobalte]: `usePopperContext` must be used within a `Popper` component"
+    );
   }
   return context;
 }
 function PopperArrow(props) {
   const context = usePopperContext();
-  const mergedProps = mergeDefaultProps({
-    size: DEFAULT_SIZE
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      size: DEFAULT_SIZE,
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "style", "size"]);
   const dir = () => context.currentPlacement().split("-")[0];
   const contentStyle = createComputedStyle(context.contentRef);
-  const fill = () => contentStyle()?.getPropertyValue("background-color") || "none";
-  const stroke = () => contentStyle()?.getPropertyValue(`border-${dir()}-color`) || "none";
-  const borderWidth = () => contentStyle()?.getPropertyValue(`border-${dir()}-width`) || "0px";
+  const fill = () =>
+    contentStyle()?.getPropertyValue("background-color") || "none";
+  const stroke = () =>
+    contentStyle()?.getPropertyValue(`border-${dir()}-color`) || "none";
+  const borderWidth = () =>
+    contentStyle()?.getPropertyValue(`border-${dir()}-width`) || "0px";
   const strokeWidth = () => {
     return Number.parseInt(borderWidth()) * 2 * (DEFAULT_SIZE / local.size);
   };
   const rotate = () => {
-    return `rotate(${ROTATION_DEG[dir()]} ${HALF_DEFAULT_SIZE} ${HALF_DEFAULT_SIZE}) translate(0 2)`;
+    return `rotate(${
+      ROTATION_DEG[dir()]
+    } ${HALF_DEFAULT_SIZE} ${HALF_DEFAULT_SIZE}) translate(0 2)`;
   };
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setArrowRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    "aria-hidden": "true",
-    get style() {
-      return combineStyle({
-        // server side rendering
-        position: "absolute",
-        "font-size": `${local.size}px`,
-        width: "1em",
-        height: "1em",
-        "pointer-events": "none",
-        fill: fill(),
-        stroke: stroke(),
-        "stroke-width": strokeWidth()
-      }, local.style);
-    }
-  }, others, {
-    get children() {
-      const _el$ = _tmpl$(), _el$2 = _el$.firstChild;
-      createRenderEffect(() => setAttribute(_el$2, "transform", rotate()));
-      return _el$;
-    }
-  }));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setArrowRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        "aria-hidden": "true",
+        get style() {
+          return combineStyle(
+            {
+              // server side rendering
+              position: "absolute",
+              "font-size": `${local.size}px`,
+              width: "1em",
+              height: "1em",
+              "pointer-events": "none",
+              fill: fill(),
+              stroke: stroke(),
+              "stroke-width": strokeWidth(),
+            },
+            local.style
+          );
+        },
+      },
+      others,
+      {
+        get children() {
+          const _el$ = _tmpl$(),
+            _el$2 = _el$.firstChild;
+          createRenderEffect(() => setAttribute(_el$2, "transform", rotate()));
+          return _el$;
+        },
+      }
+    )
+  );
 }
 function createComputedStyle(element) {
   const [style2, setStyle] = createSignal();
@@ -8322,22 +9582,31 @@ function createComputedStyle(element) {
 function PopperPositioner(props) {
   const context = usePopperContext();
   const [local, others] = splitProps(props, ["ref", "style"]);
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setPositionerRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    "data-popper-positioner": "",
-    get style() {
-      return combineStyle({
-        position: "absolute",
-        top: 0,
-        left: 0,
-        "min-width": "max-content"
-      }, local.style);
-    }
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setPositionerRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        "data-popper-positioner": "",
+        get style() {
+          return combineStyle(
+            {
+              position: "absolute",
+              top: 0,
+              left: 0,
+              "min-width": "max-content",
+            },
+            local.style
+          );
+        },
+      },
+      others
+    )
+  );
 }
 function createDOMRect(anchorRect) {
   const { x = 0, y = 0, width = 0, height = 0 } = anchorRect ?? {};
@@ -8352,7 +9621,7 @@ function createDOMRect(anchorRect) {
     top: y,
     right: x + width,
     bottom: y + height,
-    left: x
+    left: x,
   };
   return { ...rect, toJSON: () => rect };
 }
@@ -8369,7 +9638,7 @@ function getAnchorElement(anchor, getAnchorRect) {
         return anchor.getBoundingClientRect();
       }
       return createDOMRect();
-    }
+    },
   };
 }
 function isValidPlacement(flip22) {
@@ -8385,33 +9654,39 @@ function getTransformOrigin(placement, readingDirection) {
     return `${reversePlacement} ${alignment === "start" ? "top" : "bottom"}`;
   }
   if (alignment === "start") {
-    return `${reversePlacement} ${readingDirection === "rtl" ? "right" : "left"}`;
+    return `${reversePlacement} ${
+      readingDirection === "rtl" ? "right" : "left"
+    }`;
   }
   return `${reversePlacement} ${readingDirection === "rtl" ? "left" : "right"}`;
 }
 function PopperRoot(props) {
-  const mergedProps = mergeDefaultProps({
-    getAnchorRect: (anchor) => anchor?.getBoundingClientRect(),
-    placement: "bottom",
-    gutter: 0,
-    shift: 0,
-    flip: true,
-    slide: true,
-    overlap: false,
-    sameWidth: false,
-    fitViewport: false,
-    hideWhenDetached: false,
-    detachedPadding: 0,
-    arrowPadding: 4,
-    overflowPadding: 8
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      getAnchorRect: (anchor) => anchor?.getBoundingClientRect(),
+      placement: "bottom",
+      gutter: 0,
+      shift: 0,
+      flip: true,
+      slide: true,
+      overlap: false,
+      sameWidth: false,
+      fitViewport: false,
+      hideWhenDetached: false,
+      detachedPadding: 0,
+      arrowPadding: 4,
+      overflowPadding: 8,
+    },
+    props
+  );
   const [positionerRef, setPositionerRef] = createSignal();
   const [arrowRef, setArrowRef] = createSignal();
-  const [currentPlacement, setCurrentPlacement] = createSignal(mergedProps.placement);
-  const anchorRef = () => getAnchorElement(mergedProps.anchorRef?.(), mergedProps.getAnchorRect);
-  const {
-    direction
-  } = useLocale();
+  const [currentPlacement, setCurrentPlacement] = createSignal(
+    mergedProps.placement
+  );
+  const anchorRef = () =>
+    getAnchorElement(mergedProps.anchorRef?.(), mergedProps.getAnchorRect);
+  const { direction } = useLocale();
   async function updatePosition() {
     const referenceEl = anchorRef();
     const floatingEl = positionerRef();
@@ -8420,71 +9695,96 @@ function PopperRoot(props) {
       return;
     }
     const arrowOffset = (arrowEl?.clientHeight || 0) / 2;
-    const finalGutter = typeof mergedProps.gutter === "number" ? mergedProps.gutter + arrowOffset : mergedProps.gutter ?? arrowOffset;
-    floatingEl.style.setProperty("--kb-popper-content-overflow-padding", `${mergedProps.overflowPadding}px`);
+    const finalGutter =
+      typeof mergedProps.gutter === "number"
+        ? mergedProps.gutter + arrowOffset
+        : mergedProps.gutter ?? arrowOffset;
+    floatingEl.style.setProperty(
+      "--kb-popper-content-overflow-padding",
+      `${mergedProps.overflowPadding}px`
+    );
     referenceEl.getBoundingClientRect();
     const middleware = [
       // https://floating-ui.com/docs/offset
-      offset2(({
-        placement
-      }) => {
+      offset2(({ placement }) => {
         const hasAlignment = !!placement.split("-")[1];
         return {
           mainAxis: finalGutter,
           crossAxis: !hasAlignment ? mergedProps.shift : void 0,
-          alignmentAxis: mergedProps.shift
+          alignmentAxis: mergedProps.shift,
         };
-      })
+      }),
     ];
     if (mergedProps.flip !== false) {
-      const fallbackPlacements = typeof mergedProps.flip === "string" ? mergedProps.flip.split(" ") : void 0;
-      if (fallbackPlacements !== void 0 && !fallbackPlacements.every(isValidPlacement)) {
+      const fallbackPlacements =
+        typeof mergedProps.flip === "string"
+          ? mergedProps.flip.split(" ")
+          : void 0;
+      if (
+        fallbackPlacements !== void 0 &&
+        !fallbackPlacements.every(isValidPlacement)
+      ) {
         throw new Error("`flip` expects a spaced-delimited list of placements");
       }
-      middleware.push(flip2({
-        padding: mergedProps.overflowPadding,
-        fallbackPlacements
-      }));
+      middleware.push(
+        flip2({
+          padding: mergedProps.overflowPadding,
+          fallbackPlacements,
+        })
+      );
     }
     if (mergedProps.slide || mergedProps.overlap) {
-      middleware.push(shift2({
-        mainAxis: mergedProps.slide,
-        crossAxis: mergedProps.overlap,
-        padding: mergedProps.overflowPadding
-      }));
+      middleware.push(
+        shift2({
+          mainAxis: mergedProps.slide,
+          crossAxis: mergedProps.overlap,
+          padding: mergedProps.overflowPadding,
+        })
+      );
     }
-    middleware.push(size2({
-      padding: mergedProps.overflowPadding,
-      apply({
-        availableWidth,
-        availableHeight,
-        rects
-      }) {
-        const referenceWidth = Math.round(rects.reference.width);
-        availableWidth = Math.floor(availableWidth);
-        availableHeight = Math.floor(availableHeight);
-        floatingEl.style.setProperty("--kb-popper-anchor-width", `${referenceWidth}px`);
-        floatingEl.style.setProperty("--kb-popper-content-available-width", `${availableWidth}px`);
-        floatingEl.style.setProperty("--kb-popper-content-available-height", `${availableHeight}px`);
-        if (mergedProps.sameWidth) {
-          floatingEl.style.width = `${referenceWidth}px`;
-        }
-        if (mergedProps.fitViewport) {
-          floatingEl.style.maxWidth = `${availableWidth}px`;
-          floatingEl.style.maxHeight = `${availableHeight}px`;
-        }
-      }
-    }));
+    middleware.push(
+      size2({
+        padding: mergedProps.overflowPadding,
+        apply({ availableWidth, availableHeight, rects }) {
+          const referenceWidth = Math.round(rects.reference.width);
+          availableWidth = Math.floor(availableWidth);
+          availableHeight = Math.floor(availableHeight);
+          floatingEl.style.setProperty(
+            "--kb-popper-anchor-width",
+            `${referenceWidth}px`
+          );
+          floatingEl.style.setProperty(
+            "--kb-popper-content-available-width",
+            `${availableWidth}px`
+          );
+          floatingEl.style.setProperty(
+            "--kb-popper-content-available-height",
+            `${availableHeight}px`
+          );
+          if (mergedProps.sameWidth) {
+            floatingEl.style.width = `${referenceWidth}px`;
+          }
+          if (mergedProps.fitViewport) {
+            floatingEl.style.maxWidth = `${availableWidth}px`;
+            floatingEl.style.maxHeight = `${availableHeight}px`;
+          }
+        },
+      })
+    );
     if (mergedProps.hideWhenDetached) {
-      middleware.push(hide2({
-        padding: mergedProps.detachedPadding
-      }));
+      middleware.push(
+        hide2({
+          padding: mergedProps.detachedPadding,
+        })
+      );
     }
     if (arrowEl) {
-      middleware.push(arrow2({
-        element: arrowEl,
-        padding: mergedProps.arrowPadding
-      }));
+      middleware.push(
+        arrow2({
+          element: arrowEl,
+          padding: mergedProps.arrowPadding,
+        })
+      );
     }
     const pos = await computePosition2(referenceEl, floatingEl, {
       placement: mergedProps.placement,
@@ -8492,37 +9792,39 @@ function PopperRoot(props) {
       middleware,
       platform: {
         ...platform,
-        isRTL: () => direction() === "rtl"
-      }
+        isRTL: () => direction() === "rtl",
+      },
     });
     setCurrentPlacement(pos.placement);
     mergedProps.onCurrentPlacementChange?.(pos.placement);
     if (!floatingEl) {
       return;
     }
-    floatingEl.style.setProperty("--kb-popper-content-transform-origin", getTransformOrigin(pos.placement, direction()));
+    floatingEl.style.setProperty(
+      "--kb-popper-content-transform-origin",
+      getTransformOrigin(pos.placement, direction())
+    );
     const x = Math.round(pos.x);
     const y = Math.round(pos.y);
     let visibility;
     if (mergedProps.hideWhenDetached) {
-      visibility = pos.middlewareData.hide?.referenceHidden ? "hidden" : "visible";
+      visibility = pos.middlewareData.hide?.referenceHidden
+        ? "hidden"
+        : "visible";
     }
     Object.assign(floatingEl.style, {
       top: "0",
       left: "0",
       transform: `translate3d(${x}px, ${y}px, 0)`,
-      visibility
+      visibility,
     });
     if (arrowEl && pos.middlewareData.arrow) {
-      const {
-        x: arrowX,
-        y: arrowY
-      } = pos.middlewareData.arrow;
+      const { x: arrowX, y: arrowY } = pos.middlewareData.arrow;
       const dir = pos.placement.split("-")[0];
       Object.assign(arrowEl.style, {
         left: arrowX != null ? `${arrowX}px` : "",
         top: arrowY != null ? `${arrowY}px` : "",
-        [dir]: "100%"
+        [dir]: "100%",
       });
     }
   }
@@ -8532,10 +9834,15 @@ function PopperRoot(props) {
     if (!referenceEl || !floatingEl) {
       return;
     }
-    const cleanupAutoUpdate = autoUpdate(referenceEl, floatingEl, updatePosition, {
-      // JSDOM doesn't support ResizeObserver
-      elementResize: typeof ResizeObserver === "function"
-    });
+    const cleanupAutoUpdate = autoUpdate(
+      referenceEl,
+      floatingEl,
+      updatePosition,
+      {
+        // JSDOM doesn't support ResizeObserver
+        elementResize: typeof ResizeObserver === "function",
+      }
+    );
     onCleanup(cleanupAutoUpdate);
   });
   createEffect(() => {
@@ -8552,16 +9859,22 @@ function PopperRoot(props) {
     currentPlacement,
     contentRef: () => mergedProps.contentRef?.(),
     setPositionerRef,
-    setArrowRef
+    setArrowRef,
   };
   return createComponent(PopperContext.Provider, {
     value: context,
     get children() {
       return mergedProps.children;
-    }
+    },
   });
 }
-var PopperContext, _tmpl$, DEFAULT_SIZE, HALF_DEFAULT_SIZE, ROTATION_DEG, REVERSE_BASE_PLACEMENT, Popper;
+var PopperContext,
+  _tmpl$,
+  DEFAULT_SIZE,
+  HALF_DEFAULT_SIZE,
+  ROTATION_DEG,
+  REVERSE_BASE_PLACEMENT,
+  Popper;
 var init_X2EKUJ3 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/4X2EKUJ3.js"() {
     init_XHJPQEZP();
@@ -8572,28 +9885,30 @@ var init_X2EKUJ3 = __esm({
     init_dist11();
     init_floating_ui_dom();
     PopperContext = createContext();
-    _tmpl$ = /* @__PURE__ */ template(`<svg display="block" viewBox="0 0 30 30" style="transform:scale(1.02)"><g><path fill="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"></path><path stroke="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z">`);
+    _tmpl$ = /* @__PURE__ */ template(
+      `<svg display="block" viewBox="0 0 30 30" style="transform:scale(1.02)"><g><path fill="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"></path><path stroke="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z">`
+    );
     DEFAULT_SIZE = 30;
     HALF_DEFAULT_SIZE = DEFAULT_SIZE / 2;
     ROTATION_DEG = {
       top: 180,
       right: -90,
       bottom: 0,
-      left: 90
+      left: 90,
     };
     REVERSE_BASE_PLACEMENT = {
       top: "bottom",
       right: "left",
       bottom: "top",
-      left: "right"
+      left: "right",
     };
     Popper = Object.assign(PopperRoot, {
       Arrow: PopperArrow,
       Context: PopperContext,
       usePopperContext,
-      Positioner: PopperPositioner
+      Positioner: PopperPositioner,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/QEMPLYZX.js
@@ -8622,7 +9937,7 @@ var init_QEMPLYZX = __esm({
     init_dist12();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/QGCMYLTA.js
@@ -8658,10 +9973,10 @@ function createInteractOutside(props, ref) {
       }
       const handler2 = composeEventHandlers([
         onPointerDownOutside,
-        onInteractOutside
+        onInteractOutside,
       ]);
       target.addEventListener(POINTER_DOWN_OUTSIDE_EVENT, handler2, {
-        once: true
+        once: true,
       });
       const pointerDownOutsideEvent = new CustomEvent(
         POINTER_DOWN_OUTSIDE_EVENT,
@@ -8670,8 +9985,9 @@ function createInteractOutside(props, ref) {
           cancelable: true,
           detail: {
             originalEvent: e2,
-            isContextMenu: e2.button === 2 || isCtrlKey(e2) && e2.button === 0
-          }
+            isContextMenu:
+              e2.button === 2 || (isCtrlKey(e2) && e2.button === 0),
+          },
         }
       );
       target.dispatchEvent(pointerDownOutsideEvent);
@@ -8690,18 +10006,15 @@ function createInteractOutside(props, ref) {
     if (!container || !target || !isEventOutside(e2)) {
       return;
     }
-    const handler = composeEventHandlers([
-      onFocusOutside,
-      onInteractOutside
-    ]);
+    const handler = composeEventHandlers([onFocusOutside, onInteractOutside]);
     target.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });
     const focusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE_EVENT, {
       bubbles: false,
       cancelable: true,
       detail: {
         originalEvent: e2,
-        isContextMenu: false
-      }
+        isContextMenu: false,
+      },
     });
     target.dispatchEvent(focusOutsideEvent);
   };
@@ -8733,7 +10046,7 @@ var init_QGCMYLTA = __esm({
     init_web();
     POINTER_DOWN_OUTSIDE_EVENT = "interactOutside.pointerDownOutside";
     FOCUS_OUTSIDE_EVENT = "interactOutside.focusOutside";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/G7G3PFRJ.js
@@ -8743,7 +10056,17 @@ function useOptionalDismissableLayerContext() {
 function DismissableLayer(props) {
   let ref;
   const parentContext = useOptionalDismissableLayerContext();
-  const [local, others] = splitProps(props, ["ref", "disableOutsidePointerEvents", "excludedElements", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss", "bypassTopMostLayerCheck"]);
+  const [local, others] = splitProps(props, [
+    "ref",
+    "disableOutsidePointerEvents",
+    "excludedElements",
+    "onEscapeKeyDown",
+    "onPointerDownOutside",
+    "onFocusOutside",
+    "onInteractOutside",
+    "onDismiss",
+    "bypassTopMostLayerCheck",
+  ]);
   const nestedLayers = /* @__PURE__ */ new Set([]);
   const registerNestedLayer = (element) => {
     nestedLayers.add(element);
@@ -8757,7 +10080,10 @@ function DismissableLayer(props) {
     if (!ref) {
       return false;
     }
-    return local.excludedElements?.some((node) => contains(node(), element)) || [...nestedLayers].some((layer) => contains(layer, element));
+    return (
+      local.excludedElements?.some((node) => contains(node(), element)) ||
+      [...nestedLayers].some((layer) => contains(layer, element))
+    );
   };
   const onPointerDownOutside = (e2) => {
     if (!ref || layerStack.isBelowPointerBlockingLayer(ref)) {
@@ -8779,11 +10105,14 @@ function DismissableLayer(props) {
       local.onDismiss?.();
     }
   };
-  createInteractOutside({
-    shouldExcludeElement,
-    onPointerDownOutside,
-    onFocusOutside
-  }, () => ref);
+  createInteractOutside(
+    {
+      shouldExcludeElement,
+      onPointerDownOutside,
+      onFocusOutside,
+    },
+    () => ref
+  );
   createEscapeKeyDown({
     ownerDocument: () => getDocument(ref),
     onEscapeKeyDown: (e2) => {
@@ -8795,7 +10124,7 @@ function DismissableLayer(props) {
         e2.preventDefault();
         local.onDismiss();
       }
-    }
+    },
   });
   onMount(() => {
     if (!ref) {
@@ -8804,7 +10133,7 @@ function DismissableLayer(props) {
     layerStack.addLayer({
       node: ref,
       isPointerBlocking: local.disableOutsidePointerEvents,
-      dismiss: local.onDismiss
+      dismiss: local.onDismiss,
     });
     const unregisterFromParentLayer = parentContext?.registerNestedLayer(ref);
     layerStack.assignPointerEventToLayers();
@@ -8819,38 +10148,50 @@ function DismissableLayer(props) {
       layerStack.restoreBodyPointerEvents(ref);
     });
   });
-  createEffect(on([() => ref, () => local.disableOutsidePointerEvents], ([ref2, disableOutsidePointerEvents]) => {
-    if (!ref2) {
-      return;
-    }
-    const layer = layerStack.find(ref2);
-    if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {
-      layer.isPointerBlocking = disableOutsidePointerEvents;
-      layerStack.assignPointerEventToLayers();
-    }
-    if (disableOutsidePointerEvents) {
-      layerStack.disableBodyPointerEvents(ref2);
-    }
-    onCleanup(() => {
-      layerStack.restoreBodyPointerEvents(ref2);
-    });
-  }, {
-    defer: true
-  }));
+  createEffect(
+    on(
+      [() => ref, () => local.disableOutsidePointerEvents],
+      ([ref2, disableOutsidePointerEvents]) => {
+        if (!ref2) {
+          return;
+        }
+        const layer = layerStack.find(ref2);
+        if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {
+          layer.isPointerBlocking = disableOutsidePointerEvents;
+          layerStack.assignPointerEventToLayers();
+        }
+        if (disableOutsidePointerEvents) {
+          layerStack.disableBodyPointerEvents(ref2);
+        }
+        onCleanup(() => {
+          layerStack.restoreBodyPointerEvents(ref2);
+        });
+      },
+      {
+        defer: true,
+      }
+    )
+  );
   const context = {
-    registerNestedLayer
+    registerNestedLayer,
   };
   return createComponent(DismissableLayerContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs((el) => ref = el, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        }
-      }, others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+          },
+          others
+        )
+      );
+    },
   });
 }
 var DismissableLayerContext;
@@ -8864,7 +10205,7 @@ var init_G7G3PFRJ = __esm({
     init_dist12();
     init_solid();
     DismissableLayerContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7LCANGHD.js
@@ -8872,7 +10213,7 @@ function createDisclosureState(props = {}) {
   const [isOpen, setIsOpen] = createControllableBooleanSignal({
     value: () => access(props.open),
     defaultValue: () => !!access(props.defaultOpen),
-    onChange: (value) => props.onOpenChange?.(value)
+    onChange: (value) => props.onOpenChange?.(value),
   });
   const open = () => {
     setIsOpen(true);
@@ -8888,39 +10229,52 @@ function createDisclosureState(props = {}) {
     setIsOpen,
     open,
     close,
-    toggle
+    toggle,
   };
 }
 var init_LCANGHD = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7LCANGHD.js"() {
     init_BLN63FDC();
     init_dist12();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/Q2BOFK7I.js
 function useRadioGroupContext() {
   const context = useContext(RadioGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component");
+    throw new Error(
+      "[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component"
+    );
   }
   return context;
 }
 function useRadioGroupItemContext() {
   const context = useContext(RadioGroupItemContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component");
+    throw new Error(
+      "[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component"
+    );
   }
   return context;
 }
 function RadioGroupItem(props) {
   const formControlContext = useFormControlContext();
   const radioGroupContext = useRadioGroupContext();
-  const defaultId = `${formControlContext.generateId("item")}-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["value", "disabled", "onPointerDown"]);
+  const defaultId = `${formControlContext.generateId(
+    "item"
+  )}-${createUniqueId()}`;
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "value",
+    "disabled",
+    "onPointerDown",
+  ]);
   const [inputId, setInputId] = createSignal();
   const [labelId, setLabelId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
@@ -8941,7 +10295,7 @@ function RadioGroupItem(props) {
   const dataset = createMemo(() => ({
     ...formControlContext.dataset(),
     "data-disabled": isDisabled() ? "" : void 0,
-    "data-checked": isSelected() ? "" : void 0
+    "data-checked": isSelected() ? "" : void 0,
   }));
   const context = {
     value: () => local.value,
@@ -8958,27 +10312,37 @@ function RadioGroupItem(props) {
     registerLabel: createRegisterId(setLabelId),
     registerDescription: createRegisterId(setDescriptionId),
     setIsFocused,
-    setInputRef
+    setInputRef,
   };
   return createComponent(RadioGroupItemContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        role: "group",
-        onPointerDown
-      }, dataset, others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            role: "group",
+            onPointerDown,
+          },
+          dataset,
+          others
+        )
+      );
+    },
   });
 }
 function RadioGroupItemControl(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("control")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["onClick", "onKeyDown"]);
-  const onClick = (e2) => {
-    callHandler(e2, local.onClick);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("control"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, ["onClick", "onKeyDown"]);
+  const onClick = (e2) => {
+    callHandler(e2, local.onClick);
     context.select();
     context.inputRef()?.focus();
   };
@@ -8989,68 +10353,118 @@ function RadioGroupItemControl(props) {
       context.inputRef()?.focus();
     }
   };
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    onClick,
-    onKeyDown
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        onClick,
+        onKeyDown,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function RadioGroupItemDescription(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerDescription(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div"
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function RadioGroupItemIndicator(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("indicator")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("indicator"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "forceMount"]);
   const [ref, setRef] = createSignal();
-  const {
-    present
-  } = src_default({
+  const { present } = src_default({
     show: () => local.forceMount || context.isSelected(),
-    element: () => ref() ?? null
+    element: () => ref() ?? null,
   });
   return createComponent(Show, {
     get when() {
       return present();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs(setRef, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        }
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs(setRef, local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function RadioGroupItemInput(props) {
   const formControlContext = useFormControlContext();
   const radioGroupContext = useRadioGroupContext();
   const radioContext = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: radioContext.generateId("input")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "style", "aria-labelledby", "aria-describedby", "onChange", "onFocus", "onBlur"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: radioContext.generateId("input"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "style",
+    "aria-labelledby",
+    "aria-describedby",
+    "onChange",
+    "onFocus",
+    "onBlur",
+  ]);
   const ariaLabelledBy = () => {
-    return [
-      local["aria-labelledby"],
-      radioContext.labelId(),
-      // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby
-      local["aria-labelledby"] != null && others["aria-label"] != null ? others.id : void 0
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        local["aria-labelledby"],
+        radioContext.labelId(),
+        // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby
+        local["aria-labelledby"] != null && others["aria-label"] != null
+          ? others.id
+          : void 0,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const ariaDescribedBy = () => {
-    return [local["aria-describedby"], radioContext.descriptionId(), radioGroupContext.ariaDescribedBy()].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        local["aria-describedby"],
+        radioContext.descriptionId(),
+        radioGroupContext.ariaDescribedBy(),
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const [isInternalChangeEvent, setIsInternalChangeEvent] = createSignal(false);
   const onChange = (e2) => {
@@ -9071,101 +10485,156 @@ function RadioGroupItemInput(props) {
     callHandler(e2, local.onBlur);
     radioContext.setIsFocused(false);
   };
-  createEffect(on([() => radioContext.isSelected(), () => radioContext.value()], (c2) => {
-    if (!c2[0] && c2[1] === radioContext.value())
-      return;
-    setIsInternalChangeEvent(true);
-    const ref = radioContext.inputRef();
-    ref?.dispatchEvent(new Event("input", {
-      bubbles: true,
-      cancelable: true
-    }));
-    ref?.dispatchEvent(new Event("change", {
-      bubbles: true,
-      cancelable: true
-    }));
-  }, {
-    defer: true
-  }));
+  createEffect(
+    on(
+      [() => radioContext.isSelected(), () => radioContext.value()],
+      (c2) => {
+        if (!c2[0] && c2[1] === radioContext.value()) return;
+        setIsInternalChangeEvent(true);
+        const ref = radioContext.inputRef();
+        ref?.dispatchEvent(
+          new Event("input", {
+            bubbles: true,
+            cancelable: true,
+          })
+        );
+        ref?.dispatchEvent(
+          new Event("change", {
+            bubbles: true,
+            cancelable: true,
+          })
+        );
+      },
+      {
+        defer: true,
+      }
+    )
+  );
   createEffect(() => onCleanup(radioContext.registerInput(others.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "input",
-    ref(r$) {
-      const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    type: "radio",
-    get name() {
-      return formControlContext.name();
-    },
-    get value() {
-      return radioContext.value();
-    },
-    get checked() {
-      return radioContext.isSelected();
-    },
-    get required() {
-      return formControlContext.isRequired();
-    },
-    get disabled() {
-      return radioContext.isDisabled();
-    },
-    get readonly() {
-      return formControlContext.isReadOnly();
-    },
-    get style() {
-      return combineStyle({
-        ...visuallyHiddenStyles
-      }, local.style);
-    },
-    get ["aria-labelledby"]() {
-      return ariaLabelledBy();
-    },
-    get ["aria-describedby"]() {
-      return ariaDescribedBy();
-    },
-    onChange,
-    onFocus,
-    onBlur
-  }, () => radioContext.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "input",
+        ref(r$) {
+          const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        type: "radio",
+        get name() {
+          return formControlContext.name();
+        },
+        get value() {
+          return radioContext.value();
+        },
+        get checked() {
+          return radioContext.isSelected();
+        },
+        get required() {
+          return formControlContext.isRequired();
+        },
+        get disabled() {
+          return radioContext.isDisabled();
+        },
+        get readonly() {
+          return formControlContext.isReadOnly();
+        },
+        get style() {
+          return combineStyle(
+            {
+              ...visuallyHiddenStyles,
+            },
+            local.style
+          );
+        },
+        get ["aria-labelledby"]() {
+          return ariaLabelledBy();
+        },
+        get ["aria-describedby"]() {
+          return ariaDescribedBy();
+        },
+        onChange,
+        onFocus,
+        onBlur,
+      },
+      () => radioContext.dataset(),
+      others
+    )
+  );
 }
 function RadioGroupItemLabel(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerLabel(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "label",
-    get ["for"]() {
-      return context.inputId();
-    }
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "label",
+        get ["for"]() {
+          return context.inputId();
+        },
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function RadioGroupLabel(props) {
-  return createComponent(FormControlLabel, mergeProps({
-    as: "span"
-  }, props));
+  return createComponent(
+    FormControlLabel,
+    mergeProps(
+      {
+        as: "span",
+      },
+      props
+    )
+  );
 }
 function RadioGroupRoot(props) {
   let ref;
   const defaultId = `radiogroup-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId,
-    orientation: "vertical"
-  }, props);
-  const [local, formControlProps, others] = splitProps(mergedProps, ["ref", "value", "defaultValue", "onChange", "orientation", "aria-labelledby", "aria-describedby"], FORM_CONTROL_PROP_NAMES);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+      orientation: "vertical",
+    },
+    props
+  );
+  const [local, formControlProps, others] = splitProps(
+    mergedProps,
+    [
+      "ref",
+      "value",
+      "defaultValue",
+      "onChange",
+      "orientation",
+      "aria-labelledby",
+      "aria-describedby",
+    ],
+    FORM_CONTROL_PROP_NAMES
+  );
   const [selected, setSelected] = createControllableSignal({
     value: () => local.value,
     defaultValue: () => local.defaultValue,
-    onChange: (value) => local.onChange?.(value)
+    onChange: (value) => local.onChange?.(value),
   });
-  const {
-    formControlContext
-  } = createFormControl(formControlProps);
-  createFormResetListener(() => ref, () => setSelected(local.defaultValue ?? ""));
+  const { formControlContext } = createFormControl(formControlProps);
+  createFormResetListener(
+    () => ref,
+    () => setSelected(local.defaultValue ?? "")
+  );
   const ariaLabelledBy = () => {
-    return formControlContext.getAriaLabelledBy(access(formControlProps.id), others["aria-label"], local["aria-labelledby"]);
+    return formControlContext.getAriaLabelledBy(
+      access(formControlProps.id),
+      others["aria-label"],
+      local["aria-labelledby"]
+    );
   };
   const ariaDescribedBy = () => {
     return formControlContext.getAriaDescribedBy(local["aria-describedby"]);
@@ -9186,7 +10655,7 @@ function RadioGroupRoot(props) {
           const radio = el;
           radio.checked = isSelectedValue(radio.value);
         }
-    }
+    },
   };
   return createComponent(FormControlContext.Provider, {
     value: formControlContext,
@@ -9194,41 +10663,50 @@ function RadioGroupRoot(props) {
       return createComponent(RadioGroupContext.Provider, {
         value: context,
         get children() {
-          return createComponent(Polymorphic, mergeProps({
-            as: "div",
-            ref(r$) {
-              const _ref$ = mergeRefs((el) => ref = el, local.ref);
-              typeof _ref$ === "function" && _ref$(r$);
-            },
-            role: "radiogroup",
-            get id() {
-              return access(formControlProps.id);
-            },
-            get ["aria-invalid"]() {
-              return formControlContext.validationState() === "invalid" || void 0;
-            },
-            get ["aria-required"]() {
-              return formControlContext.isRequired() || void 0;
-            },
-            get ["aria-disabled"]() {
-              return formControlContext.isDisabled() || void 0;
-            },
-            get ["aria-readonly"]() {
-              return formControlContext.isReadOnly() || void 0;
-            },
-            get ["aria-orientation"]() {
-              return local.orientation;
-            },
-            get ["aria-labelledby"]() {
-              return ariaLabelledBy();
-            },
-            get ["aria-describedby"]() {
-              return ariaDescribedBy();
-            }
-          }, () => formControlContext.dataset(), others));
-        }
+          return createComponent(
+            Polymorphic,
+            mergeProps(
+              {
+                as: "div",
+                ref(r$) {
+                  const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+                  typeof _ref$ === "function" && _ref$(r$);
+                },
+                role: "radiogroup",
+                get id() {
+                  return access(formControlProps.id);
+                },
+                get ["aria-invalid"]() {
+                  return (
+                    formControlContext.validationState() === "invalid" || void 0
+                  );
+                },
+                get ["aria-required"]() {
+                  return formControlContext.isRequired() || void 0;
+                },
+                get ["aria-disabled"]() {
+                  return formControlContext.isDisabled() || void 0;
+                },
+                get ["aria-readonly"]() {
+                  return formControlContext.isReadOnly() || void 0;
+                },
+                get ["aria-orientation"]() {
+                  return local.orientation;
+                },
+                get ["aria-labelledby"]() {
+                  return ariaLabelledBy();
+                },
+                get ["aria-describedby"]() {
+                  return ariaDescribedBy();
+                },
+              },
+              () => formControlContext.dataset(),
+              others
+            )
+          );
+        },
       });
-    }
+    },
   });
 }
 var radio_group_exports, RadioGroupContext, RadioGroupItemContext, RadioGroup;
@@ -9257,7 +10735,7 @@ var init_Q2BOFK7I = __esm({
       ItemLabel: () => RadioGroupItemLabel,
       Label: () => RadioGroupLabel,
       RadioGroup: () => RadioGroup,
-      Root: () => RadioGroupRoot
+      Root: () => RadioGroupRoot,
     });
     RadioGroupContext = createContext();
     RadioGroupItemContext = createContext();
@@ -9270,9 +10748,9 @@ var init_Q2BOFK7I = __esm({
       ItemIndicator: RadioGroupItemIndicator,
       ItemInput: RadioGroupItemInput,
       ItemLabel: RadioGroupItemLabel,
-      Label: RadioGroupLabel
+      Label: RadioGroupLabel,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/GLKC2QFF.js
@@ -9299,9 +10777,10 @@ function createSelectableList(props, ref, scrollRef) {
       allowsTabNavigation: () => access(props.allowsTabNavigation),
       isVirtualized: () => access(props.isVirtualized),
       scrollToKey: (key) => access(props.scrollToKey)?.(key),
-      orientation: () => access(props.orientation)
+      orientation: () => access(props.orientation),
     },
-    ref);
+    ref
+  );
 }
 var ListKeyboardDelegate;
 var init_GLKC2QFF = __esm({
@@ -9403,7 +10882,8 @@ var init_GLKC2QFF = __esm({
         if (!collator) {
           return;
         }
-        let key = fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();
+        let key =
+          fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();
         while (key != null) {
           const item = this.collection().getItem(key);
           if (item) {
@@ -9416,7 +10896,7 @@ var init_GLKC2QFF = __esm({
         }
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ISKHZMHS.js
@@ -9428,7 +10908,7 @@ function createFocusScope(props, ref) {
     },
     resume() {
       setIsPaused(false);
-    }
+    },
   };
   let lastFocusedElement = null;
   const onMountAutoFocus = (e2) => props.onMountAutoFocus?.(e2);
@@ -9446,7 +10926,9 @@ function createFocusScope(props, ref) {
     if (!container) {
       return [];
     }
-    return getAllTabbableIn(container, true).filter((el) => !el.hasAttribute("data-focus-trap"));
+    return getAllTabbableIn(container, true).filter(
+      (el) => !el.hasAttribute("data-focus-trap")
+    );
   };
   const firstTabbable = () => {
     const items = tabbables();
@@ -9482,7 +10964,10 @@ function createFocusScope(props, ref) {
     const previouslyFocusedElement = getActiveElement(container);
     const hasFocusedCandidate = contains(container, previouslyFocusedElement);
     if (!hasFocusedCandidate) {
-      const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT_EVENT, EVENT_OPTIONS);
+      const mountEvent = new CustomEvent(
+        AUTOFOCUS_ON_MOUNT_EVENT,
+        EVENT_OPTIONS
+      );
       container.addEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);
       container.dispatchEvent(mountEvent);
       if (!mountEvent.defaultPrevented) {
@@ -9497,16 +10982,27 @@ function createFocusScope(props, ref) {
     onCleanup(() => {
       container.removeEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);
       setTimeout(() => {
-        const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS);
+        const unmountEvent = new CustomEvent(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          EVENT_OPTIONS
+        );
         if (shouldPreventUnmountAutoFocus()) {
           unmountEvent.preventDefault();
         }
-        container.addEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);
+        container.addEventListener(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          onUnmountAutoFocus
+        );
         container.dispatchEvent(unmountEvent);
         if (!unmountEvent.defaultPrevented) {
-          focusWithoutScrolling(previouslyFocusedElement ?? ownerDocument().body);
+          focusWithoutScrolling(
+            previouslyFocusedElement ?? ownerDocument().body
+          );
         }
-        container.removeEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);
+        container.removeEventListener(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          onUnmountAutoFocus
+        );
         focusScopeStack.remove(focusScope);
       }, 0);
     });
@@ -9584,7 +11080,7 @@ function createFocusScope(props, ref) {
     });
     observer.observe(container, {
       childList: true,
-      subtree: false
+      subtree: false,
     });
     onCleanup(() => {
       startSentinel.removeEventListener("focusin", onFocus);
@@ -9595,7 +11091,10 @@ function createFocusScope(props, ref) {
     });
   });
 }
-var AUTOFOCUS_ON_MOUNT_EVENT, AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS, focusScopeStack;
+var AUTOFOCUS_ON_MOUNT_EVENT,
+  AUTOFOCUS_ON_UNMOUNT_EVENT,
+  EVENT_OPTIONS,
+  focusScopeStack;
 var init_ISKHZMHS = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ISKHZMHS.js"() {
     init_ZKYDDHM6();
@@ -9606,7 +11105,7 @@ var init_ISKHZMHS = __esm({
     AUTOFOCUS_ON_UNMOUNT_EVENT = "focusScope.autoFocusOnUnmount";
     EVENT_OPTIONS = {
       bubbles: false,
-      cancelable: true
+      cancelable: true,
     };
     focusScopeStack = {
       /** A stack of focus scopes, with the active one at the top */
@@ -9624,9 +11123,9 @@ var init_ISKHZMHS = __esm({
       remove(scope) {
         this.stack = removeItemFromArray(this.stack, scope);
         this.active()?.resume();
-      }
+      },
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YA7DCYMB.js
@@ -9634,7 +11133,7 @@ var DATA_LIVE_ANNOUNCER_ATTR;
 var init_YA7DCYMB = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YA7DCYMB.js"() {
     DATA_LIVE_ANNOUNCER_ATTR = "data-live-announcer";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/TZGE2AQH.js
@@ -9656,7 +11155,12 @@ function ariaHideOutside(targets, root = document.body) {
       visibleNodes.add(element);
     }
     const acceptNode = (node) => {
-      if (visibleNodes.has(node) || node.parentElement && hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute("role") !== "row") {
+      if (
+        visibleNodes.has(node) ||
+        (node.parentElement &&
+          hiddenNodes.has(node.parentElement) &&
+          node.parentElement.getAttribute("role") !== "row")
+      ) {
         return NodeFilter.FILTER_REJECT;
       }
       for (const target of visibleNodes) {
@@ -9667,7 +11171,7 @@ function ariaHideOutside(targets, root = document.body) {
       return NodeFilter.FILTER_ACCEPT;
     };
     const walker2 = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {
-      acceptNode
+      acceptNode,
     });
     const acceptRoot = acceptNode(root2);
     if (acceptRoot === NodeFilter.FILTER_ACCEPT) {
@@ -9701,9 +11205,11 @@ function ariaHideOutside(targets, root = document.body) {
       if (change.type !== "childList" || change.addedNodes.length === 0) {
         continue;
       }
-      if (![...visibleNodes, ...hiddenNodes].some(
-        (node) => node.contains(change.target)
-      )) {
+      if (
+        ![...visibleNodes, ...hiddenNodes].some((node) =>
+          node.contains(change.target)
+        )
+      ) {
         for (const node of change.removedNodes) {
           if (node instanceof Element) {
             visibleNodes.delete(node);
@@ -9711,7 +11217,11 @@ function ariaHideOutside(targets, root = document.body) {
           }
         }
         for (const node of change.addedNodes) {
-          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true")) {
+          if (
+            (node instanceof HTMLElement || node instanceof SVGElement) &&
+            (node.dataset.liveAnnouncer === "true" ||
+              node.dataset.reactAriaTopLayer === "true")
+          ) {
             visibleNodes.add(node);
           } else if (node instanceof Element) {
             walk(node);
@@ -9727,7 +11237,7 @@ function ariaHideOutside(targets, root = document.body) {
     },
     disconnect() {
       observer.disconnect();
-    }
+    },
   };
   observerStack.push(observerWrapper);
   return () => {
@@ -9763,7 +11273,7 @@ var init_TZGE2AQH = __esm({
     init_solid();
     refCountMap = /* @__PURE__ */ new WeakMap();
     observerStack = [];
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/HD4B7J7A.js
@@ -9788,7 +11298,7 @@ var init_HD4B7J7A = __esm({
           activeStyles.set(props.key, {
             activeCount: 1,
             originalStyles,
-            properties: properties.map((property) => property.key)
+            properties: properties.map((property) => property.key),
           });
         }
         Object.assign(props.element.style, props.style);
@@ -9803,7 +11313,9 @@ var init_HD4B7J7A = __esm({
             return;
           }
           activeStyles.delete(props.key);
-          for (const [key, value] of Object.entries(activeStyle2.originalStyles)) {
+          for (const [key, value] of Object.entries(
+            activeStyle2.originalStyles
+          )) {
             props.element.style[key] = value;
           }
           for (const property of activeStyle2.properties) {
@@ -9817,14 +11329,14 @@ var init_HD4B7J7A = __esm({
       });
     };
     style_default = createStyle;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/create/style.js
 var init_style = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/create/style.js"() {
     init_HD4B7J7A();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/scroll/index.js
@@ -9836,17 +11348,27 @@ var init_scroll = __esm({
         case "x":
           return [element.clientWidth, element.scrollLeft, element.scrollWidth];
         case "y":
-          return [element.clientHeight, element.scrollTop, element.scrollHeight];
+          return [
+            element.clientHeight,
+            element.scrollTop,
+            element.scrollHeight,
+          ];
       }
     };
     isScrollContainer = (element, axis) => {
       const styles = getComputedStyle(element);
       const overflow = axis === "x" ? styles.overflowX : styles.overflowY;
-      return overflow === "auto" || overflow === "scroll" || // The HTML element is a scroll container if it has overflow visible
-      element.tagName === "HTML" && overflow === "visible";
+      return (
+        overflow === "auto" ||
+        overflow === "scroll" || // The HTML element is a scroll container if it has overflow visible
+        (element.tagName === "HTML" && overflow === "visible")
+      );
     };
     getScrollAtLocation = (location, axis, stopAt) => {
-      const directionFactor = axis === "x" && window.getComputedStyle(location).direction === "rtl" ? -1 : 1;
+      const directionFactor =
+        axis === "x" && window.getComputedStyle(location).direction === "rtl"
+          ? -1
+          : 1;
       let currentElement = location;
       let availableScroll = 0;
       let availableScrollTop = 0;
@@ -9856,24 +11378,38 @@ var init_scroll = __esm({
           currentElement,
           axis
         );
-        const scrolled = scrollSize - clientSize - directionFactor * scrollOffset;
-        if ((scrollOffset !== 0 || scrolled !== 0) && isScrollContainer(currentElement, axis)) {
+        const scrolled =
+          scrollSize - clientSize - directionFactor * scrollOffset;
+        if (
+          (scrollOffset !== 0 || scrolled !== 0) &&
+          isScrollContainer(currentElement, axis)
+        ) {
           availableScroll += scrolled;
           availableScrollTop += scrollOffset;
         }
         if (currentElement === (stopAt ?? document.documentElement)) {
           wrapperReached = true;
         } else {
-          currentElement = currentElement._$host ?? currentElement.parentElement;
+          currentElement =
+            currentElement._$host ?? currentElement.parentElement;
         }
       } while (currentElement && !wrapperReached);
       return [availableScroll, availableScrollTop];
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-prevent-scroll@0.1.9_solid-js@1.9.5/node_modules/solid-prevent-scroll/dist/index.js
-var preventScrollStack, setPreventScrollStack, isActive, createPreventScroll, getDeltaXY, getTouchXY, wouldScroll, contains2, preventScroll_default, src_default2;
+var preventScrollStack,
+  setPreventScrollStack,
+  isActive,
+  createPreventScroll,
+  getDeltaXY,
+  getTouchXY,
+  wouldScroll,
+  contains2,
+  preventScroll_default,
+  src_default2;
 var init_dist14 = __esm({
   "../../node_modules/.pnpm/solid-prevent-scroll@0.1.9_solid-js@1.9.5/node_modules/solid-prevent-scroll/dist/index.js"() {
     init_reactivity();
@@ -9881,7 +11417,8 @@ var init_dist14 = __esm({
     init_style();
     init_scroll();
     [preventScrollStack, setPreventScrollStack] = createSignal([]);
-    isActive = (id) => preventScrollStack().indexOf(id) === preventScrollStack().length - 1;
+    isActive = (id) =>
+      preventScrollStack().indexOf(id) === preventScrollStack().length - 1;
     createPreventScroll = (props) => {
       const defaultedProps = mergeProps(
         {
@@ -9891,7 +11428,7 @@ var init_dist14 = __esm({
           preventScrollbarShift: true,
           preventScrollbarShiftMode: "padding",
           restoreScrollPosition: true,
-          allowPinchZoom: false
+          allowPinchZoom: false,
         },
         props
       );
@@ -9903,13 +11440,16 @@ var init_dist14 = __esm({
         if (!access2(defaultedProps.enabled)) return;
         setPreventScrollStack((stack) => [...stack, preventScrollId]);
         onCleanup(() => {
-          setPreventScrollStack(
-            (stack) => stack.filter((id) => id !== preventScrollId)
+          setPreventScrollStack((stack) =>
+            stack.filter((id) => id !== preventScrollId)
           );
         });
       });
       createEffect(() => {
-        if (!access2(defaultedProps.enabled) || !access2(defaultedProps.hideScrollbar))
+        if (
+          !access2(defaultedProps.enabled) ||
+          !access2(defaultedProps.hideScrollbar)
+        )
           return;
         const { body } = document;
         const scrollbarWidth = window.innerWidth - body.offsetWidth;
@@ -9917,14 +11457,20 @@ var init_dist14 = __esm({
           const style2 = { overflow: "hidden" };
           const properties = [];
           if (scrollbarWidth > 0) {
-            if (access2(defaultedProps.preventScrollbarShiftMode) === "padding") {
-              style2.paddingRight = `calc(${window.getComputedStyle(body).paddingRight} + ${scrollbarWidth}px)`;
+            if (
+              access2(defaultedProps.preventScrollbarShiftMode) === "padding"
+            ) {
+              style2.paddingRight = `calc(${
+                window.getComputedStyle(body).paddingRight
+              } + ${scrollbarWidth}px)`;
             } else {
-              style2.marginRight = `calc(${window.getComputedStyle(body).marginRight} + ${scrollbarWidth}px)`;
+              style2.marginRight = `calc(${
+                window.getComputedStyle(body).marginRight
+              } + ${scrollbarWidth}px)`;
             }
             properties.push({
               key: "--scrollbar-width",
-              value: `${scrollbarWidth}px`
+              value: `${scrollbarWidth}px`,
             });
           }
           const offsetTop = window.scrollY;
@@ -9935,31 +11481,35 @@ var init_dist14 = __esm({
             style: style2,
             properties,
             cleanup: () => {
-              if (access2(defaultedProps.restoreScrollPosition) && scrollbarWidth > 0) {
+              if (
+                access2(defaultedProps.restoreScrollPosition) &&
+                scrollbarWidth > 0
+              ) {
                 window.scrollTo(offsetLeft, offsetTop);
               }
-            }
+            },
           });
         } else {
           style_default({
             key: "prevent-scroll",
             element: body,
             style: {
-              overflow: "hidden"
-            }
+              overflow: "hidden",
+            },
           });
         }
       });
       createEffect(() => {
-        if (!isActive(preventScrollId) || !access2(defaultedProps.enabled)) return;
+        if (!isActive(preventScrollId) || !access2(defaultedProps.enabled))
+          return;
         document.addEventListener("wheel", maybePreventWheel, {
-          passive: false
+          passive: false,
         });
         document.addEventListener("touchstart", logTouchStart, {
-          passive: false
+          passive: false,
         });
         document.addEventListener("touchmove", maybePreventTouch, {
-          passive: false
+          passive: false,
         });
         onCleanup(() => {
           document.removeEventListener("wheel", maybePreventWheel);
@@ -9996,7 +11546,10 @@ var init_dist14 = __esm({
         if (event.touches.length === 2) {
           shouldCancel = !access2(defaultedProps.allowPinchZoom);
         } else {
-          if (currentTouchStartAxis == null || currentTouchStartDelta === null) {
+          if (
+            currentTouchStartAxis == null ||
+            currentTouchStartDelta === null
+          ) {
             const delta = getTouchXY(event).map(
               (touch, i2) => currentTouchStart[i2] - touch
             );
@@ -10025,11 +11578,11 @@ var init_dist14 = __esm({
         }
       };
     };
-    getDeltaXY = (event) => [
-      event.deltaX,
-      event.deltaY
-    ];
-    getTouchXY = (event) => event.changedTouches[0] ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
+    getDeltaXY = (event) => [event.deltaX, event.deltaY];
+    getTouchXY = (event) =>
+      event.changedTouches[0]
+        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]
+        : [0, 0];
     wouldScroll = (target, axis, delta, wrapper) => {
       const targetInWrapper = wrapper !== null && contains2(wrapper, target);
       const [availableScroll, availableScrollTop] = getScrollAtLocation(
@@ -10056,7 +11609,7 @@ var init_dist14 = __esm({
     };
     preventScroll_default = createPreventScroll;
     src_default2 = preventScroll_default;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/3F4B62RP.js
@@ -10066,21 +11619,27 @@ function useOptionalMenuContext() {
 function useMenuContext() {
   const context = useOptionalMenuContext();
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuContext` must be used within a `Menu` component");
+    throw new Error(
+      "[kobalte]: `useMenuContext` must be used within a `Menu` component"
+    );
   }
   return context;
 }
 function useMenuItemContext() {
   const context = useContext(MenuItemContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component");
+    throw new Error(
+      "[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component"
+    );
   }
   return context;
 }
 function useMenuRootContext() {
   const context = useContext(MenuRootContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component");
+    throw new Error(
+      "[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component"
+    );
   }
   return context;
 }
@@ -10088,10 +11647,29 @@ function MenuItemBase(props) {
   let ref;
   const rootContext = useMenuRootContext();
   const menuContext = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`item-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "textValue", "disabled", "closeOnSelect", "checked", "indeterminate", "onSelect", "onPointerMove", "onPointerLeave", "onPointerDown", "onPointerUp", "onClick", "onKeyDown", "onMouseDown", "onFocus"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`item-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "textValue",
+    "disabled",
+    "closeOnSelect",
+    "checked",
+    "indeterminate",
+    "onSelect",
+    "onPointerMove",
+    "onPointerLeave",
+    "onPointerDown",
+    "onPointerUp",
+    "onClick",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocus",
+  ]);
   const [labelId, setLabelId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
   const [labelRef, setLabelRef] = createSignal();
@@ -10111,17 +11689,21 @@ function MenuItemBase(props) {
       ref: () => ref,
       type: "item",
       key: key(),
-      textValue: local.textValue ?? labelRef()?.textContent ?? ref?.textContent ?? "",
-      disabled: local.disabled ?? false
-    })
+      textValue:
+        local.textValue ?? labelRef()?.textContent ?? ref?.textContent ?? "",
+      disabled: local.disabled ?? false,
+    }),
   });
-  const selectableItem = createSelectableItem({
-    key,
-    selectionManager,
-    shouldSelectOnPressUp: true,
-    allowsDifferentPressOrigin: true,
-    disabled: () => local.disabled
-  }, () => ref);
+  const selectableItem = createSelectableItem(
+    {
+      key,
+      selectionManager,
+      shouldSelectOnPressUp: true,
+      allowsDifferentPressOrigin: true,
+      disabled: () => local.disabled,
+    },
+    () => ref
+  );
   const onPointerMove = (e2) => {
     callHandler(e2, local.onPointerMove);
     if (e2.pointerType !== "mouse") {
@@ -10179,7 +11761,7 @@ function MenuItemBase(props) {
     "data-indeterminate": local.indeterminate ? "" : void 0,
     "data-checked": local.checked && !local.indeterminate ? "" : void 0,
     "data-disabled": local.disabled ? "" : void 0,
-    "data-highlighted": isHighlighted() ? "" : void 0
+    "data-highlighted": isHighlighted() ? "" : void 0,
   }));
   const context = {
     isChecked: () => local.checked,
@@ -10187,81 +11769,120 @@ function MenuItemBase(props) {
     setLabelRef,
     generateId: createGenerateId(() => others.id),
     registerLabel: createRegisterId(setLabelId),
-    registerDescription: createRegisterId(setDescriptionId)
+    registerDescription: createRegisterId(setDescriptionId),
   };
   return createComponent(MenuItemContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs((el) => ref = el, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        },
-        get tabIndex() {
-          return selectableItem.tabIndex();
-        },
-        get ["aria-checked"]() {
-          return ariaChecked();
-        },
-        get ["aria-disabled"]() {
-          return local.disabled;
-        },
-        get ["aria-labelledby"]() {
-          return labelId();
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+            get tabIndex() {
+              return selectableItem.tabIndex();
+            },
+            get ["aria-checked"]() {
+              return ariaChecked();
+            },
+            get ["aria-disabled"]() {
+              return local.disabled;
+            },
+            get ["aria-labelledby"]() {
+              return labelId();
+            },
+            get ["aria-describedby"]() {
+              return descriptionId();
+            },
+            get ["data-key"]() {
+              return selectableItem.dataKey();
+            },
+            get onPointerDown() {
+              return composeEventHandlers([
+                local.onPointerDown,
+                selectableItem.onPointerDown,
+              ]);
+            },
+            get onPointerUp() {
+              return composeEventHandlers([
+                onPointerUp,
+                selectableItem.onPointerUp,
+              ]);
+            },
+            get onClick() {
+              return composeEventHandlers([
+                local.onClick,
+                selectableItem.onClick,
+              ]);
+            },
+            get onKeyDown() {
+              return composeEventHandlers([
+                onKeyDown,
+                selectableItem.onKeyDown,
+              ]);
+            },
+            get onMouseDown() {
+              return composeEventHandlers([
+                local.onMouseDown,
+                selectableItem.onMouseDown,
+              ]);
+            },
+            get onFocus() {
+              return composeEventHandlers([
+                local.onFocus,
+                selectableItem.onFocus,
+              ]);
+            },
+            onPointerMove,
+            onPointerLeave,
+          },
+          dataset,
+          others
+        )
+      );
+    },
+  });
+}
+function MenuCheckboxItem(props) {
+  const mergedProps = mergeDefaultProps(
+    {
+      closeOnSelect: false,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "checked",
+    "defaultChecked",
+    "onChange",
+    "onSelect",
+  ]);
+  const state = createToggleState({
+    isSelected: () => local.checked,
+    defaultIsSelected: () => local.defaultChecked,
+    onSelectedChange: (checked) => local.onChange?.(checked),
+    isDisabled: () => others.disabled,
+  });
+  const onSelect = () => {
+    local.onSelect?.();
+    state.toggle();
+  };
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitemcheckbox",
+        get checked() {
+          return state.isSelected();
         },
-        get ["aria-describedby"]() {
-          return descriptionId();
-        },
-        get ["data-key"]() {
-          return selectableItem.dataKey();
-        },
-        get onPointerDown() {
-          return composeEventHandlers([local.onPointerDown, selectableItem.onPointerDown]);
-        },
-        get onPointerUp() {
-          return composeEventHandlers([onPointerUp, selectableItem.onPointerUp]);
-        },
-        get onClick() {
-          return composeEventHandlers([local.onClick, selectableItem.onClick]);
-        },
-        get onKeyDown() {
-          return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
-        },
-        get onMouseDown() {
-          return composeEventHandlers([local.onMouseDown, selectableItem.onMouseDown]);
-        },
-        get onFocus() {
-          return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
-        },
-        onPointerMove,
-        onPointerLeave
-      }, dataset, others));
-    }
-  });
-}
-function MenuCheckboxItem(props) {
-  const mergedProps = mergeDefaultProps({
-    closeOnSelect: false
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["checked", "defaultChecked", "onChange", "onSelect"]);
-  const state = createToggleState({
-    isSelected: () => local.checked,
-    defaultIsSelected: () => local.defaultChecked,
-    onSelectedChange: (checked) => local.onChange?.(checked),
-    isDisabled: () => others.disabled
-  });
-  const onSelect = () => {
-    local.onSelect?.();
-    state.toggle();
-  };
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitemcheckbox",
-    get checked() {
-      return state.isSelected();
-    },
-    onSelect
-  }, others));
+        onSelect,
+      },
+      others
+    )
+  );
 }
 function useOptionalMenubarContext() {
   return useContext(MenubarContext);
@@ -10270,29 +11891,47 @@ function MenuTrigger(props) {
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
-  const {
-    direction
-  } = useLocale();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId("trigger")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "disabled", "onPointerDown", "onClick", "onKeyDown", "onMouseOver", "onFocus"]);
+  const { direction } = useLocale();
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId("trigger"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "disabled",
+    "onPointerDown",
+    "onClick",
+    "onKeyDown",
+    "onMouseOver",
+    "onFocus",
+  ]);
   let key = () => rootContext.value();
   if (optionalMenubarContext !== void 0) {
     key = () => rootContext.value() ?? local.id;
     if (optionalMenubarContext.lastValue() === void 0)
       optionalMenubarContext.setLastValue(key);
   }
-  const tagName = createTagName(() => context.triggerRef(), () => "button");
+  const tagName = createTagName(
+    () => context.triggerRef(),
+    () => "button"
+  );
   const isNativeLink = createMemo(() => {
-    return tagName() === "a" && context.triggerRef()?.getAttribute("href") != null;
+    return (
+      tagName() === "a" && context.triggerRef()?.getAttribute("href") != null
+    );
   });
-  createEffect(on(() => optionalMenubarContext?.value(), (value) => {
-    if (!isNativeLink())
-      return;
-    if (value === key())
-      context.triggerRef()?.focus();
-  }));
+  createEffect(
+    on(
+      () => optionalMenubarContext?.value(),
+      (value) => {
+        if (!isNativeLink()) return;
+        if (value === key()) context.triggerRef()?.focus();
+      }
+    )
+  );
   const handleClick = () => {
     if (optionalMenubarContext !== void 0) {
       if (!context.isOpen()) {
@@ -10304,8 +11943,7 @@ function MenuTrigger(props) {
         if (optionalMenubarContext.value() === key())
           optionalMenubarContext.closeMenu();
       }
-    } else
-      context.toggle(true);
+    } else context.toggle(true);
   };
   const onPointerDown = (e2) => {
     callHandler(e2, local.onPointerDown);
@@ -10317,8 +11955,7 @@ function MenuTrigger(props) {
   const onClick = (e2) => {
     callHandler(e2, local.onClick);
     if (!local.disabled) {
-      if (e2.currentTarget.dataset.pointerType === "touch")
-        handleClick();
+      if (e2.currentTarget.dataset.pointerType === "touch") handleClick();
     }
   };
   const onKeyDown = (e2) => {
@@ -10350,15 +11987,13 @@ function MenuTrigger(props) {
         context.open("last");
         break;
       case MENUBAR_KEYS.next(direction(), rootContext.orientation()):
-        if (optionalMenubarContext === void 0)
-          break;
+        if (optionalMenubarContext === void 0) break;
         e2.stopPropagation();
         e2.preventDefault();
         optionalMenubarContext.nextMenu();
         break;
       case MENUBAR_KEYS.previous(direction(), rootContext.orientation()):
-        if (optionalMenubarContext === void 0)
-          break;
+        if (optionalMenubarContext === void 0) break;
         e2.stopPropagation();
         e2.preventDefault();
         optionalMenubarContext.previousMenu();
@@ -10367,52 +12002,74 @@ function MenuTrigger(props) {
   };
   const onMouseOver = (e2) => {
     callHandler(e2, local.onMouseOver);
-    if (context.triggerRef()?.dataset.pointerType === "touch")
-      return;
-    if (!local.disabled && optionalMenubarContext !== void 0 && optionalMenubarContext.value() !== void 0) {
+    if (context.triggerRef()?.dataset.pointerType === "touch") return;
+    if (
+      !local.disabled &&
+      optionalMenubarContext !== void 0 &&
+      optionalMenubarContext.value() !== void 0
+    ) {
       optionalMenubarContext.setValue(key);
     }
   };
   const onFocus = (e2) => {
     callHandler(e2, local.onFocus);
-    if (optionalMenubarContext !== void 0 && e2.currentTarget.dataset.pointerType !== "touch")
+    if (
+      optionalMenubarContext !== void 0 &&
+      e2.currentTarget.dataset.pointerType !== "touch"
+    )
       optionalMenubarContext.setValue(key);
   };
   createEffect(() => onCleanup(context.registerTriggerId(local.id)));
-  return createComponent(ButtonRoot, mergeProps({
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setTriggerRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get ["data-kb-menu-value-trigger"]() {
-      return rootContext.value();
-    },
-    get id() {
-      return local.id;
-    },
-    get disabled() {
-      return local.disabled;
-    },
-    "aria-haspopup": "true",
-    get ["aria-expanded"]() {
-      return context.isOpen();
-    },
-    get ["aria-controls"]() {
-      return createMemo(() => !!context.isOpen())() ? context.contentId() : void 0;
-    },
-    get ["data-highlighted"]() {
-      return key() !== void 0 && optionalMenubarContext?.value() === key() ? true : void 0;
-    },
-    get tabIndex() {
-      return optionalMenubarContext !== void 0 ? optionalMenubarContext.value() === key() || optionalMenubarContext.lastValue() === key() ? 0 : -1 : void 0;
-    },
-    onPointerDown,
-    onMouseOver,
-    onClick,
-    onKeyDown,
-    onFocus,
-    role: optionalMenubarContext !== void 0 ? "menuitem" : void 0
-  }, () => context.dataset(), others));
+  return createComponent(
+    ButtonRoot,
+    mergeProps(
+      {
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setTriggerRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get ["data-kb-menu-value-trigger"]() {
+          return rootContext.value();
+        },
+        get id() {
+          return local.id;
+        },
+        get disabled() {
+          return local.disabled;
+        },
+        "aria-haspopup": "true",
+        get ["aria-expanded"]() {
+          return context.isOpen();
+        },
+        get ["aria-controls"]() {
+          return createMemo(() => !!context.isOpen())()
+            ? context.contentId()
+            : void 0;
+        },
+        get ["data-highlighted"]() {
+          return key() !== void 0 && optionalMenubarContext?.value() === key()
+            ? true
+            : void 0;
+        },
+        get tabIndex() {
+          return optionalMenubarContext !== void 0
+            ? optionalMenubarContext.value() === key() ||
+              optionalMenubarContext.lastValue() === key()
+              ? 0
+              : -1
+            : void 0;
+        },
+        onPointerDown,
+        onMouseOver,
+        onClick,
+        onKeyDown,
+        onFocus,
+        role: optionalMenubarContext !== void 0 ? "menuitem" : void 0,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function useOptionalNavigationMenuContext() {
   return useContext(NavigationMenuContext);
@@ -10423,35 +12080,61 @@ function MenuContentBase(props) {
   const context = useMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
   const optionalNavigationMenuContext = useOptionalNavigationMenuContext();
-  const {
-    direction
-  } = useLocale();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`content-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "style", "onOpenAutoFocus", "onCloseAutoFocus", "onEscapeKeyDown", "onFocusOutside", "onPointerEnter", "onPointerMove", "onKeyDown", "onMouseDown", "onFocusIn", "onFocusOut"]);
+  const { direction } = useLocale();
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`content-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "style",
+    "onOpenAutoFocus",
+    "onCloseAutoFocus",
+    "onEscapeKeyDown",
+    "onFocusOutside",
+    "onPointerEnter",
+    "onPointerMove",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocusIn",
+    "onFocusOut",
+  ]);
   let lastPointerX = 0;
   const isRootModalContent = () => {
-    return context.parentMenuContext() == null && optionalMenubarContext === void 0 && rootContext.isModal();
+    return (
+      context.parentMenuContext() == null &&
+      optionalMenubarContext === void 0 &&
+      rootContext.isModal()
+    );
   };
-  const selectableList = createSelectableList({
-    selectionManager: context.listState().selectionManager,
-    collection: context.listState().collection,
-    autoFocus: context.autoFocus,
-    deferAutoFocus: true,
-    // ensure all menu items are mounted and collection is not empty before trying to autofocus.
-    shouldFocusWrap: true,
-    disallowTypeAhead: () => !context.listState().selectionManager().isFocused(),
-    orientation: () => rootContext.orientation() === "horizontal" ? "vertical" : "horizontal"
-  }, () => ref);
-  createFocusScope({
-    trapFocus: () => isRootModalContent() && context.isOpen(),
-    onMountAutoFocus: (event) => {
-      if (optionalMenubarContext === void 0)
-        local.onOpenAutoFocus?.(event);
+  const selectableList = createSelectableList(
+    {
+      selectionManager: context.listState().selectionManager,
+      collection: context.listState().collection,
+      autoFocus: context.autoFocus,
+      deferAutoFocus: true,
+      // ensure all menu items are mounted and collection is not empty before trying to autofocus.
+      shouldFocusWrap: true,
+      disallowTypeAhead: () =>
+        !context.listState().selectionManager().isFocused(),
+      orientation: () =>
+        rootContext.orientation() === "horizontal" ? "vertical" : "horizontal",
     },
-    onUnmountAutoFocus: local.onCloseAutoFocus
-  }, () => ref);
+    () => ref
+  );
+  createFocusScope(
+    {
+      trapFocus: () => isRootModalContent() && context.isOpen(),
+      onMountAutoFocus: (event) => {
+        if (optionalMenubarContext === void 0) local.onOpenAutoFocus?.(event);
+      },
+      onUnmountAutoFocus: local.onCloseAutoFocus,
+    },
+    () => ref
+  );
   const onKeyDown = (e2) => {
     if (!contains(e2.currentTarget, e2.target)) {
       return;
@@ -10470,8 +12153,7 @@ function MenuContentBase(props) {
             optionalMenubarContext.nextMenu();
             break;
           case MENUBAR_KEYS.previous(direction(), rootContext.orientation()):
-            if (e2.currentTarget.hasAttribute("data-closed"))
-              break;
+            if (e2.currentTarget.hasAttribute("data-closed")) break;
             e2.stopPropagation();
             e2.preventDefault();
             context.close(true);
@@ -10497,8 +12179,16 @@ function MenuContentBase(props) {
     if (!context.isOpen()) {
       return;
     }
-    context.parentMenuContext()?.listState().selectionManager().setFocused(false);
-    context.parentMenuContext()?.listState().selectionManager().setFocusedKey(void 0);
+    context
+      .parentMenuContext()
+      ?.listState()
+      .selectionManager()
+      .setFocused(false);
+    context
+      .parentMenuContext()
+      ?.listState()
+      .selectionManager()
+      .setFocusedKey(void 0);
   };
   const onPointerMove = (e2) => {
     callHandler(e2, local.onPointerMove);
@@ -10528,15 +12218,28 @@ function MenuContentBase(props) {
     get "aria-labelledby"() {
       return context.triggerId();
     },
-    onKeyDown: composeEventHandlers([local.onKeyDown, selectableList.onKeyDown, onKeyDown]),
-    onMouseDown: composeEventHandlers([local.onMouseDown, selectableList.onMouseDown]),
-    onFocusIn: composeEventHandlers([local.onFocusIn, selectableList.onFocusIn]),
-    onFocusOut: composeEventHandlers([local.onFocusOut, selectableList.onFocusOut]),
+    onKeyDown: composeEventHandlers([
+      local.onKeyDown,
+      selectableList.onKeyDown,
+      onKeyDown,
+    ]),
+    onMouseDown: composeEventHandlers([
+      local.onMouseDown,
+      selectableList.onMouseDown,
+    ]),
+    onFocusIn: composeEventHandlers([
+      local.onFocusIn,
+      selectableList.onFocusIn,
+    ]),
+    onFocusOut: composeEventHandlers([
+      local.onFocusOut,
+      selectableList.onFocusOut,
+    ]),
     onPointerEnter,
     onPointerMove,
     get "data-orientation"() {
       return rootContext.orientation();
-    }
+    },
   };
   return createComponent(Show, {
     get when() {
@@ -10545,41 +12248,67 @@ function MenuContentBase(props) {
     get children() {
       return createComponent(Show, {
         get when() {
-          return optionalNavigationMenuContext === void 0 || context.parentMenuContext() != null;
+          return (
+            optionalNavigationMenuContext === void 0 ||
+            context.parentMenuContext() != null
+          );
         },
         get fallback() {
-          return createComponent(Polymorphic, mergeProps({
-            as: "div"
-          }, () => context.dataset(), commonAttributes, others));
+          return createComponent(
+            Polymorphic,
+            mergeProps(
+              {
+                as: "div",
+              },
+              () => context.dataset(),
+              commonAttributes,
+              others
+            )
+          );
         },
         get children() {
           return createComponent(Popper.Positioner, {
             get children() {
-              return createComponent(DismissableLayer, mergeProps({
-                get disableOutsidePointerEvents() {
-                  return createMemo(() => !!isRootModalContent())() && context.isOpen();
-                },
-                get excludedElements() {
-                  return [context.triggerRef];
-                },
-                bypassTopMostLayerCheck: true,
-                get style() {
-                  return combineStyle({
-                    "--kb-menu-content-transform-origin": "var(--kb-popper-content-transform-origin)",
-                    position: "relative"
-                  }, local.style);
-                },
-                onEscapeKeyDown,
-                onFocusOutside,
-                get onDismiss() {
-                  return context.close;
-                }
-              }, () => context.dataset(), commonAttributes, others));
-            }
+              return createComponent(
+                DismissableLayer,
+                mergeProps(
+                  {
+                    get disableOutsidePointerEvents() {
+                      return (
+                        createMemo(() => !!isRootModalContent())() &&
+                        context.isOpen()
+                      );
+                    },
+                    get excludedElements() {
+                      return [context.triggerRef];
+                    },
+                    bypassTopMostLayerCheck: true,
+                    get style() {
+                      return combineStyle(
+                        {
+                          "--kb-menu-content-transform-origin":
+                            "var(--kb-popper-content-transform-origin)",
+                          position: "relative",
+                        },
+                        local.style
+                      );
+                    },
+                    onEscapeKeyDown,
+                    onFocusOutside,
+                    get onDismiss() {
+                      return context.close;
+                    },
+                  },
+                  () => context.dataset(),
+                  commonAttributes,
+                  others
+                )
+              );
+            },
           });
-        }
+        },
       });
-    }
+    },
   });
 }
 function MenuContent(props) {
@@ -10589,126 +12318,198 @@ function MenuContent(props) {
   const [local, others] = splitProps(props, ["ref"]);
   src_default2({
     element: () => ref ?? null,
-    enabled: () => context.contentPresent() && rootContext.preventScroll()
+    enabled: () => context.contentPresent() && rootContext.preventScroll(),
   });
-  return createComponent(MenuContentBase, mergeProps({
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => {
-        ref = el;
-      }, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    }
-  }, others));
+  return createComponent(
+    MenuContentBase,
+    mergeProps(
+      {
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => {
+            ref = el;
+          }, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+      },
+      others
+    )
+  );
 }
 function useMenuGroupContext() {
   const context = useContext(MenuGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component");
+    throw new Error(
+      "[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component"
+    );
   }
   return context;
 }
 function MenuGroup(props) {
   const rootContext = useMenuRootContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`group-${createUniqueId()}`)
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`group-${createUniqueId()}`),
+    },
+    props
+  );
   const [labelId, setLabelId] = createSignal();
   const context = {
     generateId: createGenerateId(() => mergedProps.id),
-    registerLabelId: createRegisterId(setLabelId)
+    registerLabelId: createRegisterId(setLabelId),
   };
   return createComponent(MenuGroupContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        role: "group",
-        get ["aria-labelledby"]() {
-          return labelId();
-        }
-      }, mergedProps));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            role: "group",
+            get ["aria-labelledby"]() {
+              return labelId();
+            },
+          },
+          mergedProps
+        )
+      );
+    },
   });
 }
 function MenuGroupLabel(props) {
   const context = useMenuGroupContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["id"]);
   createEffect(() => onCleanup(context.registerLabelId(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "span",
-    get id() {
-      return local.id;
-    },
-    "aria-hidden": "true"
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "span",
+        get id() {
+          return local.id;
+        },
+        "aria-hidden": "true",
+      },
+      others
+    )
+  );
 }
 function MenuIcon(props) {
   const context = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    children: "\u25BC"
-  }, props);
-  return createComponent(Polymorphic, mergeProps({
-    as: "span",
-    "aria-hidden": "true"
-  }, () => context.dataset(), mergedProps));
+  const mergedProps = mergeDefaultProps(
+    {
+      children: "\u25BC",
+    },
+    props
+  );
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "span",
+        "aria-hidden": "true",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function MenuItem(props) {
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitem",
-    closeOnSelect: true
-  }, props));
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitem",
+        closeOnSelect: true,
+      },
+      props
+    )
+  );
 }
 function MenuItemDescription(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["id"]);
   createEffect(() => onCleanup(context.registerDescription(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    get id() {
-      return local.id;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        get id() {
+          return local.id;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuItemIndicator(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("indicator")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("indicator"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["forceMount"]);
   return createComponent(Show, {
     get when() {
       return local.forceMount || context.isChecked();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div"
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function MenuItemLabel(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "id"]);
   createEffect(() => onCleanup(context.registerLabel(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setLabelRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get id() {
-      return local.id;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setLabelRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get id() {
+          return local.id;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuPortal(props) {
   const context = useMenuContext();
@@ -10718,57 +12519,76 @@ function MenuPortal(props) {
     },
     get children() {
       return createComponent(Portal, props);
-    }
+    },
   });
 }
 function useMenuRadioGroupContext() {
   const context = useContext(MenuRadioGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component");
+    throw new Error(
+      "[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component"
+    );
   }
   return context;
 }
 function MenuRadioGroup(props) {
   const rootContext = useMenuRootContext();
   const defaultId = rootContext.generateId(`radiogroup-${createUniqueId()}`);
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["value", "defaultValue", "onChange", "disabled"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "value",
+    "defaultValue",
+    "onChange",
+    "disabled",
+  ]);
   const [selected, setSelected] = createControllableSignal({
     value: () => local.value,
     defaultValue: () => local.defaultValue,
-    onChange: (value) => local.onChange?.(value)
+    onChange: (value) => local.onChange?.(value),
   });
   const context = {
     isDisabled: () => local.disabled,
     isSelectedValue: (value) => value === selected(),
-    setSelectedValue: setSelected
+    setSelectedValue: setSelected,
   };
   return createComponent(MenuRadioGroupContext.Provider, {
     value: context,
     get children() {
       return createComponent(MenuGroup, others);
-    }
+    },
   });
 }
 function MenuRadioItem(props) {
   const context = useMenuRadioGroupContext();
-  const mergedProps = mergeDefaultProps({
-    closeOnSelect: false
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      closeOnSelect: false,
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["value", "onSelect"]);
   const onSelect = () => {
     local.onSelect?.();
     context.setSelectedValue(local.value);
   };
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitemradio",
-    get checked() {
-      return context.isSelectedValue(local.value);
-    },
-    onSelect
-  }, others));
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitemradio",
+        get checked() {
+          return context.isSelectedValue(local.value);
+        },
+        onSelect,
+      },
+      others
+    )
+  );
 }
 function getPointerGraceArea(placement, event, contentEl) {
   const basePlacement = placement.split("-")[0];
@@ -10820,10 +12640,20 @@ function Menu(props) {
   const parentMenuContext = useOptionalMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
   const optionalNavigationMenuContext = useOptionalNavigationMenuContext();
-  const mergedProps = mergeDefaultProps({
-    placement: rootContext.orientation() === "horizontal" ? "bottom-start" : "right-start"
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["open", "defaultOpen", "onOpenChange"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      placement:
+        rootContext.orientation() === "horizontal"
+          ? "bottom-start"
+          : "right-start",
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "open",
+    "defaultOpen",
+    "onOpenChange",
+  ]);
   let pointerGraceTimeoutId = 0;
   let pointerGraceIntent = null;
   let pointerDir = "right";
@@ -10832,29 +12662,27 @@ function Menu(props) {
   const [triggerRef, setTriggerRef] = createSignal();
   const [contentRef, setContentRef] = createSignal();
   const [focusStrategy, setFocusStrategy] = createSignal(true);
-  const [currentPlacement, setCurrentPlacement] = createSignal(others.placement);
+  const [currentPlacement, setCurrentPlacement] = createSignal(
+    others.placement
+  );
   const [nestedMenus, setNestedMenus] = createSignal([]);
   const [items, setItems] = createSignal([]);
-  const {
-    DomCollectionProvider
-  } = createDomCollection({
+  const { DomCollectionProvider } = createDomCollection({
     items,
-    onItemsChange: setItems
+    onItemsChange: setItems,
   });
   const disclosureState = createDisclosureState({
     open: () => local.open,
     defaultOpen: () => local.defaultOpen,
-    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen)
+    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen),
   });
-  const {
-    present: contentPresent
-  } = src_default({
+  const { present: contentPresent } = src_default({
     show: () => rootContext.forceMount() || disclosureState.isOpen(),
-    element: () => contentRef() ?? null
+    element: () => contentRef() ?? null,
   });
   const listState = createListState({
     selectionMode: "none",
-    dataSource: items
+    dataSource: items,
   });
   const open = (focusStrategy2) => {
     setFocusStrategy(focusStrategy2);
@@ -10881,8 +12709,7 @@ function Menu(props) {
   const focusContent = () => {
     if (optionalNavigationMenuContext != null)
       setTimeout(() => _focusContent());
-    else
-      _focusContent();
+    else _focusContent();
   };
   const registerNestedMenu = (element) => {
     setNestedMenus((prev) => [...prev, element]);
@@ -10894,7 +12721,9 @@ function Menu(props) {
   };
   const isPointerMovingToSubmenu = (e2) => {
     const isMovingTowards = pointerDir === pointerGraceIntent?.side;
-    return isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent?.area);
+    return (
+      isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent?.area)
+    );
   };
   const onItemEnter = (e2) => {
     if (isPointerMovingToSubmenu(e2)) {
@@ -10914,9 +12743,13 @@ function Menu(props) {
   };
   createHideOutside({
     isDisabled: () => {
-      return !(parentMenuContext == null && disclosureState.isOpen() && rootContext.isModal());
+      return !(
+        parentMenuContext == null &&
+        disclosureState.isOpen() &&
+        rootContext.isModal()
+      );
     },
-    targets: () => [contentRef(), ...nestedMenus()].filter(Boolean)
+    targets: () => [contentRef(), ...nestedMenus()].filter(Boolean),
   });
   createEffect(() => {
     const contentEl = contentRef();
@@ -10929,19 +12762,19 @@ function Menu(props) {
     });
   });
   createEffect(() => {
-    if (parentMenuContext !== void 0)
-      return;
-    optionalMenubarContext?.registerMenu(rootContext.value(), [contentRef(), ...nestedMenus()]);
+    if (parentMenuContext !== void 0) return;
+    optionalMenubarContext?.registerMenu(rootContext.value(), [
+      contentRef(),
+      ...nestedMenus(),
+    ]);
   });
   createEffect(() => {
     if (parentMenuContext !== void 0 || optionalMenubarContext === void 0)
       return;
     if (optionalMenubarContext.value() === rootContext.value()) {
       triggerRef()?.focus();
-      if (optionalMenubarContext.autoFocusMenu())
-        open(true);
-    } else
-      close();
+      if (optionalMenubarContext.autoFocusMenu()) open(true);
+    } else close();
   });
   createEffect(() => {
     if (parentMenuContext !== void 0 || optionalMenubarContext === void 0)
@@ -10950,13 +12783,12 @@ function Menu(props) {
       optionalMenubarContext.setValue(rootContext.value());
   });
   onCleanup(() => {
-    if (parentMenuContext !== void 0)
-      return;
+    if (parentMenuContext !== void 0) return;
     optionalMenubarContext?.unregisterMenu(rootContext.value());
   });
   const dataset = createMemo(() => ({
     "data-expanded": disclosureState.isOpen() ? "" : void 0,
-    "data-closed": !disclosureState.isOpen() ? "" : void 0
+    "data-closed": !disclosureState.isOpen() ? "" : void 0,
   }));
   const context = {
     dataset,
@@ -10981,13 +12813,13 @@ function Menu(props) {
     onItemEnter,
     onItemLeave,
     onTriggerLeave,
-    setPointerDir: (dir) => pointerDir = dir,
-    setPointerGraceTimeoutId: (id) => pointerGraceTimeoutId = id,
-    setPointerGraceIntent: (intent) => pointerGraceIntent = intent,
+    setPointerDir: (dir) => (pointerDir = dir),
+    setPointerGraceTimeoutId: (id) => (pointerGraceTimeoutId = id),
+    setPointerGraceIntent: (intent) => (pointerGraceIntent = intent),
     registerNestedMenu,
     registerItemToParentDomCollection: parentDomCollectionContext?.registerItem,
     registerTriggerId: createRegisterId(setTriggerId),
-    registerContentId: createRegisterId(setContentId)
+    registerContentId: createRegisterId(setContentId),
   };
   return createComponent(DomCollectionProvider, {
     get children() {
@@ -11000,36 +12832,44 @@ function Menu(props) {
               return others.children;
             },
             get children() {
-              return createComponent(Popper, mergeProps({
-                anchorRef: triggerRef,
-                contentRef,
-                onCurrentPlacementChange: setCurrentPlacement
-              }, others));
-            }
+              return createComponent(
+                Popper,
+                mergeProps(
+                  {
+                    anchorRef: triggerRef,
+                    contentRef,
+                    onCurrentPlacementChange: setCurrentPlacement,
+                  },
+                  others
+                )
+              );
+            },
           });
-        }
+        },
       });
-    }
+    },
   });
 }
 function MenuSub(props) {
-  const {
-    direction
-  } = useLocale();
-  return createComponent(Menu, mergeProps({
-    get placement() {
-      return direction() === "rtl" ? "left-start" : "right-start";
-    },
-    flip: true
-  }, props));
+  const { direction } = useLocale();
+  return createComponent(
+    Menu,
+    mergeProps(
+      {
+        get placement() {
+          return direction() === "rtl" ? "left-start" : "right-start";
+        },
+        flip: true,
+      },
+      props
+    )
+  );
 }
 function MenuSubContent(props) {
   const context = useMenuContext();
   const rootContext = useMenuRootContext();
   const [local, others] = splitProps(props, ["onFocusOutside", "onKeyDown"]);
-  const {
-    direction
-  } = useLocale();
+  const { direction } = useLocale();
   const onOpenAutoFocus = (e2) => {
     e2.preventDefault();
   };
@@ -11046,28 +12886,53 @@ function MenuSubContent(props) {
   const onKeyDown = (e2) => {
     callHandler(e2, local.onKeyDown);
     const isKeyDownInside = contains(e2.currentTarget, e2.target);
-    const isCloseKey = SUB_CLOSE_KEYS.close(direction(), rootContext.orientation()).includes(e2.key);
+    const isCloseKey = SUB_CLOSE_KEYS.close(
+      direction(),
+      rootContext.orientation()
+    ).includes(e2.key);
     const isSubMenu = context.parentMenuContext() != null;
     if (isKeyDownInside && isCloseKey && isSubMenu) {
       context.close();
       focusWithoutScrolling(context.triggerRef());
     }
   };
-  return createComponent(MenuContentBase, mergeProps({
-    onOpenAutoFocus,
-    onCloseAutoFocus,
-    onFocusOutside,
-    onKeyDown
-  }, others));
+  return createComponent(
+    MenuContentBase,
+    mergeProps(
+      {
+        onOpenAutoFocus,
+        onCloseAutoFocus,
+        onFocusOutside,
+        onKeyDown,
+      },
+      others
+    )
+  );
 }
 function MenuSubTrigger(props) {
   let ref;
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`sub-trigger-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "textValue", "disabled", "onPointerMove", "onPointerLeave", "onPointerDown", "onPointerUp", "onClick", "onKeyDown", "onMouseDown", "onFocus"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`sub-trigger-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "textValue",
+    "disabled",
+    "onPointerMove",
+    "onPointerLeave",
+    "onPointerDown",
+    "onPointerUp",
+    "onClick",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocus",
+  ]);
   let openTimeoutId = null;
   const clearOpenTimeout = () => {
     if (isServer) {
@@ -11078,26 +12943,29 @@ function MenuSubTrigger(props) {
     }
     openTimeoutId = null;
   };
-  const {
-    direction
-  } = useLocale();
+  const { direction } = useLocale();
   const key = () => local.id;
   const parentSelectionManager = () => {
     const parentMenuContext = context.parentMenuContext();
     if (parentMenuContext == null) {
-      throw new Error("[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component");
+      throw new Error(
+        "[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component"
+      );
     }
     return parentMenuContext.listState().selectionManager();
   };
   const collection = () => context.listState().collection();
   const isHighlighted = () => parentSelectionManager().focusedKey() === key();
-  const selectableItem = createSelectableItem({
-    key,
-    selectionManager: parentSelectionManager,
-    shouldSelectOnPressUp: true,
-    allowsDifferentPressOrigin: true,
-    disabled: () => local.disabled
-  }, () => ref);
+  const selectableItem = createSelectableItem(
+    {
+      key,
+      selectionManager: parentSelectionManager,
+      shouldSelectOnPressUp: true,
+      allowsDifferentPressOrigin: true,
+      disabled: () => local.disabled,
+    },
+    () => ref
+  );
   const onClick = (e2) => {
     callHandler(e2, local.onClick);
     if (!context.isOpen() && !local.disabled) {
@@ -11129,7 +12997,10 @@ function MenuSubTrigger(props) {
     if (!e2.defaultPrevented) {
       if (context.listState().selectionManager().isFocused()) {
         context.listState().selectionManager().setFocused(false);
-        context.listState().selectionManager().setFocusedKey(void 0);
+        context
+          .listState()
+          .selectionManager()
+          .setFocusedKey(void 0);
       }
       focusWithoutScrolling(e2.currentTarget);
       parentMenuContext?.listState().selectionManager().setFocused(true);
@@ -11148,7 +13019,7 @@ function MenuSubTrigger(props) {
       parentMenuContext?.setPointerGraceIntent({
         area: getPointerGraceArea(context.currentPlacement(), e2, contentEl),
         // Safe because sub menu always open "left" or "right".
-        side: context.currentPlacement().split("-")[0]
+        side: context.currentPlacement().split("-")[0],
       });
       window.clearTimeout(parentMenuContext?.pointerGraceTimeoutId());
       const pointerGraceTimeoutId = window.setTimeout(() => {
@@ -11172,7 +13043,11 @@ function MenuSubTrigger(props) {
     if (local.disabled) {
       return;
     }
-    if (SUB_OPEN_KEYS.open(direction(), rootContext.orientation()).includes(e2.key)) {
+    if (
+      SUB_OPEN_KEYS.open(direction(), rootContext.orientation()).includes(
+        e2.key
+      )
+    ) {
       e2.stopPropagation();
       e2.preventDefault();
       parentSelectionManager().setFocused(false);
@@ -11182,101 +13057,142 @@ function MenuSubTrigger(props) {
       }
       context.focusContent();
       context.listState().selectionManager().setFocused(true);
-      context.listState().selectionManager().setFocusedKey(collection().getFirstKey());
+      context
+        .listState()
+        .selectionManager()
+        .setFocusedKey(collection().getFirstKey());
     }
   };
   createEffect(() => {
     if (context.registerItemToParentDomCollection == null) {
-      throw new Error("[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component");
+      throw new Error(
+        "[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component"
+      );
     }
     const unregister = context.registerItemToParentDomCollection({
       ref: () => ref,
       type: "item",
       key: key(),
       textValue: local.textValue ?? ref?.textContent ?? "",
-      disabled: local.disabled ?? false
+      disabled: local.disabled ?? false,
     });
     onCleanup(unregister);
   });
-  createEffect(on(() => context.parentMenuContext()?.pointerGraceTimeoutId(), (pointerGraceTimer) => {
-    onCleanup(() => {
-      window.clearTimeout(pointerGraceTimer);
-      context.parentMenuContext()?.setPointerGraceIntent(null);
-    });
-  }));
+  createEffect(
+    on(
+      () => context.parentMenuContext()?.pointerGraceTimeoutId(),
+      (pointerGraceTimer) => {
+        onCleanup(() => {
+          window.clearTimeout(pointerGraceTimer);
+          context.parentMenuContext()?.setPointerGraceIntent(null);
+        });
+      }
+    )
+  );
   createEffect(() => onCleanup(context.registerTriggerId(local.id)));
   onCleanup(() => {
     clearOpenTimeout();
   });
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => {
-        context.setTriggerRef(el);
-        ref = el;
-      }, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get id() {
-      return local.id;
-    },
-    role: "menuitem",
-    get tabIndex() {
-      return selectableItem.tabIndex();
-    },
-    "aria-haspopup": "true",
-    get ["aria-expanded"]() {
-      return context.isOpen();
-    },
-    get ["aria-controls"]() {
-      return createMemo(() => !!context.isOpen())() ? context.contentId() : void 0;
-    },
-    get ["aria-disabled"]() {
-      return local.disabled;
-    },
-    get ["data-key"]() {
-      return selectableItem.dataKey();
-    },
-    get ["data-highlighted"]() {
-      return isHighlighted() ? "" : void 0;
-    },
-    get ["data-disabled"]() {
-      return local.disabled ? "" : void 0;
-    },
-    get onPointerDown() {
-      return composeEventHandlers([local.onPointerDown, selectableItem.onPointerDown]);
-    },
-    get onPointerUp() {
-      return composeEventHandlers([local.onPointerUp, selectableItem.onPointerUp]);
-    },
-    get onClick() {
-      return composeEventHandlers([onClick, selectableItem.onClick]);
-    },
-    get onKeyDown() {
-      return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
-    },
-    get onMouseDown() {
-      return composeEventHandlers([local.onMouseDown, selectableItem.onMouseDown]);
-    },
-    get onFocus() {
-      return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
-    },
-    onPointerMove,
-    onPointerLeave
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => {
+            context.setTriggerRef(el);
+            ref = el;
+          }, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get id() {
+          return local.id;
+        },
+        role: "menuitem",
+        get tabIndex() {
+          return selectableItem.tabIndex();
+        },
+        "aria-haspopup": "true",
+        get ["aria-expanded"]() {
+          return context.isOpen();
+        },
+        get ["aria-controls"]() {
+          return createMemo(() => !!context.isOpen())()
+            ? context.contentId()
+            : void 0;
+        },
+        get ["aria-disabled"]() {
+          return local.disabled;
+        },
+        get ["data-key"]() {
+          return selectableItem.dataKey();
+        },
+        get ["data-highlighted"]() {
+          return isHighlighted() ? "" : void 0;
+        },
+        get ["data-disabled"]() {
+          return local.disabled ? "" : void 0;
+        },
+        get onPointerDown() {
+          return composeEventHandlers([
+            local.onPointerDown,
+            selectableItem.onPointerDown,
+          ]);
+        },
+        get onPointerUp() {
+          return composeEventHandlers([
+            local.onPointerUp,
+            selectableItem.onPointerUp,
+          ]);
+        },
+        get onClick() {
+          return composeEventHandlers([onClick, selectableItem.onClick]);
+        },
+        get onKeyDown() {
+          return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
+        },
+        get onMouseDown() {
+          return composeEventHandlers([
+            local.onMouseDown,
+            selectableItem.onMouseDown,
+          ]);
+        },
+        get onFocus() {
+          return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
+        },
+        onPointerMove,
+        onPointerLeave,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuRoot(props) {
   const optionalMenubarContext = useOptionalMenubarContext();
   const defaultId = `menu-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId,
-    modal: true
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["id", "modal", "preventScroll", "forceMount", "open", "defaultOpen", "onOpenChange", "value", "orientation"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+      modal: true,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "id",
+    "modal",
+    "preventScroll",
+    "forceMount",
+    "open",
+    "defaultOpen",
+    "onOpenChange",
+    "value",
+    "orientation",
+  ]);
   const disclosureState = createDisclosureState({
     open: () => local.open,
     defaultOpen: () => local.defaultOpen,
-    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen)
+    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen),
   });
   const context = {
     isModal: () => local.modal ?? true,
@@ -11284,23 +13200,43 @@ function MenuRoot(props) {
     forceMount: () => local.forceMount ?? false,
     generateId: createGenerateId(() => local.id),
     value: () => local.value,
-    orientation: () => local.orientation ?? optionalMenubarContext?.orientation() ?? "horizontal"
+    orientation: () =>
+      local.orientation ??
+      optionalMenubarContext?.orientation() ??
+      "horizontal",
   };
   return createComponent(MenuRootContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Menu, mergeProps({
-        get open() {
-          return disclosureState.isOpen();
-        },
-        get onOpenChange() {
-          return disclosureState.setIsOpen;
-        }
-      }, others));
-    }
+      return createComponent(
+        Menu,
+        mergeProps(
+          {
+            get open() {
+              return disclosureState.isOpen();
+            },
+            get onOpenChange() {
+              return disclosureState.setIsOpen;
+            },
+          },
+          others
+        )
+      );
+    },
   });
 }
-var MenuContext, MenuItemContext, MenuRootContext, MenubarContext, MENUBAR_KEYS, MENU_KEYS, NavigationMenuContext, MenuGroupContext, MenuRadioGroupContext, SUB_CLOSE_KEYS, SELECTION_KEYS, SUB_OPEN_KEYS;
+var MenuContext,
+  MenuItemContext,
+  MenuRootContext,
+  MenubarContext,
+  MENUBAR_KEYS,
+  MENU_KEYS,
+  NavigationMenuContext,
+  MenuGroupContext,
+  MenuRadioGroupContext,
+  SUB_CLOSE_KEYS,
+  SELECTION_KEYS,
+  SUB_OPEN_KEYS;
 var init_F4B62RP = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/3F4B62RP.js"() {
     init_X2EKUJ3();
@@ -11329,12 +13265,22 @@ var init_F4B62RP = __esm({
     MenuRootContext = createContext();
     MenubarContext = createContext();
     MENUBAR_KEYS = {
-      next: (dir, orientation) => dir === "ltr" ? orientation === "horizontal" ? "ArrowRight" : "ArrowDown" : orientation === "horizontal" ? "ArrowLeft" : "ArrowUp",
-      previous: (dir, orientation) => MENUBAR_KEYS.next(dir === "ltr" ? "rtl" : "ltr", orientation)
+      next: (dir, orientation) =>
+        dir === "ltr"
+          ? orientation === "horizontal"
+            ? "ArrowRight"
+            : "ArrowDown"
+          : orientation === "horizontal"
+          ? "ArrowLeft"
+          : "ArrowUp",
+      previous: (dir, orientation) =>
+        MENUBAR_KEYS.next(dir === "ltr" ? "rtl" : "ltr", orientation),
     };
     MENU_KEYS = {
-      first: (orientation) => orientation === "horizontal" ? "ArrowDown" : "ArrowRight",
-      last: (orientation) => orientation === "horizontal" ? "ArrowUp" : "ArrowLeft"
+      first: (orientation) =>
+        orientation === "horizontal" ? "ArrowDown" : "ArrowRight",
+      last: (orientation) =>
+        orientation === "horizontal" ? "ArrowUp" : "ArrowLeft",
     };
     NavigationMenuContext = createContext();
     MenuGroupContext = createContext();
@@ -11345,44 +13291,62 @@ var init_F4B62RP = __esm({
           return [orientation === "horizontal" ? "ArrowLeft" : "ArrowUp"];
         }
         return [orientation === "horizontal" ? "ArrowRight" : "ArrowDown"];
-      }
+      },
     };
     SELECTION_KEYS = ["Enter", " "];
     SUB_OPEN_KEYS = {
       open: (dir, orientation) => {
         if (dir === "ltr") {
-          return [...SELECTION_KEYS, orientation === "horizontal" ? "ArrowRight" : "ArrowDown"];
+          return [
+            ...SELECTION_KEYS,
+            orientation === "horizontal" ? "ArrowRight" : "ArrowDown",
+          ];
         }
-        return [...SELECTION_KEYS, orientation === "horizontal" ? "ArrowLeft" : "ArrowUp"];
-      }
+        return [
+          ...SELECTION_KEYS,
+          orientation === "horizontal" ? "ArrowLeft" : "ArrowUp",
+        ];
+      },
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/STGRFJHZ.js
 function SeparatorRoot(props) {
   let ref;
-  const mergedProps = mergeDefaultProps({
-    orientation: "horizontal"
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "orientation"]);
-  const tagName = createTagName(() => ref, () => "hr");
-  return createComponent(Polymorphic, mergeProps({
-    as: "hr",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get role() {
-      return tagName() !== "hr" ? "separator" : void 0;
-    },
-    get ["aria-orientation"]() {
-      return local.orientation === "vertical" ? "vertical" : void 0;
+  const mergedProps = mergeDefaultProps(
+    {
+      orientation: "horizontal",
     },
-    get ["data-orientation"]() {
-      return local.orientation;
-    }
-  }, others));
+    props
+  );
+  const [local, others] = splitProps(mergedProps, ["ref", "orientation"]);
+  const tagName = createTagName(
+    () => ref,
+    () => "hr"
+  );
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "hr",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get role() {
+          return tagName() !== "hr" ? "separator" : void 0;
+        },
+        get ["aria-orientation"]() {
+          return local.orientation === "vertical" ? "vertical" : void 0;
+        },
+        get ["data-orientation"]() {
+          return local.orientation;
+        },
+      },
+      others
+    )
+  );
 }
 var separator_exports, Separator;
 var init_STGRFJHZ = __esm({
@@ -11396,17 +13360,20 @@ var init_STGRFJHZ = __esm({
     separator_exports = {};
     __export2(separator_exports, {
       Root: () => SeparatorRoot,
-      Separator: () => Separator
+      Separator: () => Separator,
     });
     Separator = SeparatorRoot;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/V2JBZ7BJ.js
 function DropdownMenuContent(props) {
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
-  const [local, others] = splitProps(props, ["onCloseAutoFocus", "onInteractOutside"]);
+  const [local, others] = splitProps(props, [
+    "onCloseAutoFocus",
+    "onInteractOutside",
+  ]);
   let hasInteractedOutside = false;
   const onCloseAutoFocus = (e2) => {
     local.onCloseAutoFocus?.(e2);
@@ -11422,16 +13389,25 @@ function DropdownMenuContent(props) {
       hasInteractedOutside = true;
     }
   };
-  return createComponent(MenuContent, mergeProps({
-    onCloseAutoFocus,
-    onInteractOutside
-  }, others));
+  return createComponent(
+    MenuContent,
+    mergeProps(
+      {
+        onCloseAutoFocus,
+        onInteractOutside,
+      },
+      others
+    )
+  );
 }
 function DropdownMenuRoot(props) {
   const defaultId = `dropdownmenu-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
   return createComponent(MenuRoot, mergedProps);
 }
 var dropdown_menu_exports, DropdownMenu;
@@ -11465,7 +13441,7 @@ var init_V2JBZ7BJ = __esm({
       Sub: () => MenuSub,
       SubContent: () => MenuSubContent,
       SubTrigger: () => MenuSubTrigger,
-      Trigger: () => MenuTrigger
+      Trigger: () => MenuTrigger,
     });
     DropdownMenu = Object.assign(DropdownMenuRoot, {
       Arrow: PopperArrow,
@@ -11485,9 +13461,9 @@ var init_V2JBZ7BJ = __esm({
       Sub: MenuSub,
       SubContent: MenuSubContent,
       SubTrigger: MenuSubTrigger,
-      Trigger: MenuTrigger
+      Trigger: MenuTrigger,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/index.js
@@ -11495,7 +13471,7 @@ var init_dist15 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/index.js"() {
     init_Q2BOFK7I();
     init_V2JBZ7BJ();
-  }
+  },
 });
 
 // src/theme.ts
@@ -11519,7 +13495,7 @@ var init_theme = __esm({
           600: "#475467",
           700: "#344054",
           800: "#1d2939",
-          900: "#101828"
+          900: "#101828",
         },
         darkGray: {
           50: "#525c7a",
@@ -11531,7 +13507,7 @@ var init_theme = __esm({
           600: "#212530",
           700: "#191c24",
           800: "#111318",
-          900: "#0b0d10"
+          900: "#0b0d10",
         },
         gray: {
           50: "#f9fafb",
@@ -11543,7 +13519,7 @@ var init_theme = __esm({
           600: "#475467",
           700: "#344054",
           800: "#1d2939",
-          900: "#101828"
+          900: "#101828",
         },
         blue: {
           25: "#F5FAFF",
@@ -11556,7 +13532,7 @@ var init_theme = __esm({
           600: "#1570EF",
           700: "#175CD3",
           800: "#1849A9",
-          900: "#194185"
+          900: "#194185",
         },
         green: {
           25: "#F6FEF9",
@@ -11569,7 +13545,7 @@ var init_theme = __esm({
           600: "#039855",
           700: "#027A48",
           800: "#05603A",
-          900: "#054F31"
+          900: "#054F31",
         },
         red: {
           50: "#fef2f2",
@@ -11582,7 +13558,7 @@ var init_theme = __esm({
           700: "#b91c1c",
           800: "#991b1b",
           900: "#7f1d1d",
-          950: "#450a0a"
+          950: "#450a0a",
         },
         yellow: {
           25: "#FFFCF5",
@@ -11595,7 +13571,7 @@ var init_theme = __esm({
           600: "#DC6803",
           700: "#B54708",
           800: "#93370D",
-          900: "#7A2E0E"
+          900: "#7A2E0E",
         },
         purple: {
           25: "#FAFAFF",
@@ -11608,7 +13584,7 @@ var init_theme = __esm({
           600: "#6938EF",
           700: "#5925DC",
           800: "#4A1FB8",
-          900: "#3E1C96"
+          900: "#3E1C96",
         },
         teal: {
           25: "#F6FEFC",
@@ -11621,7 +13597,7 @@ var init_theme = __esm({
           600: "#0E9384",
           700: "#107569",
           800: "#125D56",
-          900: "#134E48"
+          900: "#134E48",
         },
         pink: {
           25: "#fdf2f8",
@@ -11634,7 +13610,7 @@ var init_theme = __esm({
           600: "#be185d",
           700: "#9d174d",
           800: "#831843",
-          900: "#500724"
+          900: "#500724",
         },
         cyan: {
           25: "#ecfeff",
@@ -11647,8 +13623,8 @@ var init_theme = __esm({
           600: "#0e7490",
           700: "#155e75",
           800: "#164e63",
-          900: "#083344"
-        }
+          900: "#083344",
+        },
       },
       alpha: {
         100: "ff",
@@ -11661,7 +13637,7 @@ var init_theme = __esm({
         30: "4d",
         20: "33",
         10: "1a",
-        0: "00"
+        0: "00",
       },
       font: {
         size: {
@@ -11678,7 +13654,7 @@ var init_theme = __esm({
           "6xl": "calc(var(--tsqd-font-size) * 3.75)",
           "7xl": "calc(var(--tsqd-font-size) * 4.5)",
           "8xl": "calc(var(--tsqd-font-size) * 6)",
-          "9xl": "calc(var(--tsqd-font-size) * 8)"
+          "9xl": "calc(var(--tsqd-font-size) * 8)",
         },
         lineHeight: {
           xs: "calc(var(--tsqd-font-size) * 1)",
@@ -11693,7 +13669,7 @@ var init_theme = __esm({
           "6xl": "calc(var(--tsqd-font-size) * 3.25)",
           "7xl": "calc(var(--tsqd-font-size) * 3.5)",
           "8xl": "calc(var(--tsqd-font-size) * 3.75)",
-          "9xl": "calc(var(--tsqd-font-size) * 4)"
+          "9xl": "calc(var(--tsqd-font-size) * 4)",
         },
         weight: {
           thin: "100",
@@ -11704,8 +13680,8 @@ var init_theme = __esm({
           semibold: "600",
           bold: "700",
           extrabold: "800",
-          black: "900"
-        }
+          black: "900",
+        },
       },
       breakpoints: {
         xs: "320px",
@@ -11713,7 +13689,7 @@ var init_theme = __esm({
         md: "768px",
         lg: "1024px",
         xl: "1280px",
-        "2xl": "1536px"
+        "2xl": "1536px",
       },
       border: {
         radius: {
@@ -11725,8 +13701,8 @@ var init_theme = __esm({
           xl: "calc(var(--tsqd-font-size) * 0.75)",
           "2xl": "calc(var(--tsqd-font-size) * 1)",
           "3xl": "calc(var(--tsqd-font-size) * 1.5)",
-          full: "9999px"
-        }
+          full: "9999px",
+        },
       },
       size: {
         0: "0px",
@@ -11766,17 +13742,21 @@ var init_theme = __esm({
         64: "calc(var(--tsqd-font-size) * 16)",
         72: "calc(var(--tsqd-font-size) * 18)",
         80: "calc(var(--tsqd-font-size) * 20)",
-        96: "calc(var(--tsqd-font-size) * 24)"
+        96: "calc(var(--tsqd-font-size) * 24)",
       },
       shadow: {
         xs: (_ = "rgb(0 0 0 / 0.1)") => `0 1px 2px 0 rgb(0 0 0 / 0.05)`,
-        sm: (color = "rgb(0 0 0 / 0.1)") => `0 1px 3px 0 ${color}, 0 1px 2px -1px ${color}`,
-        md: (color = "rgb(0 0 0 / 0.1)") => `0 4px 6px -1px ${color}, 0 2px 4px -2px ${color}`,
-        lg: (color = "rgb(0 0 0 / 0.1)") => `0 10px 15px -3px ${color}, 0 4px 6px -4px ${color}`,
-        xl: (color = "rgb(0 0 0 / 0.1)") => `0 20px 25px -5px ${color}, 0 8px 10px -6px ${color}`,
+        sm: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 1px 3px 0 ${color}, 0 1px 2px -1px ${color}`,
+        md: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 4px 6px -1px ${color}, 0 2px 4px -2px ${color}`,
+        lg: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 10px 15px -3px ${color}, 0 4px 6px -4px ${color}`,
+        xl: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 20px 25px -5px ${color}, 0 8px 10px -6px ${color}`,
         "2xl": (color = "rgb(0 0 0 / 0.25)") => `0 25px 50px -12px ${color}`,
         inner: (color = "rgb(0 0 0 / 0.05)") => `inset 0 2px 4px 0 ${color}`,
-        none: () => `none`
+        none: () => `none`,
       },
       zIndices: {
         hide: -1,
@@ -11791,10 +13771,10 @@ var init_theme = __esm({
         popover: 1500,
         skipLink: 1600,
         toast: 1700,
-        tooltip: 1800
-      }
+        tooltip: 1800,
+      },
     };
-  }
+  },
 });
 
 // src/icons/index.tsx
@@ -11856,8 +13836,15 @@ function Pencil() {
 }
 function CopiedCopier(props) {
   return (() => {
-    var _el$15 = _tmpl$13(), _el$16 = _el$15.firstChild;
-    createRenderEffect(() => setAttribute(_el$16, "stroke", props.theme === "dark" ? "#12B76A" : "#027A48"));
+    var _el$15 = _tmpl$13(),
+      _el$16 = _el$15.firstChild;
+    createRenderEffect(() =>
+      setAttribute(
+        _el$16,
+        "stroke",
+        props.theme === "dark" ? "#12B76A" : "#027A48"
+      )
+    );
     return _el$15;
   })();
 }
@@ -11868,25 +13855,42 @@ function List() {
   return _tmpl$15();
 }
 function Check(props) {
-  return [createComponent(Show, {
-    get when() {
-      return props.checked;
-    },
-    get children() {
-      var _el$19 = _tmpl$13(), _el$20 = _el$19.firstChild;
-      createRenderEffect(() => setAttribute(_el$20, "stroke", props.theme === "dark" ? "#9B8AFB" : "#6938EF"));
-      return _el$19;
-    }
-  }), createComponent(Show, {
-    get when() {
-      return !props.checked;
-    },
-    get children() {
-      var _el$21 = _tmpl$16(), _el$22 = _el$21.firstChild;
-      createRenderEffect(() => setAttribute(_el$22, "stroke", props.theme === "dark" ? "#9B8AFB" : "#6938EF"));
-      return _el$21;
-    }
-  })];
+  return [
+    createComponent(Show, {
+      get when() {
+        return props.checked;
+      },
+      get children() {
+        var _el$19 = _tmpl$13(),
+          _el$20 = _el$19.firstChild;
+        createRenderEffect(() =>
+          setAttribute(
+            _el$20,
+            "stroke",
+            props.theme === "dark" ? "#9B8AFB" : "#6938EF"
+          )
+        );
+        return _el$19;
+      },
+    }),
+    createComponent(Show, {
+      get when() {
+        return !props.checked;
+      },
+      get children() {
+        var _el$21 = _tmpl$16(),
+          _el$22 = _el$21.firstChild;
+        createRenderEffect(() =>
+          setAttribute(
+            _el$22,
+            "stroke",
+            props.theme === "dark" ? "#9B8AFB" : "#6938EF"
+          )
+        );
+        return _el$21;
+      },
+    }),
+  ];
 }
 function CheckCircle() {
   return _tmpl$17();
@@ -11903,7 +13907,99 @@ function PauseCircle() {
 function TanstackLogo() {
   const id = createUniqueId();
   return (() => {
-    var _el$27 = _tmpl$21(), _el$28 = _el$27.firstChild, _el$29 = _el$28.nextSibling, _el$30 = _el$29.nextSibling, _el$31 = _el$30.firstChild, _el$32 = _el$30.nextSibling, _el$33 = _el$32.firstChild, _el$34 = _el$32.nextSibling, _el$35 = _el$34.nextSibling, _el$36 = _el$35.firstChild, _el$37 = _el$35.nextSibling, _el$38 = _el$37.firstChild, _el$39 = _el$37.nextSibling, _el$40 = _el$39.nextSibling, _el$41 = _el$40.firstChild, _el$42 = _el$40.nextSibling, _el$43 = _el$42.firstChild, _el$44 = _el$42.nextSibling, _el$45 = _el$44.nextSibling, _el$46 = _el$45.firstChild, _el$47 = _el$45.nextSibling, _el$48 = _el$47.firstChild, _el$49 = _el$47.nextSibling, _el$50 = _el$49.nextSibling, _el$51 = _el$50.firstChild, _el$52 = _el$50.nextSibling, _el$53 = _el$52.firstChild, _el$54 = _el$52.nextSibling, _el$55 = _el$54.nextSibling, _el$56 = _el$55.firstChild, _el$57 = _el$55.nextSibling, _el$58 = _el$57.firstChild, _el$59 = _el$57.nextSibling, _el$60 = _el$59.nextSibling, _el$61 = _el$60.firstChild, _el$62 = _el$60.nextSibling, _el$63 = _el$62.firstChild, _el$64 = _el$62.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.nextSibling, _el$67 = _el$66.nextSibling, _el$68 = _el$67.nextSibling, _el$69 = _el$68.nextSibling, _el$70 = _el$64.nextSibling, _el$71 = _el$70.firstChild, _el$72 = _el$70.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$72.nextSibling, _el$75 = _el$74.firstChild, _el$76 = _el$75.nextSibling, _el$77 = _el$76.nextSibling, _el$78 = _el$77.firstChild, _el$79 = _el$78.nextSibling, _el$80 = _el$79.nextSibling, _el$81 = _el$80.nextSibling, _el$82 = _el$81.nextSibling, _el$83 = _el$82.nextSibling, _el$84 = _el$83.nextSibling, _el$85 = _el$84.nextSibling, _el$86 = _el$85.nextSibling, _el$87 = _el$86.nextSibling, _el$88 = _el$87.nextSibling, _el$89 = _el$88.nextSibling, _el$90 = _el$74.nextSibling, _el$91 = _el$90.firstChild, _el$92 = _el$90.nextSibling, _el$93 = _el$92.firstChild, _el$94 = _el$92.nextSibling, _el$95 = _el$94.firstChild, _el$96 = _el$95.nextSibling, _el$97 = _el$94.nextSibling, _el$98 = _el$97.firstChild, _el$99 = _el$97.nextSibling, _el$100 = _el$99.firstChild, _el$101 = _el$99.nextSibling, _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.nextSibling, _el$105 = _el$104.nextSibling, _el$106 = _el$105.nextSibling, _el$107 = _el$106.nextSibling, _el$108 = _el$107.nextSibling, _el$109 = _el$108.nextSibling, _el$110 = _el$109.nextSibling, _el$111 = _el$110.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling, _el$119 = _el$118.nextSibling;
+    var _el$27 = _tmpl$21(),
+      _el$28 = _el$27.firstChild,
+      _el$29 = _el$28.nextSibling,
+      _el$30 = _el$29.nextSibling,
+      _el$31 = _el$30.firstChild,
+      _el$32 = _el$30.nextSibling,
+      _el$33 = _el$32.firstChild,
+      _el$34 = _el$32.nextSibling,
+      _el$35 = _el$34.nextSibling,
+      _el$36 = _el$35.firstChild,
+      _el$37 = _el$35.nextSibling,
+      _el$38 = _el$37.firstChild,
+      _el$39 = _el$37.nextSibling,
+      _el$40 = _el$39.nextSibling,
+      _el$41 = _el$40.firstChild,
+      _el$42 = _el$40.nextSibling,
+      _el$43 = _el$42.firstChild,
+      _el$44 = _el$42.nextSibling,
+      _el$45 = _el$44.nextSibling,
+      _el$46 = _el$45.firstChild,
+      _el$47 = _el$45.nextSibling,
+      _el$48 = _el$47.firstChild,
+      _el$49 = _el$47.nextSibling,
+      _el$50 = _el$49.nextSibling,
+      _el$51 = _el$50.firstChild,
+      _el$52 = _el$50.nextSibling,
+      _el$53 = _el$52.firstChild,
+      _el$54 = _el$52.nextSibling,
+      _el$55 = _el$54.nextSibling,
+      _el$56 = _el$55.firstChild,
+      _el$57 = _el$55.nextSibling,
+      _el$58 = _el$57.firstChild,
+      _el$59 = _el$57.nextSibling,
+      _el$60 = _el$59.nextSibling,
+      _el$61 = _el$60.firstChild,
+      _el$62 = _el$60.nextSibling,
+      _el$63 = _el$62.firstChild,
+      _el$64 = _el$62.nextSibling,
+      _el$65 = _el$64.firstChild,
+      _el$66 = _el$65.nextSibling,
+      _el$67 = _el$66.nextSibling,
+      _el$68 = _el$67.nextSibling,
+      _el$69 = _el$68.nextSibling,
+      _el$70 = _el$64.nextSibling,
+      _el$71 = _el$70.firstChild,
+      _el$72 = _el$70.nextSibling,
+      _el$73 = _el$72.firstChild,
+      _el$74 = _el$72.nextSibling,
+      _el$75 = _el$74.firstChild,
+      _el$76 = _el$75.nextSibling,
+      _el$77 = _el$76.nextSibling,
+      _el$78 = _el$77.firstChild,
+      _el$79 = _el$78.nextSibling,
+      _el$80 = _el$79.nextSibling,
+      _el$81 = _el$80.nextSibling,
+      _el$82 = _el$81.nextSibling,
+      _el$83 = _el$82.nextSibling,
+      _el$84 = _el$83.nextSibling,
+      _el$85 = _el$84.nextSibling,
+      _el$86 = _el$85.nextSibling,
+      _el$87 = _el$86.nextSibling,
+      _el$88 = _el$87.nextSibling,
+      _el$89 = _el$88.nextSibling,
+      _el$90 = _el$74.nextSibling,
+      _el$91 = _el$90.firstChild,
+      _el$92 = _el$90.nextSibling,
+      _el$93 = _el$92.firstChild,
+      _el$94 = _el$92.nextSibling,
+      _el$95 = _el$94.firstChild,
+      _el$96 = _el$95.nextSibling,
+      _el$97 = _el$94.nextSibling,
+      _el$98 = _el$97.firstChild,
+      _el$99 = _el$97.nextSibling,
+      _el$100 = _el$99.firstChild,
+      _el$101 = _el$99.nextSibling,
+      _el$102 = _el$101.firstChild,
+      _el$103 = _el$102.nextSibling,
+      _el$104 = _el$103.nextSibling,
+      _el$105 = _el$104.nextSibling,
+      _el$106 = _el$105.nextSibling,
+      _el$107 = _el$106.nextSibling,
+      _el$108 = _el$107.nextSibling,
+      _el$109 = _el$108.nextSibling,
+      _el$110 = _el$109.nextSibling,
+      _el$111 = _el$110.nextSibling,
+      _el$112 = _el$111.nextSibling,
+      _el$113 = _el$112.nextSibling,
+      _el$114 = _el$113.nextSibling,
+      _el$115 = _el$114.nextSibling,
+      _el$116 = _el$115.nextSibling,
+      _el$117 = _el$116.nextSibling,
+      _el$118 = _el$117.nextSibling,
+      _el$119 = _el$118.nextSibling;
     setAttribute(_el$28, "id", `a-${id}`);
     setAttribute(_el$29, "fill", `url(#a-${id})`);
     setAttribute(_el$31, "id", `am-${id}`);
@@ -11985,7 +14081,29 @@ function TanstackLogo() {
     return _el$27;
   })();
 }
-var _tmpl$2, _tmpl$22, _tmpl$3, _tmpl$4, _tmpl$5, _tmpl$6, _tmpl$7, _tmpl$8, _tmpl$9, _tmpl$0, _tmpl$1, _tmpl$10, _tmpl$11, _tmpl$12, _tmpl$13, _tmpl$14, _tmpl$15, _tmpl$16, _tmpl$17, _tmpl$18, _tmpl$19, _tmpl$20, _tmpl$21;
+var _tmpl$2,
+  _tmpl$22,
+  _tmpl$3,
+  _tmpl$4,
+  _tmpl$5,
+  _tmpl$6,
+  _tmpl$7,
+  _tmpl$8,
+  _tmpl$9,
+  _tmpl$0,
+  _tmpl$1,
+  _tmpl$10,
+  _tmpl$11,
+  _tmpl$12,
+  _tmpl$13,
+  _tmpl$14,
+  _tmpl$15,
+  _tmpl$16,
+  _tmpl$17,
+  _tmpl$18,
+  _tmpl$19,
+  _tmpl$20,
+  _tmpl$21;
 var init_icons = __esm({
   "src/icons/index.tsx"() {
     init_web();
@@ -11993,34 +14111,92 @@ var init_icons = __esm({
     init_web();
     init_web();
     init_solid();
-    _tmpl$2 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 14 14"fill=none xmlns=http://www.w3.org/2000/svg><path d="M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$22 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$3 = /* @__PURE__ */ template(`<svg width=10 height=6 viewBox="0 0 10 6"fill=none xmlns=http://www.w3.org/2000/svg><path d="M1 1L5 5L9 1"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$4 = /* @__PURE__ */ template(`<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$5 = /* @__PURE__ */ template(`<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$6 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$7 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$8 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$9 = /* @__PURE__ */ template(`<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M0 0h24v24H0z"></path><path d="M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z">`);
-    _tmpl$0 = /* @__PURE__ */ template(`<svg stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z"></path><path d="M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z">`);
-    _tmpl$1 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d="M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$10 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$11 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d="M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>`);
-    _tmpl$12 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M2.5 21.4998L8.04927 19.3655C8.40421 19.229 8.58168 19.1607 8.74772 19.0716C8.8952 18.9924 9.0358 18.901 9.16804 18.7984C9.31692 18.6829 9.45137 18.5484 9.72028 18.2795L21 6.99982C22.1046 5.89525 22.1046 4.10438 21 2.99981C19.8955 1.89525 18.1046 1.89524 17 2.99981L5.72028 14.2795C5.45138 14.5484 5.31692 14.6829 5.20139 14.8318C5.09877 14.964 5.0074 15.1046 4.92823 15.2521C4.83911 15.4181 4.77085 15.5956 4.63433 15.9506L2.5 21.4998ZM2.5 21.4998L4.55812 16.1488C4.7054 15.7659 4.77903 15.5744 4.90534 15.4867C5.01572 15.4101 5.1523 15.3811 5.2843 15.4063C5.43533 15.4351 5.58038 15.5802 5.87048 15.8703L8.12957 18.1294C8.41967 18.4195 8.56472 18.5645 8.59356 18.7155C8.61877 18.8475 8.58979 18.9841 8.51314 19.0945C8.42545 19.2208 8.23399 19.2944 7.85107 19.4417L2.5 21.4998Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$13 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$14 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$15 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>`);
-    _tmpl$16 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d="M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$17 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$18 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>`);
-    _tmpl$19 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$20 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$21 = /* @__PURE__ */ template(`<svg version=1.0 viewBox="0 0 633 633"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform="matrix(633 0 0 633 422177 -103358)"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform="matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d="m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform="matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d="m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform="matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform="matrix(110 5.7648 -6.3599 121.35 73933 -15933)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform="matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform="matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform="matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform="matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d="m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1"fill=none stroke-linecap=round stroke-width=8></path><path d="m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8"fill=none stroke-linecap=round stroke-width=8></path><path d="m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9"fill=none stroke-linecap=round stroke-width=8></path><path d="m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform="matrix(532 0 0 633 354760 -102959)"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform="matrix(227 0 0 227 151421 -37204)"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform="matrix(30 0 0 1 19770 -253)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform="matrix(26.5 0 0 5.5 17439 -1025.5)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform="matrix(29 0 0 8 19107 -1361)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform="matrix(24 0 0 13 15783 -2145)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform="matrix(20 0 0 19 13137 -3096)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform="matrix(13.83 0 0 22.85 9050 -3703.4)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform="matrix(7.5 0 0 24.5 4860 -3953)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform="matrix(.5 0 0 24.5 231.5 -3944)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>`);
-  }
+    _tmpl$2 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 14 14"fill=none xmlns=http://www.w3.org/2000/svg><path d="M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$22 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$3 = /* @__PURE__ */ template(
+      `<svg width=10 height=6 viewBox="0 0 10 6"fill=none xmlns=http://www.w3.org/2000/svg><path d="M1 1L5 5L9 1"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$4 = /* @__PURE__ */ template(
+      `<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$5 = /* @__PURE__ */ template(
+      `<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$6 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$7 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$8 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$9 = /* @__PURE__ */ template(
+      `<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M0 0h24v24H0z"></path><path d="M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z">`
+    );
+    _tmpl$0 = /* @__PURE__ */ template(
+      `<svg stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z"></path><path d="M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z">`
+    );
+    _tmpl$1 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d="M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$10 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$11 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d="M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>`
+    );
+    _tmpl$12 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M2.5 21.4998L8.04927 19.3655C8.40421 19.229 8.58168 19.1607 8.74772 19.0716C8.8952 18.9924 9.0358 18.901 9.16804 18.7984C9.31692 18.6829 9.45137 18.5484 9.72028 18.2795L21 6.99982C22.1046 5.89525 22.1046 4.10438 21 2.99981C19.8955 1.89525 18.1046 1.89524 17 2.99981L5.72028 14.2795C5.45138 14.5484 5.31692 14.6829 5.20139 14.8318C5.09877 14.964 5.0074 15.1046 4.92823 15.2521C4.83911 15.4181 4.77085 15.5956 4.63433 15.9506L2.5 21.4998ZM2.5 21.4998L4.55812 16.1488C4.7054 15.7659 4.77903 15.5744 4.90534 15.4867C5.01572 15.4101 5.1523 15.3811 5.2843 15.4063C5.43533 15.4351 5.58038 15.5802 5.87048 15.8703L8.12957 18.1294C8.41967 18.4195 8.56472 18.5645 8.59356 18.7155C8.61877 18.8475 8.58979 18.9841 8.51314 19.0945C8.42545 19.2208 8.23399 19.2944 7.85107 19.4417L2.5 21.4998Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$13 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$14 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$15 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>`
+    );
+    _tmpl$16 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d="M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$17 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$18 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>`
+    );
+    _tmpl$19 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$20 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$21 = /* @__PURE__ */ template(
+      `<svg version=1.0 viewBox="0 0 633 633"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform="matrix(633 0 0 633 422177 -103358)"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform="matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d="m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform="matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d="m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform="matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform="matrix(110 5.7648 -6.3599 121.35 73933 -15933)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform="matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform="matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform="matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform="matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d="m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1"fill=none stroke-linecap=round stroke-width=8></path><path d="m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8"fill=none stroke-linecap=round stroke-width=8></path><path d="m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9"fill=none stroke-linecap=round stroke-width=8></path><path d="m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform="matrix(532 0 0 633 354760 -102959)"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform="matrix(227 0 0 227 151421 -37204)"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform="matrix(30 0 0 1 19770 -253)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform="matrix(26.5 0 0 5.5 17439 -1025.5)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform="matrix(29 0 0 8 19107 -1361)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform="matrix(24 0 0 13 15783 -2145)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform="matrix(20 0 0 19 13137 -3096)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform="matrix(13.83 0 0 22.85 9050 -3703.4)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform="matrix(7.5 0 0 24.5 4860 -3953)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform="matrix(.5 0 0 24.5 231.5 -3944)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>`
+    );
+  },
 });
 
 // src/constants.ts
-var firstBreakpoint, secondBreakpoint, thirdBreakpoint, BUTTON_POSITION, POSITION, THEME_PREFERENCE, INITIAL_IS_OPEN, DEFAULT_HEIGHT, PIP_DEFAULT_HEIGHT, DEFAULT_WIDTH, DEFAULT_SORT_FN_NAME, DEFAULT_SORT_ORDER, DEFAULT_MUTATION_SORT_FN_NAME;
+var firstBreakpoint,
+  secondBreakpoint,
+  thirdBreakpoint,
+  BUTTON_POSITION,
+  POSITION,
+  THEME_PREFERENCE,
+  INITIAL_IS_OPEN,
+  DEFAULT_HEIGHT,
+  PIP_DEFAULT_HEIGHT,
+  DEFAULT_WIDTH,
+  DEFAULT_SORT_FN_NAME,
+  DEFAULT_SORT_ORDER,
+  DEFAULT_MUTATION_SORT_FN_NAME;
 var init_constants = __esm({
   "src/constants.ts"() {
     init_utils();
@@ -12037,7 +14213,7 @@ var init_constants = __esm({
     DEFAULT_SORT_FN_NAME = Object.keys(sortFns)[0];
     DEFAULT_SORT_ORDER = 1;
     DEFAULT_MUTATION_SORT_FN_NAME = Object.keys(mutationSortFns)[0];
-  }
+  },
 });
 
 // src/contexts/QueryDevtoolsContext.ts
@@ -12053,9 +14229,9 @@ var init_QueryDevtoolsContext = __esm({
       onlineManager: void 0,
       queryFlavor: "",
       version: "",
-      shadowDOMTarget: void 0
+      shadowDOMTarget: void 0,
     });
-  }
+  },
 });
 
 // src/contexts/PiPContext.tsx
@@ -12081,9 +14257,15 @@ var init_PiPContext = __esm({
         if (pipWindow() != null) {
           return;
         }
-        const pip = window.open("", "TSQD-Devtools-Panel", `width=${width},height=${height},popup`);
+        const pip = window.open(
+          "",
+          "TSQD-Devtools-Panel",
+          `width=${width},height=${height},popup`
+        );
         if (!pip) {
-          throw new Error("Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode.");
+          throw new Error(
+            "Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode."
+          );
         }
         pip.document.head.innerHTML = "";
         pip.document.body.innerHTML = "";
@@ -12094,9 +14276,14 @@ var init_PiPContext = __esm({
           props.setLocalStore("pip_open", "false");
           setPipWindow(null);
         });
-        [...(useQueryDevtoolsContext().shadowDOMTarget || document).styleSheets].forEach((styleSheet) => {
+        [
+          ...(useQueryDevtoolsContext().shadowDOMTarget || document)
+            .styleSheets,
+        ].forEach((styleSheet) => {
           try {
-            const cssRules = [...styleSheet.cssRules].map((rule) => rule.cssText).join("");
+            const cssRules = [...styleSheet.cssRules]
+              .map((rule) => rule.cssText)
+              .join("");
             const style2 = document.createElement("style");
             const style_node = styleSheet.ownerNode;
             let style_id = "";
@@ -12120,22 +14307,42 @@ var init_PiPContext = __esm({
             pip.document.head.appendChild(link);
           }
         });
-        delegateEvents(["focusin", "focusout", "pointermove", "keydown", "pointerdown", "pointerup", "click", "mousedown", "input"], pip.document);
+        delegateEvents(
+          [
+            "focusin",
+            "focusout",
+            "pointermove",
+            "keydown",
+            "pointerdown",
+            "pointerup",
+            "click",
+            "mousedown",
+            "input",
+          ],
+          pip.document
+        );
         props.setLocalStore("pip_open", "true");
         setPipWindow(pip);
       };
       createEffect(() => {
         const pip_open = props.localStore.pip_open ?? "false";
         if (pip_open === "true" && !props.disabled) {
-          requestPipWindow(Number(window.innerWidth), Number(props.localStore.height || PIP_DEFAULT_HEIGHT));
+          requestPipWindow(
+            Number(window.innerWidth),
+            Number(props.localStore.height || PIP_DEFAULT_HEIGHT)
+          );
         }
       });
       createEffect(() => {
-        const gooberStyles = (useQueryDevtoolsContext().shadowDOMTarget || document).querySelector("#_goober");
+        const gooberStyles = (
+          useQueryDevtoolsContext().shadowDOMTarget || document
+        ).querySelector("#_goober");
         const w = pipWindow();
         if (gooberStyles && w) {
           const observer = new MutationObserver(() => {
-            const pip_style = (useQueryDevtoolsContext().shadowDOMTarget || w.document).querySelector("#_goober");
+            const pip_style = (
+              useQueryDevtoolsContext().shadowDOMTarget || w.document
+            ).querySelector("#_goober");
             if (pip_style) {
               pip_style.textContent = gooberStyles.textContent;
             }
@@ -12145,7 +14352,7 @@ var init_PiPContext = __esm({
             // observe direct children
             subtree: true,
             // and lower descendants too
-            characterDataOldValue: true
+            characterDataOldValue: true,
             // pass old data to callback
           });
           onCleanup(() => {
@@ -12157,13 +14364,13 @@ var init_PiPContext = __esm({
         pipWindow: pipWindow(),
         requestPipWindow,
         closePipWindow,
-        disabled: props.disabled ?? false
+        disabled: props.disabled ?? false,
       }));
       return createComponent(PiPContext.Provider, {
         value,
         get children() {
           return props.children;
-        }
+        },
       });
     };
     usePiPWindow = () => {
@@ -12176,7 +14383,7 @@ var init_PiPContext = __esm({
       });
       return context;
     };
-  }
+  },
 });
 
 // src/contexts/ThemeContext.ts
@@ -12187,10 +14394,8 @@ var ThemeContext;
 var init_ThemeContext = __esm({
   "src/contexts/ThemeContext.ts"() {
     init_solid();
-    ThemeContext = createContext(
-      () => "dark"
-    );
-  }
+    ThemeContext = createContext(() => "dark");
+  },
 });
 
 // src/contexts/index.ts
@@ -12199,7 +14404,7 @@ var init_contexts = __esm({
     init_PiPContext();
     init_QueryDevtoolsContext();
     init_ThemeContext();
-  }
+  },
 });
 
 // src/Explorer.tsx
@@ -12217,37 +14422,46 @@ function isIterable(x) {
 }
 function Explorer(props) {
   const theme = useTheme();
-  const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-    target: useQueryDevtoolsContext().shadowDOMTarget
-  }) : u;
+  const css = useQueryDevtoolsContext().shadowDOMTarget
+    ? u.bind({
+        target: useQueryDevtoolsContext().shadowDOMTarget,
+      })
+    : u;
   const styles = createMemo(() => {
     return theme() === "dark" ? darkStyles(css) : lightStyles(css);
   });
   const queryClient = useQueryDevtoolsContext().client;
-  const [expanded, setExpanded] = createSignal((props.defaultExpanded || []).includes(props.label));
+  const [expanded, setExpanded] = createSignal(
+    (props.defaultExpanded || []).includes(props.label)
+  );
   const toggleExpanded = () => setExpanded((old) => !old);
   const [expandedPages, setExpandedPages] = createSignal([]);
   const subEntries = createMemo(() => {
     if (Array.isArray(props.value)) {
       return props.value.map((d, i2) => ({
         label: i2.toString(),
-        value: d
+        value: d,
       }));
-    } else if (props.value !== null && typeof props.value === "object" && isIterable(props.value) && typeof props.value[Symbol.iterator] === "function") {
+    } else if (
+      props.value !== null &&
+      typeof props.value === "object" &&
+      isIterable(props.value) &&
+      typeof props.value[Symbol.iterator] === "function"
+    ) {
       if (props.value instanceof Map) {
         return Array.from(props.value, ([key, val]) => ({
           label: key,
-          value: val
+          value: val,
         }));
       }
       return Array.from(props.value, (val, i2) => ({
         label: i2.toString(),
-        value: val
+        value: val,
       }));
     } else if (typeof props.value === "object" && props.value !== null) {
       return Object.entries(props.value).map(([key, val]) => ({
         label: key,
-        value: val
+        value: val,
       }));
     }
     return [];
@@ -12255,7 +14469,12 @@ function Explorer(props) {
   const type = createMemo(() => {
     if (Array.isArray(props.value)) {
       return "array";
-    } else if (props.value !== null && typeof props.value === "object" && isIterable(props.value) && typeof props.value[Symbol.iterator] === "function") {
+    } else if (
+      props.value !== null &&
+      typeof props.value === "object" &&
+      isIterable(props.value) &&
+      typeof props.value[Symbol.iterator] === "function"
+    ) {
       return "Iterable";
     } else if (typeof props.value === "object" && props.value !== null) {
       return "object";
@@ -12266,306 +14485,507 @@ function Explorer(props) {
   const currentDataPath = props.dataPath ?? [];
   return (() => {
     var _el$6 = _tmpl$72();
-    insert(_el$6, createComponent(Show, {
-      get when() {
-        return subEntryPages().length;
-      },
-      get children() {
-        return [(() => {
-          var _el$7 = _tmpl$82(), _el$8 = _el$7.firstChild, _el$9 = _el$8.firstChild, _el$0 = _el$9.nextSibling, _el$1 = _el$0.nextSibling, _el$10 = _el$1.nextSibling, _el$11 = _el$10.firstChild;
-          _el$8.$$click = () => toggleExpanded();
-          insert(_el$8, createComponent(Expander, {
-            get expanded() {
-              return expanded();
-            }
-          }), _el$9);
-          insert(_el$0, () => props.label);
-          insert(_el$10, () => String(type()).toLowerCase() === "iterable" ? "(Iterable) " : "", _el$11);
-          insert(_el$10, () => subEntries().length, _el$11);
-          insert(_el$10, () => subEntries().length > 1 ? `items` : `item`, null);
-          insert(_el$7, createComponent(Show, {
-            get when() {
-              return props.editable;
-            },
-            get children() {
-              var _el$12 = _tmpl$72();
-              insert(_el$12, createComponent(CopyButton, {
-                get value() {
-                  return props.value;
-                }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return props.itemsDeletable && props.activeQuery !== void 0;
+    insert(
+      _el$6,
+      createComponent(Show, {
+        get when() {
+          return subEntryPages().length;
+        },
+        get children() {
+          return [
+            (() => {
+              var _el$7 = _tmpl$82(),
+                _el$8 = _el$7.firstChild,
+                _el$9 = _el$8.firstChild,
+                _el$0 = _el$9.nextSibling,
+                _el$1 = _el$0.nextSibling,
+                _el$10 = _el$1.nextSibling,
+                _el$11 = _el$10.firstChild;
+              _el$8.$$click = () => toggleExpanded();
+              insert(
+                _el$8,
+                createComponent(Expander, {
+                  get expanded() {
+                    return expanded();
+                  },
+                }),
+                _el$9
+              );
+              insert(_el$0, () => props.label);
+              insert(
+                _el$10,
+                () =>
+                  String(type()).toLowerCase() === "iterable"
+                    ? "(Iterable) "
+                    : "",
+                _el$11
+              );
+              insert(_el$10, () => subEntries().length, _el$11);
+              insert(
+                _el$10,
+                () => (subEntries().length > 1 ? `items` : `item`),
+                null
+              );
+              insert(
+                _el$7,
+                createComponent(Show, {
+                  get when() {
+                    return props.editable;
+                  },
+                  get children() {
+                    var _el$12 = _tmpl$72();
+                    insert(
+                      _el$12,
+                      createComponent(CopyButton, {
+                        get value() {
+                          return props.value;
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            props.itemsDeletable && props.activeQuery !== void 0
+                          );
+                        },
+                        get children() {
+                          return createComponent(DeleteItemButton, {
+                            get activeQuery() {
+                              return props.activeQuery;
+                            },
+                            dataPath: currentDataPath,
+                          });
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            type() === "array" && props.activeQuery !== void 0
+                          );
+                        },
+                        get children() {
+                          return createComponent(ClearArrayButton, {
+                            get activeQuery() {
+                              return props.activeQuery;
+                            },
+                            dataPath: currentDataPath,
+                          });
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            createMemo(() => !!!!props.onEdit)() &&
+                            !serialize(props.value).meta
+                          );
+                        },
+                        get children() {
+                          var _el$13 = _tmpl$62();
+                          _el$13.$$click = () => {
+                            props.onEdit?.();
+                          };
+                          insert(_el$13, createComponent(Pencil, {}));
+                          createRenderEffect(() =>
+                            className(_el$13, styles().actionButton)
+                          );
+                          return _el$13;
+                        },
+                      }),
+                      null
+                    );
+                    createRenderEffect(() =>
+                      className(_el$12, styles().actions)
+                    );
+                    return _el$12;
+                  },
+                }),
+                null
+              );
+              createRenderEffect(
+                (_p$) => {
+                  var _v$3 = styles().expanderButtonContainer,
+                    _v$4 = styles().expanderButton,
+                    _v$5 = styles().info;
+                  _v$3 !== _p$.e && className(_el$7, (_p$.e = _v$3));
+                  _v$4 !== _p$.t && className(_el$8, (_p$.t = _v$4));
+                  _v$5 !== _p$.a && className(_el$10, (_p$.a = _v$5));
+                  return _p$;
                 },
-                get children() {
-                  return createComponent(DeleteItemButton, {
-                    get activeQuery() {
-                      return props.activeQuery;
-                    },
-                    dataPath: currentDataPath
-                  });
+                {
+                  e: void 0,
+                  t: void 0,
+                  a: void 0,
                 }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return type() === "array" && props.activeQuery !== void 0;
-                },
-                get children() {
-                  return createComponent(ClearArrayButton, {
-                    get activeQuery() {
-                      return props.activeQuery;
-                    },
-                    dataPath: currentDataPath
-                  });
-                }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return createMemo(() => !!!!props.onEdit)() && !serialize(props.value).meta;
-                },
-                get children() {
-                  var _el$13 = _tmpl$62();
-                  _el$13.$$click = () => {
-                    props.onEdit?.();
-                  };
-                  insert(_el$13, createComponent(Pencil, {}));
-                  createRenderEffect(() => className(_el$13, styles().actionButton));
-                  return _el$13;
-                }
-              }), null);
-              createRenderEffect(() => className(_el$12, styles().actions));
-              return _el$12;
-            }
-          }), null);
-          createRenderEffect((_p$) => {
-            var _v$3 = styles().expanderButtonContainer, _v$4 = styles().expanderButton, _v$5 = styles().info;
-            _v$3 !== _p$.e && className(_el$7, _p$.e = _v$3);
-            _v$4 !== _p$.t && className(_el$8, _p$.t = _v$4);
-            _v$5 !== _p$.a && className(_el$10, _p$.a = _v$5);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
-          return _el$7;
-        })(), createComponent(Show, {
-          get when() {
-            return expanded();
-          },
-          get children() {
-            return [createComponent(Show, {
+              );
+              return _el$7;
+            })(),
+            createComponent(Show, {
               get when() {
-                return subEntryPages().length === 1;
+                return expanded();
               },
               get children() {
-                var _el$14 = _tmpl$72();
-                insert(_el$14, createComponent(Key, {
-                  get each() {
-                    return subEntries();
-                  },
-                  by: (item) => item.label,
-                  children: (entry) => {
-                    return createComponent(Explorer, {
-                      get defaultExpanded() {
-                        return props.defaultExpanded;
-                      },
-                      get label() {
-                        return entry().label;
-                      },
-                      get value() {
-                        return entry().value;
-                      },
-                      get editable() {
-                        return props.editable;
-                      },
-                      get dataPath() {
-                        return [...currentDataPath, entry().label];
-                      },
-                      get activeQuery() {
-                        return props.activeQuery;
-                      },
-                      get itemsDeletable() {
-                        return type() === "array" || type() === "Iterable" || type() === "object";
-                      }
-                    });
-                  }
-                }));
-                createRenderEffect(() => className(_el$14, styles().subEntry));
-                return _el$14;
-              }
-            }), createComponent(Show, {
-              get when() {
-                return subEntryPages().length > 1;
-              },
-              get children() {
-                var _el$15 = _tmpl$72();
-                insert(_el$15, createComponent(Index, {
-                  get each() {
-                    return subEntryPages();
-                  },
-                  children: (entries2, index) => (() => {
-                    var _el$21 = _tmpl$102(), _el$22 = _el$21.firstChild, _el$23 = _el$22.firstChild, _el$24 = _el$23.firstChild, _el$28 = _el$24.nextSibling, _el$26 = _el$28.nextSibling, _el$29 = _el$26.nextSibling; _el$29.nextSibling;
-                    _el$23.$$click = () => setExpandedPages((old) => old.includes(index) ? old.filter((d) => d !== index) : [...old, index]);
-                    insert(_el$23, createComponent(Expander, {
-                      get expanded() {
-                        return expandedPages().includes(index);
-                      }
-                    }), _el$24);
-                    insert(_el$23, index * 100, _el$28);
-                    insert(_el$23, index * 100 + 100 - 1, _el$29);
-                    insert(_el$22, createComponent(Show, {
-                      get when() {
-                        return expandedPages().includes(index);
-                      },
-                      get children() {
-                        var _el$30 = _tmpl$72();
-                        insert(_el$30, createComponent(Key, {
+                return [
+                  createComponent(Show, {
+                    get when() {
+                      return subEntryPages().length === 1;
+                    },
+                    get children() {
+                      var _el$14 = _tmpl$72();
+                      insert(
+                        _el$14,
+                        createComponent(Key, {
                           get each() {
-                            return entries2();
+                            return subEntries();
                           },
-                          by: (entry) => entry.label,
-                          children: (entry) => createComponent(Explorer, {
-                            get defaultExpanded() {
-                              return props.defaultExpanded;
-                            },
-                            get label() {
-                              return entry().label;
-                            },
-                            get value() {
-                              return entry().value;
-                            },
-                            get editable() {
-                              return props.editable;
-                            },
-                            get dataPath() {
-                              return [...currentDataPath, entry().label];
-                            },
-                            get activeQuery() {
-                              return props.activeQuery;
-                            }
-                          })
-                        }));
-                        createRenderEffect(() => className(_el$30, styles().subEntry));
-                        return _el$30;
-                      }
-                    }), null);
-                    createRenderEffect((_p$) => {
-                      var _v$0 = styles().entry, _v$1 = styles().expanderButton;
-                      _v$0 !== _p$.e && className(_el$22, _p$.e = _v$0);
-                      _v$1 !== _p$.t && className(_el$23, _p$.t = _v$1);
-                      return _p$;
-                    }, {
-                      e: void 0,
-                      t: void 0
-                    });
-                    return _el$21;
-                  })()
-                }));
-                createRenderEffect(() => className(_el$15, styles().subEntry));
-                return _el$15;
-              }
-            })];
-          }
-        })];
-      }
-    }), null);
-    insert(_el$6, createComponent(Show, {
-      get when() {
-        return subEntryPages().length === 0;
-      },
-      get children() {
-        var _el$16 = _tmpl$110(), _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild;
-        insert(_el$17, () => props.label, _el$18);
-        insert(_el$16, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!(props.editable && props.activeQuery !== void 0))() && (type() === "string" || type() === "number" || type() === "boolean");
-          },
-          get fallback() {
-            return (() => {
-              var _el$31 = _tmpl$02();
-              insert(_el$31, () => displayValue(props.value));
-              createRenderEffect(() => className(_el$31, styles().value));
-              return _el$31;
-            })();
-          },
-          get children() {
-            return [createComponent(Show, {
+                          by: (item) => item.label,
+                          children: (entry) => {
+                            return createComponent(Explorer, {
+                              get defaultExpanded() {
+                                return props.defaultExpanded;
+                              },
+                              get label() {
+                                return entry().label;
+                              },
+                              get value() {
+                                return entry().value;
+                              },
+                              get editable() {
+                                return props.editable;
+                              },
+                              get dataPath() {
+                                return [...currentDataPath, entry().label];
+                              },
+                              get activeQuery() {
+                                return props.activeQuery;
+                              },
+                              get itemsDeletable() {
+                                return (
+                                  type() === "array" ||
+                                  type() === "Iterable" ||
+                                  type() === "object"
+                                );
+                              },
+                            });
+                          },
+                        })
+                      );
+                      createRenderEffect(() =>
+                        className(_el$14, styles().subEntry)
+                      );
+                      return _el$14;
+                    },
+                  }),
+                  createComponent(Show, {
+                    get when() {
+                      return subEntryPages().length > 1;
+                    },
+                    get children() {
+                      var _el$15 = _tmpl$72();
+                      insert(
+                        _el$15,
+                        createComponent(Index, {
+                          get each() {
+                            return subEntryPages();
+                          },
+                          children: (entries2, index) =>
+                            (() => {
+                              var _el$21 = _tmpl$102(),
+                                _el$22 = _el$21.firstChild,
+                                _el$23 = _el$22.firstChild,
+                                _el$24 = _el$23.firstChild,
+                                _el$28 = _el$24.nextSibling,
+                                _el$26 = _el$28.nextSibling,
+                                _el$29 = _el$26.nextSibling;
+                              _el$29.nextSibling;
+                              _el$23.$$click = () =>
+                                setExpandedPages((old) =>
+                                  old.includes(index)
+                                    ? old.filter((d) => d !== index)
+                                    : [...old, index]
+                                );
+                              insert(
+                                _el$23,
+                                createComponent(Expander, {
+                                  get expanded() {
+                                    return expandedPages().includes(index);
+                                  },
+                                }),
+                                _el$24
+                              );
+                              insert(_el$23, index * 100, _el$28);
+                              insert(_el$23, index * 100 + 100 - 1, _el$29);
+                              insert(
+                                _el$22,
+                                createComponent(Show, {
+                                  get when() {
+                                    return expandedPages().includes(index);
+                                  },
+                                  get children() {
+                                    var _el$30 = _tmpl$72();
+                                    insert(
+                                      _el$30,
+                                      createComponent(Key, {
+                                        get each() {
+                                          return entries2();
+                                        },
+                                        by: (entry) => entry.label,
+                                        children: (entry) =>
+                                          createComponent(Explorer, {
+                                            get defaultExpanded() {
+                                              return props.defaultExpanded;
+                                            },
+                                            get label() {
+                                              return entry().label;
+                                            },
+                                            get value() {
+                                              return entry().value;
+                                            },
+                                            get editable() {
+                                              return props.editable;
+                                            },
+                                            get dataPath() {
+                                              return [
+                                                ...currentDataPath,
+                                                entry().label,
+                                              ];
+                                            },
+                                            get activeQuery() {
+                                              return props.activeQuery;
+                                            },
+                                          }),
+                                      })
+                                    );
+                                    createRenderEffect(() =>
+                                      className(_el$30, styles().subEntry)
+                                    );
+                                    return _el$30;
+                                  },
+                                }),
+                                null
+                              );
+                              createRenderEffect(
+                                (_p$) => {
+                                  var _v$0 = styles().entry,
+                                    _v$1 = styles().expanderButton;
+                                  _v$0 !== _p$.e &&
+                                    className(_el$22, (_p$.e = _v$0));
+                                  _v$1 !== _p$.t &&
+                                    className(_el$23, (_p$.t = _v$1));
+                                  return _p$;
+                                },
+                                {
+                                  e: void 0,
+                                  t: void 0,
+                                }
+                              );
+                              return _el$21;
+                            })(),
+                        })
+                      );
+                      createRenderEffect(() =>
+                        className(_el$15, styles().subEntry)
+                      );
+                      return _el$15;
+                    },
+                  }),
+                ];
+              },
+            }),
+          ];
+        },
+      }),
+      null
+    );
+    insert(
+      _el$6,
+      createComponent(Show, {
+        get when() {
+          return subEntryPages().length === 0;
+        },
+        get children() {
+          var _el$16 = _tmpl$110(),
+            _el$17 = _el$16.firstChild,
+            _el$18 = _el$17.firstChild;
+          insert(_el$17, () => props.label, _el$18);
+          insert(
+            _el$16,
+            createComponent(Show, {
               get when() {
-                return createMemo(() => !!(props.editable && props.activeQuery !== void 0))() && (type() === "string" || type() === "number");
+                return (
+                  createMemo(
+                    () => !!(props.editable && props.activeQuery !== void 0)
+                  )() &&
+                  (type() === "string" ||
+                    type() === "number" ||
+                    type() === "boolean")
+                );
+              },
+              get fallback() {
+                return (() => {
+                  var _el$31 = _tmpl$02();
+                  insert(_el$31, () => displayValue(props.value));
+                  createRenderEffect(() => className(_el$31, styles().value));
+                  return _el$31;
+                })();
               },
               get children() {
-                var _el$19 = _tmpl$92();
-                _el$19.addEventListener("change", (changeEvent) => {
-                  const oldData = props.activeQuery.state.data;
-                  const newData = updateNestedDataByPath(oldData, currentDataPath, type() === "number" ? changeEvent.target.valueAsNumber : changeEvent.target.value);
-                  queryClient.setQueryData(props.activeQuery.queryKey, newData);
-                });
-                createRenderEffect((_p$) => {
-                  var _v$6 = type() === "number" ? "number" : "text", _v$7 = clsx(styles().value, styles().editableInput);
-                  _v$6 !== _p$.e && setAttribute(_el$19, "type", _p$.e = _v$6);
-                  _v$7 !== _p$.t && className(_el$19, _p$.t = _v$7);
-                  return _p$;
-                }, {
-                  e: void 0,
-                  t: void 0
-                });
-                createRenderEffect(() => _el$19.value = props.value);
-                return _el$19;
-              }
-            }), createComponent(Show, {
+                return [
+                  createComponent(Show, {
+                    get when() {
+                      return (
+                        createMemo(
+                          () =>
+                            !!(props.editable && props.activeQuery !== void 0)
+                        )() &&
+                        (type() === "string" || type() === "number")
+                      );
+                    },
+                    get children() {
+                      var _el$19 = _tmpl$92();
+                      _el$19.addEventListener("change", (changeEvent) => {
+                        const oldData = props.activeQuery.state.data;
+                        const newData = updateNestedDataByPath(
+                          oldData,
+                          currentDataPath,
+                          type() === "number"
+                            ? changeEvent.target.valueAsNumber
+                            : changeEvent.target.value
+                        );
+                        queryClient.setQueryData(
+                          props.activeQuery.queryKey,
+                          newData
+                        );
+                      });
+                      createRenderEffect(
+                        (_p$) => {
+                          var _v$6 = type() === "number" ? "number" : "text",
+                            _v$7 = clsx(styles().value, styles().editableInput);
+                          _v$6 !== _p$.e &&
+                            setAttribute(_el$19, "type", (_p$.e = _v$6));
+                          _v$7 !== _p$.t && className(_el$19, (_p$.t = _v$7));
+                          return _p$;
+                        },
+                        {
+                          e: void 0,
+                          t: void 0,
+                        }
+                      );
+                      createRenderEffect(() => (_el$19.value = props.value));
+                      return _el$19;
+                    },
+                  }),
+                  createComponent(Show, {
+                    get when() {
+                      return type() === "boolean";
+                    },
+                    get children() {
+                      var _el$20 = _tmpl$02();
+                      insert(
+                        _el$20,
+                        createComponent(ToggleValueButton, {
+                          get activeQuery() {
+                            return props.activeQuery;
+                          },
+                          dataPath: currentDataPath,
+                          get value() {
+                            return props.value;
+                          },
+                        }),
+                        null
+                      );
+                      insert(_el$20, () => displayValue(props.value), null);
+                      createRenderEffect(() =>
+                        className(
+                          _el$20,
+                          clsx(
+                            styles().value,
+                            styles().actions,
+                            styles().editableInput
+                          )
+                        )
+                      );
+                      return _el$20;
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$16,
+            createComponent(Show, {
               get when() {
-                return type() === "boolean";
+                return (
+                  props.editable &&
+                  props.itemsDeletable &&
+                  props.activeQuery !== void 0
+                );
               },
               get children() {
-                var _el$20 = _tmpl$02();
-                insert(_el$20, createComponent(ToggleValueButton, {
+                return createComponent(DeleteItemButton, {
                   get activeQuery() {
                     return props.activeQuery;
                   },
                   dataPath: currentDataPath,
-                  get value() {
-                    return props.value;
-                  }
-                }), null);
-                insert(_el$20, () => displayValue(props.value), null);
-                createRenderEffect(() => className(_el$20, clsx(styles().value, styles().actions, styles().editableInput)));
-                return _el$20;
-              }
-            })];
-          }
-        }), null);
-        insert(_el$16, createComponent(Show, {
-          get when() {
-            return props.editable && props.itemsDeletable && props.activeQuery !== void 0;
-          },
-          get children() {
-            return createComponent(DeleteItemButton, {
-              get activeQuery() {
-                return props.activeQuery;
+                });
               },
-              dataPath: currentDataPath
-            });
-          }
-        }), null);
-        createRenderEffect((_p$) => {
-          var _v$8 = styles().row, _v$9 = styles().label;
-          _v$8 !== _p$.e && className(_el$16, _p$.e = _v$8);
-          _v$9 !== _p$.t && className(_el$17, _p$.t = _v$9);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
-        return _el$16;
-      }
-    }), null);
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$8 = styles().row,
+                _v$9 = styles().label;
+              _v$8 !== _p$.e && className(_el$16, (_p$.e = _v$8));
+              _v$9 !== _p$.t && className(_el$17, (_p$.t = _v$9));
+              return _p$;
+            },
+            {
+              e: void 0,
+              t: void 0,
+            }
+          );
+          return _el$16;
+        },
+      }),
+      null
+    );
     createRenderEffect(() => className(_el$6, styles().entry));
     return _el$6;
   })();
 }
-var _tmpl$23, _tmpl$24, _tmpl$32, _tmpl$42, _tmpl$52, _tmpl$62, _tmpl$72, _tmpl$82, _tmpl$92, _tmpl$02, _tmpl$110, _tmpl$102, Expander, CopyButton, ClearArrayButton, DeleteItemButton, ToggleValueButton, stylesFactory, lightStyles, darkStyles;
+var _tmpl$23,
+  _tmpl$24,
+  _tmpl$32,
+  _tmpl$42,
+  _tmpl$52,
+  _tmpl$62,
+  _tmpl$72,
+  _tmpl$82,
+  _tmpl$92,
+  _tmpl$02,
+  _tmpl$110,
+  _tmpl$102,
+  Expander,
+  CopyButton,
+  ClearArrayButton,
+  DeleteItemButton,
+  ToggleValueButton,
+  stylesFactory,
+  lightStyles,
+  darkStyles;
 var init_Explorer = __esm({
   "src/Explorer.tsx"() {
     init_web();
@@ -12586,12 +15006,24 @@ var init_Explorer = __esm({
     init_utils();
     init_icons();
     init_contexts();
-    _tmpl$23 = /* @__PURE__ */ template(`<span><svg width=16 height=16 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M6 12L10 8L6 4"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$24 = /* @__PURE__ */ template(`<button title="Copy object to clipboard">`);
-    _tmpl$32 = /* @__PURE__ */ template(`<button title="Remove all items"aria-label="Remove all items">`);
-    _tmpl$42 = /* @__PURE__ */ template(`<button title="Delete item"aria-label="Delete item">`);
-    _tmpl$52 = /* @__PURE__ */ template(`<button title="Toggle value"aria-label="Toggle value">`);
-    _tmpl$62 = /* @__PURE__ */ template(`<button title="Bulk Edit Data"aria-label="Bulk Edit Data">`);
+    _tmpl$23 = /* @__PURE__ */ template(
+      `<span><svg width=16 height=16 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M6 12L10 8L6 4"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$24 = /* @__PURE__ */ template(
+      `<button title="Copy object to clipboard">`
+    );
+    _tmpl$32 = /* @__PURE__ */ template(
+      `<button title="Remove all items"aria-label="Remove all items">`
+    );
+    _tmpl$42 = /* @__PURE__ */ template(
+      `<button title="Delete item"aria-label="Delete item">`
+    );
+    _tmpl$52 = /* @__PURE__ */ template(
+      `<button title="Toggle value"aria-label="Toggle value">`
+    );
+    _tmpl$62 = /* @__PURE__ */ template(
+      `<button title="Bulk Edit Data"aria-label="Bulk Edit Data">`
+    );
     _tmpl$72 = /* @__PURE__ */ template(`<div>`);
     _tmpl$82 = /* @__PURE__ */ template(`<div><button> <span></span> <span> `);
     _tmpl$92 = /* @__PURE__ */ template(`<input>`);
@@ -12600,96 +15032,139 @@ var init_Explorer = __esm({
     _tmpl$102 = /* @__PURE__ */ template(`<div><div><button> [<!>...<!>]`);
     Expander = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
       return (() => {
         var _el$ = _tmpl$23();
-        createRenderEffect(() => className(_el$, clsx(styles().expander, css`
-          transform: rotate(${props.expanded ? 90 : 0}deg);
-        `, props.expanded && css`
-            & svg {
-              top: -1px;
-            }
-          `)));
+        createRenderEffect(() =>
+          className(
+            _el$,
+            clsx(
+              styles().expander,
+              css`
+                transform: rotate(${props.expanded ? 90 : 0}deg);
+              `,
+              props.expanded &&
+                css`
+                  & svg {
+                    top: -1px;
+                  }
+                `
+            )
+          )
+        );
         return _el$;
       })();
     };
     CopyButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
       const [copyState, setCopyState] = createSignal("NoCopy");
       return (() => {
         var _el$2 = _tmpl$24();
-        addEventListener(_el$2, "click", copyState() === "NoCopy" ? () => {
-          navigator.clipboard.writeText(stringify(props.value)).then(() => {
-            setCopyState("SuccessCopy");
-            setTimeout(() => {
-              setCopyState("NoCopy");
-            }, 1500);
-          }, (err) => {
-            console.error("Failed to copy: ", err);
-            setCopyState("ErrorCopy");
-            setTimeout(() => {
-              setCopyState("NoCopy");
-            }, 1500);
-          });
-        } : void 0, true);
-        insert(_el$2, createComponent(Switch, {
-          get children() {
-            return [createComponent(Match, {
-              get when() {
-                return copyState() === "NoCopy";
-              },
-              get children() {
-                return createComponent(Copier, {});
-              }
-            }), createComponent(Match, {
-              get when() {
-                return copyState() === "SuccessCopy";
-              },
-              get children() {
-                return createComponent(CopiedCopier, {
-                  get theme() {
-                    return theme();
+        addEventListener(
+          _el$2,
+          "click",
+          copyState() === "NoCopy"
+            ? () => {
+                navigator.clipboard.writeText(stringify(props.value)).then(
+                  () => {
+                    setCopyState("SuccessCopy");
+                    setTimeout(() => {
+                      setCopyState("NoCopy");
+                    }, 1500);
+                  },
+                  (err) => {
+                    console.error("Failed to copy: ", err);
+                    setCopyState("ErrorCopy");
+                    setTimeout(() => {
+                      setCopyState("NoCopy");
+                    }, 1500);
                   }
-                });
-              }
-            }), createComponent(Match, {
-              get when() {
-                return copyState() === "ErrorCopy";
-              },
-              get children() {
-                return createComponent(ErrorCopier, {});
+                );
               }
-            })];
+            : void 0,
+          true
+        );
+        insert(
+          _el$2,
+          createComponent(Switch, {
+            get children() {
+              return [
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "NoCopy";
+                  },
+                  get children() {
+                    return createComponent(Copier, {});
+                  },
+                }),
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "SuccessCopy";
+                  },
+                  get children() {
+                    return createComponent(CopiedCopier, {
+                      get theme() {
+                        return theme();
+                      },
+                    });
+                  },
+                }),
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "ErrorCopy";
+                  },
+                  get children() {
+                    return createComponent(ErrorCopier, {});
+                  },
+                }),
+              ];
+            },
+          })
+        );
+        createRenderEffect(
+          (_p$) => {
+            var _v$ = styles().actionButton,
+              _v$2 = `${
+                copyState() === "NoCopy"
+                  ? "Copy object to clipboard"
+                  : copyState() === "SuccessCopy"
+                  ? "Object copied to clipboard"
+                  : "Error copying object to clipboard"
+              }`;
+            _v$ !== _p$.e && className(_el$2, (_p$.e = _v$));
+            _v$2 !== _p$.t && setAttribute(_el$2, "aria-label", (_p$.t = _v$2));
+            return _p$;
+          },
+          {
+            e: void 0,
+            t: void 0,
           }
-        }));
-        createRenderEffect((_p$) => {
-          var _v$ = styles().actionButton, _v$2 = `${copyState() === "NoCopy" ? "Copy object to clipboard" : copyState() === "SuccessCopy" ? "Object copied to clipboard" : "Error copying object to clipboard"}`;
-          _v$ !== _p$.e && className(_el$2, _p$.e = _v$);
-          _v$2 !== _p$.t && setAttribute(_el$2, "aria-label", _p$.t = _v$2);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
+        );
         return _el$2;
       })();
     };
     ClearArrayButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12708,9 +15183,11 @@ var init_Explorer = __esm({
     };
     DeleteItemButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12729,9 +15206,11 @@ var init_Explorer = __esm({
     };
     ToggleValueButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12740,167 +15219,241 @@ var init_Explorer = __esm({
         var _el$5 = _tmpl$52();
         _el$5.$$click = () => {
           const oldData = props.activeQuery.state.data;
-          const newData = updateNestedDataByPath(oldData, props.dataPath, !props.value);
+          const newData = updateNestedDataByPath(
+            oldData,
+            props.dataPath,
+            !props.value
+          );
           queryClient.setQueryData(props.activeQuery.queryKey, newData);
         };
-        insert(_el$5, createComponent(Check, {
-          get theme() {
-            return theme();
-          },
-          get checked() {
-            return props.value;
-          }
-        }));
-        createRenderEffect(() => className(_el$5, clsx(styles().actionButton, css`
-          width: ${tokens.size[3.5]};
-          height: ${tokens.size[3.5]};
-        `)));
+        insert(
+          _el$5,
+          createComponent(Check, {
+            get theme() {
+              return theme();
+            },
+            get checked() {
+              return props.value;
+            },
+          })
+        );
+        createRenderEffect(() =>
+          className(
+            _el$5,
+            clsx(
+              styles().actionButton,
+              css`
+                width: ${tokens.size[3.5]};
+                height: ${tokens.size[3.5]};
+              `
+            )
+          )
+        );
         return _el$5;
       })();
     };
     stylesFactory = (theme, css) => {
-      const {
-        colors,
-        font,
-        size: size3,
-        border
-      } = tokens;
-      const t2 = (light, dark) => theme === "light" ? light : dark;
+      const { colors, font, size: size3, border } = tokens;
+      const t2 = (light, dark) => (theme === "light" ? light : dark);
       return {
         entry: css`
-      & * {
-        font-size: ${font.size.xs};
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-      }
-      position: relative;
-      outline: none;
-      word-break: break-word;
-    `,
+          & * {
+            font-size: ${font.size.xs};
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+          }
+          position: relative;
+          outline: none;
+          word-break: break-word;
+        `,
         subEntry: css`
-      margin: 0 0 0 0.5em;
-      padding-left: 0.75em;
-      border-left: 2px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      /* outline: 1px solid ${colors.teal[400]}; */
-    `,
+          margin: 0 0 0 0.5em;
+          padding-left: 0.75em;
+          border-left: 2px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          /* outline: 1px solid ${colors.teal[400]}; */
+        `,
         expander: css`
-      & path {
-        stroke: ${colors.gray[400]};
-      }
-      & svg {
-        width: ${size3[3]};
-        height: ${size3[3]};
-      }
-      display: inline-flex;
-      align-items: center;
-      transition: all 0.1s ease;
-      /* outline: 1px solid ${colors.blue[400]}; */
-    `,
+          & path {
+            stroke: ${colors.gray[400]};
+          }
+          & svg {
+            width: ${size3[3]};
+            height: ${size3[3]};
+          }
+          display: inline-flex;
+          align-items: center;
+          transition: all 0.1s ease;
+          /* outline: 1px solid ${colors.blue[400]}; */
+        `,
         expanderButtonContainer: css`
-      display: flex;
-      align-items: center;
-      line-height: ${size3[4]};
-      min-height: ${size3[4]};
-      gap: ${size3[2]};
-    `,
+          display: flex;
+          align-items: center;
+          line-height: ${size3[4]};
+          min-height: ${size3[4]};
+          gap: ${size3[2]};
+        `,
         expanderButton: css`
-      cursor: pointer;
-      color: inherit;
-      font: inherit;
-      outline: inherit;
-      height: ${size3[5]};
-      background: transparent;
-      border: none;
-      padding: 0;
-      display: inline-flex;
-      align-items: center;
-      gap: ${size3[1]};
-      position: relative;
-      /* outline: 1px solid ${colors.green[400]}; */
+          cursor: pointer;
+          color: inherit;
+          font: inherit;
+          outline: inherit;
+          height: ${size3[5]};
+          background: transparent;
+          border: none;
+          padding: 0;
+          display: inline-flex;
+          align-items: center;
+          gap: ${size3[1]};
+          position: relative;
+          /* outline: 1px solid ${colors.green[400]}; */
 
-      &:focus-visible {
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
+          &:focus-visible {
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
 
-      & svg {
-        position: relative;
-        left: 1px;
-      }
-    `,
+          & svg {
+            position: relative;
+            left: 1px;
+          }
+        `,
         info: css`
-      color: ${t2(colors.gray[500], colors.gray[500])};
-      font-size: ${font.size.xs};
-      margin-left: ${size3[1]};
-      /* outline: 1px solid ${colors.yellow[400]}; */
-    `,
+          color: ${t2(colors.gray[500], colors.gray[500])};
+          font-size: ${font.size.xs};
+          margin-left: ${size3[1]};
+          /* outline: 1px solid ${colors.yellow[400]}; */
+        `,
         label: css`
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      white-space: nowrap;
-    `,
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          white-space: nowrap;
+        `,
         value: css`
-      color: ${t2(colors.purple[600], colors.purple[400])};
-      flex-grow: 1;
-    `,
+          color: ${t2(colors.purple[600], colors.purple[400])};
+          flex-grow: 1;
+        `,
         actions: css`
-      display: inline-flex;
-      gap: ${size3[2]};
-      align-items: center;
-    `,
+          display: inline-flex;
+          gap: ${size3[2]};
+          align-items: center;
+        `,
         row: css`
-      display: inline-flex;
-      gap: ${size3[2]};
-      width: 100%;
-      margin: ${size3[0.25]} 0px;
-      line-height: ${size3[4.5]};
-      align-items: center;
-    `,
+          display: inline-flex;
+          gap: ${size3[2]};
+          width: 100%;
+          margin: ${size3[0.25]} 0px;
+          line-height: ${size3[4.5]};
+          align-items: center;
+        `,
         editableInput: css`
-      border: none;
-      padding: ${size3[0.5]} ${size3[1]} ${size3[0.5]} ${size3[1.5]};
-      flex-grow: 1;
-      border-radius: ${border.radius.xs};
-      background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          border: none;
+          padding: ${size3[0.5]} ${size3[1]} ${size3[0.5]} ${size3[1.5]};
+          flex-grow: 1;
+          border-radius: ${border.radius.xs};
+          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
 
-      &:hover {
-        background-color: ${t2(colors.gray[300], colors.darkGray[600])};
-      }
-    `,
+          &:hover {
+            background-color: ${t2(colors.gray[300], colors.darkGray[600])};
+          }
+        `,
         actionButton: css`
-      background-color: transparent;
-      color: ${t2(colors.gray[500], colors.gray[500])};
-      border: none;
-      display: inline-flex;
-      padding: 0px;
-      align-items: center;
-      justify-content: center;
-      cursor: pointer;
-      width: ${size3[3]};
-      height: ${size3[3]};
-      position: relative;
-      z-index: 1;
+          background-color: transparent;
+          color: ${t2(colors.gray[500], colors.gray[500])};
+          border: none;
+          display: inline-flex;
+          padding: 0px;
+          align-items: center;
+          justify-content: center;
+          cursor: pointer;
+          width: ${size3[3]};
+          height: ${size3[3]};
+          position: relative;
+          z-index: 1;
 
-      &:hover svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-      }
+          &:hover svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+          }
 
-      &:focus-visible {
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-        outline-offset: 2px;
-      }
-    `
+          &:focus-visible {
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+            outline-offset: 2px;
+          }
+        `,
       };
     };
     lightStyles = (css) => stylesFactory("light", css);
     darkStyles = (css) => stylesFactory("dark", css);
     delegateEvents(["click"]);
-  }
+  },
 });
 
 // src/Devtools.tsx
-var _tmpl$25, _tmpl$26, _tmpl$33, _tmpl$43, _tmpl$53, _tmpl$63, _tmpl$73, _tmpl$83, _tmpl$93, _tmpl$03, _tmpl$111, _tmpl$103, _tmpl$112, _tmpl$122, _tmpl$132, _tmpl$142, _tmpl$152, _tmpl$162, _tmpl$172, _tmpl$182, _tmpl$192, _tmpl$202, _tmpl$212, _tmpl$222, _tmpl$232, _tmpl$242, _tmpl$252, _tmpl$262, _tmpl$27, _tmpl$28, _tmpl$29, _tmpl$30, _tmpl$31, _tmpl$322, _tmpl$332, selectedQueryHash, setSelectedQueryHash, selectedMutationId, setSelectedMutationId, panelWidth, setPanelWidth, offline, setOffline, Devtools, PiPPanel, ParentPanel, DraggablePanel, ContentView, QueryRow, MutationRow, QueryStatusCount, MutationStatusCount, QueryStatus, QueryDetails, MutationDetails, queryCacheMap, setupQueryCacheSubscription, createSubscribeToQueryCacheBatcher, mutationCacheMap, setupMutationCacheSubscription, createSubscribeToMutationCacheBatcher, DEV_TOOLS_EVENT, sendDevToolsEvent, stylesFactory2, lightStyles2, darkStyles2;
+var _tmpl$25,
+  _tmpl$26,
+  _tmpl$33,
+  _tmpl$43,
+  _tmpl$53,
+  _tmpl$63,
+  _tmpl$73,
+  _tmpl$83,
+  _tmpl$93,
+  _tmpl$03,
+  _tmpl$111,
+  _tmpl$103,
+  _tmpl$112,
+  _tmpl$122,
+  _tmpl$132,
+  _tmpl$142,
+  _tmpl$152,
+  _tmpl$162,
+  _tmpl$172,
+  _tmpl$182,
+  _tmpl$192,
+  _tmpl$202,
+  _tmpl$212,
+  _tmpl$222,
+  _tmpl$232,
+  _tmpl$242,
+  _tmpl$252,
+  _tmpl$262,
+  _tmpl$27,
+  _tmpl$28,
+  _tmpl$29,
+  _tmpl$30,
+  _tmpl$31,
+  _tmpl$322,
+  _tmpl$332,
+  selectedQueryHash,
+  setSelectedQueryHash,
+  selectedMutationId,
+  setSelectedMutationId,
+  panelWidth,
+  setPanelWidth,
+  offline,
+  setOffline,
+  Devtools,
+  PiPPanel,
+  ParentPanel,
+  DraggablePanel,
+  ContentView,
+  QueryRow,
+  MutationRow,
+  QueryStatusCount,
+  MutationStatusCount,
+  QueryStatus,
+  QueryDetails,
+  MutationDetails,
+  queryCacheMap,
+  setupQueryCacheSubscription,
+  createSubscribeToQueryCacheBatcher,
+  mutationCacheMap,
+  setupMutationCacheSubscription,
+  createSubscribeToMutationCacheBatcher,
+  DEV_TOOLS_EVENT,
+  sendDevToolsEvent,
+  stylesFactory2,
+  lightStyles2,
+  darkStyles2;
 var init_Devtools = __esm({
   "src/Devtools.tsx"() {
     init_web();
@@ -12929,14 +15482,24 @@ var init_Devtools = __esm({
     init_Explorer();
     init_contexts();
     init_constants();
-    _tmpl$25 = /* @__PURE__ */ template(`<div><div aria-hidden=true></div><button type=button aria-label="Open Tanstack query devtools"class=tsqd-open-btn>`);
+    _tmpl$25 = /* @__PURE__ */ template(
+      `<div><div aria-hidden=true></div><button type=button aria-label="Open Tanstack query devtools"class=tsqd-open-btn>`
+    );
     _tmpl$26 = /* @__PURE__ */ template(`<div>`);
-    _tmpl$33 = /* @__PURE__ */ template(`<aside aria-label="Tanstack query devtools"><div></div><button aria-label="Close tanstack query devtools">`);
-    _tmpl$43 = /* @__PURE__ */ template(`<select name=tsqd-queries-filter-sort>`);
-    _tmpl$53 = /* @__PURE__ */ template(`<select name=tsqd-mutations-filter-sort>`);
+    _tmpl$33 = /* @__PURE__ */ template(
+      `<aside aria-label="Tanstack query devtools"><div></div><button aria-label="Close tanstack query devtools">`
+    );
+    _tmpl$43 = /* @__PURE__ */ template(
+      `<select name=tsqd-queries-filter-sort>`
+    );
+    _tmpl$53 = /* @__PURE__ */ template(
+      `<select name=tsqd-mutations-filter-sort>`
+    );
     _tmpl$63 = /* @__PURE__ */ template(`<span>Asc`);
     _tmpl$73 = /* @__PURE__ */ template(`<span>Desc`);
-    _tmpl$83 = /* @__PURE__ */ template(`<button aria-label="Open in picture-in-picture mode"title="Open in picture-in-picture mode">`);
+    _tmpl$83 = /* @__PURE__ */ template(
+      `<button aria-label="Open in picture-in-picture mode"title="Open in picture-in-picture mode">`
+    );
     _tmpl$93 = /* @__PURE__ */ template(`<div>Settings`);
     _tmpl$03 = /* @__PURE__ */ template(`<span>Position`);
     _tmpl$111 = /* @__PURE__ */ template(`<span>Top`);
@@ -12947,36 +15510,64 @@ var init_Devtools = __esm({
     _tmpl$142 = /* @__PURE__ */ template(`<span>Light`);
     _tmpl$152 = /* @__PURE__ */ template(`<span>Dark`);
     _tmpl$162 = /* @__PURE__ */ template(`<span>System`);
-    _tmpl$172 = /* @__PURE__ */ template(`<div><div class=tsqd-queries-container>`);
-    _tmpl$182 = /* @__PURE__ */ template(`<div><div class=tsqd-mutations-container>`);
-    _tmpl$192 = /* @__PURE__ */ template(`<div><div><div><button aria-label="Close Tanstack query devtools"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label="Filter queries by query key"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label="Clear query cache"></button><button>`);
+    _tmpl$172 = /* @__PURE__ */ template(
+      `<div><div class=tsqd-queries-container>`
+    );
+    _tmpl$182 = /* @__PURE__ */ template(
+      `<div><div class=tsqd-mutations-container>`
+    );
+    _tmpl$192 = /* @__PURE__ */ template(
+      `<div><div><div><button aria-label="Close Tanstack query devtools"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label="Filter queries by query key"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label="Clear query cache"></button><button>`
+    );
     _tmpl$202 = /* @__PURE__ */ template(`<option>Sort by `);
-    _tmpl$212 = /* @__PURE__ */ template(`<div class=tsqd-query-disabled-indicator>disabled`);
-    _tmpl$222 = /* @__PURE__ */ template(`<div class=tsqd-query-static-indicator>static`);
-    _tmpl$232 = /* @__PURE__ */ template(`<button><div></div><code class=tsqd-query-hash>`);
-    _tmpl$242 = /* @__PURE__ */ template(`<div role=tooltip id=tsqd-status-tooltip>`);
+    _tmpl$212 = /* @__PURE__ */ template(
+      `<div class=tsqd-query-disabled-indicator>disabled`
+    );
+    _tmpl$222 = /* @__PURE__ */ template(
+      `<div class=tsqd-query-static-indicator>static`
+    );
+    _tmpl$232 = /* @__PURE__ */ template(
+      `<button><div></div><code class=tsqd-query-hash>`
+    );
+    _tmpl$242 = /* @__PURE__ */ template(
+      `<div role=tooltip id=tsqd-status-tooltip>`
+    );
     _tmpl$252 = /* @__PURE__ */ template(`<span>`);
     _tmpl$262 = /* @__PURE__ */ template(`<button><span></span><span>`);
     _tmpl$27 = /* @__PURE__ */ template(`<button><span></span> Error`);
-    _tmpl$28 = /* @__PURE__ */ template(`<div><span></span>Trigger Error<select><option value=""disabled selected>`);
-    _tmpl$29 = /* @__PURE__ */ template(`<div class="tsqd-query-details-explorer-container tsqd-query-details-data-explorer">`);
-    _tmpl$30 = /* @__PURE__ */ template(`<form><textarea name=data></textarea><div><span></span><div><button type=button>Cancel</button><button>Save`);
-    _tmpl$31 = /* @__PURE__ */ template(`<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data </div><div>Query Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`);
+    _tmpl$28 = /* @__PURE__ */ template(
+      `<div><span></span>Trigger Error<select><option value=""disabled selected>`
+    );
+    _tmpl$29 = /* @__PURE__ */ template(
+      `<div class="tsqd-query-details-explorer-container tsqd-query-details-data-explorer">`
+    );
+    _tmpl$30 = /* @__PURE__ */ template(
+      `<form><textarea name=data></textarea><div><span></span><div><button type=button>Cancel</button><button>Save`
+    );
+    _tmpl$31 = /* @__PURE__ */ template(
+      `<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data </div><div>Query Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`
+    );
     _tmpl$322 = /* @__PURE__ */ template(`<option>`);
-    _tmpl$332 = /* @__PURE__ */ template(`<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Context Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Data Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Mutations Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`);
+    _tmpl$332 = /* @__PURE__ */ template(
+      `<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Context Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Data Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Mutations Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`
+    );
     [selectedQueryHash, setSelectedQueryHash] = createSignal(null);
     [selectedMutationId, setSelectedMutationId] = createSignal(null);
     [panelWidth, setPanelWidth] = createSignal(0);
     [offline, setOffline] = createSignal(false);
     Devtools = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const onlineManager = createMemo(() => useQueryDevtoolsContext().onlineManager);
+      const onlineManager = createMemo(
+        () => useQueryDevtoolsContext().onlineManager
+      );
       onMount(() => {
         const unsubscribe = onlineManager().subscribe((online) => {
           setOffline(!online);
@@ -12990,10 +15581,18 @@ var init_Devtools = __esm({
         return useQueryDevtoolsContext().buttonPosition || BUTTON_POSITION;
       });
       const isOpen = createMemo(() => {
-        return props.localStore.open === "true" ? true : props.localStore.open === "false" ? false : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;
+        return props.localStore.open === "true"
+          ? true
+          : props.localStore.open === "false"
+          ? false
+          : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;
       });
       const position = createMemo(() => {
-        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;
+        return (
+          props.localStore.position ||
+          useQueryDevtoolsContext().position ||
+          POSITION
+        );
       });
       let transitionsContainerRef;
       createEffect(() => {
@@ -13001,8 +15600,14 @@ var init_Devtools = __esm({
         const height = props.localStore.height || DEFAULT_HEIGHT;
         const width = props.localStore.width || DEFAULT_WIDTH;
         const panelPosition = position();
-        root.style.setProperty("--tsqd-panel-height", `${panelPosition === "top" ? "-" : ""}${height}px`);
-        root.style.setProperty("--tsqd-panel-width", `${panelPosition === "left" ? "-" : ""}${width}px`);
+        root.style.setProperty(
+          "--tsqd-panel-height",
+          `${panelPosition === "top" ? "-" : ""}${height}px`
+        );
+        root.style.setProperty(
+          "--tsqd-panel-width",
+          `${panelPosition === "left" ? "-" : ""}${width}px`
+        );
       });
       onMount(() => {
         const onFocus = () => {
@@ -13017,120 +15622,161 @@ var init_Devtools = __esm({
         });
       });
       const pip_open = createMemo(() => props.localStore.pip_open ?? "false");
-      return [createComponent(Show, {
-        get when() {
-          return createMemo(() => !!pip().pipWindow)() && pip_open() == "true";
-        },
-        get children() {
-          return createComponent(Portal, {
-            get mount() {
-              return pip().pipWindow?.document.body;
-            },
-            get children() {
-              return createComponent(PiPPanel, {
-                get children() {
-                  return createComponent(ContentView, props);
-                }
-              });
-            }
-          });
-        }
-      }), (() => {
-        var _el$ = _tmpl$26();
-        var _ref$ = transitionsContainerRef;
-        typeof _ref$ === "function" ? use(_ref$, _el$) : transitionsContainerRef = _el$;
-        insert(_el$, createComponent(TransitionGroup, {
-          name: "tsqd-panel-transition",
+      return [
+        createComponent(Show, {
+          get when() {
+            return (
+              createMemo(() => !!pip().pipWindow)() && pip_open() == "true"
+            );
+          },
           get children() {
-            return createComponent(Show, {
-              get when() {
-                return createMemo(() => !!(isOpen() && !pip().pipWindow))() && pip_open() == "false";
+            return createComponent(Portal, {
+              get mount() {
+                return pip().pipWindow?.document.body;
               },
               get children() {
-                return createComponent(DraggablePanel, {
-                  get localStore() {
-                    return props.localStore;
+                return createComponent(PiPPanel, {
+                  get children() {
+                    return createComponent(ContentView, props);
                   },
-                  get setLocalStore() {
-                    return props.setLocalStore;
-                  }
                 });
-              }
+              },
             });
-          }
-        }), null);
-        insert(_el$, createComponent(TransitionGroup, {
-          name: "tsqd-button-transition",
-          get children() {
-            return createComponent(Show, {
-              get when() {
-                return !isOpen();
+          },
+        }),
+        (() => {
+          var _el$ = _tmpl$26();
+          var _ref$ = transitionsContainerRef;
+          typeof _ref$ === "function"
+            ? use(_ref$, _el$)
+            : (transitionsContainerRef = _el$);
+          insert(
+            _el$,
+            createComponent(TransitionGroup, {
+              name: "tsqd-panel-transition",
+              get children() {
+                return createComponent(Show, {
+                  get when() {
+                    return (
+                      createMemo(() => !!(isOpen() && !pip().pipWindow))() &&
+                      pip_open() == "false"
+                    );
+                  },
+                  get children() {
+                    return createComponent(DraggablePanel, {
+                      get localStore() {
+                        return props.localStore;
+                      },
+                      get setLocalStore() {
+                        return props.setLocalStore;
+                      },
+                    });
+                  },
+                });
               },
+            }),
+            null
+          );
+          insert(
+            _el$,
+            createComponent(TransitionGroup, {
+              name: "tsqd-button-transition",
               get children() {
-                var _el$2 = _tmpl$25(), _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;
-                insert(_el$3, createComponent(TanstackLogo, {}));
-                _el$4.$$click = () => props.setLocalStore("open", "true");
-                insert(_el$4, createComponent(TanstackLogo, {}));
-                createRenderEffect(() => className(_el$2, clsx(styles().devtoolsBtn, styles()[`devtoolsBtn-position-${buttonPosition()}`], "tsqd-open-btn-container")));
-                return _el$2;
-              }
-            });
-          }
-        }), null);
-        createRenderEffect(() => className(_el$, clsx(css`
-            & .tsqd-panel-transition-exit-active,
-            & .tsqd-panel-transition-enter-active {
-              transition:
-                opacity 0.3s,
-                transform 0.3s;
-            }
+                return createComponent(Show, {
+                  get when() {
+                    return !isOpen();
+                  },
+                  get children() {
+                    var _el$2 = _tmpl$25(),
+                      _el$3 = _el$2.firstChild,
+                      _el$4 = _el$3.nextSibling;
+                    insert(_el$3, createComponent(TanstackLogo, {}));
+                    _el$4.$$click = () => props.setLocalStore("open", "true");
+                    insert(_el$4, createComponent(TanstackLogo, {}));
+                    createRenderEffect(() =>
+                      className(
+                        _el$2,
+                        clsx(
+                          styles().devtoolsBtn,
+                          styles()[`devtoolsBtn-position-${buttonPosition()}`],
+                          "tsqd-open-btn-container"
+                        )
+                      )
+                    );
+                    return _el$2;
+                  },
+                });
+              },
+            }),
+            null
+          );
+          createRenderEffect(() =>
+            className(
+              _el$,
+              clsx(
+                css`
+                  & .tsqd-panel-transition-exit-active,
+                  & .tsqd-panel-transition-enter-active {
+                    transition: opacity 0.3s, transform 0.3s;
+                  }
 
-            & .tsqd-panel-transition-exit-to,
-            & .tsqd-panel-transition-enter {
-              ${position() === "top" || position() === "bottom" ? `transform: translateY(var(--tsqd-panel-height));` : `transform: translateX(var(--tsqd-panel-width));`}
-            }
+                  & .tsqd-panel-transition-exit-to,
+                  & .tsqd-panel-transition-enter {
+                    ${position() === "top" || position() === "bottom"
+                      ? `transform: translateY(var(--tsqd-panel-height));`
+                      : `transform: translateX(var(--tsqd-panel-width));`}
+                  }
 
-            & .tsqd-button-transition-exit-active,
-            & .tsqd-button-transition-enter-active {
-              transition:
-                opacity 0.3s,
-                transform 0.3s;
-              opacity: 1;
-            }
+                  & .tsqd-button-transition-exit-active,
+                  & .tsqd-button-transition-enter-active {
+                    transition: opacity 0.3s, transform 0.3s;
+                    opacity: 1;
+                  }
 
-            & .tsqd-button-transition-exit-to,
-            & .tsqd-button-transition-enter {
-              transform: ${buttonPosition() === "relative" ? `none;` : buttonPosition() === "top-left" ? `translateX(-72px);` : buttonPosition() === "top-right" ? `translateX(72px);` : `translateY(72px);`};
-              opacity: 0;
-            }
-          `, "tsqd-transitions-container")));
-        return _el$;
-      })()];
+                  & .tsqd-button-transition-exit-to,
+                  & .tsqd-button-transition-enter {
+                    transform: ${buttonPosition() === "relative"
+                      ? `none;`
+                      : buttonPosition() === "top-left"
+                      ? `translateX(-72px);`
+                      : buttonPosition() === "top-right"
+                      ? `translateX(72px);`
+                      : `translateY(72px);`};
+                    opacity: 0;
+                  }
+                `,
+                "tsqd-transitions-container"
+              )
+            )
+          );
+          return _el$;
+        })(),
+      ];
     };
     PiPPanel = (props) => {
       const pip = usePiPWindow();
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       createEffect(() => {
         const win = pip().pipWindow;
@@ -13155,80 +15801,102 @@ var init_Devtools = __esm({
         _el$5.style.setProperty("height", "100vh");
         _el$5.style.setProperty("width", "100vw");
         insert(_el$5, () => props.children);
-        createRenderEffect(() => className(_el$5, clsx(styles().panel, getPanelDynamicStyles(), {
-          [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint
-        }, "tsqd-main-panel")));
+        createRenderEffect(() =>
+          className(
+            _el$5,
+            clsx(
+              styles().panel,
+              getPanelDynamicStyles(),
+              {
+                [css`
+                  min-width: min-content;
+                `]: panelWidth() < thirdBreakpoint,
+              },
+              "tsqd-main-panel"
+            )
+          )
+        );
         return _el$5;
       })();
     };
     ParentPanel = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       let panelRef;
       onMount(() => {
-        createResizeObserver(panelRef, ({
-          width
-        }, el) => {
+        createResizeObserver(panelRef, ({ width }, el) => {
           if (el === panelRef) {
             setPanelWidth(width);
           }
         });
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       return (() => {
         var _el$6 = _tmpl$26();
         var _ref$2 = panelRef;
-        typeof _ref$2 === "function" ? use(_ref$2, _el$6) : panelRef = _el$6;
+        typeof _ref$2 === "function" ? use(_ref$2, _el$6) : (panelRef = _el$6);
         _el$6.style.setProperty("--tsqd-font-size", "16px");
         insert(_el$6, () => props.children);
-        createRenderEffect(() => className(_el$6, clsx(styles().parentPanel, getPanelDynamicStyles(), {
-          [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint
-        }, "tsqd-main-panel")));
+        createRenderEffect(() =>
+          className(
+            _el$6,
+            clsx(
+              styles().parentPanel,
+              getPanelDynamicStyles(),
+              {
+                [css`
+                  min-width: min-content;
+                `]: panelWidth() < thirdBreakpoint,
+              },
+              "tsqd-main-panel"
+            )
+          )
+        );
         return _el$6;
       })();
     };
     DraggablePanel = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const [isResizing, setIsResizing] = createSignal(false);
-      const position = createMemo(() => props.localStore.position || useQueryDevtoolsContext().position || POSITION);
+      const position = createMemo(
+        () =>
+          props.localStore.position ||
+          useQueryDevtoolsContext().position ||
+          POSITION
+      );
       const handleDragStart = (event) => {
         const panelElement = event.currentTarget.parentElement;
         if (!panelElement) return;
         setIsResizing(true);
-        const {
-          height,
-          width
-        } = panelElement.getBoundingClientRect();
+        const { height, width } = panelElement.getBoundingClientRect();
         const startX = event.clientX;
         const startY = event.clientY;
         let newSize = 0;
@@ -13237,7 +15905,10 @@ var init_Devtools = __esm({
         const runDrag = (moveEvent) => {
           moveEvent.preventDefault();
           if (position() === "left" || position() === "right") {
-            const valToAdd = position() === "right" ? startX - moveEvent.clientX : moveEvent.clientX - startX;
+            const valToAdd =
+              position() === "right"
+                ? startX - moveEvent.clientX
+                : moveEvent.clientX - startX;
             newSize = Math.round(width + valToAdd);
             if (newSize < minWidth) {
               newSize = minWidth;
@@ -13248,7 +15919,10 @@ var init_Devtools = __esm({
               props.setLocalStore("width", String(newWidth));
             }
           } else {
-            const valToAdd = position() === "bottom" ? startY - moveEvent.clientY : moveEvent.clientY - startY;
+            const valToAdd =
+              position() === "bottom"
+                ? startY - moveEvent.clientY
+                : moveEvent.clientY - startY;
             newSize = Math.round(height + valToAdd);
             if (newSize < minHeight) {
               newSize = minHeight;
@@ -13269,83 +15943,123 @@ var init_Devtools = __esm({
       };
       let panelRef;
       onMount(() => {
-        createResizeObserver(panelRef, ({
-          width
-        }, el) => {
+        createResizeObserver(panelRef, ({ width }, el) => {
           if (el === panelRef) {
             setPanelWidth(width);
           }
         });
       });
       createEffect(() => {
-        const rootContainer = panelRef.parentElement?.parentElement?.parentElement;
+        const rootContainer =
+          panelRef.parentElement?.parentElement?.parentElement;
         if (!rootContainer) return;
         const currentPosition = props.localStore.position || POSITION;
         const styleProp = getSidedProp("padding", currentPosition);
-        const isVertical = props.localStore.position === "left" || props.localStore.position === "right";
+        const isVertical =
+          props.localStore.position === "left" ||
+          props.localStore.position === "right";
         const previousPaddings = (({
           padding,
           paddingTop,
           paddingBottom,
           paddingLeft,
-          paddingRight
+          paddingRight,
         }) => ({
           padding,
           paddingTop,
           paddingBottom,
           paddingLeft,
-          paddingRight
+          paddingRight,
         }))(rootContainer.style);
-        rootContainer.style[styleProp] = `${isVertical ? props.localStore.width : props.localStore.height}px`;
+        rootContainer.style[styleProp] = `${
+          isVertical ? props.localStore.width : props.localStore.height
+        }px`;
         onCleanup(() => {
-          Object.entries(previousPaddings).forEach(([property, previousValue]) => {
-            rootContainer.style[property] = previousValue;
-          });
+          Object.entries(previousPaddings).forEach(
+            ([property, previousValue]) => {
+              rootContainer.style[property] = previousValue;
+            }
+          );
         });
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       return (() => {
-        var _el$7 = _tmpl$33(), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;
+        var _el$7 = _tmpl$33(),
+          _el$8 = _el$7.firstChild,
+          _el$9 = _el$8.nextSibling;
         var _ref$3 = panelRef;
-        typeof _ref$3 === "function" ? use(_ref$3, _el$7) : panelRef = _el$7;
+        typeof _ref$3 === "function" ? use(_ref$3, _el$7) : (panelRef = _el$7);
         _el$8.$$mousedown = handleDragStart;
         _el$9.$$click = () => props.setLocalStore("open", "false");
         insert(_el$9, createComponent(ChevronDown, {}));
         insert(_el$7, createComponent(ContentView, props), null);
-        createRenderEffect((_p$) => {
-          var _v$ = clsx(styles().panel, styles()[`panel-position-${position()}`], getPanelDynamicStyles(), {
-            [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint && (position() === "right" || position() === "left")
-          }, "tsqd-main-panel"), _v$2 = position() === "bottom" || position() === "top" ? `${props.localStore.height || DEFAULT_HEIGHT}px` : "auto", _v$3 = position() === "right" || position() === "left" ? `${props.localStore.width || DEFAULT_WIDTH}px` : "auto", _v$4 = clsx(styles().dragHandle, styles()[`dragHandle-position-${position()}`], "tsqd-drag-handle"), _v$5 = clsx(styles().closeBtn, styles()[`closeBtn-position-${position()}`], "tsqd-minimize-btn");
-          _v$ !== _p$.e && className(_el$7, _p$.e = _v$);
-          _v$2 !== _p$.t && ((_p$.t = _v$2) != null ? _el$7.style.setProperty("height", _v$2) : _el$7.style.removeProperty("height"));
-          _v$3 !== _p$.a && ((_p$.a = _v$3) != null ? _el$7.style.setProperty("width", _v$3) : _el$7.style.removeProperty("width"));
-          _v$4 !== _p$.o && className(_el$8, _p$.o = _v$4);
-          _v$5 !== _p$.i && className(_el$9, _p$.i = _v$5);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0,
-          a: void 0,
-          o: void 0,
-          i: void 0
-        });
+        createRenderEffect(
+          (_p$) => {
+            var _v$ = clsx(
+                styles().panel,
+                styles()[`panel-position-${position()}`],
+                getPanelDynamicStyles(),
+                {
+                  [css`
+                    min-width: min-content;
+                  `]:
+                    panelWidth() < thirdBreakpoint &&
+                    (position() === "right" || position() === "left"),
+                },
+                "tsqd-main-panel"
+              ),
+              _v$2 =
+                position() === "bottom" || position() === "top"
+                  ? `${props.localStore.height || DEFAULT_HEIGHT}px`
+                  : "auto",
+              _v$3 =
+                position() === "right" || position() === "left"
+                  ? `${props.localStore.width || DEFAULT_WIDTH}px`
+                  : "auto",
+              _v$4 = clsx(
+                styles().dragHandle,
+                styles()[`dragHandle-position-${position()}`],
+                "tsqd-drag-handle"
+              ),
+              _v$5 = clsx(
+                styles().closeBtn,
+                styles()[`closeBtn-position-${position()}`],
+                "tsqd-minimize-btn"
+              );
+            _v$ !== _p$.e && className(_el$7, (_p$.e = _v$));
+            _v$2 !== _p$.t &&
+              ((_p$.t = _v$2) != null
+                ? _el$7.style.setProperty("height", _v$2)
+                : _el$7.style.removeProperty("height"));
+            _v$3 !== _p$.a &&
+              ((_p$.a = _v$3) != null
+                ? _el$7.style.setProperty("width", _v$3)
+                : _el$7.style.removeProperty("width"));
+            _v$4 !== _p$.o && className(_el$8, (_p$.o = _v$4));
+            _v$5 !== _p$.i && className(_el$9, (_p$.i = _v$5));
+            return _p$;
+          },
+          {
+            e: void 0,
+            t: void 0,
+            a: void 0,
+            o: void 0,
+            i: void 0,
+          }
+        );
         return _el$7;
       })();
     };
@@ -13354,21 +16068,33 @@ var init_Devtools = __esm({
       setupMutationCacheSubscription();
       let containerRef;
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const pip = usePiPWindow();
       const [selectedView, setSelectedView] = createSignal("queries");
-      const sort = createMemo(() => props.localStore.sort || DEFAULT_SORT_FN_NAME);
-      const sortOrder = createMemo(() => Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER);
-      const mutationSort = createMemo(() => props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME);
-      const mutationSortOrder = createMemo(() => Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER);
+      const sort = createMemo(
+        () => props.localStore.sort || DEFAULT_SORT_FN_NAME
+      );
+      const sortOrder = createMemo(
+        () => Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER
+      );
+      const mutationSort = createMemo(
+        () => props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME
+      );
+      const mutationSortOrder = createMemo(
+        () => Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER
+      );
       const sortFn = createMemo(() => sortFns[sort()]);
       const mutationSortFn = createMemo(() => mutationSortFns[mutationSort()]);
-      const onlineManager = createMemo(() => useQueryDevtoolsContext().onlineManager);
+      const onlineManager = createMemo(
+        () => useQueryDevtoolsContext().onlineManager
+      );
       const query_cache = createMemo(() => {
         return useQueryDevtoolsContext().client.getQueryCache();
       });
@@ -13378,24 +16104,61 @@ var init_Devtools = __esm({
       const queryCount = createSubscribeToQueryCacheBatcher((queryCache) => {
         return queryCache().getAll().length;
       }, false);
-      const queries = createMemo(on(() => [queryCount(), props.localStore.filter, sort(), sortOrder()], () => {
-        const curr = query_cache().getAll();
-        const filtered = props.localStore.filter ? curr.filter((item) => rankItem(item.queryHash, props.localStore.filter || "").passed) : [...curr];
-        const sorted = sortFn() ? filtered.sort((a2, b2) => sortFn()(a2, b2) * sortOrder()) : filtered;
-        return sorted;
-      }));
-      const mutationCount = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        return mutationCache().getAll().length;
-      }, false);
-      const mutations = createMemo(on(() => [mutationCount(), props.localStore.mutationFilter, mutationSort(), mutationSortOrder()], () => {
-        const curr = mutation_cache().getAll();
-        const filtered = props.localStore.mutationFilter ? curr.filter((item) => {
-          const value = `${item.options.mutationKey ? JSON.stringify(item.options.mutationKey) + " - " : ""}${new Date(item.state.submittedAt).toLocaleString()}`;
-          return rankItem(value, props.localStore.mutationFilter || "").passed;
-        }) : [...curr];
-        const sorted = mutationSortFn() ? filtered.sort((a2, b2) => mutationSortFn()(a2, b2) * mutationSortOrder()) : filtered;
-        return sorted;
-      }));
+      const queries = createMemo(
+        on(
+          () => [queryCount(), props.localStore.filter, sort(), sortOrder()],
+          () => {
+            const curr = query_cache().getAll();
+            const filtered = props.localStore.filter
+              ? curr.filter(
+                  (item) =>
+                    rankItem(item.queryHash, props.localStore.filter || "")
+                      .passed
+                )
+              : [...curr];
+            const sorted = sortFn()
+              ? filtered.sort((a2, b2) => sortFn()(a2, b2) * sortOrder())
+              : filtered;
+            return sorted;
+          }
+        )
+      );
+      const mutationCount = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          return mutationCache().getAll().length;
+        },
+        false
+      );
+      const mutations = createMemo(
+        on(
+          () => [
+            mutationCount(),
+            props.localStore.mutationFilter,
+            mutationSort(),
+            mutationSortOrder(),
+          ],
+          () => {
+            const curr = mutation_cache().getAll();
+            const filtered = props.localStore.mutationFilter
+              ? curr.filter((item) => {
+                  const value = `${
+                    item.options.mutationKey
+                      ? JSON.stringify(item.options.mutationKey) + " - "
+                      : ""
+                  }${new Date(item.state.submittedAt).toLocaleString()}`;
+                  return rankItem(value, props.localStore.mutationFilter || "")
+                    .passed;
+                })
+              : [...curr];
+            const sorted = mutationSortFn()
+              ? filtered.sort(
+                  (a2, b2) => mutationSortFn()(a2, b2) * mutationSortOrder()
+                )
+              : filtered;
+            return sorted;
+          }
+        )
+      );
       const setDevtoolsPosition = (pos) => {
         props.setLocalStore("position", pos);
       };
@@ -13404,796 +16167,1496 @@ var init_Devtools = __esm({
         const variable = computedStyle.getPropertyValue("--tsqd-font-size");
         el.style.setProperty("--tsqd-font-size", variable);
       };
-      return [(() => {
-        var _el$0 = _tmpl$192(), _el$1 = _el$0.firstChild, _el$10 = _el$1.firstChild, _el$11 = _el$10.firstChild, _el$12 = _el$11.firstChild, _el$13 = _el$12.nextSibling, _el$14 = _el$13.firstChild, _el$15 = _el$1.nextSibling, _el$16 = _el$15.firstChild, _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild, _el$19 = _el$17.nextSibling, _el$22 = _el$19.nextSibling, _el$25 = _el$16.nextSibling, _el$26 = _el$25.firstChild, _el$27 = _el$26.nextSibling;
-        var _ref$4 = containerRef;
-        typeof _ref$4 === "function" ? use(_ref$4, _el$0) : containerRef = _el$0;
-        _el$11.$$click = () => {
-          if (!pip().pipWindow && !props.showPanelViewOnly) {
-            props.setLocalStore("open", "false");
-            return;
-          }
-          if (props.onClose) {
-            props.onClose();
-          }
-        };
-        insert(_el$13, () => useQueryDevtoolsContext().queryFlavor, _el$14);
-        insert(_el$13, () => useQueryDevtoolsContext().version, null);
-        insert(_el$10, createComponent(radio_group_exports.Root, {
-          get ["class"]() {
-            return clsx(styles().viewToggle);
-          },
-          get value() {
-            return selectedView();
-          },
-          onChange: (value) => {
-            setSelectedView(value);
-            setSelectedQueryHash(null);
-            setSelectedMutationId(null);
-          },
-          get children() {
-            return [createComponent(radio_group_exports.Item, {
-              value: "queries",
-              "class": "tsqd-radio-toggle",
+      return [
+        (() => {
+          var _el$0 = _tmpl$192(),
+            _el$1 = _el$0.firstChild,
+            _el$10 = _el$1.firstChild,
+            _el$11 = _el$10.firstChild,
+            _el$12 = _el$11.firstChild,
+            _el$13 = _el$12.nextSibling,
+            _el$14 = _el$13.firstChild,
+            _el$15 = _el$1.nextSibling,
+            _el$16 = _el$15.firstChild,
+            _el$17 = _el$16.firstChild,
+            _el$18 = _el$17.firstChild,
+            _el$19 = _el$17.nextSibling,
+            _el$22 = _el$19.nextSibling,
+            _el$25 = _el$16.nextSibling,
+            _el$26 = _el$25.firstChild,
+            _el$27 = _el$26.nextSibling;
+          var _ref$4 = containerRef;
+          typeof _ref$4 === "function"
+            ? use(_ref$4, _el$0)
+            : (containerRef = _el$0);
+          _el$11.$$click = () => {
+            if (!pip().pipWindow && !props.showPanelViewOnly) {
+              props.setLocalStore("open", "false");
+              return;
+            }
+            if (props.onClose) {
+              props.onClose();
+            }
+          };
+          insert(_el$13, () => useQueryDevtoolsContext().queryFlavor, _el$14);
+          insert(_el$13, () => useQueryDevtoolsContext().version, null);
+          insert(
+            _el$10,
+            createComponent(radio_group_exports.Root, {
+              get ["class"]() {
+                return clsx(styles().viewToggle);
+              },
+              get value() {
+                return selectedView();
+              },
+              onChange: (value) => {
+                setSelectedView(value);
+                setSelectedQueryHash(null);
+                setSelectedMutationId(null);
+              },
               get children() {
-                return [createComponent(radio_group_exports.ItemInput, {}), createComponent(radio_group_exports.ItemControl, {
-                  get children() {
-                    return createComponent(radio_group_exports.ItemIndicator, {});
-                  }
-                }), createComponent(radio_group_exports.ItemLabel, {
-                  title: "Toggle Queries View",
-                  children: "Queries"
-                })];
-              }
-            }), createComponent(radio_group_exports.Item, {
-              value: "mutations",
-              "class": "tsqd-radio-toggle",
+                return [
+                  createComponent(radio_group_exports.Item, {
+                    value: "queries",
+                    class: "tsqd-radio-toggle",
+                    get children() {
+                      return [
+                        createComponent(radio_group_exports.ItemInput, {}),
+                        createComponent(radio_group_exports.ItemControl, {
+                          get children() {
+                            return createComponent(
+                              radio_group_exports.ItemIndicator,
+                              {}
+                            );
+                          },
+                        }),
+                        createComponent(radio_group_exports.ItemLabel, {
+                          title: "Toggle Queries View",
+                          children: "Queries",
+                        }),
+                      ];
+                    },
+                  }),
+                  createComponent(radio_group_exports.Item, {
+                    value: "mutations",
+                    class: "tsqd-radio-toggle",
+                    get children() {
+                      return [
+                        createComponent(radio_group_exports.ItemInput, {}),
+                        createComponent(radio_group_exports.ItemControl, {
+                          get children() {
+                            return createComponent(
+                              radio_group_exports.ItemIndicator,
+                              {}
+                            );
+                          },
+                        }),
+                        createComponent(radio_group_exports.ItemLabel, {
+                          title: "Toggle Mutations View",
+                          children: "Mutations",
+                        }),
+                      ];
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$1,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
+              },
               get children() {
-                return [createComponent(radio_group_exports.ItemInput, {}), createComponent(radio_group_exports.ItemControl, {
-                  get children() {
-                    return createComponent(radio_group_exports.ItemIndicator, {});
-                  }
-                }), createComponent(radio_group_exports.ItemLabel, {
-                  title: "Toggle Mutations View",
-                  children: "Mutations"
-                })];
-              }
-            })];
-          }
-        }), null);
-        insert(_el$1, createComponent(Show, {
-          get when() {
-            return selectedView() === "queries";
-          },
-          get children() {
-            return createComponent(QueryStatusCount, {});
-          }
-        }), null);
-        insert(_el$1, createComponent(Show, {
-          get when() {
-            return selectedView() === "mutations";
-          },
-          get children() {
-            return createComponent(MutationStatusCount, {});
-          }
-        }), null);
-        insert(_el$17, createComponent(Search, {}), _el$18);
-        _el$18.$$input = (e2) => {
-          if (selectedView() === "queries") {
-            props.setLocalStore("filter", e2.currentTarget.value);
-          } else {
-            props.setLocalStore("mutationFilter", e2.currentTarget.value);
-          }
-        };
-        insert(_el$19, createComponent(Show, {
-          get when() {
-            return selectedView() === "queries";
-          },
-          get children() {
-            var _el$20 = _tmpl$43();
-            _el$20.addEventListener("change", (e2) => {
-              props.setLocalStore("sort", e2.currentTarget.value);
-            });
-            insert(_el$20, () => Object.keys(sortFns).map((key) => (() => {
-              var _el$43 = _tmpl$202(); _el$43.firstChild;
-              _el$43.value = key;
-              insert(_el$43, key, null);
-              return _el$43;
-            })()));
-            createRenderEffect(() => _el$20.value = sort());
-            return _el$20;
-          }
-        }), null);
-        insert(_el$19, createComponent(Show, {
-          get when() {
-            return selectedView() === "mutations";
-          },
-          get children() {
-            var _el$21 = _tmpl$53();
-            _el$21.addEventListener("change", (e2) => {
-              props.setLocalStore("mutationSort", e2.currentTarget.value);
-            });
-            insert(_el$21, () => Object.keys(mutationSortFns).map((key) => (() => {
-              var _el$45 = _tmpl$202(); _el$45.firstChild;
-              _el$45.value = key;
-              insert(_el$45, key, null);
-              return _el$45;
-            })()));
-            createRenderEffect(() => _el$21.value = mutationSort());
-            return _el$21;
-          }
-        }), null);
-        insert(_el$19, createComponent(ChevronDown, {}), null);
-        _el$22.$$click = () => {
-          if (selectedView() === "queries") {
-            props.setLocalStore("sortOrder", String(sortOrder() * -1));
-          } else {
-            props.setLocalStore("mutationSortOrder", String(mutationSortOrder() * -1));
-          }
-        };
-        insert(_el$22, createComponent(Show, {
-          get when() {
-            return (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === 1;
-          },
-          get children() {
-            return [_tmpl$63(), createComponent(ArrowUp, {})];
-          }
-        }), null);
-        insert(_el$22, createComponent(Show, {
-          get when() {
-            return (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1;
-          },
-          get children() {
-            return [_tmpl$73(), createComponent(ArrowDown, {})];
-          }
-        }), null);
-        _el$26.$$click = () => {
-          if (selectedView() === "queries") {
-            sendDevToolsEvent({
-              type: "CLEAR_QUERY_CACHE"
-            });
-            query_cache().clear();
-          } else {
-            sendDevToolsEvent({
-              type: "CLEAR_MUTATION_CACHE"
-            });
-            mutation_cache().clear();
-          }
-        };
-        insert(_el$26, createComponent(Trash, {}));
-        _el$27.$$click = () => {
-          onlineManager().setOnline(!onlineManager().isOnline());
-        };
-        insert(_el$27, (() => {
-          var _c$ = createMemo(() => !!offline());
-          return () => _c$() ? createComponent(Offline, {}) : createComponent(Wifi, {});
-        })());
-        insert(_el$25, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!!pip().pipWindow)() && !pip().disabled;
-          },
-          get children() {
-            var _el$28 = _tmpl$83();
-            _el$28.$$click = () => {
-              pip().requestPipWindow(Number(window.innerWidth), Number(props.localStore.height ?? 500));
-            };
-            insert(_el$28, createComponent(PiPIcon, {}));
-            createRenderEffect(() => className(_el$28, clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-open-pip")));
-            return _el$28;
-          }
-        }), null);
-        insert(_el$25, createComponent(dropdown_menu_exports.Root, {
-          gutter: 4,
-          get children() {
-            return [createComponent(dropdown_menu_exports.Trigger, {
-              get ["class"]() {
-                return clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-settings");
+                return createComponent(QueryStatusCount, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$1,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
               },
               get children() {
-                return createComponent(Settings, {});
-              }
-            }), createComponent(dropdown_menu_exports.Portal, {
-              ref: (el) => setComputedVariables(el),
-              get mount() {
-                return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
+                return createComponent(MutationStatusCount, {});
+              },
+            }),
+            null
+          );
+          insert(_el$17, createComponent(Search, {}), _el$18);
+          _el$18.$$input = (e2) => {
+            if (selectedView() === "queries") {
+              props.setLocalStore("filter", e2.currentTarget.value);
+            } else {
+              props.setLocalStore("mutationFilter", e2.currentTarget.value);
+            }
+          };
+          insert(
+            _el$19,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
               },
               get children() {
-                return createComponent(dropdown_menu_exports.Content, {
-                  get ["class"]() {
-                    return clsx(styles().settingsMenu, "tsqd-settings-menu");
-                  },
-                  get children() {
-                    return [(() => {
-                      var _el$29 = _tmpl$93();
-                      createRenderEffect(() => className(_el$29, clsx(styles().settingsMenuHeader, "tsqd-settings-menu-header")));
-                      return _el$29;
-                    })(), createComponent(Show, {
-                      get when() {
-                        return !props.showPanelViewOnly;
-                      },
-                      get children() {
-                        return createComponent(dropdown_menu_exports.Sub, {
-                          overlap: true,
-                          gutter: 8,
-                          shift: -4,
-                          get children() {
-                            return [createComponent(dropdown_menu_exports.SubTrigger, {
-                              get ["class"]() {
-                                return clsx(styles().settingsSubTrigger, "tsqd-settings-menu-sub-trigger", "tsqd-settings-menu-sub-trigger-position");
+                var _el$20 = _tmpl$43();
+                _el$20.addEventListener("change", (e2) => {
+                  props.setLocalStore("sort", e2.currentTarget.value);
+                });
+                insert(_el$20, () =>
+                  Object.keys(sortFns).map((key) =>
+                    (() => {
+                      var _el$43 = _tmpl$202();
+                      _el$43.firstChild;
+                      _el$43.value = key;
+                      insert(_el$43, key, null);
+                      return _el$43;
+                    })()
+                  )
+                );
+                createRenderEffect(() => (_el$20.value = sort()));
+                return _el$20;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$19,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
+              },
+              get children() {
+                var _el$21 = _tmpl$53();
+                _el$21.addEventListener("change", (e2) => {
+                  props.setLocalStore("mutationSort", e2.currentTarget.value);
+                });
+                insert(_el$21, () =>
+                  Object.keys(mutationSortFns).map((key) =>
+                    (() => {
+                      var _el$45 = _tmpl$202();
+                      _el$45.firstChild;
+                      _el$45.value = key;
+                      insert(_el$45, key, null);
+                      return _el$45;
+                    })()
+                  )
+                );
+                createRenderEffect(() => (_el$21.value = mutationSort()));
+                return _el$21;
+              },
+            }),
+            null
+          );
+          insert(_el$19, createComponent(ChevronDown, {}), null);
+          _el$22.$$click = () => {
+            if (selectedView() === "queries") {
+              props.setLocalStore("sortOrder", String(sortOrder() * -1));
+            } else {
+              props.setLocalStore(
+                "mutationSortOrder",
+                String(mutationSortOrder() * -1)
+              );
+            }
+          };
+          insert(
+            _el$22,
+            createComponent(Show, {
+              get when() {
+                return (
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === 1
+                );
+              },
+              get children() {
+                return [_tmpl$63(), createComponent(ArrowUp, {})];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$22,
+            createComponent(Show, {
+              get when() {
+                return (
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1
+                );
+              },
+              get children() {
+                return [_tmpl$73(), createComponent(ArrowDown, {})];
+              },
+            }),
+            null
+          );
+          _el$26.$$click = () => {
+            if (selectedView() === "queries") {
+              sendDevToolsEvent({
+                type: "CLEAR_QUERY_CACHE",
+              });
+              query_cache().clear();
+            } else {
+              sendDevToolsEvent({
+                type: "CLEAR_MUTATION_CACHE",
+              });
+              mutation_cache().clear();
+            }
+          };
+          insert(_el$26, createComponent(Trash, {}));
+          _el$27.$$click = () => {
+            onlineManager().setOnline(!onlineManager().isOnline());
+          };
+          insert(
+            _el$27,
+            (() => {
+              var _c$ = createMemo(() => !!offline());
+              return () =>
+                _c$()
+                  ? createComponent(Offline, {})
+                  : createComponent(Wifi, {});
+            })()
+          );
+          insert(
+            _el$25,
+            createComponent(Show, {
+              get when() {
+                return (
+                  createMemo(() => !!!pip().pipWindow)() && !pip().disabled
+                );
+              },
+              get children() {
+                var _el$28 = _tmpl$83();
+                _el$28.$$click = () => {
+                  pip().requestPipWindow(
+                    Number(window.innerWidth),
+                    Number(props.localStore.height ?? 500)
+                  );
+                };
+                insert(_el$28, createComponent(PiPIcon, {}));
+                createRenderEffect(() =>
+                  className(
+                    _el$28,
+                    clsx(
+                      styles().actionsBtn,
+                      "tsqd-actions-btn",
+                      "tsqd-action-open-pip"
+                    )
+                  )
+                );
+                return _el$28;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$25,
+            createComponent(dropdown_menu_exports.Root, {
+              gutter: 4,
+              get children() {
+                return [
+                  createComponent(dropdown_menu_exports.Trigger, {
+                    get ["class"]() {
+                      return clsx(
+                        styles().actionsBtn,
+                        "tsqd-actions-btn",
+                        "tsqd-action-settings"
+                      );
+                    },
+                    get children() {
+                      return createComponent(Settings, {});
+                    },
+                  }),
+                  createComponent(dropdown_menu_exports.Portal, {
+                    ref: (el) => setComputedVariables(el),
+                    get mount() {
+                      return createMemo(() => !!pip().pipWindow)()
+                        ? pip().pipWindow.document.body
+                        : document.body;
+                    },
+                    get children() {
+                      return createComponent(dropdown_menu_exports.Content, {
+                        get ["class"]() {
+                          return clsx(
+                            styles().settingsMenu,
+                            "tsqd-settings-menu"
+                          );
+                        },
+                        get children() {
+                          return [
+                            (() => {
+                              var _el$29 = _tmpl$93();
+                              createRenderEffect(() =>
+                                className(
+                                  _el$29,
+                                  clsx(
+                                    styles().settingsMenuHeader,
+                                    "tsqd-settings-menu-header"
+                                  )
+                                )
+                              );
+                              return _el$29;
+                            })(),
+                            createComponent(Show, {
+                              get when() {
+                                return !props.showPanelViewOnly;
                               },
                               get children() {
-                                return [_tmpl$03(), createComponent(ChevronDown, {})];
-                              }
-                            }), createComponent(dropdown_menu_exports.Portal, {
-                              ref: (el) => setComputedVariables(el),
-                              get mount() {
-                                return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
+                                return createComponent(
+                                  dropdown_menu_exports.Sub,
+                                  {
+                                    overlap: true,
+                                    gutter: 8,
+                                    shift: -4,
+                                    get children() {
+                                      return [
+                                        createComponent(
+                                          dropdown_menu_exports.SubTrigger,
+                                          {
+                                            get ["class"]() {
+                                              return clsx(
+                                                styles().settingsSubTrigger,
+                                                "tsqd-settings-menu-sub-trigger",
+                                                "tsqd-settings-menu-sub-trigger-position"
+                                              );
+                                            },
+                                            get children() {
+                                              return [
+                                                _tmpl$03(),
+                                                createComponent(
+                                                  ChevronDown,
+                                                  {}
+                                                ),
+                                              ];
+                                            },
+                                          }
+                                        ),
+                                        createComponent(
+                                          dropdown_menu_exports.Portal,
+                                          {
+                                            ref: (el) =>
+                                              setComputedVariables(el),
+                                            get mount() {
+                                              return createMemo(
+                                                () => !!pip().pipWindow
+                                              )()
+                                                ? pip().pipWindow.document.body
+                                                : document.body;
+                                            },
+                                            get children() {
+                                              return createComponent(
+                                                dropdown_menu_exports.SubContent,
+                                                {
+                                                  get ["class"]() {
+                                                    return clsx(
+                                                      styles().settingsMenu,
+                                                      "tsqd-settings-submenu"
+                                                    );
+                                                  },
+                                                  get children() {
+                                                    return [
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "top"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-top"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$111(),
+                                                              createComponent(
+                                                                ArrowUp,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "bottom"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-bottom"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$103(),
+                                                              createComponent(
+                                                                ArrowDown,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "left"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-left"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$112(),
+                                                              createComponent(
+                                                                ArrowLeft,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "right"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-right"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$122(),
+                                                              createComponent(
+                                                                ArrowRight,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                    ];
+                                                  },
+                                                }
+                                              );
+                                            },
+                                          }
+                                        ),
+                                      ];
+                                    },
+                                  }
+                                );
                               },
+                            }),
+                            createComponent(dropdown_menu_exports.Sub, {
+                              overlap: true,
+                              gutter: 8,
+                              shift: -4,
                               get children() {
-                                return createComponent(dropdown_menu_exports.SubContent, {
-                                  get ["class"]() {
-                                    return clsx(styles().settingsMenu, "tsqd-settings-submenu");
-                                  },
-                                  get children() {
-                                    return [createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("top");
-                                      },
-                                      as: "button",
+                                return [
+                                  createComponent(
+                                    dropdown_menu_exports.SubTrigger,
+                                    {
                                       get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-top");
+                                        return clsx(
+                                          styles().settingsSubTrigger,
+                                          "tsqd-settings-menu-sub-trigger",
+                                          "tsqd-settings-menu-sub-trigger-position"
+                                        );
                                       },
                                       get children() {
-                                        return [_tmpl$111(), createComponent(ArrowUp, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("bottom");
+                                        return [
+                                          _tmpl$132(),
+                                          createComponent(ChevronDown, {}),
+                                        ];
                                       },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-bottom");
-                                      },
-                                      get children() {
-                                        return [_tmpl$103(), createComponent(ArrowDown, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("left");
-                                      },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-left");
+                                    }
+                                  ),
+                                  createComponent(
+                                    dropdown_menu_exports.Portal,
+                                    {
+                                      ref: (el) => setComputedVariables(el),
+                                      get mount() {
+                                        return createMemo(
+                                          () => !!pip().pipWindow
+                                        )()
+                                          ? pip().pipWindow.document.body
+                                          : document.body;
                                       },
                                       get children() {
-                                        return [_tmpl$112(), createComponent(ArrowLeft, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("right");
-                                      },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-right");
+                                        return createComponent(
+                                          dropdown_menu_exports.SubContent,
+                                          {
+                                            get ["class"]() {
+                                              return clsx(
+                                                styles().settingsMenu,
+                                                "tsqd-settings-submenu"
+                                              );
+                                            },
+                                            get children() {
+                                              return [
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "light"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "light" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-top"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$142(),
+                                                        createComponent(
+                                                          Sun,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "dark"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "dark" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-bottom"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$152(),
+                                                        createComponent(
+                                                          Moon,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "system"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "system" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-left"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$162(),
+                                                        createComponent(
+                                                          Monitor,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                              ];
+                                            },
+                                          }
+                                        );
                                       },
-                                      get children() {
-                                        return [_tmpl$122(), createComponent(ArrowRight, {})];
-                                      }
-                                    })];
-                                  }
-                                });
-                              }
-                            })];
-                          }
-                        });
-                      }
-                    }), createComponent(dropdown_menu_exports.Sub, {
-                      overlap: true,
-                      gutter: 8,
-                      shift: -4,
-                      get children() {
-                        return [createComponent(dropdown_menu_exports.SubTrigger, {
-                          get ["class"]() {
-                            return clsx(styles().settingsSubTrigger, "tsqd-settings-menu-sub-trigger", "tsqd-settings-menu-sub-trigger-position");
-                          },
-                          get children() {
-                            return [_tmpl$132(), createComponent(ChevronDown, {})];
-                          }
-                        }), createComponent(dropdown_menu_exports.Portal, {
-                          ref: (el) => setComputedVariables(el),
-                          get mount() {
-                            return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
-                          },
-                          get children() {
-                            return createComponent(dropdown_menu_exports.SubContent, {
-                              get ["class"]() {
-                                return clsx(styles().settingsMenu, "tsqd-settings-submenu");
+                                    }
+                                  ),
+                                ];
                               },
-                              get children() {
-                                return [createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "light");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "light" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-top");
-                                  },
-                                  get children() {
-                                    return [_tmpl$142(), createComponent(Sun, {})];
-                                  }
-                                }), createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "dark");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "dark" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-bottom");
-                                  },
-                                  get children() {
-                                    return [_tmpl$152(), createComponent(Moon, {})];
-                                  }
-                                }), createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "system");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "system" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-left");
-                                  },
-                                  get children() {
-                                    return [_tmpl$162(), createComponent(Monitor, {})];
-                                  }
-                                })];
-                              }
-                            });
-                          }
-                        })];
-                      }
-                    })];
-                  }
-                });
-              }
-            })];
-          }
-        }), null);
-        insert(_el$0, createComponent(Show, {
+                            }),
+                          ];
+                        },
+                      });
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$0,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
+              },
+              get children() {
+                var _el$39 = _tmpl$172(),
+                  _el$40 = _el$39.firstChild;
+                insert(
+                  _el$40,
+                  createComponent(Key, {
+                    by: (q) => q.queryHash,
+                    get each() {
+                      return queries();
+                    },
+                    children: (query) =>
+                      createComponent(QueryRow, {
+                        get query() {
+                          return query();
+                        },
+                      }),
+                  })
+                );
+                createRenderEffect(() =>
+                  className(
+                    _el$39,
+                    clsx(
+                      styles().overflowQueryContainer,
+                      "tsqd-queries-overflow-container"
+                    )
+                  )
+                );
+                return _el$39;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$0,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
+              },
+              get children() {
+                var _el$41 = _tmpl$182(),
+                  _el$42 = _el$41.firstChild;
+                insert(
+                  _el$42,
+                  createComponent(Key, {
+                    by: (m) => m.mutationId,
+                    get each() {
+                      return mutations();
+                    },
+                    children: (mutation) =>
+                      createComponent(MutationRow, {
+                        get mutation() {
+                          return mutation();
+                        },
+                      }),
+                  })
+                );
+                createRenderEffect(() =>
+                  className(
+                    _el$41,
+                    clsx(
+                      styles().overflowQueryContainer,
+                      "tsqd-mutations-overflow-container"
+                    )
+                  )
+                );
+                return _el$41;
+              },
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$6 = clsx(
+                  styles().queriesContainer,
+                  panelWidth() < secondBreakpoint &&
+                    (selectedQueryHash() || selectedMutationId()) &&
+                    css`
+                      height: 50%;
+                      max-height: 50%;
+                    `,
+                  panelWidth() < secondBreakpoint &&
+                    !(selectedQueryHash() || selectedMutationId()) &&
+                    css`
+                      height: 100%;
+                      max-height: 100%;
+                    `,
+                  "tsqd-queries-container"
+                ),
+                _v$7 = clsx(styles().row, "tsqd-header"),
+                _v$8 = styles().logoAndToggleContainer,
+                _v$9 = clsx(styles().logo, "tsqd-text-logo-container"),
+                _v$0 = clsx(styles().tanstackLogo, "tsqd-text-logo-tanstack"),
+                _v$1 = clsx(
+                  styles().queryFlavorLogo,
+                  "tsqd-text-logo-query-flavor"
+                ),
+                _v$10 = clsx(styles().row, "tsqd-filters-actions-container"),
+                _v$11 = clsx(
+                  styles().filtersContainer,
+                  "tsqd-filters-container"
+                ),
+                _v$12 = clsx(
+                  styles().filterInput,
+                  "tsqd-query-filter-textfield-container"
+                ),
+                _v$13 = clsx("tsqd-query-filter-textfield"),
+                _v$14 = clsx(
+                  styles().filterSelect,
+                  "tsqd-query-filter-sort-container"
+                ),
+                _v$15 = `Sort order ${
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1
+                    ? "descending"
+                    : "ascending"
+                }`,
+                _v$16 =
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1,
+                _v$17 = clsx(
+                  styles().actionsContainer,
+                  "tsqd-actions-container"
+                ),
+                _v$18 = clsx(
+                  styles().actionsBtn,
+                  "tsqd-actions-btn",
+                  "tsqd-action-clear-cache"
+                ),
+                _v$19 = `Clear ${selectedView()} cache`,
+                _v$20 = clsx(
+                  styles().actionsBtn,
+                  offline() && styles().actionsBtnOffline,
+                  "tsqd-actions-btn",
+                  "tsqd-action-mock-offline-behavior"
+                ),
+                _v$21 = `${
+                  offline()
+                    ? "Unset offline mocking behavior"
+                    : "Mock offline behavior"
+                }`,
+                _v$22 = offline(),
+                _v$23 = `${
+                  offline()
+                    ? "Unset offline mocking behavior"
+                    : "Mock offline behavior"
+                }`;
+              _v$6 !== _p$.e && className(_el$0, (_p$.e = _v$6));
+              _v$7 !== _p$.t && className(_el$1, (_p$.t = _v$7));
+              _v$8 !== _p$.a && className(_el$10, (_p$.a = _v$8));
+              _v$9 !== _p$.o && className(_el$11, (_p$.o = _v$9));
+              _v$0 !== _p$.i && className(_el$12, (_p$.i = _v$0));
+              _v$1 !== _p$.n && className(_el$13, (_p$.n = _v$1));
+              _v$10 !== _p$.s && className(_el$15, (_p$.s = _v$10));
+              _v$11 !== _p$.h && className(_el$16, (_p$.h = _v$11));
+              _v$12 !== _p$.r && className(_el$17, (_p$.r = _v$12));
+              _v$13 !== _p$.d && className(_el$18, (_p$.d = _v$13));
+              _v$14 !== _p$.l && className(_el$19, (_p$.l = _v$14));
+              _v$15 !== _p$.u &&
+                setAttribute(_el$22, "aria-label", (_p$.u = _v$15));
+              _v$16 !== _p$.c &&
+                setAttribute(_el$22, "aria-pressed", (_p$.c = _v$16));
+              _v$17 !== _p$.w && className(_el$25, (_p$.w = _v$17));
+              _v$18 !== _p$.m && className(_el$26, (_p$.m = _v$18));
+              _v$19 !== _p$.f && setAttribute(_el$26, "title", (_p$.f = _v$19));
+              _v$20 !== _p$.y && className(_el$27, (_p$.y = _v$20));
+              _v$21 !== _p$.g &&
+                setAttribute(_el$27, "aria-label", (_p$.g = _v$21));
+              _v$22 !== _p$.p &&
+                setAttribute(_el$27, "aria-pressed", (_p$.p = _v$22));
+              _v$23 !== _p$.b && setAttribute(_el$27, "title", (_p$.b = _v$23));
+              return _p$;
+            },
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
+              c: void 0,
+              w: void 0,
+              m: void 0,
+              f: void 0,
+              y: void 0,
+              g: void 0,
+              p: void 0,
+              b: void 0,
+            }
+          );
+          createRenderEffect(
+            () =>
+              (_el$18.value =
+                selectedView() === "queries"
+                  ? props.localStore.filter || ""
+                  : props.localStore.mutationFilter || "")
+          );
+          return _el$0;
+        })(),
+        createComponent(Show, {
           get when() {
-            return selectedView() === "queries";
+            return (
+              createMemo(() => selectedView() === "queries")() &&
+              selectedQueryHash()
+            );
           },
           get children() {
-            var _el$39 = _tmpl$172(), _el$40 = _el$39.firstChild;
-            insert(_el$40, createComponent(Key, {
-              by: (q) => q.queryHash,
-              get each() {
-                return queries();
-              },
-              children: (query) => createComponent(QueryRow, {
-                get query() {
-                  return query();
-                }
-              })
-            }));
-            createRenderEffect(() => className(_el$39, clsx(styles().overflowQueryContainer, "tsqd-queries-overflow-container")));
-            return _el$39;
-          }
-        }), null);
-        insert(_el$0, createComponent(Show, {
+            return createComponent(QueryDetails, {});
+          },
+        }),
+        createComponent(Show, {
           get when() {
-            return selectedView() === "mutations";
+            return (
+              createMemo(() => selectedView() === "mutations")() &&
+              selectedMutationId()
+            );
           },
           get children() {
-            var _el$41 = _tmpl$182(), _el$42 = _el$41.firstChild;
-            insert(_el$42, createComponent(Key, {
-              by: (m) => m.mutationId,
-              get each() {
-                return mutations();
-              },
-              children: (mutation) => createComponent(MutationRow, {
-                get mutation() {
-                  return mutation();
-                }
-              })
-            }));
-            createRenderEffect(() => className(_el$41, clsx(styles().overflowQueryContainer, "tsqd-mutations-overflow-container")));
-            return _el$41;
-          }
-        }), null);
-        createRenderEffect((_p$) => {
-          var _v$6 = clsx(styles().queriesContainer, panelWidth() < secondBreakpoint && (selectedQueryHash() || selectedMutationId()) && css`
-              height: 50%;
-              max-height: 50%;
-            `, panelWidth() < secondBreakpoint && !(selectedQueryHash() || selectedMutationId()) && css`
-              height: 100%;
-              max-height: 100%;
-            `, "tsqd-queries-container"), _v$7 = clsx(styles().row, "tsqd-header"), _v$8 = styles().logoAndToggleContainer, _v$9 = clsx(styles().logo, "tsqd-text-logo-container"), _v$0 = clsx(styles().tanstackLogo, "tsqd-text-logo-tanstack"), _v$1 = clsx(styles().queryFlavorLogo, "tsqd-text-logo-query-flavor"), _v$10 = clsx(styles().row, "tsqd-filters-actions-container"), _v$11 = clsx(styles().filtersContainer, "tsqd-filters-container"), _v$12 = clsx(styles().filterInput, "tsqd-query-filter-textfield-container"), _v$13 = clsx("tsqd-query-filter-textfield"), _v$14 = clsx(styles().filterSelect, "tsqd-query-filter-sort-container"), _v$15 = `Sort order ${(selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1 ? "descending" : "ascending"}`, _v$16 = (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1, _v$17 = clsx(styles().actionsContainer, "tsqd-actions-container"), _v$18 = clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-clear-cache"), _v$19 = `Clear ${selectedView()} cache`, _v$20 = clsx(styles().actionsBtn, offline() && styles().actionsBtnOffline, "tsqd-actions-btn", "tsqd-action-mock-offline-behavior"), _v$21 = `${offline() ? "Unset offline mocking behavior" : "Mock offline behavior"}`, _v$22 = offline(), _v$23 = `${offline() ? "Unset offline mocking behavior" : "Mock offline behavior"}`;
-          _v$6 !== _p$.e && className(_el$0, _p$.e = _v$6);
-          _v$7 !== _p$.t && className(_el$1, _p$.t = _v$7);
-          _v$8 !== _p$.a && className(_el$10, _p$.a = _v$8);
-          _v$9 !== _p$.o && className(_el$11, _p$.o = _v$9);
-          _v$0 !== _p$.i && className(_el$12, _p$.i = _v$0);
-          _v$1 !== _p$.n && className(_el$13, _p$.n = _v$1);
-          _v$10 !== _p$.s && className(_el$15, _p$.s = _v$10);
-          _v$11 !== _p$.h && className(_el$16, _p$.h = _v$11);
-          _v$12 !== _p$.r && className(_el$17, _p$.r = _v$12);
-          _v$13 !== _p$.d && className(_el$18, _p$.d = _v$13);
-          _v$14 !== _p$.l && className(_el$19, _p$.l = _v$14);
-          _v$15 !== _p$.u && setAttribute(_el$22, "aria-label", _p$.u = _v$15);
-          _v$16 !== _p$.c && setAttribute(_el$22, "aria-pressed", _p$.c = _v$16);
-          _v$17 !== _p$.w && className(_el$25, _p$.w = _v$17);
-          _v$18 !== _p$.m && className(_el$26, _p$.m = _v$18);
-          _v$19 !== _p$.f && setAttribute(_el$26, "title", _p$.f = _v$19);
-          _v$20 !== _p$.y && className(_el$27, _p$.y = _v$20);
-          _v$21 !== _p$.g && setAttribute(_el$27, "aria-label", _p$.g = _v$21);
-          _v$22 !== _p$.p && setAttribute(_el$27, "aria-pressed", _p$.p = _v$22);
-          _v$23 !== _p$.b && setAttribute(_el$27, "title", _p$.b = _v$23);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0,
-          a: void 0,
-          o: void 0,
-          i: void 0,
-          n: void 0,
-          s: void 0,
-          h: void 0,
-          r: void 0,
-          d: void 0,
-          l: void 0,
-          u: void 0,
-          c: void 0,
-          w: void 0,
-          m: void 0,
-          f: void 0,
-          y: void 0,
-          g: void 0,
-          p: void 0,
-          b: void 0
-        });
-        createRenderEffect(() => _el$18.value = selectedView() === "queries" ? props.localStore.filter || "" : props.localStore.mutationFilter || "");
-        return _el$0;
-      })(), createComponent(Show, {
-        get when() {
-          return createMemo(() => selectedView() === "queries")() && selectedQueryHash();
-        },
-        get children() {
-          return createComponent(QueryDetails, {});
-        }
-      }), createComponent(Show, {
-        get when() {
-          return createMemo(() => selectedView() === "mutations")() && selectedMutationId();
-        },
-        get children() {
-          return createComponent(MutationDetails, {});
-        }
-      })];
+            return createComponent(MutationDetails, {});
+          },
+        }),
+      ];
     };
     QueryRow = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const queryState = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.state, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isDisabled = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isDisabled() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isStatic = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isStatic() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isStale = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isStale() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const observers = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.getObserversCount() ?? 0, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const color = createMemo(() => getQueryStatusColor({
-        queryState: queryState(),
-        observerCount: observers(),
-        isStale: isStale()
-      }));
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const queryState = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache().find({
+            queryKey: props.query.queryKey,
+          })?.state,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isDisabled = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isDisabled() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isStatic = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isStatic() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isStale = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isStale() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const observers = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.getObserversCount() ?? 0,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const color = createMemo(() =>
+        getQueryStatusColor({
+          queryState: queryState(),
+          observerCount: observers(),
+          isStale: isStale(),
+        })
+      );
       const getObserverCountColorStyles = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][200] + alpha[80], colors[color()][900])};
-      color: ${t2(colors[color()][800], colors[color()][300])};
-    `;
+          background-color: ${t2(
+            colors[color()][200] + alpha[80],
+            colors[color()][900]
+          )};
+          color: ${t2(colors[color()][800], colors[color()][300])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return queryState();
         },
         get children() {
-          var _el$47 = _tmpl$232(), _el$48 = _el$47.firstChild, _el$49 = _el$48.nextSibling;
-          _el$47.$$click = () => setSelectedQueryHash(props.query.queryHash === selectedQueryHash() ? null : props.query.queryHash);
+          var _el$47 = _tmpl$232(),
+            _el$48 = _el$47.firstChild,
+            _el$49 = _el$48.nextSibling;
+          _el$47.$$click = () =>
+            setSelectedQueryHash(
+              props.query.queryHash === selectedQueryHash()
+                ? null
+                : props.query.queryHash
+            );
           insert(_el$48, observers);
           insert(_el$49, () => props.query.queryHash);
-          insert(_el$47, createComponent(Show, {
-            get when() {
-              return isDisabled();
-            },
-            get children() {
-              return _tmpl$212();
-            }
-          }), null);
-          insert(_el$47, createComponent(Show, {
-            get when() {
-              return isStatic();
+          insert(
+            _el$47,
+            createComponent(Show, {
+              get when() {
+                return isDisabled();
+              },
+              get children() {
+                return _tmpl$212();
+              },
+            }),
+            null
+          );
+          insert(
+            _el$47,
+            createComponent(Show, {
+              get when() {
+                return isStatic();
+              },
+              get children() {
+                return _tmpl$222();
+              },
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$24 = clsx(
+                  styles().queryRow,
+                  selectedQueryHash() === props.query.queryHash &&
+                    styles().selectedQueryRow,
+                  "tsqd-query-row"
+                ),
+                _v$25 = `Query key ${props.query.queryHash}`,
+                _v$26 = clsx(
+                  getObserverCountColorStyles(),
+                  "tsqd-query-observer-count"
+                );
+              _v$24 !== _p$.e && className(_el$47, (_p$.e = _v$24));
+              _v$25 !== _p$.t &&
+                setAttribute(_el$47, "aria-label", (_p$.t = _v$25));
+              _v$26 !== _p$.a && className(_el$48, (_p$.a = _v$26));
+              return _p$;
             },
-            get children() {
-              return _tmpl$222();
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
             }
-          }), null);
-          createRenderEffect((_p$) => {
-            var _v$24 = clsx(styles().queryRow, selectedQueryHash() === props.query.queryHash && styles().selectedQueryRow, "tsqd-query-row"), _v$25 = `Query key ${props.query.queryHash}`, _v$26 = clsx(getObserverCountColorStyles(), "tsqd-query-observer-count");
-            _v$24 !== _p$.e && className(_el$47, _p$.e = _v$24);
-            _v$25 !== _p$.t && setAttribute(_el$47, "aria-label", _p$.t = _v$25);
-            _v$26 !== _p$.a && className(_el$48, _p$.a = _v$26);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
+          );
           return _el$47;
-        }
+        },
       });
     };
     MutationRow = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const mutationState = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
-        return mutation?.state;
-      });
-      const isPaused = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
-        if (!mutation) return false;
-        return mutation.state.isPaused;
-      });
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const mutationState = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === props.mutation.mutationId
+          );
+          return mutation?.state;
+        }
+      );
+      const isPaused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === props.mutation.mutationId
+          );
+          if (!mutation) return false;
+          return mutation.state.isPaused;
+        }
+      );
       const status = createSubscribeToMutationCacheBatcher((mutationCache) => {
         const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
+        const mutation = mutations.find(
+          (m) => m.mutationId === props.mutation.mutationId
+        );
         if (!mutation) return "idle";
         return mutation.state.status;
       });
-      const color = createMemo(() => getMutationStatusColor({
-        isPaused: isPaused(),
-        status: status()
-      }));
+      const color = createMemo(() =>
+        getMutationStatusColor({
+          isPaused: isPaused(),
+          status: status(),
+        })
+      );
       const getObserverCountColorStyles = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][200] + alpha[80], colors[color()][900])};
-      color: ${t2(colors[color()][800], colors[color()][300])};
-    `;
+          background-color: ${t2(
+            colors[color()][200] + alpha[80],
+            colors[color()][900]
+          )};
+          color: ${t2(colors[color()][800], colors[color()][300])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return mutationState();
         },
         get children() {
-          var _el$52 = _tmpl$232(), _el$53 = _el$52.firstChild, _el$54 = _el$53.nextSibling;
+          var _el$52 = _tmpl$232(),
+            _el$53 = _el$52.firstChild,
+            _el$54 = _el$53.nextSibling;
           _el$52.$$click = () => {
-            setSelectedMutationId(props.mutation.mutationId === selectedMutationId() ? null : props.mutation.mutationId);
+            setSelectedMutationId(
+              props.mutation.mutationId === selectedMutationId()
+                ? null
+                : props.mutation.mutationId
+            );
           };
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "purple";
-            },
-            get children() {
-              return createComponent(PauseCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "green";
-            },
-            get children() {
-              return createComponent(CheckCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "red";
-            },
-            get children() {
-              return createComponent(XCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "yellow";
-            },
-            get children() {
-              return createComponent(LoadingCircle, {});
-            }
-          }), null);
-          insert(_el$54, createComponent(Show, {
-            get when() {
-              return props.mutation.options.mutationKey;
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "purple";
+              },
+              get children() {
+                return createComponent(PauseCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "green";
+              },
+              get children() {
+                return createComponent(CheckCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "red";
+              },
+              get children() {
+                return createComponent(XCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "yellow";
+              },
+              get children() {
+                return createComponent(LoadingCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$54,
+            createComponent(Show, {
+              get when() {
+                return props.mutation.options.mutationKey;
+              },
+              get children() {
+                return [
+                  createMemo(() =>
+                    JSON.stringify(props.mutation.options.mutationKey)
+                  ),
+                  " -",
+                  " ",
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$54,
+            () => new Date(props.mutation.state.submittedAt).toLocaleString(),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$27 = clsx(
+                  styles().queryRow,
+                  selectedMutationId() === props.mutation.mutationId &&
+                    styles().selectedQueryRow,
+                  "tsqd-query-row"
+                ),
+                _v$28 = `Mutation submitted at ${new Date(
+                  props.mutation.state.submittedAt
+                ).toLocaleString()}`,
+                _v$29 = clsx(
+                  getObserverCountColorStyles(),
+                  "tsqd-query-observer-count"
+                );
+              _v$27 !== _p$.e && className(_el$52, (_p$.e = _v$27));
+              _v$28 !== _p$.t &&
+                setAttribute(_el$52, "aria-label", (_p$.t = _v$28));
+              _v$29 !== _p$.a && className(_el$53, (_p$.a = _v$29));
+              return _p$;
             },
-            get children() {
-              return [createMemo(() => JSON.stringify(props.mutation.options.mutationKey)), " -", " "];
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
             }
-          }), null);
-          insert(_el$54, () => new Date(props.mutation.state.submittedAt).toLocaleString(), null);
-          createRenderEffect((_p$) => {
-            var _v$27 = clsx(styles().queryRow, selectedMutationId() === props.mutation.mutationId && styles().selectedQueryRow, "tsqd-query-row"), _v$28 = `Mutation submitted at ${new Date(props.mutation.state.submittedAt).toLocaleString()}`, _v$29 = clsx(getObserverCountColorStyles(), "tsqd-query-observer-count");
-            _v$27 !== _p$.e && className(_el$52, _p$.e = _v$27);
-            _v$28 !== _p$.t && setAttribute(_el$52, "aria-label", _p$.t = _v$28);
-            _v$29 !== _p$.a && className(_el$53, _p$.a = _v$29);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
+          );
           return _el$52;
-        }
+        },
       });
     };
     QueryStatusCount = () => {
-      const stale = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "stale").length);
-      const fresh = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "fresh").length);
-      const fetching = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "fetching").length);
-      const paused = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "paused").length);
-      const inactive = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "inactive").length);
+      const stale = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "stale").length
+      );
+      const fresh = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "fresh").length
+      );
+      const fetching = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "fetching").length
+      );
+      const paused = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "paused").length
+      );
+      const inactive = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "inactive").length
+      );
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       return (() => {
         var _el$55 = _tmpl$26();
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Fresh",
-          color: "green",
-          get count() {
-            return fresh();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Fetching",
-          color: "blue",
-          get count() {
-            return fetching();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Paused",
-          color: "purple",
-          get count() {
-            return paused();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Stale",
-          color: "yellow",
-          get count() {
-            return stale();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Inactive",
-          color: "gray",
-          get count() {
-            return inactive();
-          }
-        }), null);
-        createRenderEffect(() => className(_el$55, clsx(styles().queryStatusContainer, "tsqd-query-status-container")));
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Fresh",
+            color: "green",
+            get count() {
+              return fresh();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Fetching",
+            color: "blue",
+            get count() {
+              return fetching();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Paused",
+            color: "purple",
+            get count() {
+              return paused();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Stale",
+            color: "yellow",
+            get count() {
+              return stale();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Inactive",
+            color: "gray",
+            get count() {
+              return inactive();
+            },
+          }),
+          null
+        );
+        createRenderEffect(() =>
+          className(
+            _el$55,
+            clsx(styles().queryStatusContainer, "tsqd-query-status-container")
+          )
+        );
         return _el$55;
       })();
     };
     MutationStatusCount = () => {
-      const success = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "green").length);
-      const pending = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "yellow").length);
-      const paused = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "purple").length);
-      const error = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "red").length);
+      const success = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "green"
+            ).length
+      );
+      const pending = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "yellow"
+            ).length
+      );
+      const paused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "purple"
+            ).length
+      );
+      const error = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "red"
+            ).length
+      );
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       return (() => {
         var _el$56 = _tmpl$26();
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Paused",
-          color: "purple",
-          get count() {
-            return paused();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Pending",
-          color: "yellow",
-          get count() {
-            return pending();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Success",
-          color: "green",
-          get count() {
-            return success();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Error",
-          color: "red",
-          get count() {
-            return error();
-          }
-        }), null);
-        createRenderEffect(() => className(_el$56, clsx(styles().queryStatusContainer, "tsqd-query-status-container")));
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Paused",
+            color: "purple",
+            get count() {
+              return paused();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Pending",
+            color: "yellow",
+            get count() {
+              return pending();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Success",
+            color: "green",
+            get count() {
+              return success();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Error",
+            color: "red",
+            get count() {
+              return error();
+            },
+          }),
+          null
+        );
+        createRenderEffect(() =>
+          className(
+            _el$56,
+            clsx(styles().queryStatusContainer, "tsqd-query-status-container")
+          )
+        );
         return _el$56;
       })();
     };
     QueryStatus = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
       let tagRef;
       const [mouseOver, setMouseOver] = createSignal(false);
       const [focused, setFocused] = createSignal(false);
       const showLabel = createMemo(() => {
         if (selectedQueryHash()) {
-          if (panelWidth() < firstBreakpoint && panelWidth() > secondBreakpoint) {
+          if (
+            panelWidth() < firstBreakpoint &&
+            panelWidth() > secondBreakpoint
+          ) {
             return false;
           }
         }
@@ -14203,9 +17666,11 @@ var init_Devtools = __esm({
         return true;
       });
       return (() => {
-        var _el$57 = _tmpl$262(), _el$59 = _el$57.firstChild, _el$61 = _el$59.nextSibling;
+        var _el$57 = _tmpl$262(),
+          _el$59 = _el$57.firstChild,
+          _el$61 = _el$59.nextSibling;
         var _ref$5 = tagRef;
-        typeof _ref$5 === "function" ? use(_ref$5, _el$57) : tagRef = _el$57;
+        typeof _ref$5 === "function" ? use(_ref$5, _el$57) : (tagRef = _el$57);
         _el$57.addEventListener("mouseleave", () => {
           setMouseOver(false);
           setFocused(false);
@@ -14213,76 +17678,138 @@ var init_Devtools = __esm({
         _el$57.addEventListener("mouseenter", () => setMouseOver(true));
         _el$57.addEventListener("blur", () => setFocused(false));
         _el$57.addEventListener("focus", () => setFocused(true));
-        spread(_el$57, mergeProps({
-          get disabled() {
-            return showLabel();
-          },
-          get ["class"]() {
-            return clsx(styles().queryStatusTag, !showLabel() && css`
-            cursor: pointer;
-            &:hover {
-              background: ${t2(colors.gray[200], colors.darkGray[400])}${alpha[80]};
-            }
-          `, "tsqd-query-status-tag", `tsqd-query-status-tag-${props.label.toLowerCase()}`);
-          }
-        }, () => mouseOver() || focused() ? {
-          "aria-describedby": "tsqd-status-tooltip"
-        } : {}), false, true);
-        insert(_el$57, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!!showLabel())() && (mouseOver() || focused());
-          },
-          get children() {
-            var _el$58 = _tmpl$242();
-            insert(_el$58, () => props.label);
-            createRenderEffect(() => className(_el$58, clsx(styles().statusTooltip, "tsqd-query-status-tooltip")));
-            return _el$58;
-          }
-        }), _el$59);
-        insert(_el$57, createComponent(Show, {
-          get when() {
-            return showLabel();
+        spread(
+          _el$57,
+          mergeProps(
+            {
+              get disabled() {
+                return showLabel();
+              },
+              get ["class"]() {
+                return clsx(
+                  styles().queryStatusTag,
+                  !showLabel() &&
+                    css`
+                      cursor: pointer;
+                      &:hover {
+                        background: ${t2(
+                            colors.gray[200],
+                            colors.darkGray[400]
+                          )}${alpha[80]};
+                      }
+                    `,
+                  "tsqd-query-status-tag",
+                  `tsqd-query-status-tag-${props.label.toLowerCase()}`
+                );
+              },
+            },
+            () =>
+              mouseOver() || focused()
+                ? {
+                    "aria-describedby": "tsqd-status-tooltip",
+                  }
+                : {}
+          ),
+          false,
+          true
+        );
+        insert(
+          _el$57,
+          createComponent(Show, {
+            get when() {
+              return (
+                createMemo(() => !!!showLabel())() && (mouseOver() || focused())
+              );
+            },
+            get children() {
+              var _el$58 = _tmpl$242();
+              insert(_el$58, () => props.label);
+              createRenderEffect(() =>
+                className(
+                  _el$58,
+                  clsx(styles().statusTooltip, "tsqd-query-status-tooltip")
+                )
+              );
+              return _el$58;
+            },
+          }),
+          _el$59
+        );
+        insert(
+          _el$57,
+          createComponent(Show, {
+            get when() {
+              return showLabel();
+            },
+            get children() {
+              var _el$60 = _tmpl$252();
+              insert(_el$60, () => props.label);
+              createRenderEffect(() =>
+                className(
+                  _el$60,
+                  clsx(
+                    styles().queryStatusTagLabel,
+                    "tsqd-query-status-tag-label"
+                  )
+                )
+              );
+              return _el$60;
+            },
+          }),
+          _el$61
+        );
+        insert(_el$61, () => props.count);
+        createRenderEffect(
+          (_p$) => {
+            var _v$30 = clsx(
+                css`
+                  width: ${tokens.size[1.5]};
+                  height: ${tokens.size[1.5]};
+                  border-radius: ${tokens.border.radius.full};
+                  background-color: ${tokens.colors[props.color][500]};
+                `,
+                "tsqd-query-status-tag-dot"
+              ),
+              _v$31 = clsx(
+                styles().queryStatusCount,
+                props.count > 0 &&
+                  props.color !== "gray" &&
+                  css`
+                    background-color: ${t2(
+                      colors[props.color][100],
+                      colors[props.color][900]
+                    )};
+                    color: ${t2(
+                      colors[props.color][700],
+                      colors[props.color][300]
+                    )};
+                  `,
+                "tsqd-query-status-tag-count"
+              );
+            _v$30 !== _p$.e && className(_el$59, (_p$.e = _v$30));
+            _v$31 !== _p$.t && className(_el$61, (_p$.t = _v$31));
+            return _p$;
           },
-          get children() {
-            var _el$60 = _tmpl$252();
-            insert(_el$60, () => props.label);
-            createRenderEffect(() => className(_el$60, clsx(styles().queryStatusTagLabel, "tsqd-query-status-tag-label")));
-            return _el$60;
+          {
+            e: void 0,
+            t: void 0,
           }
-        }), _el$61);
-        insert(_el$61, () => props.count);
-        createRenderEffect((_p$) => {
-          var _v$30 = clsx(css`
-            width: ${tokens.size[1.5]};
-            height: ${tokens.size[1.5]};
-            border-radius: ${tokens.border.radius.full};
-            background-color: ${tokens.colors[props.color][500]};
-          `, "tsqd-query-status-tag-dot"), _v$31 = clsx(styles().queryStatusCount, props.count > 0 && props.color !== "gray" && css`
-              background-color: ${t2(colors[props.color][100], colors[props.color][900])};
-              color: ${t2(colors[props.color][700], colors[props.color][300])};
-            `, "tsqd-query-status-tag-count");
-          _v$30 !== _p$.e && className(_el$59, _p$.e = _v$30);
-          _v$31 !== _p$.t && className(_el$61, _p$.t = _v$31);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
+        );
         return _el$57;
       })();
     };
     QueryDetails = () => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
+      const { colors } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
       const queryClient = useQueryDevtoolsContext().client;
       const [restoringLoading, setRestoringLoading] = createSignal(false);
       const [dataMode, setDataMode] = createSignal("view");
@@ -14290,34 +17817,66 @@ var init_Devtools = __esm({
       const errorTypes = createMemo(() => {
         return useQueryDevtoolsContext().errorTypes || [];
       });
-      const activeQuery = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash()), false);
-      const activeQueryFresh = createSubscribeToQueryCacheBatcher((queryCache) => {
-        return queryCache().getAll().find((query) => query.queryHash === selectedQueryHash());
-      }, false);
-      const activeQueryState = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.state, false);
-      const activeQueryStateData = createSubscribeToQueryCacheBatcher((queryCache) => {
-        return queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.state.data;
-      }, false);
+      const activeQuery = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash()),
+        false
+      );
+      const activeQueryFresh = createSubscribeToQueryCacheBatcher(
+        (queryCache) => {
+          return queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash());
+        },
+        false
+      );
+      const activeQueryState = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())?.state,
+        false
+      );
+      const activeQueryStateData = createSubscribeToQueryCacheBatcher(
+        (queryCache) => {
+          return queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())?.state
+            .data;
+        },
+        false
+      );
       const statusLabel = createSubscribeToQueryCacheBatcher((queryCache) => {
-        const query = queryCache().getAll().find((q) => q.queryHash === selectedQueryHash());
+        const query = queryCache()
+          .getAll()
+          .find((q) => q.queryHash === selectedQueryHash());
         if (!query) return "inactive";
         return getQueryStatusLabel(query);
       });
       const queryStatus = createSubscribeToQueryCacheBatcher((queryCache) => {
-        const query = queryCache().getAll().find((q) => q.queryHash === selectedQueryHash());
+        const query = queryCache()
+          .getAll()
+          .find((q) => q.queryHash === selectedQueryHash());
         if (!query) return "pending";
         return query.state.status;
       });
-      const observerCount = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.getObserversCount() ?? 0);
+      const observerCount = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())
+            ?.getObserversCount() ?? 0
+      );
       const color = createMemo(() => getQueryStatusColorByLabel(statusLabel()));
       const handleRefetch = () => {
         sendDevToolsEvent({
           type: "REFETCH",
-          queryHash: activeQuery()?.queryHash
+          queryHash: activeQuery()?.queryHash,
         });
         const promise = activeQuery()?.fetch();
-        promise?.catch(() => {
-        });
+        promise?.catch(() => {});
       };
       const triggerError = (errorType) => {
         const activeQueryVal = activeQuery();
@@ -14326,18 +17885,20 @@ var init_Devtools = __esm({
           type: "TRIGGER_ERROR",
           queryHash: activeQueryVal.queryHash,
           metadata: {
-            error: errorType?.name
-          }
+            error: errorType?.name,
+          },
         });
-        const error = errorType?.initializer(activeQueryVal) ?? new Error("Unknown error from devtools");
+        const error =
+          errorType?.initializer(activeQueryVal) ??
+          new Error("Unknown error from devtools");
         const __previousQueryOptions = activeQueryVal.options;
         activeQueryVal.setState({
           status: "error",
           error,
           fetchMeta: {
             ...activeQueryVal.state.fetchMeta,
-            __previousQueryOptions
-          }
+            __previousQueryOptions,
+          },
         });
       };
       const restoreQueryAfterLoadingOrError = () => {
@@ -14345,17 +17906,19 @@ var init_Devtools = __esm({
         if (!activeQueryVal) return;
         sendDevToolsEvent({
           type: "RESTORE_LOADING",
-          queryHash: activeQueryVal.queryHash
+          queryHash: activeQueryVal.queryHash,
         });
         const previousState = activeQueryVal.state;
-        const previousOptions = activeQueryVal.state.fetchMeta ? activeQueryVal.state.fetchMeta.__previousQueryOptions : null;
+        const previousOptions = activeQueryVal.state.fetchMeta
+          ? activeQueryVal.state.fetchMeta.__previousQueryOptions
+          : null;
         activeQueryVal.cancel({
-          silent: true
+          silent: true,
         });
         activeQueryVal.setState({
           ...previousState,
           fetchStatus: "idle",
-          fetchMeta: null
+          fetchMeta: null,
         });
         if (previousOptions) {
           activeQueryVal.fetch(previousOptions);
@@ -14369,46 +17932,77 @@ var init_Devtools = __esm({
       const getQueryStatusColors = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-        border-color: ${t2(colors[color()][400], colors[color()][600])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+            border-color: ${t2(colors[color()][400], colors[color()][600])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][100], colors[color()][900])};
-      color: ${t2(colors[color()][700], colors[color()][300])};
-      border-color: ${t2(colors[color()][400], colors[color()][600])};
-    `;
+          background-color: ${t2(colors[color()][100], colors[color()][900])};
+          color: ${t2(colors[color()][700], colors[color()][300])};
+          border-color: ${t2(colors[color()][400], colors[color()][600])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return createMemo(() => !!activeQuery())() && activeQueryState();
         },
         get children() {
-          var _el$62 = _tmpl$31(), _el$63 = _el$62.firstChild, _el$64 = _el$63.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.firstChild, _el$67 = _el$66.firstChild, _el$68 = _el$66.nextSibling, _el$69 = _el$65.nextSibling, _el$70 = _el$69.firstChild, _el$71 = _el$70.nextSibling, _el$72 = _el$69.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$73.nextSibling, _el$75 = _el$64.nextSibling, _el$76 = _el$75.nextSibling, _el$77 = _el$76.firstChild, _el$78 = _el$77.firstChild, _el$79 = _el$77.nextSibling, _el$80 = _el$79.firstChild, _el$81 = _el$79.nextSibling, _el$82 = _el$81.firstChild, _el$83 = _el$81.nextSibling, _el$84 = _el$83.firstChild, _el$85 = _el$83.nextSibling, _el$86 = _el$85.firstChild, _el$87 = _el$86.nextSibling, _el$96 = _el$76.nextSibling; _el$96.firstChild; var _el$106 = _el$96.nextSibling, _el$107 = _el$106.nextSibling;
+          var _el$62 = _tmpl$31(),
+            _el$63 = _el$62.firstChild,
+            _el$64 = _el$63.nextSibling,
+            _el$65 = _el$64.firstChild,
+            _el$66 = _el$65.firstChild,
+            _el$67 = _el$66.firstChild,
+            _el$68 = _el$66.nextSibling,
+            _el$69 = _el$65.nextSibling,
+            _el$70 = _el$69.firstChild,
+            _el$71 = _el$70.nextSibling,
+            _el$72 = _el$69.nextSibling,
+            _el$73 = _el$72.firstChild,
+            _el$74 = _el$73.nextSibling,
+            _el$75 = _el$64.nextSibling,
+            _el$76 = _el$75.nextSibling,
+            _el$77 = _el$76.firstChild,
+            _el$78 = _el$77.firstChild,
+            _el$79 = _el$77.nextSibling,
+            _el$80 = _el$79.firstChild,
+            _el$81 = _el$79.nextSibling,
+            _el$82 = _el$81.firstChild,
+            _el$83 = _el$81.nextSibling,
+            _el$84 = _el$83.firstChild,
+            _el$85 = _el$83.nextSibling,
+            _el$86 = _el$85.firstChild,
+            _el$87 = _el$86.nextSibling,
+            _el$96 = _el$76.nextSibling;
+          _el$96.firstChild;
+          var _el$106 = _el$96.nextSibling,
+            _el$107 = _el$106.nextSibling;
           insert(_el$67, () => displayValue(activeQuery().queryKey, true));
           insert(_el$68, statusLabel);
           insert(_el$71, observerCount);
-          insert(_el$74, () => new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString());
+          insert(_el$74, () =>
+            new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString()
+          );
           _el$77.$$click = handleRefetch;
           _el$79.$$click = () => {
             sendDevToolsEvent({
               type: "INVALIDATE",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.invalidateQueries(activeQuery());
           };
           _el$81.$$click = () => {
             sendDevToolsEvent({
               type: "RESET",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.resetQueries(activeQuery());
           };
           _el$83.$$click = () => {
             sendDevToolsEvent({
               type: "REMOVE",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.removeQueries(activeQuery());
             setSelectedQueryHash(null);
@@ -14422,394 +18016,686 @@ var init_Devtools = __esm({
               if (!activeQueryVal) return;
               sendDevToolsEvent({
                 type: "TRIGGER_LOADING",
-                queryHash: activeQueryVal.queryHash
+                queryHash: activeQueryVal.queryHash,
               });
               const __previousQueryOptions = activeQueryVal.options;
               activeQueryVal.fetch({
                 ...__previousQueryOptions,
                 queryFn: () => {
-                  return new Promise(() => {
-                  });
+                  return new Promise(() => {});
                 },
-                gcTime: -1
+                gcTime: -1,
               });
               activeQueryVal.setState({
                 data: void 0,
                 status: "pending",
                 fetchMeta: {
                   ...activeQueryVal.state.fetchMeta,
-                  __previousQueryOptions
-                }
+                  __previousQueryOptions,
+                },
               });
             }
           };
-          insert(_el$85, () => queryStatus() === "pending" ? "Restore" : "Trigger", _el$87);
-          insert(_el$76, createComponent(Show, {
-            get when() {
-              return errorTypes().length === 0 || queryStatus() === "error";
-            },
-            get children() {
-              var _el$88 = _tmpl$27(), _el$89 = _el$88.firstChild, _el$90 = _el$89.nextSibling;
-              _el$88.$$click = () => {
-                if (!activeQuery().state.error) {
-                  triggerError();
-                } else {
-                  sendDevToolsEvent({
-                    type: "RESTORE_ERROR",
-                    queryHash: activeQuery()?.queryHash
-                  });
-                  queryClient.resetQueries(activeQuery());
-                }
-              };
-              insert(_el$88, () => queryStatus() === "error" ? "Restore" : "Trigger", _el$90);
-              createRenderEffect((_p$) => {
-                var _v$32 = clsx(css`
-                  color: ${t2(colors.red[500], colors.red[400])};
-                `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-error"), _v$33 = queryStatus() === "pending", _v$34 = css`
-                  background-color: ${t2(colors.red[500], colors.red[400])};
-                `;
-                _v$32 !== _p$.e && className(_el$88, _p$.e = _v$32);
-                _v$33 !== _p$.t && (_el$88.disabled = _p$.t = _v$33);
-                _v$34 !== _p$.a && className(_el$89, _p$.a = _v$34);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0
-              });
-              return _el$88;
-            }
-          }), null);
-          insert(_el$76, createComponent(Show, {
-            get when() {
-              return !(errorTypes().length === 0 || queryStatus() === "error");
-            },
-            get children() {
-              var _el$91 = _tmpl$28(), _el$92 = _el$91.firstChild, _el$93 = _el$92.nextSibling, _el$94 = _el$93.nextSibling; _el$94.firstChild;
-              _el$94.addEventListener("change", (e2) => {
-                const errorType = errorTypes().find((et) => et.name === e2.currentTarget.value);
-                triggerError(errorType);
-              });
-              insert(_el$94, createComponent(For, {
-                get each() {
-                  return errorTypes();
-                },
-                children: (errorType) => (() => {
-                  var _el$108 = _tmpl$322();
-                  insert(_el$108, () => errorType.name);
-                  createRenderEffect(() => _el$108.value = errorType.name);
-                  return _el$108;
-                })()
-              }), null);
-              insert(_el$91, createComponent(ChevronDown, {}), null);
-              createRenderEffect((_p$) => {
-                var _v$35 = clsx(styles().actionsSelect, "tsqd-query-details-actions-btn", "tsqd-query-details-action-error-multiple"), _v$36 = css`
-                  background-color: ${tokens.colors.red[400]};
-                `, _v$37 = queryStatus() === "pending";
-                _v$35 !== _p$.e && className(_el$91, _p$.e = _v$35);
-                _v$36 !== _p$.t && className(_el$92, _p$.t = _v$36);
-                _v$37 !== _p$.a && (_el$94.disabled = _p$.a = _v$37);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0
-              });
-              return _el$91;
-            }
-          }), null);
-          insert(_el$96, () => dataMode() === "view" ? "Explorer" : "Editor", null);
-          insert(_el$62, createComponent(Show, {
-            get when() {
-              return dataMode() === "view";
-            },
-            get children() {
-              var _el$98 = _tmpl$29();
-              insert(_el$98, createComponent(Explorer, {
-                label: "Data",
-                defaultExpanded: ["Data"],
-                get value() {
-                  return activeQueryStateData();
-                },
-                editable: true,
-                onEdit: () => setDataMode("edit"),
-                get activeQuery() {
-                  return activeQuery();
-                }
-              }));
-              createRenderEffect((_$p) => (_$p = tokens.size[2]) != null ? _el$98.style.setProperty("padding", _$p) : _el$98.style.removeProperty("padding"));
-              return _el$98;
-            }
-          }), _el$106);
-          insert(_el$62, createComponent(Show, {
-            get when() {
-              return dataMode() === "edit";
+          insert(
+            _el$85,
+            () => (queryStatus() === "pending" ? "Restore" : "Trigger"),
+            _el$87
+          );
+          insert(
+            _el$76,
+            createComponent(Show, {
+              get when() {
+                return errorTypes().length === 0 || queryStatus() === "error";
+              },
+              get children() {
+                var _el$88 = _tmpl$27(),
+                  _el$89 = _el$88.firstChild,
+                  _el$90 = _el$89.nextSibling;
+                _el$88.$$click = () => {
+                  if (!activeQuery().state.error) {
+                    triggerError();
+                  } else {
+                    sendDevToolsEvent({
+                      type: "RESTORE_ERROR",
+                      queryHash: activeQuery()?.queryHash,
+                    });
+                    queryClient.resetQueries(activeQuery());
+                  }
+                };
+                insert(
+                  _el$88,
+                  () => (queryStatus() === "error" ? "Restore" : "Trigger"),
+                  _el$90
+                );
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$32 = clsx(
+                        css`
+                          color: ${t2(colors.red[500], colors.red[400])};
+                        `,
+                        "tsqd-query-details-actions-btn",
+                        "tsqd-query-details-action-error"
+                      ),
+                      _v$33 = queryStatus() === "pending",
+                      _v$34 = css`
+                        background-color: ${t2(
+                          colors.red[500],
+                          colors.red[400]
+                        )};
+                      `;
+                    _v$32 !== _p$.e && className(_el$88, (_p$.e = _v$32));
+                    _v$33 !== _p$.t && (_el$88.disabled = _p$.t = _v$33);
+                    _v$34 !== _p$.a && className(_el$89, (_p$.a = _v$34));
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                  }
+                );
+                return _el$88;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$76,
+            createComponent(Show, {
+              get when() {
+                return !(
+                  errorTypes().length === 0 || queryStatus() === "error"
+                );
+              },
+              get children() {
+                var _el$91 = _tmpl$28(),
+                  _el$92 = _el$91.firstChild,
+                  _el$93 = _el$92.nextSibling,
+                  _el$94 = _el$93.nextSibling;
+                _el$94.firstChild;
+                _el$94.addEventListener("change", (e2) => {
+                  const errorType = errorTypes().find(
+                    (et) => et.name === e2.currentTarget.value
+                  );
+                  triggerError(errorType);
+                });
+                insert(
+                  _el$94,
+                  createComponent(For, {
+                    get each() {
+                      return errorTypes();
+                    },
+                    children: (errorType) =>
+                      (() => {
+                        var _el$108 = _tmpl$322();
+                        insert(_el$108, () => errorType.name);
+                        createRenderEffect(
+                          () => (_el$108.value = errorType.name)
+                        );
+                        return _el$108;
+                      })(),
+                  }),
+                  null
+                );
+                insert(_el$91, createComponent(ChevronDown, {}), null);
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$35 = clsx(
+                        styles().actionsSelect,
+                        "tsqd-query-details-actions-btn",
+                        "tsqd-query-details-action-error-multiple"
+                      ),
+                      _v$36 = css`
+                        background-color: ${tokens.colors.red[400]};
+                      `,
+                      _v$37 = queryStatus() === "pending";
+                    _v$35 !== _p$.e && className(_el$91, (_p$.e = _v$35));
+                    _v$36 !== _p$.t && className(_el$92, (_p$.t = _v$36));
+                    _v$37 !== _p$.a && (_el$94.disabled = _p$.a = _v$37);
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                  }
+                );
+                return _el$91;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$96,
+            () => (dataMode() === "view" ? "Explorer" : "Editor"),
+            null
+          );
+          insert(
+            _el$62,
+            createComponent(Show, {
+              get when() {
+                return dataMode() === "view";
+              },
+              get children() {
+                var _el$98 = _tmpl$29();
+                insert(
+                  _el$98,
+                  createComponent(Explorer, {
+                    label: "Data",
+                    defaultExpanded: ["Data"],
+                    get value() {
+                      return activeQueryStateData();
+                    },
+                    editable: true,
+                    onEdit: () => setDataMode("edit"),
+                    get activeQuery() {
+                      return activeQuery();
+                    },
+                  })
+                );
+                createRenderEffect((_$p) =>
+                  (_$p = tokens.size[2]) != null
+                    ? _el$98.style.setProperty("padding", _$p)
+                    : _el$98.style.removeProperty("padding")
+                );
+                return _el$98;
+              },
+            }),
+            _el$106
+          );
+          insert(
+            _el$62,
+            createComponent(Show, {
+              get when() {
+                return dataMode() === "edit";
+              },
+              get children() {
+                var _el$99 = _tmpl$30(),
+                  _el$100 = _el$99.firstChild,
+                  _el$101 = _el$100.nextSibling,
+                  _el$102 = _el$101.firstChild,
+                  _el$103 = _el$102.nextSibling,
+                  _el$104 = _el$103.firstChild,
+                  _el$105 = _el$104.nextSibling;
+                _el$99.addEventListener("submit", (e2) => {
+                  e2.preventDefault();
+                  const formData = new FormData(e2.currentTarget);
+                  const data = formData.get("data");
+                  try {
+                    const parsedData = JSON.parse(data);
+                    activeQuery().setState({
+                      ...activeQuery().state,
+                      data: parsedData,
+                    });
+                    setDataMode("view");
+                  } catch (error) {
+                    setDataEditError(true);
+                  }
+                });
+                _el$100.addEventListener("focus", () =>
+                  setDataEditError(false)
+                );
+                insert(_el$102, () => (dataEditError() ? "Invalid Value" : ""));
+                _el$104.$$click = () => setDataMode("view");
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$38 = clsx(
+                        styles().devtoolsEditForm,
+                        "tsqd-query-details-data-editor"
+                      ),
+                      _v$39 = styles().devtoolsEditTextarea,
+                      _v$40 = dataEditError(),
+                      _v$41 = styles().devtoolsEditFormActions,
+                      _v$42 = styles().devtoolsEditFormError,
+                      _v$43 = styles().devtoolsEditFormActionContainer,
+                      _v$44 = clsx(
+                        styles().devtoolsEditFormAction,
+                        css`
+                          color: ${t2(colors.gray[600], colors.gray[300])};
+                        `
+                      ),
+                      _v$45 = clsx(
+                        styles().devtoolsEditFormAction,
+                        css`
+                          color: ${t2(colors.blue[600], colors.blue[400])};
+                        `
+                      );
+                    _v$38 !== _p$.e && className(_el$99, (_p$.e = _v$38));
+                    _v$39 !== _p$.t && className(_el$100, (_p$.t = _v$39));
+                    _v$40 !== _p$.a &&
+                      setAttribute(_el$100, "data-error", (_p$.a = _v$40));
+                    _v$41 !== _p$.o && className(_el$101, (_p$.o = _v$41));
+                    _v$42 !== _p$.i && className(_el$102, (_p$.i = _v$42));
+                    _v$43 !== _p$.n && className(_el$103, (_p$.n = _v$43));
+                    _v$44 !== _p$.s && className(_el$104, (_p$.s = _v$44));
+                    _v$45 !== _p$.h && className(_el$105, (_p$.h = _v$45));
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                    o: void 0,
+                    i: void 0,
+                    n: void 0,
+                    s: void 0,
+                    h: void 0,
+                  }
+                );
+                createRenderEffect(
+                  () =>
+                    (_el$100.value = JSON.stringify(
+                      activeQueryStateData(),
+                      null,
+                      2
+                    ))
+                );
+                return _el$99;
+              },
+            }),
+            _el$106
+          );
+          insert(
+            _el$107,
+            createComponent(Explorer, {
+              label: "Query",
+              defaultExpanded: ["Query", "queryKey"],
+              get value() {
+                return activeQueryFresh();
+              },
+            })
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$46 = clsx(
+                  styles().detailsContainer,
+                  "tsqd-query-details-container"
+                ),
+                _v$47 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$48 = clsx(
+                  styles().detailsBody,
+                  "tsqd-query-details-summary-container"
+                ),
+                _v$49 = clsx(
+                  styles().queryDetailsStatus,
+                  getQueryStatusColors()
+                ),
+                _v$50 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$51 = clsx(
+                  styles().actionsBody,
+                  "tsqd-query-details-actions-container"
+                ),
+                _v$52 = clsx(
+                  css`
+                    color: ${t2(colors.blue[600], colors.blue[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-refetch"
+                ),
+                _v$53 = statusLabel() === "fetching",
+                _v$54 = css`
+                  background-color: ${t2(colors.blue[600], colors.blue[400])};
+                `,
+                _v$55 = clsx(
+                  css`
+                    color: ${t2(colors.yellow[600], colors.yellow[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-invalidate"
+                ),
+                _v$56 = queryStatus() === "pending",
+                _v$57 = css`
+                  background-color: ${t2(
+                    colors.yellow[600],
+                    colors.yellow[400]
+                  )};
+                `,
+                _v$58 = clsx(
+                  css`
+                    color: ${t2(colors.gray[600], colors.gray[300])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-reset"
+                ),
+                _v$59 = queryStatus() === "pending",
+                _v$60 = css`
+                  background-color: ${t2(colors.gray[600], colors.gray[400])};
+                `,
+                _v$61 = clsx(
+                  css`
+                    color: ${t2(colors.pink[500], colors.pink[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-remove"
+                ),
+                _v$62 = statusLabel() === "fetching",
+                _v$63 = css`
+                  background-color: ${t2(colors.pink[500], colors.pink[400])};
+                `,
+                _v$64 = clsx(
+                  css`
+                    color: ${t2(colors.cyan[500], colors.cyan[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-loading"
+                ),
+                _v$65 = restoringLoading(),
+                _v$66 = css`
+                  background-color: ${t2(colors.cyan[500], colors.cyan[400])};
+                `,
+                _v$67 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$68 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$69 = tokens.size[2];
+              _v$46 !== _p$.e && className(_el$62, (_p$.e = _v$46));
+              _v$47 !== _p$.t && className(_el$63, (_p$.t = _v$47));
+              _v$48 !== _p$.a && className(_el$64, (_p$.a = _v$48));
+              _v$49 !== _p$.o && className(_el$68, (_p$.o = _v$49));
+              _v$50 !== _p$.i && className(_el$75, (_p$.i = _v$50));
+              _v$51 !== _p$.n && className(_el$76, (_p$.n = _v$51));
+              _v$52 !== _p$.s && className(_el$77, (_p$.s = _v$52));
+              _v$53 !== _p$.h && (_el$77.disabled = _p$.h = _v$53);
+              _v$54 !== _p$.r && className(_el$78, (_p$.r = _v$54));
+              _v$55 !== _p$.d && className(_el$79, (_p$.d = _v$55));
+              _v$56 !== _p$.l && (_el$79.disabled = _p$.l = _v$56);
+              _v$57 !== _p$.u && className(_el$80, (_p$.u = _v$57));
+              _v$58 !== _p$.c && className(_el$81, (_p$.c = _v$58));
+              _v$59 !== _p$.w && (_el$81.disabled = _p$.w = _v$59);
+              _v$60 !== _p$.m && className(_el$82, (_p$.m = _v$60));
+              _v$61 !== _p$.f && className(_el$83, (_p$.f = _v$61));
+              _v$62 !== _p$.y && (_el$83.disabled = _p$.y = _v$62);
+              _v$63 !== _p$.g && className(_el$84, (_p$.g = _v$63));
+              _v$64 !== _p$.p && className(_el$85, (_p$.p = _v$64));
+              _v$65 !== _p$.b && (_el$85.disabled = _p$.b = _v$65);
+              _v$66 !== _p$.T && className(_el$86, (_p$.T = _v$66));
+              _v$67 !== _p$.A && className(_el$96, (_p$.A = _v$67));
+              _v$68 !== _p$.O && className(_el$106, (_p$.O = _v$68));
+              _v$69 !== _p$.I &&
+                ((_p$.I = _v$69) != null
+                  ? _el$107.style.setProperty("padding", _v$69)
+                  : _el$107.style.removeProperty("padding"));
+              return _p$;
             },
-            get children() {
-              var _el$99 = _tmpl$30(), _el$100 = _el$99.firstChild, _el$101 = _el$100.nextSibling, _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.firstChild, _el$105 = _el$104.nextSibling;
-              _el$99.addEventListener("submit", (e2) => {
-                e2.preventDefault();
-                const formData = new FormData(e2.currentTarget);
-                const data = formData.get("data");
-                try {
-                  const parsedData = JSON.parse(data);
-                  activeQuery().setState({
-                    ...activeQuery().state,
-                    data: parsedData
-                  });
-                  setDataMode("view");
-                } catch (error) {
-                  setDataEditError(true);
-                }
-              });
-              _el$100.addEventListener("focus", () => setDataEditError(false));
-              insert(_el$102, () => dataEditError() ? "Invalid Value" : "");
-              _el$104.$$click = () => setDataMode("view");
-              createRenderEffect((_p$) => {
-                var _v$38 = clsx(styles().devtoolsEditForm, "tsqd-query-details-data-editor"), _v$39 = styles().devtoolsEditTextarea, _v$40 = dataEditError(), _v$41 = styles().devtoolsEditFormActions, _v$42 = styles().devtoolsEditFormError, _v$43 = styles().devtoolsEditFormActionContainer, _v$44 = clsx(styles().devtoolsEditFormAction, css`
-                      color: ${t2(colors.gray[600], colors.gray[300])};
-                    `), _v$45 = clsx(styles().devtoolsEditFormAction, css`
-                      color: ${t2(colors.blue[600], colors.blue[400])};
-                    `);
-                _v$38 !== _p$.e && className(_el$99, _p$.e = _v$38);
-                _v$39 !== _p$.t && className(_el$100, _p$.t = _v$39);
-                _v$40 !== _p$.a && setAttribute(_el$100, "data-error", _p$.a = _v$40);
-                _v$41 !== _p$.o && className(_el$101, _p$.o = _v$41);
-                _v$42 !== _p$.i && className(_el$102, _p$.i = _v$42);
-                _v$43 !== _p$.n && className(_el$103, _p$.n = _v$43);
-                _v$44 !== _p$.s && className(_el$104, _p$.s = _v$44);
-                _v$45 !== _p$.h && className(_el$105, _p$.h = _v$45);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0,
-                o: void 0,
-                i: void 0,
-                n: void 0,
-                s: void 0,
-                h: void 0
-              });
-              createRenderEffect(() => _el$100.value = JSON.stringify(activeQueryStateData(), null, 2));
-              return _el$99;
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
+              c: void 0,
+              w: void 0,
+              m: void 0,
+              f: void 0,
+              y: void 0,
+              g: void 0,
+              p: void 0,
+              b: void 0,
+              T: void 0,
+              A: void 0,
+              O: void 0,
+              I: void 0,
             }
-          }), _el$106);
-          insert(_el$107, createComponent(Explorer, {
-            label: "Query",
-            defaultExpanded: ["Query", "queryKey"],
-            get value() {
-              return activeQueryFresh();
-            }
-          }));
-          createRenderEffect((_p$) => {
-            var _v$46 = clsx(styles().detailsContainer, "tsqd-query-details-container"), _v$47 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$48 = clsx(styles().detailsBody, "tsqd-query-details-summary-container"), _v$49 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$50 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$51 = clsx(styles().actionsBody, "tsqd-query-details-actions-container"), _v$52 = clsx(css`
-                color: ${t2(colors.blue[600], colors.blue[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-refetch"), _v$53 = statusLabel() === "fetching", _v$54 = css`
-                background-color: ${t2(colors.blue[600], colors.blue[400])};
-              `, _v$55 = clsx(css`
-                color: ${t2(colors.yellow[600], colors.yellow[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-invalidate"), _v$56 = queryStatus() === "pending", _v$57 = css`
-                background-color: ${t2(colors.yellow[600], colors.yellow[400])};
-              `, _v$58 = clsx(css`
-                color: ${t2(colors.gray[600], colors.gray[300])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-reset"), _v$59 = queryStatus() === "pending", _v$60 = css`
-                background-color: ${t2(colors.gray[600], colors.gray[400])};
-              `, _v$61 = clsx(css`
-                color: ${t2(colors.pink[500], colors.pink[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-remove"), _v$62 = statusLabel() === "fetching", _v$63 = css`
-                background-color: ${t2(colors.pink[500], colors.pink[400])};
-              `, _v$64 = clsx(css`
-                color: ${t2(colors.cyan[500], colors.cyan[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-loading"), _v$65 = restoringLoading(), _v$66 = css`
-                background-color: ${t2(colors.cyan[500], colors.cyan[400])};
-              `, _v$67 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$68 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$69 = tokens.size[2];
-            _v$46 !== _p$.e && className(_el$62, _p$.e = _v$46);
-            _v$47 !== _p$.t && className(_el$63, _p$.t = _v$47);
-            _v$48 !== _p$.a && className(_el$64, _p$.a = _v$48);
-            _v$49 !== _p$.o && className(_el$68, _p$.o = _v$49);
-            _v$50 !== _p$.i && className(_el$75, _p$.i = _v$50);
-            _v$51 !== _p$.n && className(_el$76, _p$.n = _v$51);
-            _v$52 !== _p$.s && className(_el$77, _p$.s = _v$52);
-            _v$53 !== _p$.h && (_el$77.disabled = _p$.h = _v$53);
-            _v$54 !== _p$.r && className(_el$78, _p$.r = _v$54);
-            _v$55 !== _p$.d && className(_el$79, _p$.d = _v$55);
-            _v$56 !== _p$.l && (_el$79.disabled = _p$.l = _v$56);
-            _v$57 !== _p$.u && className(_el$80, _p$.u = _v$57);
-            _v$58 !== _p$.c && className(_el$81, _p$.c = _v$58);
-            _v$59 !== _p$.w && (_el$81.disabled = _p$.w = _v$59);
-            _v$60 !== _p$.m && className(_el$82, _p$.m = _v$60);
-            _v$61 !== _p$.f && className(_el$83, _p$.f = _v$61);
-            _v$62 !== _p$.y && (_el$83.disabled = _p$.y = _v$62);
-            _v$63 !== _p$.g && className(_el$84, _p$.g = _v$63);
-            _v$64 !== _p$.p && className(_el$85, _p$.p = _v$64);
-            _v$65 !== _p$.b && (_el$85.disabled = _p$.b = _v$65);
-            _v$66 !== _p$.T && className(_el$86, _p$.T = _v$66);
-            _v$67 !== _p$.A && className(_el$96, _p$.A = _v$67);
-            _v$68 !== _p$.O && className(_el$106, _p$.O = _v$68);
-            _v$69 !== _p$.I && ((_p$.I = _v$69) != null ? _el$107.style.setProperty("padding", _v$69) : _el$107.style.removeProperty("padding"));
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0,
-            o: void 0,
-            i: void 0,
-            n: void 0,
-            s: void 0,
-            h: void 0,
-            r: void 0,
-            d: void 0,
-            l: void 0,
-            u: void 0,
-            c: void 0,
-            w: void 0,
-            m: void 0,
-            f: void 0,
-            y: void 0,
-            g: void 0,
-            p: void 0,
-            b: void 0,
-            T: void 0,
-            A: void 0,
-            O: void 0,
-            I: void 0
-          });
+          );
           return _el$62;
-        }
+        },
       });
     };
     MutationDetails = () => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const isPaused = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === selectedMutationId());
-        if (!mutation) return false;
-        return mutation.state.isPaused;
-      });
+      const { colors } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const isPaused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === selectedMutationId()
+          );
+          if (!mutation) return false;
+          return mutation.state.isPaused;
+        }
+      );
       const status = createSubscribeToMutationCacheBatcher((mutationCache) => {
         const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === selectedMutationId());
+        const mutation = mutations.find(
+          (m) => m.mutationId === selectedMutationId()
+        );
         if (!mutation) return "idle";
         return mutation.state.status;
       });
-      const color = createMemo(() => getMutationStatusColor({
-        isPaused: isPaused(),
-        status: status()
-      }));
-      const activeMutation = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().find((mutation) => mutation.mutationId === selectedMutationId()), false);
+      const color = createMemo(() =>
+        getMutationStatusColor({
+          isPaused: isPaused(),
+          status: status(),
+        })
+      );
+      const activeMutation = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .find((mutation) => mutation.mutationId === selectedMutationId()),
+        false
+      );
       const getQueryStatusColors = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-        border-color: ${t2(colors[color()][400], colors[color()][600])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+            border-color: ${t2(colors[color()][400], colors[color()][600])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][100], colors[color()][900])};
-      color: ${t2(colors[color()][700], colors[color()][300])};
-      border-color: ${t2(colors[color()][400], colors[color()][600])};
-    `;
+          background-color: ${t2(colors[color()][100], colors[color()][900])};
+          color: ${t2(colors[color()][700], colors[color()][300])};
+          border-color: ${t2(colors[color()][400], colors[color()][600])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return activeMutation();
         },
         get children() {
-          var _el$109 = _tmpl$332(), _el$110 = _el$109.firstChild, _el$111 = _el$110.nextSibling, _el$112 = _el$111.firstChild, _el$113 = _el$112.firstChild, _el$114 = _el$113.firstChild, _el$115 = _el$113.nextSibling, _el$116 = _el$112.nextSibling, _el$117 = _el$116.firstChild, _el$118 = _el$117.nextSibling, _el$119 = _el$111.nextSibling, _el$120 = _el$119.nextSibling, _el$121 = _el$120.nextSibling, _el$122 = _el$121.nextSibling, _el$123 = _el$122.nextSibling, _el$124 = _el$123.nextSibling, _el$125 = _el$124.nextSibling, _el$126 = _el$125.nextSibling;
-          insert(_el$114, createComponent(Show, {
-            get when() {
-              return activeMutation().options.mutationKey;
-            },
-            fallback: "No mutationKey found",
-            get children() {
-              return displayValue(activeMutation().options.mutationKey, true);
-            }
-          }));
-          insert(_el$115, createComponent(Show, {
-            get when() {
-              return color() === "purple";
-            },
-            children: "pending"
-          }), null);
-          insert(_el$115, createComponent(Show, {
-            get when() {
-              return color() !== "purple";
+          var _el$109 = _tmpl$332(),
+            _el$110 = _el$109.firstChild,
+            _el$111 = _el$110.nextSibling,
+            _el$112 = _el$111.firstChild,
+            _el$113 = _el$112.firstChild,
+            _el$114 = _el$113.firstChild,
+            _el$115 = _el$113.nextSibling,
+            _el$116 = _el$112.nextSibling,
+            _el$117 = _el$116.firstChild,
+            _el$118 = _el$117.nextSibling,
+            _el$119 = _el$111.nextSibling,
+            _el$120 = _el$119.nextSibling,
+            _el$121 = _el$120.nextSibling,
+            _el$122 = _el$121.nextSibling,
+            _el$123 = _el$122.nextSibling,
+            _el$124 = _el$123.nextSibling,
+            _el$125 = _el$124.nextSibling,
+            _el$126 = _el$125.nextSibling;
+          insert(
+            _el$114,
+            createComponent(Show, {
+              get when() {
+                return activeMutation().options.mutationKey;
+              },
+              fallback: "No mutationKey found",
+              get children() {
+                return displayValue(activeMutation().options.mutationKey, true);
+              },
+            })
+          );
+          insert(
+            _el$115,
+            createComponent(Show, {
+              get when() {
+                return color() === "purple";
+              },
+              children: "pending",
+            }),
+            null
+          );
+          insert(
+            _el$115,
+            createComponent(Show, {
+              get when() {
+                return color() !== "purple";
+              },
+              get children() {
+                return status();
+              },
+            }),
+            null
+          );
+          insert(_el$118, () =>
+            new Date(activeMutation().state.submittedAt).toLocaleTimeString()
+          );
+          insert(
+            _el$120,
+            createComponent(Explorer, {
+              label: "Variables",
+              defaultExpanded: ["Variables"],
+              get value() {
+                return activeMutation().state.variables;
+              },
+            })
+          );
+          insert(
+            _el$122,
+            createComponent(Explorer, {
+              label: "Context",
+              defaultExpanded: ["Context"],
+              get value() {
+                return activeMutation().state.context;
+              },
+            })
+          );
+          insert(
+            _el$124,
+            createComponent(Explorer, {
+              label: "Data",
+              defaultExpanded: ["Data"],
+              get value() {
+                return activeMutation().state.data;
+              },
+            })
+          );
+          insert(
+            _el$126,
+            createComponent(Explorer, {
+              label: "Mutation",
+              defaultExpanded: ["Mutation"],
+              get value() {
+                return activeMutation();
+              },
+            })
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$70 = clsx(
+                  styles().detailsContainer,
+                  "tsqd-query-details-container"
+                ),
+                _v$71 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$72 = clsx(
+                  styles().detailsBody,
+                  "tsqd-query-details-summary-container"
+                ),
+                _v$73 = clsx(
+                  styles().queryDetailsStatus,
+                  getQueryStatusColors()
+                ),
+                _v$74 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$75 = tokens.size[2],
+                _v$76 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$77 = tokens.size[2],
+                _v$78 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$79 = tokens.size[2],
+                _v$80 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$81 = tokens.size[2];
+              _v$70 !== _p$.e && className(_el$109, (_p$.e = _v$70));
+              _v$71 !== _p$.t && className(_el$110, (_p$.t = _v$71));
+              _v$72 !== _p$.a && className(_el$111, (_p$.a = _v$72));
+              _v$73 !== _p$.o && className(_el$115, (_p$.o = _v$73));
+              _v$74 !== _p$.i && className(_el$119, (_p$.i = _v$74));
+              _v$75 !== _p$.n &&
+                ((_p$.n = _v$75) != null
+                  ? _el$120.style.setProperty("padding", _v$75)
+                  : _el$120.style.removeProperty("padding"));
+              _v$76 !== _p$.s && className(_el$121, (_p$.s = _v$76));
+              _v$77 !== _p$.h &&
+                ((_p$.h = _v$77) != null
+                  ? _el$122.style.setProperty("padding", _v$77)
+                  : _el$122.style.removeProperty("padding"));
+              _v$78 !== _p$.r && className(_el$123, (_p$.r = _v$78));
+              _v$79 !== _p$.d &&
+                ((_p$.d = _v$79) != null
+                  ? _el$124.style.setProperty("padding", _v$79)
+                  : _el$124.style.removeProperty("padding"));
+              _v$80 !== _p$.l && className(_el$125, (_p$.l = _v$80));
+              _v$81 !== _p$.u &&
+                ((_p$.u = _v$81) != null
+                  ? _el$126.style.setProperty("padding", _v$81)
+                  : _el$126.style.removeProperty("padding"));
+              return _p$;
             },
-            get children() {
-              return status();
-            }
-          }), null);
-          insert(_el$118, () => new Date(activeMutation().state.submittedAt).toLocaleTimeString());
-          insert(_el$120, createComponent(Explorer, {
-            label: "Variables",
-            defaultExpanded: ["Variables"],
-            get value() {
-              return activeMutation().state.variables;
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
             }
-          }));
-          insert(_el$122, createComponent(Explorer, {
-            label: "Context",
-            defaultExpanded: ["Context"],
-            get value() {
-              return activeMutation().state.context;
-            }
-          }));
-          insert(_el$124, createComponent(Explorer, {
-            label: "Data",
-            defaultExpanded: ["Data"],
-            get value() {
-              return activeMutation().state.data;
-            }
-          }));
-          insert(_el$126, createComponent(Explorer, {
-            label: "Mutation",
-            defaultExpanded: ["Mutation"],
-            get value() {
-              return activeMutation();
-            }
-          }));
-          createRenderEffect((_p$) => {
-            var _v$70 = clsx(styles().detailsContainer, "tsqd-query-details-container"), _v$71 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$72 = clsx(styles().detailsBody, "tsqd-query-details-summary-container"), _v$73 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$74 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$75 = tokens.size[2], _v$76 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$77 = tokens.size[2], _v$78 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$79 = tokens.size[2], _v$80 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$81 = tokens.size[2];
-            _v$70 !== _p$.e && className(_el$109, _p$.e = _v$70);
-            _v$71 !== _p$.t && className(_el$110, _p$.t = _v$71);
-            _v$72 !== _p$.a && className(_el$111, _p$.a = _v$72);
-            _v$73 !== _p$.o && className(_el$115, _p$.o = _v$73);
-            _v$74 !== _p$.i && className(_el$119, _p$.i = _v$74);
-            _v$75 !== _p$.n && ((_p$.n = _v$75) != null ? _el$120.style.setProperty("padding", _v$75) : _el$120.style.removeProperty("padding"));
-            _v$76 !== _p$.s && className(_el$121, _p$.s = _v$76);
-            _v$77 !== _p$.h && ((_p$.h = _v$77) != null ? _el$122.style.setProperty("padding", _v$77) : _el$122.style.removeProperty("padding"));
-            _v$78 !== _p$.r && className(_el$123, _p$.r = _v$78);
-            _v$79 !== _p$.d && ((_p$.d = _v$79) != null ? _el$124.style.setProperty("padding", _v$79) : _el$124.style.removeProperty("padding"));
-            _v$80 !== _p$.l && className(_el$125, _p$.l = _v$80);
-            _v$81 !== _p$.u && ((_p$.u = _v$81) != null ? _el$126.style.setProperty("padding", _v$81) : _el$126.style.removeProperty("padding"));
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0,
-            o: void 0,
-            i: void 0,
-            n: void 0,
-            s: void 0,
-            h: void 0,
-            r: void 0,
-            d: void 0,
-            l: void 0,
-            u: void 0
-          });
+          );
           return _el$109;
-        }
+        },
       });
     };
     queryCacheMap = /* @__PURE__ */ new Map();
@@ -14832,20 +18718,29 @@ var init_Devtools = __esm({
       });
       return unsubscribe;
     };
-    createSubscribeToQueryCacheBatcher = (callback, equalityCheck = true, shouldUpdate = () => true) => {
+    createSubscribeToQueryCacheBatcher = (
+      callback,
+      equalityCheck = true,
+      shouldUpdate = () => true
+    ) => {
       const queryCache = createMemo(() => {
         const client = useQueryDevtoolsContext().client;
         return client.getQueryCache();
       });
-      const [value, setValue] = createSignal(callback(queryCache), !equalityCheck ? {
-        equals: false
-      } : void 0);
+      const [value, setValue] = createSignal(
+        callback(queryCache),
+        !equalityCheck
+          ? {
+              equals: false,
+            }
+          : void 0
+      );
       createEffect(() => {
         setValue(callback(queryCache));
       });
       queryCacheMap.set(callback, {
         setter: setValue,
-        shouldUpdate
+        shouldUpdate,
       });
       onCleanup(() => {
         queryCacheMap.delete(callback);
@@ -14871,14 +18766,22 @@ var init_Devtools = __esm({
       });
       return unsubscribe;
     };
-    createSubscribeToMutationCacheBatcher = (callback, equalityCheck = true) => {
+    createSubscribeToMutationCacheBatcher = (
+      callback,
+      equalityCheck = true
+    ) => {
       const mutationCache = createMemo(() => {
         const client = useQueryDevtoolsContext().client;
         return client.getMutationCache();
       });
-      const [value, setValue] = createSignal(callback(mutationCache), !equalityCheck ? {
-        equals: false
-      } : void 0);
+      const [value, setValue] = createSignal(
+        callback(mutationCache),
+        !equalityCheck
+          ? {
+              equals: false,
+            }
+          : void 0
+      );
       createEffect(() => {
         setValue(callback(mutationCache));
       });
@@ -14889,1070 +18792,1064 @@ var init_Devtools = __esm({
       return value;
     };
     DEV_TOOLS_EVENT = "@tanstack/query-devtools-event";
-    sendDevToolsEvent = ({
-      type,
-      queryHash,
-      metadata
-    }) => {
+    sendDevToolsEvent = ({ type, queryHash, metadata }) => {
       const event = new CustomEvent(DEV_TOOLS_EVENT, {
         detail: {
           type,
           queryHash,
-          metadata
+          metadata,
         },
         bubbles: true,
-        cancelable: true
+        cancelable: true,
       });
       window.dispatchEvent(event);
     };
     stylesFactory2 = (theme, css) => {
-      const {
-        colors,
-        font,
-        size: size3,
-        alpha,
-        shadow,
-        border
-      } = tokens;
-      const t2 = (light, dark) => theme === "light" ? light : dark;
+      const { colors, font, size: size3, alpha, shadow, border } = tokens;
+      const t2 = (light, dark) => (theme === "light" ? light : dark);
       return {
         devtoolsBtn: css`
-      z-index: 100000;
-      position: fixed;
-      padding: 4px;
-      text-align: left;
+          z-index: 100000;
+          position: fixed;
+          padding: 4px;
+          text-align: left;
 
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      border-radius: 9999px;
-      box-shadow: ${shadow.md()};
-      overflow: hidden;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          border-radius: 9999px;
+          box-shadow: ${shadow.md()};
+          overflow: hidden;
 
-      & div {
-        position: absolute;
-        top: -8px;
-        left: -8px;
-        right: -8px;
-        bottom: -8px;
-        border-radius: 9999px;
+          & div {
+            position: absolute;
+            top: -8px;
+            left: -8px;
+            right: -8px;
+            bottom: -8px;
+            border-radius: 9999px;
 
-        & svg {
-          position: absolute;
-          width: 100%;
-          height: 100%;
-        }
-        filter: blur(6px) saturate(1.2) contrast(1.1);
-      }
+            & svg {
+              position: absolute;
+              width: 100%;
+              height: 100%;
+            }
+            filter: blur(6px) saturate(1.2) contrast(1.1);
+          }
 
-      &:focus-within {
-        outline-offset: 2px;
-        outline: 3px solid ${colors.green[600]};
-      }
+          &:focus-within {
+            outline-offset: 2px;
+            outline: 3px solid ${colors.green[600]};
+          }
 
-      & button {
-        position: relative;
-        z-index: 1;
-        padding: 0;
-        border-radius: 9999px;
-        background-color: transparent;
-        border: none;
-        height: 40px;
-        display: flex;
-        width: 40px;
-        overflow: hidden;
-        cursor: pointer;
-        outline: none;
-        & svg {
-          position: absolute;
-          width: 100%;
-          height: 100%;
-        }
-      }
-    `,
+          & button {
+            position: relative;
+            z-index: 1;
+            padding: 0;
+            border-radius: 9999px;
+            background-color: transparent;
+            border: none;
+            height: 40px;
+            display: flex;
+            width: 40px;
+            overflow: hidden;
+            cursor: pointer;
+            outline: none;
+            & svg {
+              position: absolute;
+              width: 100%;
+              height: 100%;
+            }
+          }
+        `,
         panel: css`
-      position: fixed;
-      z-index: 9999;
-      display: flex;
-      gap: ${tokens.size[0.5]};
-      & * {
-        box-sizing: border-box;
-        text-transform: none;
-      }
+          position: fixed;
+          z-index: 9999;
+          display: flex;
+          gap: ${tokens.size[0.5]};
+          & * {
+            box-sizing: border-box;
+            text-transform: none;
+          }
 
-      & *::-webkit-scrollbar {
-        width: 7px;
-      }
+          & *::-webkit-scrollbar {
+            width: 7px;
+          }
 
-      & *::-webkit-scrollbar-track {
-        background: transparent;
-      }
+          & *::-webkit-scrollbar-track {
+            background: transparent;
+          }
 
-      & *::-webkit-scrollbar-thumb {
-        background: ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & *::-webkit-scrollbar-thumb {
+            background: ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & *::-webkit-scrollbar-thumb:hover {
-        background: ${t2(colors.gray[400], colors.darkGray[300])};
-      }
-    `,
+          & *::-webkit-scrollbar-thumb:hover {
+            background: ${t2(colors.gray[400], colors.darkGray[300])};
+          }
+        `,
         parentPanel: css`
-      z-index: 9999;
-      display: flex;
-      height: 100%;
-      gap: ${tokens.size[0.5]};
-      & * {
-        box-sizing: border-box;
-        text-transform: none;
-      }
+          z-index: 9999;
+          display: flex;
+          height: 100%;
+          gap: ${tokens.size[0.5]};
+          & * {
+            box-sizing: border-box;
+            text-transform: none;
+          }
 
-      & *::-webkit-scrollbar {
-        width: 7px;
-      }
+          & *::-webkit-scrollbar {
+            width: 7px;
+          }
 
-      & *::-webkit-scrollbar-track {
-        background: transparent;
-      }
+          & *::-webkit-scrollbar-track {
+            background: transparent;
+          }
 
-      & *::-webkit-scrollbar-thumb {
-        background: ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & *::-webkit-scrollbar-thumb {
+            background: ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & *::-webkit-scrollbar-thumb:hover {
-        background: ${t2(colors.gray[400], colors.darkGray[300])};
-      }
-    `,
+          & *::-webkit-scrollbar-thumb:hover {
+            background: ${t2(colors.gray[400], colors.darkGray[300])};
+          }
+        `,
         "devtoolsBtn-position-bottom-right": css`
-      bottom: 12px;
-      right: 12px;
-    `,
+          bottom: 12px;
+          right: 12px;
+        `,
         "devtoolsBtn-position-bottom-left": css`
-      bottom: 12px;
-      left: 12px;
-    `,
+          bottom: 12px;
+          left: 12px;
+        `,
         "devtoolsBtn-position-top-left": css`
-      top: 12px;
-      left: 12px;
-    `,
+          top: 12px;
+          left: 12px;
+        `,
         "devtoolsBtn-position-top-right": css`
-      top: 12px;
-      right: 12px;
-    `,
+          top: 12px;
+          right: 12px;
+        `,
         "devtoolsBtn-position-relative": css`
-      position: relative;
-    `,
+          position: relative;
+        `,
         "panel-position-top": css`
-      top: 0;
-      right: 0;
-      left: 0;
-      max-height: 90%;
-      min-height: ${size3[14]};
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-    `,
+          top: 0;
+          right: 0;
+          left: 0;
+          max-height: 90%;
+          min-height: ${size3[14]};
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+        `,
         "panel-position-bottom": css`
-      bottom: 0;
-      right: 0;
-      left: 0;
-      max-height: 90%;
-      min-height: ${size3[14]};
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-    `,
+          bottom: 0;
+          right: 0;
+          left: 0;
+          max-height: 90%;
+          min-height: ${size3[14]};
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+        `,
         "panel-position-right": css`
-      bottom: 0;
-      right: 0;
-      top: 0;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      max-width: 90%;
-    `,
+          bottom: 0;
+          right: 0;
+          top: 0;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          max-width: 90%;
+        `,
         "panel-position-left": css`
-      bottom: 0;
-      left: 0;
-      top: 0;
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      max-width: 90%;
-    `,
+          bottom: 0;
+          left: 0;
+          top: 0;
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          max-width: 90%;
+        `,
         closeBtn: css`
-      position: absolute;
-      cursor: pointer;
-      z-index: 5;
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      outline: none;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline: 2px solid ${colors.blue[600]};
-      }
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        width: ${size3[2]};
-        height: ${size3[2]};
-      }
-    `,
+          position: absolute;
+          cursor: pointer;
+          z-index: 5;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          outline: none;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline: 2px solid ${colors.blue[600]};
+          }
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            width: ${size3[2]};
+            height: ${size3[2]};
+          }
+        `,
         "closeBtn-position-top": css`
-      bottom: 0;
-      right: ${size3[2]};
-      transform: translate(0, 100%);
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: none;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: 0px 0px ${border.radius.sm} ${border.radius.sm};
-      padding: ${size3[0.5]} ${size3[1.5]} ${size3[1]} ${size3[1.5]};
+          bottom: 0;
+          right: ${size3[2]};
+          transform: translate(0, 100%);
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: none;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: 0px 0px ${border.radius.sm} ${border.radius.sm};
+          padding: ${size3[0.5]} ${size3[1.5]} ${size3[1]} ${size3[1.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        bottom: 100%;
-        left: -${size3[2.5]};
-        height: ${size3[1.5]};
-        width: calc(100% + ${size3[5]});
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            bottom: 100%;
+            left: -${size3[2.5]};
+            height: ${size3[1.5]};
+            width: calc(100% + ${size3[5]});
+          }
 
-      & svg {
-        transform: rotate(180deg);
-      }
-    `,
+          & svg {
+            transform: rotate(180deg);
+          }
+        `,
         "closeBtn-position-bottom": css`
-      top: 0;
-      right: ${size3[2]};
-      transform: translate(0, -100%);
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: none;
-      border-radius: ${border.radius.sm} ${border.radius.sm} 0px 0px;
-      padding: ${size3[1]} ${size3[1.5]} ${size3[0.5]} ${size3[1.5]};
+          top: 0;
+          right: ${size3[2]};
+          transform: translate(0, -100%);
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: none;
+          border-radius: ${border.radius.sm} ${border.radius.sm} 0px 0px;
+          padding: ${size3[1]} ${size3[1.5]} ${size3[0.5]} ${size3[1.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        top: 100%;
-        left: -${size3[2.5]};
-        height: ${size3[1.5]};
-        width: calc(100% + ${size3[5]});
-      }
-    `,
+          &::after {
+            content: " ";
+            position: absolute;
+            top: 100%;
+            left: -${size3[2.5]};
+            height: ${size3[1.5]};
+            width: calc(100% + ${size3[5]});
+          }
+        `,
         "closeBtn-position-right": css`
-      bottom: ${size3[2]};
-      left: 0;
-      transform: translate(-100%, 0);
-      border-right: none;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: ${border.radius.sm} 0px 0px ${border.radius.sm};
-      padding: ${size3[1.5]} ${size3[0.5]} ${size3[1.5]} ${size3[1]};
+          bottom: ${size3[2]};
+          left: 0;
+          transform: translate(-100%, 0);
+          border-right: none;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: ${border.radius.sm} 0px 0px ${border.radius.sm};
+          padding: ${size3[1.5]} ${size3[0.5]} ${size3[1.5]} ${size3[1]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        left: 100%;
-        height: calc(100% + ${size3[5]});
-        width: ${size3[1.5]};
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            left: 100%;
+            height: calc(100% + ${size3[5]});
+            width: ${size3[1.5]};
+          }
 
-      & svg {
-        transform: rotate(-90deg);
-      }
-    `,
+          & svg {
+            transform: rotate(-90deg);
+          }
+        `,
         "closeBtn-position-left": css`
-      bottom: ${size3[2]};
-      right: 0;
-      transform: translate(100%, 0);
-      border-left: none;
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: 0px ${border.radius.sm} ${border.radius.sm} 0px;
-      padding: ${size3[1.5]} ${size3[1]} ${size3[1.5]} ${size3[0.5]};
+          bottom: ${size3[2]};
+          right: 0;
+          transform: translate(100%, 0);
+          border-left: none;
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: 0px ${border.radius.sm} ${border.radius.sm} 0px;
+          padding: ${size3[1.5]} ${size3[1]} ${size3[1.5]} ${size3[0.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        right: 100%;
-        height: calc(100% + ${size3[5]});
-        width: ${size3[1.5]};
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            right: 100%;
+            height: calc(100% + ${size3[5]});
+            width: ${size3[1.5]};
+          }
 
-      & svg {
-        transform: rotate(90deg);
-      }
-    `,
+          & svg {
+            transform: rotate(90deg);
+          }
+        `,
         queriesContainer: css`
-      flex: 1 1 700px;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      display: flex;
-      flex-direction: column;
-      & * {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      }
-    `,
+          flex: 1 1 700px;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          display: flex;
+          flex-direction: column;
+          & * {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          }
+        `,
         dragHandle: css`
-      position: absolute;
-      transition: background-color 0.125s ease;
-      &:hover {
-        background-color: ${colors.purple[400]}${t2("", alpha[90])};
-      }
-      z-index: 4;
-    `,
+          position: absolute;
+          transition: background-color 0.125s ease;
+          &:hover {
+            background-color: ${colors.purple[400]}${t2("", alpha[90])};
+          }
+          z-index: 4;
+        `,
         "dragHandle-position-top": css`
-      bottom: 0;
-      width: 100%;
-      height: 3px;
-      cursor: ns-resize;
-    `,
+          bottom: 0;
+          width: 100%;
+          height: 3px;
+          cursor: ns-resize;
+        `,
         "dragHandle-position-bottom": css`
-      top: 0;
-      width: 100%;
-      height: 3px;
-      cursor: ns-resize;
-    `,
+          top: 0;
+          width: 100%;
+          height: 3px;
+          cursor: ns-resize;
+        `,
         "dragHandle-position-right": css`
-      left: 0;
-      width: 3px;
-      height: 100%;
-      cursor: ew-resize;
-    `,
+          left: 0;
+          width: 3px;
+          height: 100%;
+          cursor: ew-resize;
+        `,
         "dragHandle-position-left": css`
-      right: 0;
-      width: 3px;
-      height: 100%;
-      cursor: ew-resize;
-    `,
+          right: 0;
+          width: 3px;
+          height: 100%;
+          cursor: ew-resize;
+        `,
         row: css`
-      display: flex;
-      justify-content: space-between;
-      align-items: center;
-      padding: ${tokens.size[2]} ${tokens.size[2.5]};
-      gap: ${tokens.size[2.5]};
-      border-bottom: ${t2(colors.gray[300], colors.darkGray[500])} 1px solid;
-      align-items: center;
-      & > button {
-        padding: 0;
-        background: transparent;
-        border: none;
-        display: flex;
-        gap: ${size3[0.5]};
-        flex-direction: column;
-      }
-    `,
+          display: flex;
+          justify-content: space-between;
+          align-items: center;
+          padding: ${tokens.size[2]} ${tokens.size[2.5]};
+          gap: ${tokens.size[2.5]};
+          border-bottom: ${t2(colors.gray[300], colors.darkGray[500])} 1px solid;
+          align-items: center;
+          & > button {
+            padding: 0;
+            background: transparent;
+            border: none;
+            display: flex;
+            gap: ${size3[0.5]};
+            flex-direction: column;
+          }
+        `,
         logoAndToggleContainer: css`
-      display: flex;
-      gap: ${tokens.size[3]};
-      align-items: center;
-    `,
+          display: flex;
+          gap: ${tokens.size[3]};
+          align-items: center;
+        `,
         logo: css`
-      cursor: pointer;
-      display: flex;
-      flex-direction: column;
-      background-color: transparent;
-      border: none;
-      gap: ${tokens.size[0.5]};
-      padding: 0px;
-      &:hover {
-        opacity: 0.7;
-      }
-      &:focus-visible {
-        outline-offset: 4px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          cursor: pointer;
+          display: flex;
+          flex-direction: column;
+          background-color: transparent;
+          border: none;
+          gap: ${tokens.size[0.5]};
+          padding: 0px;
+          &:hover {
+            opacity: 0.7;
+          }
+          &:focus-visible {
+            outline-offset: 4px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         tanstackLogo: css`
-      font-size: ${font.size.md};
-      font-weight: ${font.weight.bold};
-      line-height: ${font.lineHeight.xs};
-      white-space: nowrap;
-      color: ${t2(colors.gray[600], colors.gray[300])};
-    `,
+          font-size: ${font.size.md};
+          font-weight: ${font.weight.bold};
+          line-height: ${font.lineHeight.xs};
+          white-space: nowrap;
+          color: ${t2(colors.gray[600], colors.gray[300])};
+        `,
         queryFlavorLogo: css`
-      font-weight: ${font.weight.semibold};
-      font-size: ${font.size.xs};
-      background: linear-gradient(
-        to right,
-        ${t2("#ea4037, #ff9b11", "#dd524b, #e9a03b")}
-      );
-      background-clip: text;
-      -webkit-background-clip: text;
-      line-height: 1;
-      -webkit-text-fill-color: transparent;
-      white-space: nowrap;
-    `,
+          font-weight: ${font.weight.semibold};
+          font-size: ${font.size.xs};
+          background: linear-gradient(
+            to right,
+            ${t2("#ea4037, #ff9b11", "#dd524b, #e9a03b")}
+          );
+          background-clip: text;
+          -webkit-background-clip: text;
+          line-height: 1;
+          -webkit-text-fill-color: transparent;
+          white-space: nowrap;
+        `,
         queryStatusContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-      height: min-content;
-    `,
+          display: flex;
+          gap: ${tokens.size[2]};
+          height: min-content;
+        `,
         queryStatusTag: css`
-      display: flex;
-      gap: ${tokens.size[1.5]};
-      box-sizing: border-box;
-      height: ${tokens.size[6.5]};
-      background: ${t2(colors.gray[50], colors.darkGray[500])};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      border-radius: ${tokens.border.radius.sm};
-      font-size: ${font.size.sm};
-      padding: ${tokens.size[1]};
-      padding-left: ${tokens.size[1.5]};
-      align-items: center;
-      font-weight: ${font.weight.medium};
-      border: ${t2("1px solid " + colors.gray[300], "1px solid transparent")};
-      user-select: none;
-      position: relative;
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          display: flex;
+          gap: ${tokens.size[1.5]};
+          box-sizing: border-box;
+          height: ${tokens.size[6.5]};
+          background: ${t2(colors.gray[50], colors.darkGray[500])};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          border-radius: ${tokens.border.radius.sm};
+          font-size: ${font.size.sm};
+          padding: ${tokens.size[1]};
+          padding-left: ${tokens.size[1.5]};
+          align-items: center;
+          font-weight: ${font.weight.medium};
+          border: ${t2(
+            "1px solid " + colors.gray[300],
+            "1px solid transparent"
+          )};
+          user-select: none;
+          position: relative;
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         queryStatusTagLabel: css`
-      font-size: ${font.size.xs};
-    `,
+          font-size: ${font.size.xs};
+        `,
         queryStatusCount: css`
-      font-size: ${font.size.xs};
-      padding: 0 5px;
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      color: ${t2(colors.gray[500], colors.gray[400])};
-      background-color: ${t2(colors.gray[200], colors.darkGray[300])};
-      border-radius: 2px;
-      font-variant-numeric: tabular-nums;
-      height: ${tokens.size[4.5]};
-    `,
+          font-size: ${font.size.xs};
+          padding: 0 5px;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          color: ${t2(colors.gray[500], colors.gray[400])};
+          background-color: ${t2(colors.gray[200], colors.darkGray[300])};
+          border-radius: 2px;
+          font-variant-numeric: tabular-nums;
+          height: ${tokens.size[4.5]};
+        `,
         statusTooltip: css`
-      position: absolute;
-      z-index: 1;
-      background-color: ${t2(colors.gray[50], colors.darkGray[500])};
-      top: 100%;
-      left: 50%;
-      transform: translate(-50%, calc(${tokens.size[2]}));
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      border-radius: ${tokens.border.radius.sm};
-      font-size: ${font.size.xs};
-      border: 1px solid ${t2(colors.gray[400], colors.gray[600])};
-      color: ${t2(colors["gray"][600], colors["gray"][300])};
+          position: absolute;
+          z-index: 1;
+          background-color: ${t2(colors.gray[50], colors.darkGray[500])};
+          top: 100%;
+          left: 50%;
+          transform: translate(-50%, calc(${tokens.size[2]}));
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          border-radius: ${tokens.border.radius.sm};
+          font-size: ${font.size.xs};
+          border: 1px solid ${t2(colors.gray[400], colors.gray[600])};
+          color: ${t2(colors["gray"][600], colors["gray"][300])};
 
-      &::before {
-        top: 0px;
-        content: ' ';
-        display: block;
-        left: 50%;
-        transform: translate(-50%, -100%);
-        position: absolute;
-        border-color: transparent transparent
-          ${t2(colors.gray[400], colors.gray[600])} transparent;
-        border-style: solid;
-        border-width: 7px;
-        /* transform: rotate(180deg); */
-      }
+          &::before {
+            top: 0px;
+            content: " ";
+            display: block;
+            left: 50%;
+            transform: translate(-50%, -100%);
+            position: absolute;
+            border-color: transparent transparent
+              ${t2(colors.gray[400], colors.gray[600])} transparent;
+            border-style: solid;
+            border-width: 7px;
+            /* transform: rotate(180deg); */
+          }
 
-      &::after {
-        top: 0px;
-        content: ' ';
-        display: block;
-        left: 50%;
-        transform: translate(-50%, calc(-100% + 2px));
-        position: absolute;
-        border-color: transparent transparent
-          ${t2(colors.gray[100], colors.darkGray[500])} transparent;
-        border-style: solid;
-        border-width: 7px;
-      }
-    `,
+          &::after {
+            top: 0px;
+            content: " ";
+            display: block;
+            left: 50%;
+            transform: translate(-50%, calc(-100% + 2px));
+            position: absolute;
+            border-color: transparent transparent
+              ${t2(colors.gray[100], colors.darkGray[500])} transparent;
+            border-style: solid;
+            border-width: 7px;
+          }
+        `,
         filtersContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-      & > button {
-        cursor: pointer;
-        padding: ${tokens.size[0.5]} ${tokens.size[1.5]} ${tokens.size[0.5]}
-          ${tokens.size[2]};
-        border-radius: ${tokens.border.radius.sm};
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        font-size: ${font.size.xs};
-        display: flex;
-        align-items: center;
-        line-height: ${font.lineHeight.sm};
-        gap: ${tokens.size[1.5]};
-        max-width: 160px;
-        &:focus-visible {
-          outline-offset: 2px;
-          border-radius: ${border.radius.xs};
-          outline: 2px solid ${colors.blue[800]};
-        }
-        & svg {
-          width: ${tokens.size[3]};
-          height: ${tokens.size[3]};
-          color: ${t2(colors.gray[500], colors.gray[400])};
-        }
-      }
-    `,
-        filterInput: css`
-      padding: ${size3[0.5]} ${size3[2]};
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      display: flex;
-      box-sizing: content-box;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      max-width: 160px;
-      min-width: 100px;
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      height: min-content;
-      color: ${t2(colors.gray[600], colors.gray[400])};
-      & > svg {
-        width: ${size3[3]};
-        height: ${size3[3]};
-      }
-      & input {
-        font-size: ${font.size.xs};
-        width: 100%;
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: none;
-        padding: 0;
-        line-height: ${font.lineHeight.sm};
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        &::placeholder {
-          color: ${t2(colors.gray[700], colors.gray[300])};
-        }
-        &:focus {
-          outline: none;
-        }
-      }
+          display: flex;
+          gap: ${tokens.size[2]};
+          & > button {
+            cursor: pointer;
+            padding: ${tokens.size[0.5]} ${tokens.size[1.5]} ${tokens.size[0.5]}
+              ${tokens.size[2]};
+            border-radius: ${tokens.border.radius.sm};
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            font-size: ${font.size.xs};
+            display: flex;
+            align-items: center;
+            line-height: ${font.lineHeight.sm};
+            gap: ${tokens.size[1.5]};
+            max-width: 160px;
+            &:focus-visible {
+              outline-offset: 2px;
+              border-radius: ${border.radius.xs};
+              outline: 2px solid ${colors.blue[800]};
+            }
+            & svg {
+              width: ${tokens.size[3]};
+              height: ${tokens.size[3]};
+              color: ${t2(colors.gray[500], colors.gray[400])};
+            }
+          }
+        `,
+        filterInput: css`
+          padding: ${size3[0.5]} ${size3[2]};
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          display: flex;
+          box-sizing: content-box;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          max-width: 160px;
+          min-width: 100px;
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          height: min-content;
+          color: ${t2(colors.gray[600], colors.gray[400])};
+          & > svg {
+            width: ${size3[3]};
+            height: ${size3[3]};
+          }
+          & input {
+            font-size: ${font.size.xs};
+            width: 100%;
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: none;
+            padding: 0;
+            line-height: ${font.lineHeight.sm};
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            &::placeholder {
+              color: ${t2(colors.gray[700], colors.gray[300])};
+            }
+            &:focus {
+              outline: none;
+            }
+          }
 
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         filterSelect: css`
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      display: flex;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      box-sizing: content-box;
-      max-width: 160px;
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      height: min-content;
-      & > svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-      & > select {
-        appearance: none;
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        min-width: 100px;
-        line-height: ${font.lineHeight.sm};
-        font-size: ${font.size.xs};
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: none;
-        &:focus {
-          outline: none;
-        }
-      }
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          display: flex;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          box-sizing: content-box;
+          max-width: 160px;
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          height: min-content;
+          & > svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+          & > select {
+            appearance: none;
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            min-width: 100px;
+            line-height: ${font.lineHeight.sm};
+            font-size: ${font.size.xs};
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: none;
+            &:focus {
+              outline: none;
+            }
+          }
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         actionsContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-    `,
+          display: flex;
+          gap: ${tokens.size[2]};
+        `,
         actionsBtn: css`
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      width: ${tokens.size[6.5]};
-      height: ${tokens.size[6.5]};
-      justify-content: center;
-      display: flex;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      max-width: 160px;
-      cursor: pointer;
-      padding: 0;
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      & svg {
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        width: ${tokens.size[3]};
-        height: ${tokens.size[3]};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          width: ${tokens.size[6.5]};
+          height: ${tokens.size[6.5]};
+          justify-content: center;
+          display: flex;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          max-width: 160px;
+          cursor: pointer;
+          padding: 0;
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          & svg {
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            width: ${tokens.size[3]};
+            height: ${tokens.size[3]};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         actionsBtnOffline: css`
-      & svg {
-        stroke: ${t2(colors.yellow[700], colors.yellow[500])};
-        fill: ${t2(colors.yellow[700], colors.yellow[500])};
-      }
-    `,
+          & svg {
+            stroke: ${t2(colors.yellow[700], colors.yellow[500])};
+            fill: ${t2(colors.yellow[700], colors.yellow[500])};
+          }
+        `,
         overflowQueryContainer: css`
-      flex: 1;
-      overflow-y: auto;
-      & > div {
-        display: flex;
-        flex-direction: column;
-      }
-    `,
+          flex: 1;
+          overflow-y: auto;
+          & > div {
+            display: flex;
+            flex-direction: column;
+          }
+        `,
         queryRow: css`
-      display: flex;
-      align-items: center;
-      padding: 0;
-      border: none;
-      cursor: pointer;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      line-height: 1;
-      &:focus {
-        outline: none;
-      }
-      &:focus-visible {
-        outline-offset: -2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &:hover .tsqd-query-hash {
-        background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      }
+          display: flex;
+          align-items: center;
+          padding: 0;
+          border: none;
+          cursor: pointer;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          line-height: 1;
+          &:focus {
+            outline: none;
+          }
+          &:focus-visible {
+            outline-offset: -2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &:hover .tsqd-query-hash {
+            background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          }
 
-      & .tsqd-query-observer-count {
-        padding: 0 ${tokens.size[1]};
-        user-select: none;
-        min-width: ${tokens.size[6.5]};
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        font-size: ${font.size.xs};
-        font-weight: ${font.weight.medium};
-        border-bottom-width: 1px;
-        border-bottom-style: solid;
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[700])};
-      }
-      & .tsqd-query-hash {
-        user-select: text;
-        font-size: ${font.size.xs};
-        display: flex;
-        align-items: center;
-        min-height: ${tokens.size[6]};
-        flex: 1;
-        padding: ${tokens.size[1]} ${tokens.size[2]};
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        text-align: left;
-        text-overflow: clip;
-        word-break: break-word;
-      }
+          & .tsqd-query-observer-count {
+            padding: 0 ${tokens.size[1]};
+            user-select: none;
+            min-width: ${tokens.size[6.5]};
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            justify-content: center;
+            font-size: ${font.size.xs};
+            font-weight: ${font.weight.medium};
+            border-bottom-width: 1px;
+            border-bottom-style: solid;
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[700])};
+          }
+          & .tsqd-query-hash {
+            user-select: text;
+            font-size: ${font.size.xs};
+            display: flex;
+            align-items: center;
+            min-height: ${tokens.size[6]};
+            flex: 1;
+            padding: ${tokens.size[1]} ${tokens.size[2]};
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[400])};
+            text-align: left;
+            text-overflow: clip;
+            word-break: break-word;
+          }
 
-      & .tsqd-query-disabled-indicator {
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        padding: 0 ${tokens.size[2]};
-        color: ${t2(colors.gray[800], colors.gray[300])};
-        background-color: ${t2(colors.gray[300], colors.darkGray[600])};
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        font-size: ${font.size.xs};
-      }
+          & .tsqd-query-disabled-indicator {
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            padding: 0 ${tokens.size[2]};
+            color: ${t2(colors.gray[800], colors.gray[300])};
+            background-color: ${t2(colors.gray[300], colors.darkGray[600])};
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[400])};
+            font-size: ${font.size.xs};
+          }
 
-      & .tsqd-query-static-indicator {
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        padding: 0 ${tokens.size[2]};
-        color: ${t2(colors.teal[800], colors.teal[300])};
-        background-color: ${t2(colors.teal[100], colors.teal[900])};
-        border-bottom: 1px solid ${t2(colors.teal[300], colors.teal[700])};
-        font-size: ${font.size.xs};
-      }
-    `,
+          & .tsqd-query-static-indicator {
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            padding: 0 ${tokens.size[2]};
+            color: ${t2(colors.teal[800], colors.teal[300])};
+            background-color: ${t2(colors.teal[100], colors.teal[900])};
+            border-bottom: 1px solid ${t2(colors.teal[300], colors.teal[700])};
+            font-size: ${font.size.xs};
+          }
+        `,
         selectedQueryRow: css`
-      background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-    `,
+          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+        `,
         detailsContainer: css`
-      flex: 1 1 700px;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      display: flex;
-      flex-direction: column;
-      overflow-y: auto;
-      display: flex;
-      text-align: left;
-    `,
+          flex: 1 1 700px;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          display: flex;
+          flex-direction: column;
+          overflow-y: auto;
+          display: flex;
+          text-align: left;
+        `,
         detailsHeader: css`
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      position: sticky;
-      top: 0;
-      z-index: 2;
-      background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      padding: ${tokens.size[1.5]} ${tokens.size[2]};
-      font-weight: ${font.weight.medium};
-      font-size: ${font.size.xs};
-      line-height: ${font.lineHeight.xs};
-      text-align: left;
-    `,
-        detailsBody: css`
-      margin: ${tokens.size[1.5]} 0px ${tokens.size[2]} 0px;
-      & > div {
-        display: flex;
-        align-items: stretch;
-        padding: 0 ${tokens.size[2]};
-        line-height: ${font.lineHeight.sm};
-        justify-content: space-between;
-        & > span {
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          position: sticky;
+          top: 0;
+          z-index: 2;
+          background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          padding: ${tokens.size[1.5]} ${tokens.size[2]};
+          font-weight: ${font.weight.medium};
           font-size: ${font.size.xs};
-        }
-        & > span:nth-child(2) {
-          font-variant-numeric: tabular-nums;
-        }
-      }
+          line-height: ${font.lineHeight.xs};
+          text-align: left;
+        `,
+        detailsBody: css`
+          margin: ${tokens.size[1.5]} 0px ${tokens.size[2]} 0px;
+          & > div {
+            display: flex;
+            align-items: stretch;
+            padding: 0 ${tokens.size[2]};
+            line-height: ${font.lineHeight.sm};
+            justify-content: space-between;
+            & > span {
+              font-size: ${font.size.xs};
+            }
+            & > span:nth-child(2) {
+              font-variant-numeric: tabular-nums;
+            }
+          }
 
-      & > div:first-child {
-        margin-bottom: ${tokens.size[1.5]};
-      }
+          & > div:first-child {
+            margin-bottom: ${tokens.size[1.5]};
+          }
 
-      & code {
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-        margin: 0;
-        font-size: ${font.size.xs};
-        line-height: ${font.lineHeight.xs};
-      }
+          & code {
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+            margin: 0;
+            font-size: ${font.size.xs};
+            line-height: ${font.lineHeight.xs};
+          }
 
-      & pre {
-        margin: 0;
-        display: flex;
-        align-items: center;
-      }
-    `,
+          & pre {
+            margin: 0;
+            display: flex;
+            align-items: center;
+          }
+        `,
         queryDetailsStatus: css`
-      border: 1px solid ${colors.darkGray[200]};
-      border-radius: ${tokens.border.radius.sm};
-      font-weight: ${font.weight.medium};
-      padding: ${tokens.size[1]} ${tokens.size[2.5]};
-    `,
+          border: 1px solid ${colors.darkGray[200]};
+          border-radius: ${tokens.border.radius.sm};
+          font-weight: ${font.weight.medium};
+          padding: ${tokens.size[1]} ${tokens.size[2.5]};
+        `,
         actionsBody: css`
-      flex-wrap: wrap;
-      margin: ${tokens.size[2]} 0px ${tokens.size[2]} 0px;
-      display: flex;
-      gap: ${tokens.size[2]};
-      padding: 0px ${tokens.size[2]};
-      & > button {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-        font-size: ${font.size.xs};
-        padding: ${tokens.size[1]} ${tokens.size[2]};
-        display: flex;
-        border-radius: ${tokens.border.radius.sm};
-        background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-        border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        align-items: center;
-        gap: ${tokens.size[2]};
-        font-weight: ${font.weight.medium};
-        line-height: ${font.lineHeight.xs};
-        cursor: pointer;
-        &:focus-visible {
-          outline-offset: 2px;
-          border-radius: ${border.radius.xs};
-          outline: 2px solid ${colors.blue[800]};
-        }
-        &:hover {
-          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-        }
+          flex-wrap: wrap;
+          margin: ${tokens.size[2]} 0px ${tokens.size[2]} 0px;
+          display: flex;
+          gap: ${tokens.size[2]};
+          padding: 0px ${tokens.size[2]};
+          & > button {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+            font-size: ${font.size.xs};
+            padding: ${tokens.size[1]} ${tokens.size[2]};
+            display: flex;
+            border-radius: ${tokens.border.radius.sm};
+            background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+            border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+            align-items: center;
+            gap: ${tokens.size[2]};
+            font-weight: ${font.weight.medium};
+            line-height: ${font.lineHeight.xs};
+            cursor: pointer;
+            &:focus-visible {
+              outline-offset: 2px;
+              border-radius: ${border.radius.xs};
+              outline: 2px solid ${colors.blue[800]};
+            }
+            &:hover {
+              background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+            }
 
-        &:disabled {
-          opacity: 0.6;
-          cursor: not-allowed;
-        }
+            &:disabled {
+              opacity: 0.6;
+              cursor: not-allowed;
+            }
 
-        & > span {
-          width: ${size3[1.5]};
-          height: ${size3[1.5]};
-          border-radius: ${tokens.border.radius.full};
-        }
-      }
-    `,
+            & > span {
+              width: ${size3[1.5]};
+              height: ${size3[1.5]};
+              border-radius: ${tokens.border.radius.full};
+            }
+          }
+        `,
         actionsSelect: css`
-      font-size: ${font.size.xs};
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      display: flex;
-      border-radius: ${tokens.border.radius.sm};
-      overflow: hidden;
-      background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      align-items: center;
-      gap: ${tokens.size[2]};
-      font-weight: ${font.weight.medium};
-      line-height: ${font.lineHeight.sm};
-      color: ${t2(colors.red[500], colors.red[400])};
-      cursor: pointer;
-      position: relative;
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      & > span {
-        width: ${size3[1.5]};
-        height: ${size3[1.5]};
-        border-radius: ${tokens.border.radius.full};
-      }
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      & select {
-        position: absolute;
-        top: 0;
-        left: 0;
-        width: 100%;
-        height: 100%;
-        appearance: none;
-        background-color: transparent;
-        border: none;
-        color: transparent;
-        outline: none;
-      }
+          font-size: ${font.size.xs};
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          display: flex;
+          border-radius: ${tokens.border.radius.sm};
+          overflow: hidden;
+          background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          align-items: center;
+          gap: ${tokens.size[2]};
+          font-weight: ${font.weight.medium};
+          line-height: ${font.lineHeight.sm};
+          color: ${t2(colors.red[500], colors.red[400])};
+          cursor: pointer;
+          position: relative;
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          & > span {
+            width: ${size3[1.5]};
+            height: ${size3[1.5]};
+            border-radius: ${tokens.border.radius.full};
+          }
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          & select {
+            position: absolute;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            appearance: none;
+            background-color: transparent;
+            border: none;
+            color: transparent;
+            outline: none;
+          }
 
-      & svg path {
-        stroke: ${tokens.colors.red[400]};
-      }
-      & svg {
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-    `,
+          & svg path {
+            stroke: ${tokens.colors.red[400]};
+          }
+          & svg {
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+        `,
         settingsMenu: css`
-      display: flex;
-      & * {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      }
-      flex-direction: column;
-      gap: ${size3[0.5]};
-      border-radius: ${tokens.border.radius.sm};
-      border: 1px solid ${t2(colors.gray[300], colors.gray[700])};
-      background-color: ${t2(colors.gray[50], colors.darkGray[600])};
-      font-size: ${font.size.xs};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      z-index: 99999;
-      min-width: 120px;
-      padding: ${size3[0.5]};
-    `,
+          display: flex;
+          & * {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          }
+          flex-direction: column;
+          gap: ${size3[0.5]};
+          border-radius: ${tokens.border.radius.sm};
+          border: 1px solid ${t2(colors.gray[300], colors.gray[700])};
+          background-color: ${t2(colors.gray[50], colors.darkGray[600])};
+          font-size: ${font.size.xs};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          z-index: 99999;
+          min-width: 120px;
+          padding: ${size3[0.5]};
+        `,
         settingsSubTrigger: css`
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      border-radius: ${tokens.border.radius.xs};
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      cursor: pointer;
-      background-color: transparent;
-      border: none;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        transform: rotate(-90deg);
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &.data-disabled {
-        opacity: 0.6;
-        cursor: not-allowed;
-      }
-    `,
+          display: flex;
+          align-items: center;
+          justify-content: space-between;
+          border-radius: ${tokens.border.radius.xs};
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          cursor: pointer;
+          background-color: transparent;
+          border: none;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            transform: rotate(-90deg);
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &.data-disabled {
+            opacity: 0.6;
+            cursor: not-allowed;
+          }
+        `,
         settingsMenuHeader: css`
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      font-weight: ${font.weight.medium};
-      border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      color: ${t2(colors.gray[500], colors.gray[400])};
-      font-size: ${font.size["xs"]};
-    `,
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          font-weight: ${font.weight.medium};
+          border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          color: ${t2(colors.gray[500], colors.gray[400])};
+          font-size: ${font.size["xs"]};
+        `,
         settingsSubButton: css`
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      font-size: ${font.size["xs"]};
-      border-radius: ${tokens.border.radius.xs};
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      cursor: pointer;
-      background-color: transparent;
-      border: none;
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          display: flex;
+          align-items: center;
+          justify-content: space-between;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          font-size: ${font.size["xs"]};
+          border-radius: ${tokens.border.radius.xs};
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          cursor: pointer;
+          background-color: transparent;
+          border: none;
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         themeSelectedButton: css`
-      background-color: ${t2(colors.purple[100], colors.purple[900])};
-      color: ${t2(colors.purple[700], colors.purple[300])};
-      & svg {
-        color: ${t2(colors.purple[700], colors.purple[300])};
-      }
-      &:hover {
-        background-color: ${t2(colors.purple[100], colors.purple[900])};
-      }
-    `,
+          background-color: ${t2(colors.purple[100], colors.purple[900])};
+          color: ${t2(colors.purple[700], colors.purple[300])};
+          & svg {
+            color: ${t2(colors.purple[700], colors.purple[300])};
+          }
+          &:hover {
+            background-color: ${t2(colors.purple[100], colors.purple[900])};
+          }
+        `,
         viewToggle: css`
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      display: flex;
-      padding: 0;
-      font-size: ${font.size.xs};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      overflow: hidden;
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          display: flex;
+          padding: 0;
+          font-size: ${font.size.xs};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          overflow: hidden;
 
-      &:has(:focus-visible) {
-        outline: 2px solid ${colors.blue[800]};
-      }
+          &:has(:focus-visible) {
+            outline: 2px solid ${colors.blue[800]};
+          }
 
-      & .tsqd-radio-toggle {
-        opacity: 0.5;
-        display: flex;
-        & label {
-          display: flex;
-          align-items: center;
-          cursor: pointer;
-          line-height: ${font.lineHeight.md};
-        }
+          & .tsqd-radio-toggle {
+            opacity: 0.5;
+            display: flex;
+            & label {
+              display: flex;
+              align-items: center;
+              cursor: pointer;
+              line-height: ${font.lineHeight.md};
+            }
 
-        & label:hover {
-          background-color: ${t2(colors.gray[100], colors.darkGray[500])};
-        }
-      }
+            & label:hover {
+              background-color: ${t2(colors.gray[100], colors.darkGray[500])};
+            }
+          }
 
-      & > [data-checked] {
-        opacity: 1;
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        & label:hover {
-          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        }
-      }
+          & > [data-checked] {
+            opacity: 1;
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            & label:hover {
+              background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            }
+          }
 
-      & .tsqd-radio-toggle:first-child {
-        & label {
-          padding: 0 ${tokens.size[1.5]} 0 ${tokens.size[2]};
-        }
-        border-right: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & .tsqd-radio-toggle:first-child {
+            & label {
+              padding: 0 ${tokens.size[1.5]} 0 ${tokens.size[2]};
+            }
+            border-right: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & .tsqd-radio-toggle:nth-child(2) {
-        & label {
-          padding: 0 ${tokens.size[2]} 0 ${tokens.size[1.5]};
-        }
-      }
-    `,
+          & .tsqd-radio-toggle:nth-child(2) {
+            & label {
+              padding: 0 ${tokens.size[2]} 0 ${tokens.size[1.5]};
+            }
+          }
+        `,
         devtoolsEditForm: css`
-      padding: ${size3[2]};
-      & > [data-error='true'] {
-        outline: 2px solid ${t2(colors.red[200], colors.red[800])};
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-      }
-    `,
+          padding: ${size3[2]};
+          & > [data-error="true"] {
+            outline: 2px solid ${t2(colors.red[200], colors.red[800])};
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+          }
+        `,
         devtoolsEditTextarea: css`
-      width: 100%;
-      max-height: 500px;
-      font-family: 'Fira Code', monospace;
-      font-size: ${font.size.xs};
-      border-radius: ${border.radius.sm};
-      field-sizing: content;
-      padding: ${size3[2]};
-      background-color: ${t2(colors.gray[100], colors.darkGray[800])};
-      color: ${t2(colors.gray[900], colors.gray[100])};
-      border: 1px solid ${t2(colors.gray[200], colors.gray[700])};
-      resize: none;
-      &:focus {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${t2(colors.blue[200], colors.blue[800])};
-      }
-    `,
+          width: 100%;
+          max-height: 500px;
+          font-family: "Fira Code", monospace;
+          font-size: ${font.size.xs};
+          border-radius: ${border.radius.sm};
+          field-sizing: content;
+          padding: ${size3[2]};
+          background-color: ${t2(colors.gray[100], colors.darkGray[800])};
+          color: ${t2(colors.gray[900], colors.gray[100])};
+          border: 1px solid ${t2(colors.gray[200], colors.gray[700])};
+          resize: none;
+          &:focus {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${t2(colors.blue[200], colors.blue[800])};
+          }
+        `,
         devtoolsEditFormActions: css`
-      display: flex;
-      justify-content: space-between;
-      gap: ${size3[2]};
-      align-items: center;
-      padding-top: ${size3[1]};
-      font-size: ${font.size.xs};
-    `,
+          display: flex;
+          justify-content: space-between;
+          gap: ${size3[2]};
+          align-items: center;
+          padding-top: ${size3[1]};
+          font-size: ${font.size.xs};
+        `,
         devtoolsEditFormError: css`
-      color: ${t2(colors.red[700], colors.red[500])};
-    `,
+          color: ${t2(colors.red[700], colors.red[500])};
+        `,
         devtoolsEditFormActionContainer: css`
-      display: flex;
-      gap: ${size3[2]};
-    `,
+          display: flex;
+          gap: ${size3[2]};
+        `,
         devtoolsEditFormAction: css`
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      font-size: ${font.size.xs};
-      padding: ${size3[1]} ${tokens.size[2]};
-      display: flex;
-      border-radius: ${border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      align-items: center;
-      gap: ${size3[2]};
-      font-weight: ${font.weight.medium};
-      line-height: ${font.lineHeight.xs};
-      cursor: pointer;
-      &:focus-visible {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          font-size: ${font.size.xs};
+          padding: ${size3[1]} ${tokens.size[2]};
+          display: flex;
+          border-radius: ${border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          align-items: center;
+          gap: ${size3[2]};
+          font-weight: ${font.weight.medium};
+          line-height: ${font.lineHeight.xs};
+          cursor: pointer;
+          &:focus-visible {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
 
-      &:disabled {
-        opacity: 0.6;
-        cursor: not-allowed;
-      }
-    `
+          &:disabled {
+            opacity: 0.6;
+            cursor: not-allowed;
+          }
+        `,
       };
     };
     lightStyles2 = (css) => stylesFactory2("light", css);
     darkStyles2 = (css) => stylesFactory2("dark", css);
     delegateEvents(["click", "mousedown", "input"]);
-  }
+  },
 });
 
 // src/DevtoolsComponent.tsx
 var DevtoolsComponent_exports = {};
 __export(DevtoolsComponent_exports, {
-  default: () => DevtoolsComponent_default
+  default: () => DevtoolsComponent_default,
 });
 var DevtoolsComponent, DevtoolsComponent_default;
 var init_DevtoolsComponent = __esm({
@@ -15966,7 +19863,7 @@ var init_DevtoolsComponent = __esm({
     init_contexts();
     DevtoolsComponent = (props) => {
       const [localStore, setLocalStore] = createLocalStorage({
-        prefix: "TanstackQueryDevtools"
+        prefix: "TanstackQueryDevtools",
       });
       const colorScheme = getPreferredColorScheme();
       const theme = createMemo(() => {
@@ -15986,23 +19883,23 @@ var init_DevtoolsComponent = __esm({
                 get children() {
                   return createComponent(Devtools, {
                     localStore,
-                    setLocalStore
+                    setLocalStore,
                   });
-                }
+                },
               });
-            }
+            },
           });
-        }
+        },
       });
     };
     DevtoolsComponent_default = DevtoolsComponent;
-  }
+  },
 });
 
 // src/DevtoolsPanelComponent.tsx
 var DevtoolsPanelComponent_exports = {};
 __export(DevtoolsPanelComponent_exports, {
-  default: () => DevtoolsPanelComponent_default
+  default: () => DevtoolsPanelComponent_default,
 });
 var DevtoolsPanelComponent, DevtoolsPanelComponent_default;
 var init_DevtoolsPanelComponent = __esm({
@@ -16016,7 +19913,7 @@ var init_DevtoolsPanelComponent = __esm({
     init_contexts();
     DevtoolsPanelComponent = (props) => {
       const [localStore, setLocalStore] = createLocalStorage({
-        prefix: "TanstackQueryDevtools"
+        prefix: "TanstackQueryDevtools",
       });
       const colorScheme = getPreferredColorScheme();
       const theme = createMemo(() => {
@@ -16043,19 +19940,19 @@ var init_DevtoolsPanelComponent = __esm({
                         get onClose() {
                           return props.onClose;
                         },
-                        showPanelViewOnly: true
+                        showPanelViewOnly: true,
                       });
-                    }
+                    },
                   });
-                }
+                },
               });
-            }
+            },
           });
-        }
+        },
       });
     };
     DevtoolsPanelComponent_default = DevtoolsPanelComponent;
-  }
+  },
 });
 
 // src/TanstackQueryDevtools.tsx
@@ -16089,7 +19986,7 @@ exports.TanstackQueryDevtools = class TanstackQueryDevtools {
       initialIsOpen,
       errorTypes,
       styleNonce,
-      shadowDOMTarget
+      shadowDOMTarget,
     } = config;
     this.#client = createSignal(client);
     this.#queryFlavor = queryFlavor;
@@ -16132,40 +20029,50 @@ exports.TanstackQueryDevtools = class TanstackQueryDevtools {
       if (this.#Component) {
         Devtools2 = this.#Component;
       } else {
-        Devtools2 = lazy(() => Promise.resolve().then(() => (init_DevtoolsComponent(), DevtoolsComponent_exports)));
+        Devtools2 = lazy(() =>
+          Promise.resolve().then(
+            () => (init_DevtoolsComponent(), DevtoolsComponent_exports)
+          )
+        );
         this.#Component = Devtools2;
       }
       setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);
-      return createComponent(Devtools2, mergeProps({
-        get queryFlavor() {
-          return _self$.#queryFlavor;
-        },
-        get version() {
-          return _self$.#version;
-        },
-        get onlineManager() {
-          return _self$.#onlineManager;
-        },
-        get shadowDOMTarget() {
-          return _self$.#shadowDOMTarget;
-        }
-      }, {
-        get client() {
-          return queryClient();
-        },
-        get buttonPosition() {
-          return btnPosition();
-        },
-        get position() {
-          return pos();
-        },
-        get initialIsOpen() {
-          return isOpen();
-        },
-        get errorTypes() {
-          return errors();
-        }
-      }));
+      return createComponent(
+        Devtools2,
+        mergeProps(
+          {
+            get queryFlavor() {
+              return _self$.#queryFlavor;
+            },
+            get version() {
+              return _self$.#version;
+            },
+            get onlineManager() {
+              return _self$.#onlineManager;
+            },
+            get shadowDOMTarget() {
+              return _self$.#shadowDOMTarget;
+            },
+          },
+          {
+            get client() {
+              return queryClient();
+            },
+            get buttonPosition() {
+              return btnPosition();
+            },
+            get position() {
+              return pos();
+            },
+            get initialIsOpen() {
+              return isOpen();
+            },
+            get errorTypes() {
+              return errors();
+            },
+          }
+        )
+      );
     }, el);
     this.#isMounted = true;
     this.#dispose = dispose3;
@@ -16212,7 +20119,7 @@ exports.TanstackQueryDevtoolsPanel = class TanstackQueryDevtoolsPanel {
       errorTypes,
       styleNonce,
       shadowDOMTarget,
-      onClose
+      onClose,
     } = config;
     this.#client = createSignal(client);
     this.#queryFlavor = queryFlavor;
@@ -16260,43 +20167,55 @@ exports.TanstackQueryDevtoolsPanel = class TanstackQueryDevtoolsPanel {
       if (this.#Component) {
         Devtools2 = this.#Component;
       } else {
-        Devtools2 = lazy(() => Promise.resolve().then(() => (init_DevtoolsPanelComponent(), DevtoolsPanelComponent_exports)));
+        Devtools2 = lazy(() =>
+          Promise.resolve().then(
+            () => (
+              init_DevtoolsPanelComponent(), DevtoolsPanelComponent_exports
+            )
+          )
+        );
         this.#Component = Devtools2;
       }
       setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);
-      return createComponent(Devtools2, mergeProps({
-        get queryFlavor() {
-          return _self$.#queryFlavor;
-        },
-        get version() {
-          return _self$.#version;
-        },
-        get onlineManager() {
-          return _self$.#onlineManager;
-        },
-        get shadowDOMTarget() {
-          return _self$.#shadowDOMTarget;
-        }
-      }, {
-        get client() {
-          return queryClient();
-        },
-        get buttonPosition() {
-          return btnPosition();
-        },
-        get position() {
-          return pos();
-        },
-        get initialIsOpen() {
-          return isOpen();
-        },
-        get errorTypes() {
-          return errors();
-        },
-        get onClose() {
-          return onClose();
-        }
-      }));
+      return createComponent(
+        Devtools2,
+        mergeProps(
+          {
+            get queryFlavor() {
+              return _self$.#queryFlavor;
+            },
+            get version() {
+              return _self$.#version;
+            },
+            get onlineManager() {
+              return _self$.#onlineManager;
+            },
+            get shadowDOMTarget() {
+              return _self$.#shadowDOMTarget;
+            },
+          },
+          {
+            get client() {
+              return queryClient();
+            },
+            get buttonPosition() {
+              return btnPosition();
+            },
+            get position() {
+              return pos();
+            },
+            get initialIsOpen() {
+              return isOpen();
+            },
+            get errorTypes() {
+              return errors();
+            },
+            get onClose() {
+              return onClose();
+            },
+          }
+        )
+      );
     }, el);
     this.#isMounted = true;
     this.#dispose = dispose3;
diff --git a/build/index.cjs b/build/index.cjs
index 8c7a5c0bd77a17c3d20b7f31f954be12382c2c70..1daaa196e99e1c4863a40faf82380d6d28fbb25d 100644
--- a/build/index.cjs
+++ b/build/index.cjs
@@ -1,10 +1,11 @@
-'use strict';
+"use strict";
 
 var __defProp = Object.defineProperty;
 var __getOwnPropNames = Object.getOwnPropertyNames;
-var __esm = (fn, res) => function __init() {
-  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
-};
+var __esm = (fn, res) =>
+  function __init() {
+    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])((fn = 0))), res;
+  };
 var __export = (target, all) => {
   for (var name in all)
     __defProp(target, name, { get: all[name], enumerable: true });
@@ -12,8 +13,11 @@ var __export = (target, all) => {
 
 // ../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/dist/solid.js
 function getContextId(count) {
-  const num = String(count), len = num.length - 1;
-  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num;
+  const num = String(count),
+    len = num.length - 1;
+  return (
+    sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : "") + num
+  );
 }
 function setHydrateContext(context) {
   sharedConfig.context = context;
@@ -22,16 +26,23 @@ function nextHydrateContext() {
   return {
     ...sharedConfig.context,
     id: sharedConfig.getNextContextId(),
-    count: 0
+    count: 0,
   };
 }
 function createRoot(fn, detachedOwner) {
-  const listener = Listener, owner = Owner, unowned = fn.length === 0, current = detachedOwner === void 0 ? owner : detachedOwner, root = unowned ? UNOWNED : {
-    owned: null,
-    cleanups: null,
-    context: current ? current.context : null,
-    owner: current
-  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
+  const listener = Listener,
+    owner = Owner,
+    unowned = fn.length === 0,
+    current = detachedOwner === void 0 ? owner : detachedOwner,
+    root = unowned
+      ? UNOWNED
+      : {
+          owned: null,
+          cleanups: null,
+          context: current ? current.context : null,
+          owner: current,
+        },
+    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));
   Owner = root;
   Listener = null;
   try {
@@ -47,11 +58,12 @@ function createSignal(value, options) {
     value,
     observers: null,
     observerSlots: null,
-    comparator: options.equals || void 0
+    comparator: options.equals || void 0,
   };
   const setter = (value2) => {
     if (typeof value2 === "function") {
-      if (Transition && Transition.running && Transition.sources.has(s2)) value2 = value2(s2.tValue);
+      if (Transition && Transition.running && Transition.sources.has(s2))
+        value2 = value2(s2.tValue);
       else value2 = value2(s2.value);
     }
     return writeSignal(s2, value2);
@@ -70,7 +82,8 @@ function createRenderEffect(fn, value, options) {
 }
 function createEffect(fn, value, options) {
   runEffects = runUserEffects;
-  const c2 = createComputation(fn, value, false, STALE), s2 = SuspenseContext && useContext(SuspenseContext);
+  const c2 = createComputation(fn, value, false, STALE),
+    s2 = SuspenseContext && useContext(SuspenseContext);
   if (s2) c2.suspense = s2;
   if (!options || !options.render) c2.user = true;
   Effects ? Effects.push(c2) : updateComputation(c2);
@@ -99,23 +112,34 @@ function createResource(pSource, pFetcher, pOptions) {
     fetcher = pSource;
     options = {};
   }
-  let pr = null, initP = NO_INIT, id = null, loadedUnderTransition = false, scheduled = false, resolved = "initialValue" in options, dynamic = typeof source === "function" && createMemo(source);
-  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {
-    equals: false
-  }), [state, setState] = createSignal(resolved ? "ready" : "unresolved");
+  let pr = null,
+    initP = NO_INIT,
+    id = null,
+    loadedUnderTransition = false,
+    scheduled = false,
+    resolved = "initialValue" in options,
+    dynamic = typeof source === "function" && createMemo(source);
+  const contexts = /* @__PURE__ */ new Set(),
+    [value, setValue] = (options.storage || createSignal)(options.initialValue),
+    [error, setError] = createSignal(void 0),
+    [track, trigger] = createSignal(void 0, {
+      equals: false,
+    }),
+    [state, setState] = createSignal(resolved ? "ready" : "unresolved");
   if (sharedConfig.context) {
     id = sharedConfig.getNextContextId();
     if (options.ssrLoadFrom === "initial") initP = options.initialValue;
-    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);
+    else if (sharedConfig.load && sharedConfig.has(id))
+      initP = sharedConfig.load(id);
   }
   function loadEnd(p2, v, error2, key) {
     if (pr === p2) {
       pr = null;
       key !== void 0 && (resolved = true);
       if ((p2 === initP || v === initP) && options.onHydrated)
-        queueMicrotask(
-          () => options.onHydrated(key, {
-            value: v
+        queueMicrotask(() =>
+          options.onHydrated(key, {
+            value: v,
           })
         );
       initP = NO_INIT;
@@ -140,13 +164,16 @@ function createResource(pSource, pFetcher, pOptions) {
     }, false);
   }
   function read() {
-    const c2 = SuspenseContext && useContext(SuspenseContext), v = value(), err = error();
+    const c2 = SuspenseContext && useContext(SuspenseContext),
+      v = value(),
+      err = error();
     if (err !== void 0 && !pr) throw err;
     if (Listener && !Listener.user && c2) {
       createComputed(() => {
         track();
         if (pr) {
-          if (c2.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);
+          if (c2.resolved && Transition && loadedUnderTransition)
+            Transition.promises.add(pr);
           else if (!contexts.has(c2)) {
             c2.increment();
             contexts.add(c2);
@@ -166,12 +193,15 @@ function createResource(pSource, pFetcher, pOptions) {
       return;
     }
     if (Transition && pr) Transition.promises.delete(pr);
-    const p2 = initP !== NO_INIT ? initP : untrack(
-      () => fetcher(lookup, {
-        value: value(),
-        refetching
-      })
-    );
+    const p2 =
+      initP !== NO_INIT
+        ? initP
+        : untrack(() =>
+            fetcher(lookup, {
+              value: value(),
+              refetching,
+            })
+          );
     if (!isPromise(p2)) {
       loadEnd(pr, p2, void 0, lookup);
       return p2;
@@ -183,7 +213,7 @@ function createResource(pSource, pFetcher, pOptions) {
       return p2;
     }
     scheduled = true;
-    queueMicrotask(() => scheduled = false);
+    queueMicrotask(() => (scheduled = false));
     runUpdates(() => {
       setState(resolved ? "refreshing" : "pending");
       trigger();
@@ -195,16 +225,16 @@ function createResource(pSource, pFetcher, pOptions) {
   }
   Object.defineProperties(read, {
     state: {
-      get: () => state()
+      get: () => state(),
     },
     error: {
-      get: () => error()
+      get: () => error(),
     },
     loading: {
       get() {
         const s2 = state();
         return s2 === "pending" || s2 === "refreshing";
-      }
+      },
     },
     latest: {
       get() {
@@ -212,8 +242,8 @@ function createResource(pSource, pFetcher, pOptions) {
         const err = error();
         if (err && !pr) throw err;
         return value();
-      }
-    }
+      },
+    },
   });
   if (dynamic) createComputed(() => load(false));
   else load(false);
@@ -221,8 +251,8 @@ function createResource(pSource, pFetcher, pOptions) {
     read,
     {
       refetch: load,
-      mutate: setValue
-    }
+      mutate: setValue,
+    },
   ];
 }
 function batch(fn) {
@@ -262,7 +292,7 @@ function onMount(fn) {
   createEffect(() => untrack(fn));
 }
 function onCleanup(fn) {
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner.cleanups === null) Owner.cleanups = [fn];
   else Owner.cleanups.push(fn);
   return fn;
@@ -296,15 +326,17 @@ function startTransition(fn) {
     Owner = o2;
     let t2;
     if (Scheduler || SuspenseContext) {
-      t2 = Transition || (Transition = {
-        sources: /* @__PURE__ */ new Set(),
-        effects: [],
-        promises: /* @__PURE__ */ new Set(),
-        disposed: /* @__PURE__ */ new Set(),
-        queue: /* @__PURE__ */ new Set(),
-        running: true
-      });
-      t2.done || (t2.done = new Promise((res) => t2.resolve = res));
+      t2 =
+        Transition ||
+        (Transition = {
+          sources: /* @__PURE__ */ new Set(),
+          effects: [],
+          promises: /* @__PURE__ */ new Set(),
+          disposed: /* @__PURE__ */ new Set(),
+          queue: /* @__PURE__ */ new Set(),
+          running: true,
+        });
+      t2.done || (t2.done = new Promise((res) => (t2.resolve = res)));
       t2.running = true;
     }
     runUpdates(fn, false);
@@ -320,12 +352,16 @@ function createContext(defaultValue, options) {
   return {
     id,
     Provider: createProvider(id),
-    defaultValue
+    defaultValue,
   };
 }
 function useContext(context) {
   let value;
-  return Owner && Owner.context && (value = Owner.context[context.id]) !== void 0 ? value : context.defaultValue;
+  return Owner &&
+    Owner.context &&
+    (value = Owner.context[context.id]) !== void 0
+    ? value
+    : context.defaultValue;
 }
 function children(fn) {
   const children2 = createMemo(fn);
@@ -339,7 +375,8 @@ function children(fn) {
 function readSignal() {
   const runningTransition = Transition && Transition.running;
   if (this.sources && (runningTransition ? this.tState : this.state)) {
-    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);
+    if ((runningTransition ? this.tState : this.state) === STALE)
+      updateComputation(this);
     else {
       const updates = Updates;
       Updates = null;
@@ -368,11 +405,14 @@ function readSignal() {
   return this.value;
 }
 function writeSignal(node, value, isComp) {
-  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;
+  let current =
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value;
   if (!node.comparator || !node.comparator(current, value)) {
     if (Transition) {
       const TransitionRunning = Transition.running;
-      if (TransitionRunning || !isComp && Transition.sources.has(node)) {
+      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {
         Transition.sources.add(node);
         node.tValue = value;
       }
@@ -394,7 +434,7 @@ function writeSignal(node, value, isComp) {
         }
         if (Updates.length > 1e6) {
           Updates = [];
-          if (IS_DEV) ;
+          if (IS_DEV);
           throw new Error();
         }
       }, false);
@@ -408,7 +448,9 @@ function updateComputation(node) {
   const time = ExecCount;
   runComputation(
     node,
-    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,
+    Transition && Transition.running && Transition.sources.has(node)
+      ? node.tValue
+      : node.value,
     time
   );
   if (Transition && !Transition.running && Transition.sources.has(node)) {
@@ -424,7 +466,8 @@ function updateComputation(node) {
 }
 function runComputation(node, value, time) {
   let nextValue;
-  const owner = Owner, listener = Listener;
+  const owner = Owner,
+    listener = Listener;
   Listener = Owner = node;
   try {
     nextValue = node.fn(value);
@@ -468,13 +511,13 @@ function createComputation(fn, init, pure, state = STALE, options) {
     value: init,
     owner: Owner,
     context: Owner ? Owner.context : null,
-    pure
+    pure,
   };
   if (Transition && Transition.running) {
     c2.state = 0;
     c2.tState = state;
   }
-  if (Owner === null) ;
+  if (Owner === null);
   else if (Owner !== UNOWNED) {
     if (Transition && Transition.running && Owner.pure) {
       if (!Owner.tOwned) Owner.tOwned = [c2];
@@ -486,15 +529,21 @@ function createComputation(fn, init, pure, state = STALE, options) {
   }
   if (ExternalSourceConfig && c2.fn) {
     const [track, trigger] = createSignal(void 0, {
-      equals: false
+      equals: false,
     });
     const ordinary = ExternalSourceConfig.factory(c2.fn, trigger);
     onCleanup(() => ordinary.dispose());
-    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());
-    const inTransition = ExternalSourceConfig.factory(c2.fn, triggerInTransition);
+    const triggerInTransition = () =>
+      startTransition(trigger).then(() => inTransition.dispose());
+    const inTransition = ExternalSourceConfig.factory(
+      c2.fn,
+      triggerInTransition
+    );
     c2.fn = (x) => {
       track();
-      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);
+      return Transition && Transition.running
+        ? inTransition.track(x)
+        : ordinary.track(x);
     };
   }
   return c2;
@@ -502,17 +551,23 @@ function createComputation(fn, init, pure, state = STALE, options) {
 function runTop(node) {
   const runningTransition = Transition && Transition.running;
   if ((runningTransition ? node.tState : node.state) === 0) return;
-  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);
-  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);
+  if ((runningTransition ? node.tState : node.state) === PENDING)
+    return lookUpstream(node);
+  if (node.suspense && untrack(node.suspense.inFallback))
+    return node.suspense.effects.push(node);
   const ancestors = [node];
-  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {
+  while (
+    (node = node.owner) &&
+    (!node.updatedAt || node.updatedAt < ExecCount)
+  ) {
     if (runningTransition && Transition.disposed.has(node)) return;
     if (runningTransition ? node.tState : node.state) ancestors.push(node);
   }
   for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {
     node = ancestors[i2];
     if (runningTransition) {
-      let top = node, prev = ancestors[i2 + 1];
+      let top = node,
+        prev = ancestors[i2 + 1];
       while ((top = top.owner) && top !== prev) {
         if (Transition.disposed.has(top)) return;
       }
@@ -568,7 +623,8 @@ function completeUpdates(wait) {
         for (const v of sources) {
           v.value = v.tValue;
           if (v.owned) {
-            for (let i2 = 0, len = v.owned.length; i2 < len; i2++) cleanNode(v.owned[i2]);
+            for (let i2 = 0, len = v.owned.length; i2 < len; i2++)
+              cleanNode(v.owned[i2]);
           }
           if (v.tOwned) v.owned = v.tOwned;
           delete v.tValue;
@@ -611,7 +667,8 @@ function scheduleQueue(queue) {
   }
 }
 function runUserEffects(queue) {
-  let i2, userLength = 0;
+  let i2,
+    userLength = 0;
   for (i2 = 0; i2 < queue.length; i2++) {
     const e2 = queue[i2];
     if (!e2.user) runTop(e2);
@@ -641,7 +698,10 @@ function lookUpstream(node, ignore) {
     if (source.sources) {
       const state = runningTransition ? source.tState : source.state;
       if (state === STALE) {
-        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))
+        if (
+          source !== ignore &&
+          (!source.updatedAt || source.updatedAt < ExecCount)
+        )
           runTop(source);
       } else if (state === PENDING) lookUpstream(source, ignore);
     }
@@ -664,9 +724,12 @@ function cleanNode(node) {
   let i2;
   if (node.sources) {
     while (node.sources.length) {
-      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;
+      const source = node.sources.pop(),
+        index = node.sourceSlots.pop(),
+        obs = source.observers;
       if (obs && obs.length) {
-        const n2 = obs.pop(), s2 = source.observerSlots.pop();
+        const n2 = obs.pop(),
+          s2 = source.observerSlots.pop();
         if (index < obs.length) {
           n2.sourceSlots[s2] = index;
           obs[index] = n2;
@@ -704,14 +767,14 @@ function reset(node, top) {
 function castError(err) {
   if (err instanceof Error) return err;
   return new Error(typeof err === "string" ? err : "Unknown error", {
-    cause: err
+    cause: err,
   });
 }
 function runErrors(err, fns, owner) {
   try {
     for (const f of fns) f(err);
   } catch (e2) {
-    handleError(e2, owner && owner.owner || null);
+    handleError(e2, (owner && owner.owner) || null);
   }
 }
 function handleError(err, owner = Owner) {
@@ -723,17 +786,20 @@ function handleError(err, owner = Owner) {
       fn() {
         runErrors(error, fns, owner);
       },
-      state: STALE
+      state: STALE,
     });
   else runErrors(error, fns, owner);
 }
 function resolveChildren(children2) {
-  if (typeof children2 === "function" && !children2.length) return resolveChildren(children2());
+  if (typeof children2 === "function" && !children2.length)
+    return resolveChildren(children2());
   if (Array.isArray(children2)) {
     const results = [];
     for (let i2 = 0; i2 < children2.length; i2++) {
       const result = resolveChildren(children2[i2]);
-      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+      Array.isArray(result)
+        ? results.push.apply(results, result)
+        : results.push(result);
     }
     return results;
   }
@@ -743,13 +809,14 @@ function createProvider(id, options) {
   return function provider(props) {
     let res;
     createRenderEffect(
-      () => res = untrack(() => {
-        Owner.context = {
-          ...Owner.context,
-          [id]: props.value
-        };
-        return children(() => props.children);
-      }),
+      () =>
+        (res = untrack(() => {
+          Owner.context = {
+            ...Owner.context,
+            [id]: props.value,
+          };
+          return children(() => props.children);
+        })),
       void 0
     );
     return res;
@@ -759,13 +826,28 @@ function dispose(d) {
   for (let i2 = 0; i2 < d.length; i2++) d[i2]();
 }
 function mapArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    len = 0,
+    indexes = mapFn.length > 1 ? [] : null;
   onCleanup(() => dispose(disposers));
   return () => {
-    let newItems = list() || [], newLen = newItems.length, i2, j;
+    let newItems = list() || [],
+      newLen = newItems.length,
+      i2,
+      j;
     newItems[$TRACK];
     return untrack(() => {
-      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;
+      let newIndices,
+        newIndicesNext,
+        temp,
+        tempdisposers,
+        tempIndexes,
+        start,
+        end,
+        newEnd,
+        item;
       if (newLen === 0) {
         if (len !== 0) {
           dispose(disposers);
@@ -794,8 +876,16 @@ function mapArray(list, mapFn, options = {}) {
         temp = new Array(newLen);
         tempdisposers = new Array(newLen);
         indexes && (tempIndexes = new Array(newLen));
-        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++) ;
-        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {
+        for (
+          start = 0, end = Math.min(len, newLen);
+          start < end && items[start] === newItems[start];
+          start++
+        );
+        for (
+          end = len - 1, newEnd = newLen - 1;
+          end >= start && newEnd >= start && items[end] === newItems[newEnd];
+          end--, newEnd--
+        ) {
           temp[newEnd] = mapped[end];
           tempdisposers[newEnd] = disposers[end];
           indexes && (tempIndexes[newEnd] = indexes[end]);
@@ -829,7 +919,7 @@ function mapArray(list, mapFn, options = {}) {
             }
           } else mapped[j] = createRoot(mapper);
         }
-        mapped = mapped.slice(0, len = newLen);
+        mapped = mapped.slice(0, (len = newLen));
         items = newItems.slice(0);
       }
       return mapped;
@@ -846,10 +936,16 @@ function mapArray(list, mapFn, options = {}) {
   };
 }
 function indexArray(list, mapFn, options = {}) {
-  let items = [], mapped = [], disposers = [], signals = [], len = 0, i2;
+  let items = [],
+    mapped = [],
+    disposers = [],
+    signals = [],
+    len = 0,
+    i2;
   onCleanup(() => dispose(disposers));
   return () => {
-    const newItems = list() || [], newLen = newItems.length;
+    const newItems = list() || [],
+      newLen = newItems.length;
     newItems[$TRACK];
     return untrack(() => {
       if (newLen === 0) {
@@ -890,7 +986,7 @@ function indexArray(list, mapFn, options = {}) {
       }
       len = signals.length = disposers.length = newLen;
       items = newItems.slice(0);
-      return mapped = mapped.slice(0, len);
+      return (mapped = mapped.slice(0, len));
     });
     function mapper(disposer) {
       disposers[i2] = disposer;
@@ -928,8 +1024,9 @@ function mergeProps(...sources) {
   let proxy = false;
   for (let i2 = 0; i2 < sources.length; i2++) {
     const s2 = sources[i2];
-    proxy = proxy || !!s2 && $PROXY in s2;
-    sources[i2] = typeof s2 === "function" ? (proxy = true, createMemo(s2)) : s2;
+    proxy = proxy || (!!s2 && $PROXY in s2);
+    sources[i2] =
+      typeof s2 === "function" ? ((proxy = true), createMemo(s2)) : s2;
   }
   if (SUPPORTS_PROXY && proxy) {
     return new Proxy(
@@ -951,7 +1048,7 @@ function mergeProps(...sources) {
           for (let i2 = 0; i2 < sources.length; i2++)
             keys2.push(...Object.keys(resolveSource(sources[i2])));
           return [...new Set(keys2)];
-        }
+        },
       },
       propTraps
     );
@@ -967,11 +1064,17 @@ function mergeProps(...sources) {
       if (key === "__proto__" || key === "constructor") continue;
       const desc = Object.getOwnPropertyDescriptor(source, key);
       if (!defined[key]) {
-        defined[key] = desc.get ? {
-          enumerable: true,
-          configurable: true,
-          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])
-        } : desc.value !== void 0 ? desc : void 0;
+        defined[key] = desc.get
+          ? {
+              enumerable: true,
+              configurable: true,
+              get: resolveSources.bind(
+                (sourcesMap[key] = [desc.get.bind(source)])
+              ),
+            }
+          : desc.value !== void 0
+          ? desc
+          : void 0;
       } else {
         const sources2 = sourcesMap[key];
         if (sources2) {
@@ -984,7 +1087,8 @@ function mergeProps(...sources) {
   const target = {};
   const definedKeys = Object.keys(defined);
   for (let i2 = definedKeys.length - 1; i2 >= 0; i2--) {
-    const key = definedKeys[i2], desc = defined[key];
+    const key = definedKeys[i2],
+      desc = defined[key];
     if (desc && desc.get) Object.defineProperty(target, key, desc);
     else target[key] = desc ? desc.value : void 0;
   }
@@ -1004,7 +1108,7 @@ function splitProps(props, ...keys2) {
           },
           keys() {
             return k.filter((property) => property in props);
-          }
+          },
         },
         propTraps
       );
@@ -1020,7 +1124,7 @@ function splitProps(props, ...keys2) {
           },
           keys() {
             return Object.keys(props).filter((k) => !blocked.has(k));
-          }
+          },
         },
         propTraps
       )
@@ -1031,18 +1135,27 @@ function splitProps(props, ...keys2) {
   const objects = keys2.map(() => ({}));
   for (const propName of Object.getOwnPropertyNames(props)) {
     const desc = Object.getOwnPropertyDescriptor(props, propName);
-    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;
+    const isDefaultDesc =
+      !desc.get &&
+      !desc.set &&
+      desc.enumerable &&
+      desc.writable &&
+      desc.configurable;
     let blocked = false;
     let objectIndex = 0;
     for (const k of keys2) {
       if (k.includes(propName)) {
         blocked = true;
-        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);
+        isDefaultDesc
+          ? (objects[objectIndex][propName] = desc.value)
+          : Object.defineProperty(objects[objectIndex], propName, desc);
       }
       ++objectIndex;
     }
     if (!blocked) {
-      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);
+      isDefaultDesc
+        ? (otherObject[propName] = desc.value)
+        : Object.defineProperty(otherObject, propName, desc);
     }
   }
   return [...objects, otherObject];
@@ -1064,23 +1177,28 @@ function lazy(fn) {
       });
       comp = s2;
     } else if (!comp) {
-      const [s2] = createResource(() => (p2 || (p2 = fn())).then((mod) => mod.default));
+      const [s2] = createResource(() =>
+        (p2 || (p2 = fn())).then((mod) => mod.default)
+      );
       comp = s2;
     }
     let Comp;
-    return createMemo(
-      () => (Comp = comp()) ? untrack(() => {
-        if (IS_DEV) ;
-        if (!ctx || sharedConfig.done) return Comp(props);
-        const c2 = sharedConfig.context;
-        setHydrateContext(ctx);
-        const r2 = Comp(props);
-        setHydrateContext(c2);
-        return r2;
-      }) : ""
+    return createMemo(() =>
+      (Comp = comp())
+        ? untrack(() => {
+            if (IS_DEV);
+            if (!ctx || sharedConfig.done) return Comp(props);
+            const c2 = sharedConfig.context;
+            setHydrateContext(ctx);
+            const r2 = Comp(props);
+            setHydrateContext(c2);
+            return r2;
+          })
+        : ""
     );
   };
-  wrap.preload = () => p2 || ((p2 = fn()).then((mod) => comp = () => mod.default), p2);
+  wrap.preload = () =>
+    p2 || ((p2 = fn()).then((mod) => (comp = () => mod.default)), p2);
   return wrap;
 }
 function createUniqueId() {
@@ -1089,36 +1207,46 @@ function createUniqueId() {
 }
 function For(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    mapArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Index(props) {
   const fallback = "fallback" in props && {
-    fallback: () => props.fallback
+    fallback: () => props.fallback,
   };
-  return createMemo(indexArray(() => props.each, props.children, fallback || void 0));
+  return createMemo(
+    indexArray(() => props.each, props.children, fallback || void 0)
+  );
 }
 function Show(props) {
   const keyed = props.keyed;
   const conditionValue = createMemo(() => props.when, void 0, void 0);
-  const condition = keyed ? conditionValue : createMemo(conditionValue, void 0, {
-    equals: (a2, b2) => !a2 === !b2
-  });
+  const condition = keyed
+    ? conditionValue
+    : createMemo(conditionValue, void 0, {
+        equals: (a2, b2) => !a2 === !b2,
+      });
   return createMemo(
     () => {
       const c2 = condition();
       if (c2) {
         const child = props.children;
         const fn = typeof child === "function" && child.length > 0;
-        return fn ? untrack(
-          () => child(
-            keyed ? c2 : () => {
-              if (!untrack(condition)) throw narrowedError("Show");
-              return conditionValue();
-            }
-          )
-        ) : child;
+        return fn
+          ? untrack(() =>
+              child(
+                keyed
+                  ? c2
+                  : () => {
+                      if (!untrack(condition)) throw narrowedError("Show");
+                      return conditionValue();
+                    }
+              )
+            )
+          : child;
       }
       return props.fallback;
     },
@@ -1137,14 +1265,17 @@ function Switch(props) {
       const mp = mps[i2];
       const prevFunc = func;
       const conditionValue = createMemo(
-        () => prevFunc() ? void 0 : mp.when,
+        () => (prevFunc() ? void 0 : mp.when),
         void 0,
         void 0
       );
-      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, void 0, {
-        equals: (a2, b2) => !a2 === !b2
-      });
-      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
+      const condition = mp.keyed
+        ? conditionValue
+        : createMemo(conditionValue, void 0, {
+            equals: (a2, b2) => !a2 === !b2,
+          });
+      func = () =>
+        prevFunc() || (condition() ? [index, conditionValue, mp] : void 0);
     }
     return func;
   });
@@ -1155,14 +1286,19 @@ function Switch(props) {
       const [index, conditionValue, mp] = sel;
       const child = mp.children;
       const fn = typeof child === "function" && child.length > 0;
-      return fn ? untrack(
-        () => child(
-          mp.keyed ? conditionValue() : () => {
-            if (untrack(switchFunc)()?.[0] !== index) throw narrowedError("Match");
-            return conditionValue();
-          }
-        )
-      ) : child;
+      return fn
+        ? untrack(() =>
+            child(
+              mp.keyed
+                ? conditionValue()
+                : () => {
+                    if (untrack(switchFunc)()?.[0] !== index)
+                      throw narrowedError("Match");
+                    return conditionValue();
+                  }
+            )
+          )
+        : child;
     },
     void 0,
     void 0
@@ -1171,7 +1307,36 @@ function Switch(props) {
 function Match(props) {
   return props;
 }
-var sharedConfig, IS_DEV, equalFn, $PROXY, SUPPORTS_PROXY, $TRACK, signalOptions, ERROR, runEffects, STALE, PENDING, UNOWNED, NO_INIT, Owner, Transition, Scheduler, ExternalSourceConfig, Listener, Updates, Effects, ExecCount, transPending, setTransPending, SuspenseContext, FALLBACK, hydrationEnabled, propTraps, counter, narrowedError, DEV;
+var sharedConfig,
+  IS_DEV,
+  equalFn,
+  $PROXY,
+  SUPPORTS_PROXY,
+  $TRACK,
+  signalOptions,
+  ERROR,
+  runEffects,
+  STALE,
+  PENDING,
+  UNOWNED,
+  NO_INIT,
+  Owner,
+  Transition,
+  Scheduler,
+  ExternalSourceConfig,
+  Listener,
+  Updates,
+  Effects,
+  ExecCount,
+  transPending,
+  setTransPending,
+  SuspenseContext,
+  FALLBACK,
+  hydrationEnabled,
+  propTraps,
+  counter,
+  narrowedError,
+  DEV;
 var init_solid = __esm({
   "../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/dist/solid.js"() {
     sharedConfig = {
@@ -1184,7 +1349,7 @@ var init_solid = __esm({
       },
       getNextContextId() {
         return getContextId(this.context.count++);
-      }
+      },
     };
     IS_DEV = false;
     equalFn = (a2, b2) => a2 === b2;
@@ -1192,7 +1357,7 @@ var init_solid = __esm({
     SUPPORTS_PROXY = typeof Proxy === "function";
     $TRACK = Symbol("solid-track");
     signalOptions = {
-      equals: equalFn
+      equals: equalFn,
     };
     ERROR = null;
     runEffects = runQueue;
@@ -1202,7 +1367,7 @@ var init_solid = __esm({
       owned: null,
       cleanups: null,
       context: null,
-      owner: null
+      owner: null,
     };
     NO_INIT = {};
     Owner = null;
@@ -1235,26 +1400,32 @@ var init_solid = __esm({
             return _.get(property);
           },
           set: trueFn,
-          deleteProperty: trueFn
+          deleteProperty: trueFn,
         };
       },
       ownKeys(_) {
         return _.keys();
-      }
+      },
     };
     counter = 0;
     narrowedError = (name) => `Stale read from <${name}>.`;
     DEV = void 0;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/web/dist/web.js
 function getPropAlias(prop, tagName) {
   const a2 = PropAliases[prop];
-  return typeof a2 === "object" ? a2[tagName] ? a2["$"] : void 0 : a2;
+  return typeof a2 === "object" ? (a2[tagName] ? a2["$"] : void 0) : a2;
 }
 function reconcileArrays(parentNode, a2, b2) {
-  let bLength = b2.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;
+  let bLength = b2.length,
+    aEnd = a2.length,
+    bEnd = bLength,
+    aStart = 0,
+    bStart = 0,
+    after = a2[aEnd - 1].nextSibling,
+    map = null;
   while (aStart < aEnd || bStart < bEnd) {
     if (a2[aStart] === b2[bStart]) {
       aStart++;
@@ -1266,7 +1437,12 @@ function reconcileArrays(parentNode, a2, b2) {
       bEnd--;
     }
     if (aEnd === aStart) {
-      const node = bEnd < bLength ? bStart ? b2[bStart - 1].nextSibling : b2[bEnd - bStart] : after;
+      const node =
+        bEnd < bLength
+          ? bStart
+            ? b2[bStart - 1].nextSibling
+            : b2[bEnd - bStart]
+          : after;
       while (bStart < bEnd) parentNode.insertBefore(b2[bStart++], node);
     } else if (bEnd === bStart) {
       while (aStart < aEnd) {
@@ -1287,9 +1463,12 @@ function reconcileArrays(parentNode, a2, b2) {
       const index = map.get(a2[aStart]);
       if (index != null) {
         if (bStart < index && index < bEnd) {
-          let i2 = aStart, sequence = 1, t2;
+          let i2 = aStart,
+            sequence = 1,
+            t2;
           while (++i2 < aEnd && i2 < bEnd) {
-            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence) break;
+            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)
+              break;
             sequence++;
           }
           if (sequence > index - bStart) {
@@ -1305,7 +1484,9 @@ function render(code, element, init, options = {}) {
   let disposer;
   createRoot((dispose3) => {
     disposer = dispose3;
-    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);
+    element === document
+      ? code()
+      : insert(element, code(), element.firstChild ? null : void 0, init);
   }, options.owner);
   return () => {
     disposer();
@@ -1319,12 +1500,15 @@ function template(html, isImportNode, isSVG, isMathML) {
     t2.innerHTML = html;
     return t2.content.firstChild;
   };
-  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);
+  const fn = isImportNode
+    ? () => untrack(() => document.importNode(node || (node = create()), true))
+    : () => (node || (node = create())).cloneNode(true);
   fn.cloneNode = fn;
   return fn;
 }
 function delegateEvents(eventNames, document2 = window.document) {
-  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
+  const e2 =
+    document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());
   for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {
     const name = eventNames[i2];
     if (!e2.has(name)) {
@@ -1335,7 +1519,8 @@ function delegateEvents(eventNames, document2 = window.document) {
 }
 function clearDelegatedEvents(document2 = window.document) {
   if (document2[$$EVENTS]) {
-    for (let name of document2[$$EVENTS].keys()) document2.removeEventListener(name, eventHandler);
+    for (let name of document2[$$EVENTS].keys())
+      document2.removeEventListener(name, eventHandler);
     delete document2[$$EVENTS];
   }
 }
@@ -1366,11 +1551,20 @@ function addEventListener(node, name, handler, delegate) {
     } else node[`$$${name}`] = handler;
   } else if (Array.isArray(handler)) {
     const handlerFn = handler[0];
-    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));
-  } else node.addEventListener(name, handler, typeof handler !== "function" && handler);
+    node.addEventListener(
+      name,
+      (handler[0] = (e2) => handlerFn.call(node, handler[1], e2))
+    );
+  } else
+    node.addEventListener(
+      name,
+      handler,
+      typeof handler !== "function" && handler
+    );
 }
 function classList(node, value, prev = {}) {
-  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);
+  const classKeys = Object.keys(value || {}),
+    prevKeys = Object.keys(prev);
   let i2, len;
   for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {
     const key = prevKeys[i2];
@@ -1379,8 +1573,10 @@ function classList(node, value, prev = {}) {
     delete prev[key];
   }
   for (i2 = 0, len = classKeys.length; i2 < len; i2++) {
-    const key = classKeys[i2], classValue = !!value[key];
-    if (!key || key === "undefined" || prev[key] === classValue || !classValue) continue;
+    const key = classKeys[i2],
+      classValue = !!value[key];
+    if (!key || key === "undefined" || prev[key] === classValue || !classValue)
+      continue;
     toggleClassKey(node, key, true);
     prev[key] = classValue;
   }
@@ -1389,7 +1585,7 @@ function classList(node, value, prev = {}) {
 function style(node, value, prev) {
   if (!value) return prev ? setAttribute(node, "style") : value;
   const nodeStyle = node.style;
-  if (typeof value === "string") return nodeStyle.cssText = value;
+  if (typeof value === "string") return (nodeStyle.cssText = value);
   typeof prev === "string" && (nodeStyle.cssText = prev = void 0);
   prev || (prev = {});
   value || (value = {});
@@ -1411,10 +1607,17 @@ function spread(node, props = {}, isSVG, skipChildren) {
   const prevProps = {};
   if (!skipChildren) {
     createRenderEffect(
-      () => prevProps.children = insertExpression(node, props.children, prevProps.children)
+      () =>
+        (prevProps.children = insertExpression(
+          node,
+          props.children,
+          prevProps.children
+        ))
     );
   }
-  createRenderEffect(() => typeof props.ref === "function" && use(props.ref, node));
+  createRenderEffect(
+    () => typeof props.ref === "function" && use(props.ref, node)
+  );
   createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));
   return prevProps;
 }
@@ -1423,15 +1626,34 @@ function use(fn, element, arg) {
 }
 function insert(parent, accessor, marker, initial) {
   if (marker !== void 0 && !initial) initial = [];
-  if (typeof accessor !== "function") return insertExpression(parent, accessor, initial, marker);
-  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);
+  if (typeof accessor !== "function")
+    return insertExpression(parent, accessor, initial, marker);
+  createRenderEffect(
+    (current) => insertExpression(parent, accessor(), current, marker),
+    initial
+  );
 }
-function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {
+function assign(
+  node,
+  props,
+  isSVG,
+  skipChildren,
+  prevProps = {},
+  skipRef = false
+) {
   props || (props = {});
   for (const prop in prevProps) {
     if (!(prop in props)) {
       if (prop === "children") continue;
-      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);
+      prevProps[prop] = assignProp(
+        node,
+        prop,
+        null,
+        prevProps[prop],
+        isSVG,
+        skipRef,
+        props
+      );
     }
   }
   for (const prop in props) {
@@ -1439,12 +1661,25 @@ function assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = fals
       continue;
     }
     const value = props[prop];
-    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);
+    prevProps[prop] = assignProp(
+      node,
+      prop,
+      value,
+      prevProps[prop],
+      isSVG,
+      skipRef,
+      props
+    );
   }
 }
 function getNextElement(template2) {
-  let node, key, hydrating = isHydrating();
-  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {
+  let node,
+    key,
+    hydrating = isHydrating();
+  if (
+    !hydrating ||
+    !(node = sharedConfig.registry.get((key = getHydrationKey())))
+  ) {
     return template2();
   }
   if (sharedConfig.completed) sharedConfig.completed.add(node);
@@ -1452,7 +1687,9 @@ function getNextElement(template2) {
   return node;
 }
 function isHydrating(node) {
-  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);
+  return (
+    !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected)
+  );
 }
 function toPropertyName(name) {
   return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());
@@ -1471,8 +1708,10 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     if (!skipRef) value(node);
   } else if (prop.slice(0, 3) === "on:") {
     const e2 = prop.slice(3);
-    prev && node.removeEventListener(e2, prev, typeof prev !== "function" && prev);
-    value && node.addEventListener(e2, value, typeof value !== "function" && value);
+    prev &&
+      node.removeEventListener(e2, prev, typeof prev !== "function" && prev);
+    value &&
+      node.addEventListener(e2, value, typeof value !== "function" && value);
   } else if (prop.slice(0, 10) === "oncapture:") {
     const e2 = prop.slice(10);
     prev && node.removeEventListener(e2, prev, true);
@@ -1492,16 +1731,25 @@ function assignProp(node, prop, value, prev, isSVG, skipRef, props) {
     setAttribute(node, prop.slice(5), value);
   } else if (prop.slice(0, 5) === "bool:") {
     setBoolAttribute(node, prop.slice(5), value);
-  } else if ((forceProp = prop.slice(0, 5) === "prop:") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes("-") || "is" in props)) {
+  } else if (
+    (forceProp = prop.slice(0, 5) === "prop:") ||
+    (isChildProp = ChildProperties.has(prop)) ||
+    (!isSVG &&
+      ((propAlias = getPropAlias(prop, node.tagName)) ||
+        (isProp = Properties.has(prop)))) ||
+    (isCE = node.nodeName.includes("-") || "is" in props)
+  ) {
     if (forceProp) {
       prop = prop.slice(5);
       isProp = true;
     } else if (isHydrating(node)) return value;
     if (prop === "class" || prop === "className") className(node, value);
-    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;
+    else if (isCE && !isProp && !isChildProp)
+      node[toPropertyName(prop)] = value;
     else node[propAlias || prop] = value;
   } else {
-    const ns = isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
+    const ns =
+      isSVG && prop.indexOf(":") > -1 && SVGNamespace[prop.split(":")[0]];
     if (ns) setAttributeNS(node, ns, prop, value);
     else setAttribute(node, Aliases[prop] || prop, value);
   }
@@ -1515,10 +1763,11 @@ function eventHandler(e2) {
   const key = `$$${e2.type}`;
   const oriTarget = e2.target;
   const oriCurrentTarget = e2.currentTarget;
-  const retarget = (value) => Object.defineProperty(e2, "target", {
-    configurable: true,
-    value
-  });
+  const retarget = (value) =>
+    Object.defineProperty(e2, "target", {
+      configurable: true,
+      value,
+    });
   const handleNode = () => {
     const handler = node[key];
     if (handler && !node.disabled) {
@@ -1526,19 +1775,27 @@ function eventHandler(e2) {
       data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);
       if (e2.cancelBubble) return;
     }
-    node.host && typeof node.host !== "string" && !node.host._$host && node.contains(e2.target) && retarget(node.host);
+    node.host &&
+      typeof node.host !== "string" &&
+      !node.host._$host &&
+      node.contains(e2.target) &&
+      retarget(node.host);
     return true;
   };
   const walkUpTree = () => {
-    while (handleNode() && (node = node._$host || node.parentNode || node.host)) ;
+    while (
+      handleNode() &&
+      (node = node._$host || node.parentNode || node.host)
+    );
   };
   Object.defineProperty(e2, "currentTarget", {
     configurable: true,
     get() {
       return node || document;
-    }
+    },
   });
-  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;
+  if (sharedConfig.registry && !sharedConfig.done)
+    sharedConfig.done = _$HY.done = true;
   if (e2.composedPath) {
     const path = e2.composedPath();
     retarget(path[0]);
@@ -1571,8 +1828,9 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
   }
   while (typeof current === "function") current = current();
   if (value === current) return current;
-  const t2 = typeof value, multi = marker !== void 0;
-  parent = multi && current[0] && current[0].parentNode || parent;
+  const t2 = typeof value,
+    multi = marker !== void 0;
+  parent = (multi && current[0] && current[0].parentNode) || parent;
   if (t2 === "string" || t2 === "number") {
     if (hydrating) return current;
     if (t2 === "number") {
@@ -1604,17 +1862,19 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     const array = [];
     const currentArray = current && Array.isArray(current);
     if (normalizeIncomingArray(array, value, current, unwrapArray)) {
-      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));
+      createRenderEffect(
+        () => (current = insertExpression(parent, array, current, marker, true))
+      );
       return () => current;
     }
     if (hydrating) {
       if (!array.length) return current;
-      if (marker === void 0) return current = [...parent.childNodes];
+      if (marker === void 0) return (current = [...parent.childNodes]);
       let node = array[0];
       if (node.parentNode !== parent) return current;
       const nodes = [node];
       while ((node = node.nextSibling) !== marker) nodes.push(node);
-      return current = nodes;
+      return (current = nodes);
     }
     if (array.length === 0) {
       current = cleanChildren(parent, current, marker);
@@ -1629,22 +1889,26 @@ function insertExpression(parent, value, current, marker, unwrapArray) {
     }
     current = array;
   } else if (value.nodeType) {
-    if (hydrating && value.parentNode) return current = multi ? [value] : value;
+    if (hydrating && value.parentNode)
+      return (current = multi ? [value] : value);
     if (Array.isArray(current)) {
-      if (multi) return current = cleanChildren(parent, current, marker, value);
+      if (multi)
+        return (current = cleanChildren(parent, current, marker, value));
       cleanChildren(parent, current, null, value);
     } else if (current == null || current === "" || !parent.firstChild) {
       parent.appendChild(value);
     } else parent.replaceChild(value, parent.firstChild);
     current = value;
-  } else ;
+  } else;
   return current;
 }
 function normalizeIncomingArray(normalized, array, current, unwrap) {
   let dynamic = false;
   for (let i2 = 0, len = array.length; i2 < len; i2++) {
-    let item = array[i2], prev = current && current[normalized.length], t2;
-    if (item == null || item === true || item === false) ;
+    let item = array[i2],
+      prev = current && current[normalized.length],
+      t2;
+    if (item == null || item === true || item === false);
     else if ((t2 = typeof item) === "object" && item.nodeType) {
       normalized.push(item);
     } else if (Array.isArray(item)) {
@@ -1652,28 +1916,31 @@ function normalizeIncomingArray(normalized, array, current, unwrap) {
     } else if (t2 === "function") {
       if (unwrap) {
         while (typeof item === "function") item = item();
-        dynamic = normalizeIncomingArray(
-          normalized,
-          Array.isArray(item) ? item : [item],
-          Array.isArray(prev) ? prev : [prev]
-        ) || dynamic;
+        dynamic =
+          normalizeIncomingArray(
+            normalized,
+            Array.isArray(item) ? item : [item],
+            Array.isArray(prev) ? prev : [prev]
+          ) || dynamic;
       } else {
         normalized.push(item);
         dynamic = true;
       }
     } else {
       const value = String(item);
-      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);
+      if (prev && prev.nodeType === 3 && prev.data === value)
+        normalized.push(prev);
       else normalized.push(document.createTextNode(value));
     }
   }
   return dynamic;
 }
 function appendNodes(parent, array, marker = null) {
-  for (let i2 = 0, len = array.length; i2 < len; i2++) parent.insertBefore(array[i2], marker);
+  for (let i2 = 0, len = array.length; i2 < len; i2++)
+    parent.insertBefore(array[i2], marker);
 }
 function cleanChildren(parent, current, marker, replacement) {
-  if (marker === void 0) return parent.textContent = "";
+  if (marker === void 0) return (parent.textContent = "");
   const node = replacement || document.createTextNode("");
   if (current.length) {
     let inserted = false;
@@ -1682,7 +1949,9 @@ function cleanChildren(parent, current, marker, replacement) {
       if (node !== el) {
         const isParent = el.parentNode === parent;
         if (!inserted && !i2)
-          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);
+          isParent
+            ? parent.replaceChild(node, el)
+            : parent.insertBefore(node, marker);
         else isParent && el.remove();
       } else inserted = true;
     }
@@ -1693,31 +1962,43 @@ function getHydrationKey() {
   return sharedConfig.getNextContextId();
 }
 function createElement(tagName, isSVG = false) {
-  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);
+  return isSVG
+    ? document.createElementNS(SVG_NAMESPACE, tagName)
+    : document.createElement(tagName);
 }
 function Portal(props) {
-  const { useShadow } = props, marker = document.createTextNode(""), mount = () => props.mount || document.body, owner = getOwner();
+  const { useShadow } = props,
+    marker = document.createTextNode(""),
+    mount = () => props.mount || document.body,
+    owner = getOwner();
   let content;
   let hydrating = !!sharedConfig.context;
   createEffect(
     () => {
       if (hydrating) getOwner().user = hydrating = false;
-      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));
+      content ||
+        (content = runWithOwner(owner, () => createMemo(() => props.children)));
       const el = mount();
       if (el instanceof HTMLHeadElement) {
         const [clean, setClean] = createSignal(false);
         const cleanup = () => setClean(true);
-        createRoot((dispose3) => insert(el, () => !clean() ? content() : dispose3(), null));
+        createRoot((dispose3) =>
+          insert(el, () => (!clean() ? content() : dispose3()), null)
+        );
         onCleanup(cleanup);
       } else {
-        const container = createElement(props.isSVG ? "g" : "div", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({
-          mode: "open"
-        }) : container;
+        const container = createElement(props.isSVG ? "g" : "div", props.isSVG),
+          renderRoot =
+            useShadow && container.attachShadow
+              ? container.attachShadow({
+                  mode: "open",
+                })
+              : container;
         Object.defineProperty(container, "_$host", {
           get() {
             return marker.parentNode;
           },
-          configurable: true
+          configurable: true,
         });
         insert(renderRoot, content);
         el.appendChild(container);
@@ -1727,7 +2008,7 @@ function Portal(props) {
     },
     void 0,
     {
-      render: !hydrating
+      render: !hydrating,
     }
   );
   return marker;
@@ -1741,7 +2022,9 @@ function createDynamic(component, props) {
         return untrack(() => component2(props));
       case "string":
         const isSvg = SVGElements.has(component2);
-        const el = sharedConfig.context ? getNextElement() : createElement(component2, isSvg);
+        const el = sharedConfig.context
+          ? getNextElement()
+          : createElement(component2, isSvg);
         spread(el, props, isSvg);
         return el;
     }
@@ -1751,7 +2034,17 @@ function Dynamic(props) {
   const [, others] = splitProps(props, ["component"]);
   return createDynamic(() => props.component, others);
 }
-var booleans, Properties, ChildProperties, Aliases, PropAliases, DelegatedEvents, SVGElements, SVGNamespace, $$EVENTS, isServer, SVG_NAMESPACE;
+var booleans,
+  Properties,
+  ChildProperties,
+  Aliases,
+  PropAliases,
+  DelegatedEvents,
+  SVGElements,
+  SVGNamespace,
+  $$EVENTS,
+  isServer,
+  SVG_NAMESPACE;
 var init_web = __esm({
   "../../node_modules/.pnpm/solid-js@1.9.5/node_modules/solid-js/web/dist/web.js"() {
     init_solid();
@@ -1781,7 +2074,7 @@ var init_web = __esm({
       "required",
       "reversed",
       "seamless",
-      "selected"
+      "selected",
     ];
     Properties = /* @__PURE__ */ new Set([
       "className",
@@ -1791,43 +2084,49 @@ var init_web = __esm({
       "isMap",
       "noModule",
       "playsInline",
-      ...booleans
+      ...booleans,
     ]);
     ChildProperties = /* @__PURE__ */ new Set([
       "innerHTML",
       "textContent",
       "innerText",
-      "children"
+      "children",
     ]);
-    Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-      className: "class",
-      htmlFor: "for"
-    });
-    PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {
-      class: "className",
-      formnovalidate: {
-        $: "formNoValidate",
-        BUTTON: 1,
-        INPUT: 1
-      },
-      ismap: {
-        $: "isMap",
-        IMG: 1
-      },
-      nomodule: {
-        $: "noModule",
-        SCRIPT: 1
-      },
-      playsinline: {
-        $: "playsInline",
-        VIDEO: 1
-      },
-      readonly: {
-        $: "readOnly",
-        INPUT: 1,
-        TEXTAREA: 1
+    Aliases = /* @__PURE__ */ Object.assign(
+      /* @__PURE__ */ Object.create(null),
+      {
+        className: "class",
+        htmlFor: "for",
       }
-    });
+    );
+    PropAliases = /* @__PURE__ */ Object.assign(
+      /* @__PURE__ */ Object.create(null),
+      {
+        class: "className",
+        formnovalidate: {
+          $: "formNoValidate",
+          BUTTON: 1,
+          INPUT: 1,
+        },
+        ismap: {
+          $: "isMap",
+          IMG: 1,
+        },
+        nomodule: {
+          $: "noModule",
+          SCRIPT: 1,
+        },
+        playsinline: {
+          $: "playsInline",
+          VIDEO: 1,
+        },
+        readonly: {
+          $: "readOnly",
+          INPUT: 1,
+          TEXTAREA: 1,
+        },
+      }
+    );
     DelegatedEvents = /* @__PURE__ */ new Set([
       "beforeinput",
       "click",
@@ -1850,7 +2149,7 @@ var init_web = __esm({
       "pointerup",
       "touchend",
       "touchmove",
-      "touchstart"
+      "touchstart",
     ]);
     SVGElements = /* @__PURE__ */ new Set([
       "altGlyph",
@@ -1929,16 +2228,16 @@ var init_web = __esm({
       "tspan",
       "use",
       "view",
-      "vkern"
+      "vkern",
     ]);
     SVGNamespace = {
       xlink: "http://www.w3.org/1999/xlink",
-      xml: "http://www.w3.org/XML/1998/namespace"
+      xml: "http://www.w3.org/XML/1998/namespace",
     };
     $$EVENTS = "_$DX_DELEGATE";
     isServer = false;
     SVG_NAMESPACE = "http://www.w3.org/2000/svg";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/double-indexed-kv.js
@@ -1965,7 +2264,7 @@ var init_double_indexed_kv = __esm({
         this.valueToKey.clear();
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/registry.js
@@ -1997,7 +2296,7 @@ var init_registry = __esm({
         return this.kv.getByKey(identifier);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/class-registry.js
@@ -2024,7 +2323,7 @@ var init_class_registry = __esm({
         return this.classToAllowedProps.get(value);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js
@@ -2070,8 +2369,7 @@ function findArr(record, predicate) {
   return void 0;
 }
 var init_util = __esm({
-  "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js"() {
-  }
+  "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/util.js"() {},
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/custom-transformer-registry.js
@@ -2087,32 +2385,52 @@ var init_custom_transformer_registry = __esm({
         this.transfomers[transformer.name] = transformer;
       }
       findApplicable(v) {
-        return find(this.transfomers, (transformer) => transformer.isApplicable(v));
+        return find(this.transfomers, (transformer) =>
+          transformer.isApplicable(v)
+        );
       }
       findByName(name) {
         return this.transfomers[name];
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/is.js
-var getType, isUndefined, isNull, isPlainObject, isEmptyObject, isArray, isString, isNumber, isBoolean, isRegExp, isMap, isSet, isSymbol, isDate, isError, isNaNValue, isPrimitive, isBigint, isInfinite, isTypedArray, isURL;
+var getType,
+  isUndefined,
+  isNull,
+  isPlainObject,
+  isEmptyObject,
+  isArray,
+  isString,
+  isNumber,
+  isBoolean,
+  isRegExp,
+  isMap,
+  isSet,
+  isSymbol,
+  isDate,
+  isError,
+  isNaNValue,
+  isPrimitive,
+  isBigint,
+  isInfinite,
+  isTypedArray,
+  isURL;
 var init_is = __esm({
   "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/is.js"() {
     getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);
     isUndefined = (payload) => typeof payload === "undefined";
     isNull = (payload) => payload === null;
     isPlainObject = (payload) => {
-      if (typeof payload !== "object" || payload === null)
-        return false;
-      if (payload === Object.prototype)
-        return false;
-      if (Object.getPrototypeOf(payload) === null)
-        return true;
+      if (typeof payload !== "object" || payload === null) return false;
+      if (payload === Object.prototype) return false;
+      if (Object.getPrototypeOf(payload) === null) return true;
       return Object.getPrototypeOf(payload) === Object.prototype;
     };
-    isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;
+    isEmptyObject = (payload) =>
+      isPlainObject(payload) && Object.keys(payload).length === 0;
     isArray = (payload) => Array.isArray(payload);
     isString = (payload) => typeof payload === "string";
     isNumber = (payload) => typeof payload === "number" && !isNaN(payload);
@@ -2124,12 +2442,19 @@ var init_is = __esm({
     isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());
     isError = (payload) => payload instanceof Error;
     isNaNValue = (payload) => typeof payload === "number" && isNaN(payload);
-    isPrimitive = (payload) => isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);
+    isPrimitive = (payload) =>
+      isBoolean(payload) ||
+      isNull(payload) ||
+      isUndefined(payload) ||
+      isNumber(payload) ||
+      isString(payload) ||
+      isSymbol(payload);
     isBigint = (payload) => typeof payload === "bigint";
     isInfinite = (payload) => payload === Infinity || payload === -Infinity;
-    isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);
+    isTypedArray = (payload) =>
+      ArrayBuffer.isView(payload) && !(payload instanceof DataView);
     isURL = (payload) => payload instanceof URL;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/pathstringifier.js
@@ -2161,70 +2486,116 @@ var init_pathstringifier = __esm({
       result.push(lastSegment);
       return result;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js
-function simpleTransformation(isApplicable, annotation, transform, untransform) {
+function simpleTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
-function compositeTransformation(isApplicable, annotation, transform, untransform) {
+function compositeTransformation(
+  isApplicable,
+  annotation,
+  transform,
+  untransform
+) {
   return {
     isApplicable,
     annotation,
     transform,
-    untransform
+    untransform,
   };
 }
 function isInstanceOfRegisteredClass(potentialClass, superJson) {
   if (potentialClass?.constructor) {
-    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);
+    const isRegistered = !!superJson.classRegistry.getIdentifier(
+      potentialClass.constructor
+    );
     return isRegistered;
   }
   return false;
 }
-var simpleRules, symbolRule, constructorToName, typedArrayRule, classRule, customRule, compositeRules, transformValue, simpleRulesByAnnotation, untransformValue;
+var simpleRules,
+  symbolRule,
+  constructorToName,
+  typedArrayRule,
+  classRule,
+  customRule,
+  compositeRules,
+  transformValue,
+  simpleRulesByAnnotation,
+  untransformValue;
 var init_transformer = __esm({
   "../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/transformer.js"() {
     init_is();
     init_util();
     simpleRules = [
-      simpleTransformation(isUndefined, "undefined", () => null, () => void 0),
-      simpleTransformation(isBigint, "bigint", (v) => v.toString(), (v) => {
-        if (typeof BigInt !== "undefined") {
-          return BigInt(v);
+      simpleTransformation(
+        isUndefined,
+        "undefined",
+        () => null,
+        () => void 0
+      ),
+      simpleTransformation(
+        isBigint,
+        "bigint",
+        (v) => v.toString(),
+        (v) => {
+          if (typeof BigInt !== "undefined") {
+            return BigInt(v);
+          }
+          return v;
         }
-        return v;
-      }),
-      simpleTransformation(isDate, "Date", (v) => v.toISOString(), (v) => new Date(v)),
-      simpleTransformation(isError, "Error", (v, superJson) => {
-        const baseError = {
-          name: v.name,
-          message: v.message
-        };
-        superJson.allowedErrorProps.forEach((prop) => {
-          baseError[prop] = v[prop];
-        });
-        return baseError;
-      }, (v, superJson) => {
-        const e2 = new Error(v.message);
-        e2.name = v.name;
-        e2.stack = v.stack;
-        superJson.allowedErrorProps.forEach((prop) => {
-          e2[prop] = v[prop];
-        });
-        return e2;
-      }),
-      simpleTransformation(isRegExp, "regexp", (v) => "" + v, (regex) => {
-        const body = regex.slice(1, regex.lastIndexOf("/"));
-        const flags = regex.slice(regex.lastIndexOf("/") + 1);
-        return new RegExp(body, flags);
-      }),
+      ),
+      simpleTransformation(
+        isDate,
+        "Date",
+        (v) => v.toISOString(),
+        (v) => new Date(v)
+      ),
+      simpleTransformation(
+        isError,
+        "Error",
+        (v, superJson) => {
+          const baseError = {
+            name: v.name,
+            message: v.message,
+          };
+          superJson.allowedErrorProps.forEach((prop) => {
+            baseError[prop] = v[prop];
+          });
+          return baseError;
+        },
+        (v, superJson) => {
+          const e2 = new Error(v.message);
+          e2.name = v.name;
+          e2.stack = v.stack;
+          superJson.allowedErrorProps.forEach((prop) => {
+            e2[prop] = v[prop];
+          });
+          return e2;
+        }
+      ),
+      simpleTransformation(
+        isRegExp,
+        "regexp",
+        (v) => "" + v,
+        (regex) => {
+          const body = regex.slice(1, regex.lastIndexOf("/"));
+          const flags = regex.slice(regex.lastIndexOf("/") + 1);
+          return new RegExp(body, flags);
+        }
+      ),
       simpleTransformation(
         isSet,
         "set",
@@ -2233,38 +2604,63 @@ var init_transformer = __esm({
         (v) => [...v.values()],
         (v) => new Set(v)
       ),
-      simpleTransformation(isMap, "map", (v) => [...v.entries()], (v) => new Map(v)),
-      simpleTransformation((v) => isNaNValue(v) || isInfinite(v), "number", (v) => {
-        if (isNaNValue(v)) {
-          return "NaN";
+      simpleTransformation(
+        isMap,
+        "map",
+        (v) => [...v.entries()],
+        (v) => new Map(v)
+      ),
+      simpleTransformation(
+        (v) => isNaNValue(v) || isInfinite(v),
+        "number",
+        (v) => {
+          if (isNaNValue(v)) {
+            return "NaN";
+          }
+          if (v > 0) {
+            return "Infinity";
+          } else {
+            return "-Infinity";
+          }
+        },
+        Number
+      ),
+      simpleTransformation(
+        (v) => v === 0 && 1 / v === -Infinity,
+        "number",
+        () => {
+          return "-0";
+        },
+        Number
+      ),
+      simpleTransformation(
+        isURL,
+        "URL",
+        (v) => v.toString(),
+        (v) => new URL(v)
+      ),
+    ];
+    symbolRule = compositeTransformation(
+      (s2, superJson) => {
+        if (isSymbol(s2)) {
+          const isRegistered = !!superJson.symbolRegistry.getIdentifier(s2);
+          return isRegistered;
         }
-        if (v > 0) {
-          return "Infinity";
-        } else {
-          return "-Infinity";
+        return false;
+      },
+      (s2, superJson) => {
+        const identifier = superJson.symbolRegistry.getIdentifier(s2);
+        return ["symbol", identifier];
+      },
+      (v) => v.description,
+      (_, a2, superJson) => {
+        const value = superJson.symbolRegistry.getValue(a2[1]);
+        if (!value) {
+          throw new Error("Trying to deserialize unknown symbol");
         }
-      }, Number),
-      simpleTransformation((v) => v === 0 && 1 / v === -Infinity, "number", () => {
-        return "-0";
-      }, Number),
-      simpleTransformation(isURL, "URL", (v) => v.toString(), (v) => new URL(v))
-    ];
-    symbolRule = compositeTransformation((s2, superJson) => {
-      if (isSymbol(s2)) {
-        const isRegistered = !!superJson.symbolRegistry.getIdentifier(s2);
-        return isRegistered;
-      }
-      return false;
-    }, (s2, superJson) => {
-      const identifier = superJson.symbolRegistry.getIdentifier(s2);
-      return ["symbol", identifier];
-    }, (v) => v.description, (_, a2, superJson) => {
-      const value = superJson.symbolRegistry.getValue(a2[1]);
-      if (!value) {
-        throw new Error("Trying to deserialize unknown symbol");
+        return value;
       }
-      return value;
-    });
+    );
     constructorToName = [
       Int8Array,
       Uint8Array,
@@ -2274,67 +2670,96 @@ var init_transformer = __esm({
       Uint32Array,
       Float32Array,
       Float64Array,
-      Uint8ClampedArray
+      Uint8ClampedArray,
     ].reduce((obj, ctor) => {
       obj[ctor.name] = ctor;
       return obj;
     }, {});
-    typedArrayRule = compositeTransformation(isTypedArray, (v) => ["typed-array", v.constructor.name], (v) => [...v], (v, a2) => {
-      const ctor = constructorToName[a2[1]];
-      if (!ctor) {
-        throw new Error("Trying to deserialize unknown typed array");
-      }
-      return new ctor(v);
-    });
-    classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {
-      const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);
-      return ["class", identifier];
-    }, (clazz, superJson) => {
-      const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);
-      if (!allowedProps) {
-        return { ...clazz };
+    typedArrayRule = compositeTransformation(
+      isTypedArray,
+      (v) => ["typed-array", v.constructor.name],
+      (v) => [...v],
+      (v, a2) => {
+        const ctor = constructorToName[a2[1]];
+        if (!ctor) {
+          throw new Error("Trying to deserialize unknown typed array");
+        }
+        return new ctor(v);
       }
-      const result = {};
-      allowedProps.forEach((prop) => {
-        result[prop] = clazz[prop];
-      });
-      return result;
-    }, (v, a2, superJson) => {
-      const clazz = superJson.classRegistry.getValue(a2[1]);
-      if (!clazz) {
-        throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");
+    );
+    classRule = compositeTransformation(
+      isInstanceOfRegisteredClass,
+      (clazz, superJson) => {
+        const identifier = superJson.classRegistry.getIdentifier(
+          clazz.constructor
+        );
+        return ["class", identifier];
+      },
+      (clazz, superJson) => {
+        const allowedProps = superJson.classRegistry.getAllowedProps(
+          clazz.constructor
+        );
+        if (!allowedProps) {
+          return { ...clazz };
+        }
+        const result = {};
+        allowedProps.forEach((prop) => {
+          result[prop] = clazz[prop];
+        });
+        return result;
+      },
+      (v, a2, superJson) => {
+        const clazz = superJson.classRegistry.getValue(a2[1]);
+        if (!clazz) {
+          throw new Error(
+            "Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564"
+          );
+        }
+        return Object.assign(Object.create(clazz.prototype), v);
       }
-      return Object.assign(Object.create(clazz.prototype), v);
-    });
-    customRule = compositeTransformation((value, superJson) => {
-      return !!superJson.customTransformerRegistry.findApplicable(value);
-    }, (value, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findApplicable(value);
-      return ["custom", transformer.name];
-    }, (value, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findApplicable(value);
-      return transformer.serialize(value);
-    }, (v, a2, superJson) => {
-      const transformer = superJson.customTransformerRegistry.findByName(a2[1]);
-      if (!transformer) {
-        throw new Error("Trying to deserialize unknown custom value");
+    );
+    customRule = compositeTransformation(
+      (value, superJson) => {
+        return !!superJson.customTransformerRegistry.findApplicable(value);
+      },
+      (value, superJson) => {
+        const transformer =
+          superJson.customTransformerRegistry.findApplicable(value);
+        return ["custom", transformer.name];
+      },
+      (value, superJson) => {
+        const transformer =
+          superJson.customTransformerRegistry.findApplicable(value);
+        return transformer.serialize(value);
+      },
+      (v, a2, superJson) => {
+        const transformer = superJson.customTransformerRegistry.findByName(
+          a2[1]
+        );
+        if (!transformer) {
+          throw new Error("Trying to deserialize unknown custom value");
+        }
+        return transformer.deserialize(v);
       }
-      return transformer.deserialize(v);
-    });
+    );
     compositeRules = [classRule, symbolRule, customRule, typedArrayRule];
     transformValue = (value, superJson) => {
-      const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));
+      const applicableCompositeRule = findArr(compositeRules, (rule) =>
+        rule.isApplicable(value, superJson)
+      );
       if (applicableCompositeRule) {
         return {
           value: applicableCompositeRule.transform(value, superJson),
-          type: applicableCompositeRule.annotation(value, superJson)
+          type: applicableCompositeRule.annotation(value, superJson),
         };
       }
-      const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));
+      const applicableSimpleRule = findArr(simpleRules, (rule) =>
+        rule.isApplicable(value, superJson)
+      );
       if (applicableSimpleRule) {
         return {
           value: applicableSimpleRule.transform(value, superJson),
-          type: applicableSimpleRule.annotation
+          type: applicableSimpleRule.annotation,
         };
       }
       return void 0;
@@ -2365,7 +2790,7 @@ var init_transformer = __esm({
         return transformation.untransform(json, superJson);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/accessDeep.js
@@ -2486,7 +2911,7 @@ var init_accessDeep = __esm({
       }
       return object;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/plainer.js
@@ -2495,7 +2920,9 @@ function traverse(tree, walker2, origin = []) {
     return;
   }
   if (!isArray(tree)) {
-    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));
+    forEach(tree, (subtree, key) =>
+      traverse(subtree, walker2, [...origin, ...parsePath(key)])
+    );
     return;
   }
   const [nodeValue, children2] = tree;
@@ -2548,13 +2975,16 @@ function generateReferentialEqualityAnnotations(identitites, dedupe) {
       return;
     }
     if (!dedupe) {
-      paths = paths.map((path) => path.map(String)).sort((a2, b2) => a2.length - b2.length);
+      paths = paths
+        .map((path) => path.map(String))
+        .sort((a2, b2) => a2.length - b2.length);
     }
     const [representativePath, ...identicalPaths] = paths;
     if (representativePath.length === 0) {
       rootEqualityPaths = identicalPaths.map(stringifyPath);
     } else {
-      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);
+      result[stringifyPath(representativePath)] =
+        identicalPaths.map(stringifyPath);
     }
   });
   if (rootEqualityPaths) {
@@ -2576,26 +3006,43 @@ var init_plainer = __esm({
     init_util();
     init_pathstringifier();
     init_accessDeep();
-    isDeep = (object, superJson) => isPlainObject(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);
-    walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {
+    isDeep = (object, superJson) =>
+      isPlainObject(object) ||
+      isArray(object) ||
+      isMap(object) ||
+      isSet(object) ||
+      isInstanceOfRegisteredClass(object, superJson);
+    walker = (
+      object,
+      identities,
+      superJson,
+      dedupe,
+      path = [],
+      objectsInThisPath = [],
+      seenObjects = /* @__PURE__ */ new Map()
+    ) => {
       const primitive = isPrimitive(object);
       if (!primitive) {
         addIdentity(object, path, identities);
         const seen = seenObjects.get(object);
         if (seen) {
-          return dedupe ? {
-            transformedValue: null
-          } : seen;
+          return dedupe
+            ? {
+                transformedValue: null,
+              }
+            : seen;
         }
       }
       if (!isDeep(object, superJson)) {
         const transformed2 = transformValue(object, superJson);
-        const result2 = transformed2 ? {
-          transformedValue: transformed2.value,
-          annotations: [transformed2.type]
-        } : {
-          transformedValue: object
-        };
+        const result2 = transformed2
+          ? {
+              transformedValue: transformed2.value,
+              annotations: [transformed2.type],
+            }
+          : {
+              transformedValue: object,
+            };
         if (!primitive) {
           seenObjects.set(object, result2);
         }
@@ -2603,7 +3050,7 @@ var init_plainer = __esm({
       }
       if (includes(objectsInThisPath, object)) {
         return {
-          transformedValue: null
+          transformedValue: null,
         };
       }
       const transformationResult = transformValue(object, superJson);
@@ -2611,10 +3058,24 @@ var init_plainer = __esm({
       const transformedValue = isArray(transformed) ? [] : {};
       const innerAnnotations = {};
       forEach(transformed, (value, index) => {
-        if (index === "__proto__" || index === "constructor" || index === "prototype") {
-          throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);
+        if (
+          index === "__proto__" ||
+          index === "constructor" ||
+          index === "prototype"
+        ) {
+          throw new Error(
+            `Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`
+          );
         }
-        const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);
+        const recursiveResult = walker(
+          value,
+          identities,
+          superJson,
+          dedupe,
+          [...path, index],
+          [...objectsInThisPath, object],
+          seenObjects
+        );
         transformedValue[index] = recursiveResult.transformedValue;
         if (isArray(recursiveResult.annotations)) {
           innerAnnotations[index] = recursiveResult.annotations;
@@ -2624,19 +3085,25 @@ var init_plainer = __esm({
           });
         }
       });
-      const result = isEmptyObject(innerAnnotations) ? {
-        transformedValue,
-        annotations: !!transformationResult ? [transformationResult.type] : void 0
-      } : {
-        transformedValue,
-        annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations
-      };
+      const result = isEmptyObject(innerAnnotations)
+        ? {
+            transformedValue,
+            annotations: !!transformationResult
+              ? [transformationResult.type]
+              : void 0,
+          }
+        : {
+            transformedValue,
+            annotations: !!transformationResult
+              ? [transformationResult.type, innerAnnotations]
+              : innerAnnotations,
+          };
       if (!primitive) {
         seenObjects.set(object, result);
       }
       return result;
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js
@@ -2647,27 +3114,30 @@ function isArray2(payload) {
   return getType2(payload) === "Array";
 }
 function isPlainObject2(payload) {
-  if (getType2(payload) !== "Object")
-    return false;
+  if (getType2(payload) !== "Object") return false;
   const prototype = Object.getPrototypeOf(payload);
-  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;
+  return (
+    !!prototype &&
+    prototype.constructor === Object &&
+    prototype === Object.prototype
+  );
 }
 var init_dist = __esm({
-  "../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js"() {
-  }
+  "../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js"() {},
 });
 
 // ../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js
 function assignProp2(carry, key, newVal, originalObject, includeNonenumerable) {
-  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? "enumerable" : "nonenumerable";
-  if (propType === "enumerable")
-    carry[key] = newVal;
+  const propType = {}.propertyIsEnumerable.call(originalObject, key)
+    ? "enumerable"
+    : "nonenumerable";
+  if (propType === "enumerable") carry[key] = newVal;
   if (includeNonenumerable && propType === "nonenumerable") {
     Object.defineProperty(carry, key, {
       value: newVal,
       enumerable: false,
       writable: true,
-      configurable: true
+      configurable: true,
     });
   }
 }
@@ -2693,7 +3163,7 @@ function copy(target, options = {}) {
 var init_dist2 = __esm({
   "../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js"() {
     init_dist();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/superjson@2.2.1/node_modules/superjson/dist/index.js
@@ -2720,19 +3190,22 @@ var init_dist3 = __esm({
         const identities = /* @__PURE__ */ new Map();
         const output = walker(object, identities, this, this.dedupe);
         const res = {
-          json: output.transformedValue
+          json: output.transformedValue,
         };
         if (output.annotations) {
           res.meta = {
             ...res.meta,
-            values: output.annotations
+            values: output.annotations,
           };
         }
-        const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);
+        const equalityAnnotations = generateReferentialEqualityAnnotations(
+          identities,
+          this.dedupe
+        );
         if (equalityAnnotations) {
           res.meta = {
             ...res.meta,
-            referentialEqualities: equalityAnnotations
+            referentialEqualities: equalityAnnotations,
           };
         }
         return res;
@@ -2744,7 +3217,10 @@ var init_dist3 = __esm({
           result = applyValueAnnotations(result, meta.values, this);
         }
         if (meta?.referentialEqualities) {
-          result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
+          result = applyReferentialEqualityAnnotations(
+            result,
+            meta.referentialEqualities
+          );
         }
         return result;
       }
@@ -2763,7 +3239,7 @@ var init_dist3 = __esm({
       registerCustom(transformer, name) {
         this.customTransformerRegistry.register({
           name,
-          ...transformer
+          ...transformer,
         });
       }
       allowErrorProps(...props) {
@@ -2771,14 +3247,30 @@ var init_dist3 = __esm({
       }
     };
     SuperJSON.defaultInstance = new SuperJSON();
-    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);
-    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);
-    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);
-    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);
-    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);
-    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);
+    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(
+      SuperJSON.defaultInstance
+    );
+    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(
+      SuperJSON.defaultInstance
+    );
     serialize = SuperJSON.serialize;
     SuperJSON.deserialize;
     stringify = SuperJSON.stringify;
@@ -2787,46 +3279,91 @@ var init_dist3 = __esm({
     SuperJSON.registerCustom;
     SuperJSON.registerSymbol;
     SuperJSON.allowErrorProps;
-  }
+  },
 });
 
 // src/utils.tsx
 function getQueryStatusLabel(query) {
-  return query.state.fetchStatus === "fetching" ? "fetching" : !query.getObserversCount() ? "inactive" : query.state.fetchStatus === "paused" ? "paused" : query.isStale() ? "stale" : "fresh";
+  return query.state.fetchStatus === "fetching"
+    ? "fetching"
+    : !query.getObserversCount()
+    ? "inactive"
+    : query.state.fetchStatus === "paused"
+    ? "paused"
+    : query.isStale()
+    ? "stale"
+    : "fresh";
 }
 function getSidedProp(prop, side) {
   return `${prop}${side.charAt(0).toUpperCase() + side.slice(1)}`;
 }
-function getQueryStatusColor({
-  queryState,
-  observerCount,
-  isStale
-}) {
-  return queryState.fetchStatus === "fetching" ? "blue" : !observerCount ? "gray" : queryState.fetchStatus === "paused" ? "purple" : isStale ? "yellow" : "green";
-}
-function getMutationStatusColor({
-  status,
-  isPaused
-}) {
-  return isPaused ? "purple" : status === "error" ? "red" : status === "pending" ? "yellow" : status === "success" ? "green" : "gray";
+function getQueryStatusColor({ queryState, observerCount, isStale }) {
+  return queryState?.fetchStatus === "fetching"
+    ? "blue"
+    : !observerCount
+    ? "gray"
+    : queryState.fetchStatus === "paused"
+    ? "purple"
+    : isStale
+    ? "yellow"
+    : "green";
+}
+function getMutationStatusColor({ status, isPaused }) {
+  return isPaused
+    ? "purple"
+    : status === "error"
+    ? "red"
+    : status === "pending"
+    ? "yellow"
+    : status === "success"
+    ? "green"
+    : "gray";
 }
 function getQueryStatusColorByLabel(label) {
-  return label === "fresh" ? "green" : label === "stale" ? "yellow" : label === "paused" ? "purple" : label === "inactive" ? "gray" : "blue";
-}
-var displayValue, getStatusRank, queryHashSort, dateSort, statusAndDateSort, sortFns, getMutationStatusRank, mutationDateSort, mutationStatusSort, mutationSortFns, convertRemToPixels, getPreferredColorScheme, updateNestedDataByPath, deleteNestedDataByPath, setupStyleSheet;
+  return label === "fresh"
+    ? "green"
+    : label === "stale"
+    ? "yellow"
+    : label === "paused"
+    ? "purple"
+    : label === "inactive"
+    ? "gray"
+    : "blue";
+}
+var displayValue,
+  getStatusRank,
+  queryHashSort,
+  dateSort,
+  statusAndDateSort,
+  sortFns,
+  getMutationStatusRank,
+  mutationDateSort,
+  mutationStatusSort,
+  mutationSortFns,
+  convertRemToPixels,
+  getPreferredColorScheme,
+  updateNestedDataByPath,
+  deleteNestedDataByPath,
+  setupStyleSheet;
 var init_utils = __esm({
   "src/utils.tsx"() {
     init_dist3();
     init_solid();
     displayValue = (value, beautify = false) => {
-      const {
-        json
-      } = serialize(value);
+      const { json } = serialize(value);
       return JSON.stringify(json, null, beautify ? 2 : void 0);
     };
-    getStatusRank = (q) => q.state.fetchStatus !== "idle" ? 0 : !q.getObserversCount() ? 3 : q.isStale() ? 2 : 1;
+    getStatusRank = (q) =>
+      q.state.fetchStatus !== "idle"
+        ? 0
+        : !q.getObserversCount()
+        ? 3
+        : q.isStale()
+        ? 2
+        : 1;
     queryHashSort = (a2, b2) => a2.queryHash.localeCompare(b2.queryHash);
-    dateSort = (a2, b2) => a2.state.dataUpdatedAt < b2.state.dataUpdatedAt ? 1 : -1;
+    dateSort = (a2, b2) =>
+      a2.state.dataUpdatedAt < b2.state.dataUpdatedAt ? 1 : -1;
     statusAndDateSort = (a2, b2) => {
       if (getStatusRank(a2) === getStatusRank(b2)) {
         return dateSort(a2, b2);
@@ -2836,10 +3373,18 @@ var init_utils = __esm({
     sortFns = {
       status: statusAndDateSort,
       "query hash": queryHashSort,
-      "last updated": dateSort
+      "last updated": dateSort,
     };
-    getMutationStatusRank = (m) => m.state.isPaused ? 0 : m.state.status === "error" ? 2 : m.state.status === "pending" ? 1 : 3;
-    mutationDateSort = (a2, b2) => a2.state.submittedAt < b2.state.submittedAt ? 1 : -1;
+    getMutationStatusRank = (m) =>
+      m.state.isPaused
+        ? 0
+        : m.state.status === "error"
+        ? 2
+        : m.state.status === "pending"
+        ? 1
+        : 3;
+    mutationDateSort = (a2, b2) =>
+      a2.state.submittedAt < b2.state.submittedAt ? 1 : -1;
     mutationStatusSort = (a2, b2) => {
       if (getMutationStatusRank(a2) === getMutationStatusRank(b2)) {
         return mutationDateSort(a2, b2);
@@ -2848,10 +3393,12 @@ var init_utils = __esm({
     };
     mutationSortFns = {
       status: mutationStatusSort,
-      "last updated": mutationDateSort
+      "last updated": mutationDateSort,
     };
     convertRemToPixels = (rem) => {
-      return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);
+      return (
+        rem * parseFloat(getComputedStyle(document.documentElement).fontSize)
+      );
     };
     getPreferredColorScheme = () => {
       const [colorScheme, setColorScheme] = createSignal("dark");
@@ -2877,11 +3424,18 @@ var init_utils = __esm({
           return newData;
         }
         const [head, ...tail] = updatePath;
-        newData.set(head, updateNestedDataByPath(newData.get(head), tail, value));
+        newData.set(
+          head,
+          updateNestedDataByPath(newData.get(head), tail, value)
+        );
         return newData;
       }
       if (oldData instanceof Set) {
-        const setAsArray = updateNestedDataByPath(Array.from(oldData), updatePath, value);
+        const setAsArray = updateNestedDataByPath(
+          Array.from(oldData),
+          updatePath,
+          value
+        );
         return new Set(setAsArray);
       }
       if (Array.isArray(oldData)) {
@@ -2896,7 +3450,7 @@ var init_utils = __esm({
       }
       if (oldData instanceof Object) {
         const newData = {
-          ...oldData
+          ...oldData,
         };
         if (updatePath.length === 1) {
           newData[updatePath[0]] = value;
@@ -2920,7 +3474,10 @@ var init_utils = __esm({
         return newData;
       }
       if (oldData instanceof Set) {
-        const setAsArray = deleteNestedDataByPath(Array.from(oldData), deletePath);
+        const setAsArray = deleteNestedDataByPath(
+          Array.from(oldData),
+          deletePath
+        );
         return new Set(setAsArray);
       }
       if (Array.isArray(oldData)) {
@@ -2934,7 +3491,7 @@ var init_utils = __esm({
       }
       if (oldData instanceof Object) {
         const newData = {
-          ...oldData
+          ...oldData,
         };
         if (deletePath.length === 1) {
           delete newData[deletePath[0]];
@@ -2948,7 +3505,8 @@ var init_utils = __esm({
     };
     setupStyleSheet = (nonce, target) => {
       if (!nonce) return;
-      const styleExists = document.querySelector("#_goober") || target?.querySelector("#_goober");
+      const styleExists =
+        document.querySelector("#_goober") || target?.querySelector("#_goober");
       if (styleExists) return;
       const styleTag = document.createElement("style");
       const textNode = document.createTextNode("");
@@ -2961,14 +3519,13 @@ var init_utils = __esm({
         document.head.appendChild(styleTag);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js
 function chain(callbacks) {
   return (...args) => {
-    for (const callback of callbacks)
-      callback && callback(...args);
+    for (const callback of callbacks) callback && callback(...args);
   };
 }
 function accessWith(valueOrFn, ...args) {
@@ -2979,33 +3536,35 @@ function handleDiffArray(current, prev, handleAdded, handleRemoved) {
   const prevLength = prev.length;
   let i2 = 0;
   if (!prevLength) {
-    for (; i2 < currLength; i2++)
-      handleAdded(current[i2]);
+    for (; i2 < currLength; i2++) handleAdded(current[i2]);
     return;
   }
   if (!currLength) {
-    for (; i2 < prevLength; i2++)
-      handleRemoved(prev[i2]);
+    for (; i2 < prevLength; i2++) handleRemoved(prev[i2]);
     return;
   }
   for (; i2 < prevLength; i2++) {
-    if (prev[i2] !== current[i2])
-      break;
+    if (prev[i2] !== current[i2]) break;
   }
   let prevEl;
   let currEl;
   prev = prev.slice(i2);
   current = current.slice(i2);
   for (prevEl of prev) {
-    if (!current.includes(prevEl))
-      handleRemoved(prevEl);
+    if (!current.includes(prevEl)) handleRemoved(prevEl);
   }
   for (currEl of current) {
-    if (!prev.includes(currEl))
-      handleAdded(currEl);
+    if (!prev.includes(currEl)) handleAdded(currEl);
   }
 }
-var isClient, isDev, noop, isNonNullable, filterNonNullable, access, asArray, tryOnCleanup;
+var isClient,
+  isDev,
+  noop,
+  isNonNullable,
+  filterNonNullable,
+  access,
+  asArray,
+  tryOnCleanup;
 var init_R5675YMU = __esm({
   "../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js"() {
     init_solid();
@@ -3015,29 +3574,37 @@ var init_R5675YMU = __esm({
     noop = () => void 0;
     isNonNullable = (i2) => i2 != null;
     filterNonNullable = (arr) => arr.filter(isNonNullable);
-    access = (v) => typeof v === "function" && !v.length ? v() : v;
-    asArray = (value) => Array.isArray(value) ? value : value ? [value] : [];
-    tryOnCleanup = isDev ? (fn) => getOwner() ? onCleanup(fn) : fn : onCleanup;
-  }
+    access = (v) => (typeof v === "function" && !v.length ? v() : v);
+    asArray = (value) => (Array.isArray(value) ? value : value ? [value] : []);
+    tryOnCleanup = isDev
+      ? (fn) => (getOwner() ? onCleanup(fn) : fn)
+      : onCleanup;
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/index/index.js
 var init_index = __esm({
   "../../node_modules/.pnpm/@solid-primitives+utils@6.2.3_solid-js@1.9.5/node_modules/@solid-primitives/utils/dist/index/index.js"() {
     init_R5675YMU();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+storage@1.3.11_solid-js@1.9.5/node_modules/@solid-primitives/storage/dist/index.js
 function createStorage(props) {
   const [error, setError] = createSignal();
-  const handleError2 = props?.throw ? (err, fallback) => {
-    setError(err instanceof Error ? err : new Error(fallback));
-    throw err;
-  } : (err, fallback) => {
-    setError(err instanceof Error ? err : new Error(fallback));
-  };
-  const apis = props?.api ? Array.isArray(props.api) ? props.api : [props.api] : [globalThis.localStorage].filter(Boolean);
+  const handleError2 = props?.throw
+    ? (err, fallback) => {
+        setError(err instanceof Error ? err : new Error(fallback));
+        throw err;
+      }
+    : (err, fallback) => {
+        setError(err instanceof Error ? err : new Error(fallback));
+      };
+  const apis = props?.api
+    ? Array.isArray(props.api)
+      ? props.api
+      : [props.api]
+    : [globalThis.localStorage].filter(Boolean);
   const prefix = props?.prefix ? `${props.prefix}.` : "";
   const signals = /* @__PURE__ */ new Map();
   const store = new Proxy(
@@ -3050,59 +3617,70 @@ function createStorage(props) {
           signals.set(key, node);
         }
         node[0]();
-        const value = apis.reduce(
-          (result, api) => {
-            if (result !== null || !api) {
-              return result;
-            }
-            try {
-              return api.getItem(`${prefix}${key}`);
-            } catch (err) {
-              handleError2(err, `Error reading ${prefix}${key} from ${api["name"]}`);
-              return null;
-            }
-          },
-          null
-        );
+        const value = apis.reduce((result, api) => {
+          if (result !== null || !api) {
+            return result;
+          }
+          try {
+            return api.getItem(`${prefix}${key}`);
+          } catch (err) {
+            handleError2(
+              err,
+              `Error reading ${prefix}${key} from ${api["name"]}`
+            );
+            return null;
+          }
+        }, null);
         if (value !== null && props?.deserializer) {
           return props.deserializer(value, key, props.options);
         }
         return value;
-      }
+      },
     }
   );
   const setter = (key, value, options) => {
-    const filteredValue = props?.serializer ? props.serializer(value, key, options ?? props.options) : value;
+    const filteredValue = props?.serializer
+      ? props.serializer(value, key, options ?? props.options)
+      : value;
     const apiKey = `${prefix}${key}`;
     apis.forEach((api) => {
       try {
-        api.getItem(apiKey) !== filteredValue && api.setItem(apiKey, filteredValue);
+        api.getItem(apiKey) !== filteredValue &&
+          api.setItem(apiKey, filteredValue);
       } catch (err) {
-        handleError2(err, `Error setting ${prefix}${key} to ${filteredValue} in ${api.name}`);
+        handleError2(
+          err,
+          `Error setting ${prefix}${key} to ${filteredValue} in ${api.name}`
+        );
       }
     });
     const node = signals.get(key);
     node && node[1]();
   };
-  const remove = (key) => apis.forEach((api) => {
-    try {
-      api.removeItem(`${prefix}${key}`);
-    } catch (err) {
-      handleError2(err, `Error removing ${prefix}${key} from ${api.name}`);
-    }
-  });
-  const clear = () => apis.forEach((api) => {
-    try {
-      api.clear();
-    } catch (err) {
-      handleError2(err, `Error clearing ${api.name}`);
-    }
-  });
+  const remove = (key) =>
+    apis.forEach((api) => {
+      try {
+        api.removeItem(`${prefix}${key}`);
+      } catch (err) {
+        handleError2(err, `Error removing ${prefix}${key} from ${api.name}`);
+      }
+    });
+  const clear = () =>
+    apis.forEach((api) => {
+      try {
+        api.clear();
+      } catch (err) {
+        handleError2(err, `Error clearing ${api.name}`);
+      }
+    });
   const toJSON = () => {
     const result = {};
     const addValue = (key, value) => {
       if (!result.hasOwnProperty(key)) {
-        const filteredValue = value && props?.deserializer ? props.deserializer(value, key, props.options) : value;
+        const filteredValue =
+          value && props?.deserializer
+            ? props.deserializer(value, key, props.options)
+            : value;
         if (filteredValue) {
           result[key] = filteredValue;
         }
@@ -3120,9 +3698,10 @@ function createStorage(props) {
           addValue(key, values[key]);
         }
       } else {
-        let index = 0, key;
+        let index = 0,
+          key;
         try {
-          while (key = api.key(index++)) {
+          while ((key = api.key(index++))) {
             if (!result.hasOwnProperty(key)) {
               addValue(key, api.getItem(key));
             }
@@ -3134,32 +3713,41 @@ function createStorage(props) {
     });
     return result;
   };
-  props?.sync !== false && onMount(() => {
-    const listener = (ev) => {
-      let changed = false;
-      apis.forEach((api) => {
-        try {
-          if (api !== ev.storageArea && ev.key && ev.newValue !== api.getItem(ev.key)) {
-            ev.newValue ? api.setItem(ev.key, ev.newValue) : api.removeItem(ev.key);
-            changed = true;
+  props?.sync !== false &&
+    onMount(() => {
+      const listener = (ev) => {
+        let changed = false;
+        apis.forEach((api) => {
+          try {
+            if (
+              api !== ev.storageArea &&
+              ev.key &&
+              ev.newValue !== api.getItem(ev.key)
+            ) {
+              ev.newValue
+                ? api.setItem(ev.key, ev.newValue)
+                : api.removeItem(ev.key);
+              changed = true;
+            }
+          } catch (err) {
+            handleError2(
+              err,
+              `Error synching api ${api.name} from storage event (${ev.key}=${ev.newValue})`
+            );
           }
-        } catch (err) {
-          handleError2(
-            err,
-            `Error synching api ${api.name} from storage event (${ev.key}=${ev.newValue})`
-          );
-        }
-      });
-      changed && ev.key && signals.get(ev.key)?.[1]();
-    };
-    if ("addEventListener" in globalThis) {
-      globalThis.addEventListener("storage", listener);
-      onCleanup(() => globalThis.removeEventListener("storage", listener));
-    } else {
-      apis.forEach((api) => api.addEventListener?.("storage", listener));
-      onCleanup(() => apis.forEach((api) => api.removeEventListener?.("storage", listener)));
-    }
-  });
+        });
+        changed && ev.key && signals.get(ev.key)?.[1]();
+      };
+      if ("addEventListener" in globalThis) {
+        globalThis.addEventListener("storage", listener);
+        onCleanup(() => globalThis.removeEventListener("storage", listener));
+      } else {
+        apis.forEach((api) => api.addEventListener?.("storage", listener));
+        onCleanup(() =>
+          apis.forEach((api) => api.removeEventListener?.("storage", listener))
+        );
+      }
+    });
   return [
     store,
     setter,
@@ -3167,8 +3755,8 @@ function createStorage(props) {
       clear,
       error,
       remove,
-      toJSON
-    }
+      toJSON,
+    },
   ];
 }
 var createLocalStorage, addClearMethod, serializeCookieOptions, cookieStorage;
@@ -3182,7 +3770,7 @@ var init_dist4 = __esm({
       }
       storage.clear = () => {
         let key;
-        while (key = storage.key(0)) {
+        while ((key = storage.key(0))) {
           storage.removeItem(key);
         }
       };
@@ -3198,30 +3786,40 @@ var init_dist4 = __esm({
           continue;
         }
         const value = options[key];
-        memo += value instanceof Date ? `; ${key}=${value.toUTCString()}` : typeof value === "boolean" ? `; ${key}` : `; ${key}=${value}`;
+        memo +=
+          value instanceof Date
+            ? `; ${key}=${value.toUTCString()}`
+            : typeof value === "boolean"
+            ? `; ${key}`
+            : `; ${key}=${value}`;
       }
       return memo;
     };
     cookieStorage = addClearMethod({
       _cookies: [globalThis.document, "cookie"],
-      getItem: (key) => cookieStorage._cookies[0][cookieStorage._cookies[1]].match("(^|;)\\s*" + key + "\\s*=\\s*([^;]+)")?.pop() ?? null,
+      getItem: (key) =>
+        cookieStorage._cookies[0][cookieStorage._cookies[1]]
+          .match("(^|;)\\s*" + key + "\\s*=\\s*([^;]+)")
+          ?.pop() ?? null,
       setItem: (key, value, options) => {
         const oldValue = cookieStorage.getItem(key);
-        cookieStorage._cookies[0][cookieStorage._cookies[1]] = `${key}=${value}${serializeCookieOptions(
-          options
-        )}`;
+        cookieStorage._cookies[0][
+          cookieStorage._cookies[1]
+        ] = `${key}=${value}${serializeCookieOptions(options)}`;
         const storageEvent = Object.assign(new Event("storage"), {
           key,
           oldValue,
           newValue: value,
           url: globalThis.document.URL,
-          storageArea: cookieStorage
+          storageArea: cookieStorage,
         });
         window.dispatchEvent(storageEvent);
       },
       removeItem: (key) => {
-        cookieStorage._cookies[0][cookieStorage._cookies[1]] = `${key}=deleted${serializeCookieOptions({
-          expires: /* @__PURE__ */ new Date(0)
+        cookieStorage._cookies[0][
+          cookieStorage._cookies[1]
+        ] = `${key}=deleted${serializeCookieOptions({
+          expires: /* @__PURE__ */ new Date(0),
         })}`;
       },
       key: (index) => {
@@ -3248,9 +3846,9 @@ var init_dist4 = __esm({
           }
         );
         return length;
-      }
+      },
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.19.4/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs
@@ -3262,7 +3860,10 @@ function removeAccents(str) {
 function rankItem(item, value, options) {
   var _options$threshold;
   options = options || {};
-  options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;
+  options.threshold =
+    (_options$threshold = options.threshold) != null
+      ? _options$threshold
+      : rankings.MATCHES;
   if (!options.accessors) {
     const rank = getMatchRanking(item, value, options);
     return {
@@ -3271,7 +3872,7 @@ function rankItem(item, value, options) {
       rank,
       accessorIndex: -1,
       accessorThreshold: options.threshold,
-      passed: rank >= options.threshold
+      passed: rank >= options.threshold,
     };
   }
   const valuesToRank = getAllValuesToRank(item, options.accessors);
@@ -3280,7 +3881,7 @@ function rankItem(item, value, options) {
     rank: rankings.NO_MATCH,
     accessorIndex: -1,
     accessorThreshold: options.threshold,
-    passed: false
+    passed: false,
   };
   for (let i2 = 0; i2 < valuesToRank.length; i2++) {
     const rankValue = valuesToRank[i2];
@@ -3288,7 +3889,7 @@ function rankItem(item, value, options) {
     const {
       minRanking,
       maxRanking,
-      threshold = options.threshold
+      threshold = options.threshold,
     } = rankValue.attributes;
     if (newRank < minRanking && newRank >= rankings.MATCHES) {
       newRank = minRanking;
@@ -3383,9 +3984,7 @@ function getClosenessRanking(testString, stringToRank) {
   return getRanking(spread2);
 }
 function prepareValueForComparison(value, _ref) {
-  let {
-    keepDiacritics
-  } = _ref;
+  let { keepDiacritics } = _ref;
   value = `${value}`;
   if (!keepDiacritics) {
     value = removeAccents(value);
@@ -3415,7 +4014,7 @@ function getAllValuesToRank(item, accessors) {
     for (let i2 = 0, I = itemValues.length; i2 < I; i2++) {
       allValues.push({
         itemValue: itemValues[i2],
-        attributes
+        attributes,
       });
     }
   }
@@ -3427,412 +4026,412 @@ function getAccessorAttributes(accessor) {
   }
   return {
     ...defaultKeyAttributes,
-    ...accessor
+    ...accessor,
   };
 }
 var characterMap, chars, allAccents, rankings, defaultKeyAttributes;
 var init_lib = __esm({
   "../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.19.4/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs"() {
     characterMap = {
-      \u00C0: "A",
-      \u00C1: "A",
-      \u00C2: "A",
-      \u00C3: "A",
-      \u00C4: "A",
-      \u00C5: "A",
-      \u1EA4: "A",
-      \u1EAE: "A",
-      \u1EB2: "A",
-      \u1EB4: "A",
-      \u1EB6: "A",
-      \u00C6: "AE",
-      \u1EA6: "A",
-      \u1EB0: "A",
-      \u0202: "A",
-      \u00C7: "C",
-      \u1E08: "C",
-      \u00C8: "E",
-      \u00C9: "E",
-      \u00CA: "E",
-      \u00CB: "E",
-      \u1EBE: "E",
-      \u1E16: "E",
-      \u1EC0: "E",
-      \u1E14: "E",
-      \u1E1C: "E",
-      \u0206: "E",
-      \u00CC: "I",
-      \u00CD: "I",
-      \u00CE: "I",
-      \u00CF: "I",
-      \u1E2E: "I",
-      \u020A: "I",
-      \u00D0: "D",
-      \u00D1: "N",
-      \u00D2: "O",
-      \u00D3: "O",
-      \u00D4: "O",
-      \u00D5: "O",
-      \u00D6: "O",
-      \u00D8: "O",
-      \u1ED0: "O",
-      \u1E4C: "O",
-      \u1E52: "O",
-      \u020E: "O",
-      \u00D9: "U",
-      \u00DA: "U",
-      \u00DB: "U",
-      \u00DC: "U",
-      \u00DD: "Y",
-      \u00E0: "a",
-      \u00E1: "a",
-      \u00E2: "a",
-      \u00E3: "a",
-      \u00E4: "a",
-      \u00E5: "a",
-      \u1EA5: "a",
-      \u1EAF: "a",
-      \u1EB3: "a",
-      \u1EB5: "a",
-      \u1EB7: "a",
-      \u00E6: "ae",
-      \u1EA7: "a",
-      \u1EB1: "a",
-      \u0203: "a",
-      \u00E7: "c",
-      \u1E09: "c",
-      \u00E8: "e",
-      \u00E9: "e",
-      \u00EA: "e",
-      \u00EB: "e",
-      \u1EBF: "e",
-      \u1E17: "e",
-      \u1EC1: "e",
-      \u1E15: "e",
-      \u1E1D: "e",
-      \u0207: "e",
-      \u00EC: "i",
-      \u00ED: "i",
-      \u00EE: "i",
-      \u00EF: "i",
-      \u1E2F: "i",
-      \u020B: "i",
-      \u00F0: "d",
-      \u00F1: "n",
-      \u00F2: "o",
-      \u00F3: "o",
-      \u00F4: "o",
-      \u00F5: "o",
-      \u00F6: "o",
-      \u00F8: "o",
-      \u1ED1: "o",
-      \u1E4D: "o",
-      \u1E53: "o",
-      \u020F: "o",
-      \u00F9: "u",
-      \u00FA: "u",
-      \u00FB: "u",
-      \u00FC: "u",
-      \u00FD: "y",
-      \u00FF: "y",
-      \u0100: "A",
-      \u0101: "a",
-      \u0102: "A",
-      \u0103: "a",
-      \u0104: "A",
-      \u0105: "a",
-      \u0106: "C",
-      \u0107: "c",
-      \u0108: "C",
-      \u0109: "c",
-      \u010A: "C",
-      \u010B: "c",
-      \u010C: "C",
-      \u010D: "c",
-      C\u0306: "C",
-      c\u0306: "c",
-      \u010E: "D",
-      \u010F: "d",
-      \u0110: "D",
-      \u0111: "d",
-      \u0112: "E",
-      \u0113: "e",
-      \u0114: "E",
-      \u0115: "e",
-      \u0116: "E",
-      \u0117: "e",
-      \u0118: "E",
-      \u0119: "e",
-      \u011A: "E",
-      \u011B: "e",
-      \u011C: "G",
-      \u01F4: "G",
-      \u011D: "g",
-      \u01F5: "g",
-      \u011E: "G",
-      \u011F: "g",
-      \u0120: "G",
-      \u0121: "g",
-      \u0122: "G",
-      \u0123: "g",
-      \u0124: "H",
-      \u0125: "h",
-      \u0126: "H",
-      \u0127: "h",
-      \u1E2A: "H",
-      \u1E2B: "h",
-      \u0128: "I",
-      \u0129: "i",
-      \u012A: "I",
-      \u012B: "i",
-      \u012C: "I",
-      \u012D: "i",
-      \u012E: "I",
-      \u012F: "i",
-      \u0130: "I",
-      \u0131: "i",
-      \u0132: "IJ",
-      \u0133: "ij",
-      \u0134: "J",
-      \u0135: "j",
-      \u0136: "K",
-      \u0137: "k",
-      \u1E30: "K",
-      \u1E31: "k",
-      K\u0306: "K",
-      k\u0306: "k",
-      \u0139: "L",
-      \u013A: "l",
-      \u013B: "L",
-      \u013C: "l",
-      \u013D: "L",
-      \u013E: "l",
-      \u013F: "L",
-      \u0140: "l",
-      \u0141: "l",
-      \u0142: "l",
-      \u1E3E: "M",
-      \u1E3F: "m",
-      M\u0306: "M",
-      m\u0306: "m",
-      \u0143: "N",
-      \u0144: "n",
-      \u0145: "N",
-      \u0146: "n",
-      \u0147: "N",
-      \u0148: "n",
-      \u0149: "n",
-      N\u0306: "N",
-      n\u0306: "n",
-      \u014C: "O",
-      \u014D: "o",
-      \u014E: "O",
-      \u014F: "o",
-      \u0150: "O",
-      \u0151: "o",
-      \u0152: "OE",
-      \u0153: "oe",
-      P\u0306: "P",
-      p\u0306: "p",
-      \u0154: "R",
-      \u0155: "r",
-      \u0156: "R",
-      \u0157: "r",
-      \u0158: "R",
-      \u0159: "r",
-      R\u0306: "R",
-      r\u0306: "r",
-      \u0212: "R",
-      \u0213: "r",
-      \u015A: "S",
-      \u015B: "s",
-      \u015C: "S",
-      \u015D: "s",
-      \u015E: "S",
-      \u0218: "S",
-      \u0219: "s",
-      \u015F: "s",
-      \u0160: "S",
-      \u0161: "s",
-      \u0162: "T",
-      \u0163: "t",
-      \u021B: "t",
-      \u021A: "T",
-      \u0164: "T",
-      \u0165: "t",
-      \u0166: "T",
-      \u0167: "t",
-      T\u0306: "T",
-      t\u0306: "t",
-      \u0168: "U",
-      \u0169: "u",
-      \u016A: "U",
-      \u016B: "u",
-      \u016C: "U",
-      \u016D: "u",
-      \u016E: "U",
-      \u016F: "u",
-      \u0170: "U",
-      \u0171: "u",
-      \u0172: "U",
-      \u0173: "u",
-      \u0216: "U",
-      \u0217: "u",
-      V\u0306: "V",
-      v\u0306: "v",
-      \u0174: "W",
-      \u0175: "w",
-      \u1E82: "W",
-      \u1E83: "w",
-      X\u0306: "X",
-      x\u0306: "x",
-      \u0176: "Y",
-      \u0177: "y",
-      \u0178: "Y",
-      Y\u0306: "Y",
-      y\u0306: "y",
-      \u0179: "Z",
-      \u017A: "z",
-      \u017B: "Z",
-      \u017C: "z",
-      \u017D: "Z",
-      \u017E: "z",
-      \u017F: "s",
-      \u0192: "f",
-      \u01A0: "O",
-      \u01A1: "o",
-      \u01AF: "U",
-      \u01B0: "u",
-      \u01CD: "A",
-      \u01CE: "a",
-      \u01CF: "I",
-      \u01D0: "i",
-      \u01D1: "O",
-      \u01D2: "o",
-      \u01D3: "U",
-      \u01D4: "u",
-      \u01D5: "U",
-      \u01D6: "u",
-      \u01D7: "U",
-      \u01D8: "u",
-      \u01D9: "U",
-      \u01DA: "u",
-      \u01DB: "U",
-      \u01DC: "u",
-      \u1EE8: "U",
-      \u1EE9: "u",
-      \u1E78: "U",
-      \u1E79: "u",
-      \u01FA: "A",
-      \u01FB: "a",
-      \u01FC: "AE",
-      \u01FD: "ae",
-      \u01FE: "O",
-      \u01FF: "o",
-      \u00DE: "TH",
-      \u00FE: "th",
-      \u1E54: "P",
-      \u1E55: "p",
-      \u1E64: "S",
-      \u1E65: "s",
-      X\u0301: "X",
-      x\u0301: "x",
-      \u0403: "\u0413",
-      \u0453: "\u0433",
-      \u040C: "\u041A",
-      \u045C: "\u043A",
-      A\u030B: "A",
-      a\u030B: "a",
-      E\u030B: "E",
-      e\u030B: "e",
-      I\u030B: "I",
-      i\u030B: "i",
-      \u01F8: "N",
-      \u01F9: "n",
-      \u1ED2: "O",
-      \u1ED3: "o",
-      \u1E50: "O",
-      \u1E51: "o",
-      \u1EEA: "U",
-      \u1EEB: "u",
-      \u1E80: "W",
-      \u1E81: "w",
-      \u1EF2: "Y",
-      \u1EF3: "y",
-      \u0200: "A",
-      \u0201: "a",
-      \u0204: "E",
-      \u0205: "e",
-      \u0208: "I",
-      \u0209: "i",
-      \u020C: "O",
-      \u020D: "o",
-      \u0210: "R",
-      \u0211: "r",
-      \u0214: "U",
-      \u0215: "u",
-      B\u030C: "B",
-      b\u030C: "b",
-      \u010C\u0323: "C",
-      \u010D\u0323: "c",
-      \u00CA\u030C: "E",
-      \u00EA\u030C: "e",
-      F\u030C: "F",
-      f\u030C: "f",
-      \u01E6: "G",
-      \u01E7: "g",
-      \u021E: "H",
-      \u021F: "h",
-      J\u030C: "J",
-      \u01F0: "j",
-      \u01E8: "K",
-      \u01E9: "k",
-      M\u030C: "M",
-      m\u030C: "m",
-      P\u030C: "P",
-      p\u030C: "p",
-      Q\u030C: "Q",
-      q\u030C: "q",
-      \u0158\u0329: "R",
-      \u0159\u0329: "r",
-      \u1E66: "S",
-      \u1E67: "s",
-      V\u030C: "V",
-      v\u030C: "v",
-      W\u030C: "W",
-      w\u030C: "w",
-      X\u030C: "X",
-      x\u030C: "x",
-      Y\u030C: "Y",
-      y\u030C: "y",
-      A\u0327: "A",
-      a\u0327: "a",
-      B\u0327: "B",
-      b\u0327: "b",
-      \u1E10: "D",
-      \u1E11: "d",
-      \u0228: "E",
-      \u0229: "e",
-      \u0190\u0327: "E",
-      \u025B\u0327: "e",
-      \u1E28: "H",
-      \u1E29: "h",
-      I\u0327: "I",
-      i\u0327: "i",
-      \u0197\u0327: "I",
-      \u0268\u0327: "i",
-      M\u0327: "M",
-      m\u0327: "m",
-      O\u0327: "O",
-      o\u0327: "o",
-      Q\u0327: "Q",
-      q\u0327: "q",
-      U\u0327: "U",
-      u\u0327: "u",
-      X\u0327: "X",
-      x\u0327: "x",
-      Z\u0327: "Z",
-      z\u0327: "z"
+      À: "A",
+      Á: "A",
+      Â: "A",
+      Ã: "A",
+      Ä: "A",
+      Å: "A",
+      Ấ: "A",
+      Ắ: "A",
+      Ẳ: "A",
+      Ẵ: "A",
+      Ặ: "A",
+      Æ: "AE",
+      Ầ: "A",
+      Ằ: "A",
+      Ȃ: "A",
+      Ç: "C",
+      Ḉ: "C",
+      È: "E",
+      É: "E",
+      Ê: "E",
+      Ë: "E",
+      Ế: "E",
+      Ḗ: "E",
+      Ề: "E",
+      Ḕ: "E",
+      Ḝ: "E",
+      Ȇ: "E",
+      Ì: "I",
+      Í: "I",
+      Î: "I",
+      Ï: "I",
+      Ḯ: "I",
+      Ȋ: "I",
+      Ð: "D",
+      Ñ: "N",
+      Ò: "O",
+      Ó: "O",
+      Ô: "O",
+      Õ: "O",
+      Ö: "O",
+      Ø: "O",
+      Ố: "O",
+      Ṍ: "O",
+      Ṓ: "O",
+      Ȏ: "O",
+      Ù: "U",
+      Ú: "U",
+      Û: "U",
+      Ü: "U",
+      Ý: "Y",
+      à: "a",
+      á: "a",
+      â: "a",
+      ã: "a",
+      ä: "a",
+      å: "a",
+      ấ: "a",
+      ắ: "a",
+      ẳ: "a",
+      ẵ: "a",
+      ặ: "a",
+      æ: "ae",
+      ầ: "a",
+      ằ: "a",
+      ȃ: "a",
+      ç: "c",
+      ḉ: "c",
+      è: "e",
+      é: "e",
+      ê: "e",
+      ë: "e",
+      ế: "e",
+      ḗ: "e",
+      ề: "e",
+      ḕ: "e",
+      ḝ: "e",
+      ȇ: "e",
+      ì: "i",
+      í: "i",
+      î: "i",
+      ï: "i",
+      ḯ: "i",
+      ȋ: "i",
+      ð: "d",
+      ñ: "n",
+      ò: "o",
+      ó: "o",
+      ô: "o",
+      õ: "o",
+      ö: "o",
+      ø: "o",
+      ố: "o",
+      ṍ: "o",
+      ṓ: "o",
+      ȏ: "o",
+      ù: "u",
+      ú: "u",
+      û: "u",
+      ü: "u",
+      ý: "y",
+      ÿ: "y",
+      Ā: "A",
+      ā: "a",
+      Ă: "A",
+      ă: "a",
+      Ą: "A",
+      ą: "a",
+      Ć: "C",
+      ć: "c",
+      Ĉ: "C",
+      ĉ: "c",
+      Ċ: "C",
+      ċ: "c",
+      Č: "C",
+      č: "c",
+      C̆: "C",
+      c̆: "c",
+      Ď: "D",
+      ď: "d",
+      Đ: "D",
+      đ: "d",
+      Ē: "E",
+      ē: "e",
+      Ĕ: "E",
+      ĕ: "e",
+      Ė: "E",
+      ė: "e",
+      Ę: "E",
+      ę: "e",
+      Ě: "E",
+      ě: "e",
+      Ĝ: "G",
+      Ǵ: "G",
+      ĝ: "g",
+      ǵ: "g",
+      Ğ: "G",
+      ğ: "g",
+      Ġ: "G",
+      ġ: "g",
+      Ģ: "G",
+      ģ: "g",
+      Ĥ: "H",
+      ĥ: "h",
+      Ħ: "H",
+      ħ: "h",
+      Ḫ: "H",
+      ḫ: "h",
+      Ĩ: "I",
+      ĩ: "i",
+      Ī: "I",
+      ī: "i",
+      Ĭ: "I",
+      ĭ: "i",
+      Į: "I",
+      į: "i",
+      İ: "I",
+      ı: "i",
+      Ĳ: "IJ",
+      ĳ: "ij",
+      Ĵ: "J",
+      ĵ: "j",
+      Ķ: "K",
+      ķ: "k",
+      Ḱ: "K",
+      ḱ: "k",
+      K̆: "K",
+      k̆: "k",
+      Ĺ: "L",
+      ĺ: "l",
+      Ļ: "L",
+      ļ: "l",
+      Ľ: "L",
+      ľ: "l",
+      Ŀ: "L",
+      ŀ: "l",
+      Ł: "l",
+      ł: "l",
+      Ḿ: "M",
+      ḿ: "m",
+      M̆: "M",
+      m̆: "m",
+      Ń: "N",
+      ń: "n",
+      Ņ: "N",
+      ņ: "n",
+      Ň: "N",
+      ň: "n",
+      ŉ: "n",
+      N̆: "N",
+      n̆: "n",
+      Ō: "O",
+      ō: "o",
+      Ŏ: "O",
+      ŏ: "o",
+      Ő: "O",
+      ő: "o",
+      Œ: "OE",
+      œ: "oe",
+      P̆: "P",
+      p̆: "p",
+      Ŕ: "R",
+      ŕ: "r",
+      Ŗ: "R",
+      ŗ: "r",
+      Ř: "R",
+      ř: "r",
+      R̆: "R",
+      r̆: "r",
+      Ȓ: "R",
+      ȓ: "r",
+      Ś: "S",
+      ś: "s",
+      Ŝ: "S",
+      ŝ: "s",
+      Ş: "S",
+      Ș: "S",
+      ș: "s",
+      ş: "s",
+      Š: "S",
+      š: "s",
+      Ţ: "T",
+      ţ: "t",
+      ț: "t",
+      Ț: "T",
+      Ť: "T",
+      ť: "t",
+      Ŧ: "T",
+      ŧ: "t",
+      T̆: "T",
+      t̆: "t",
+      Ũ: "U",
+      ũ: "u",
+      Ū: "U",
+      ū: "u",
+      Ŭ: "U",
+      ŭ: "u",
+      Ů: "U",
+      ů: "u",
+      Ű: "U",
+      ű: "u",
+      Ų: "U",
+      ų: "u",
+      Ȗ: "U",
+      ȗ: "u",
+      V̆: "V",
+      v̆: "v",
+      Ŵ: "W",
+      ŵ: "w",
+      Ẃ: "W",
+      ẃ: "w",
+      X̆: "X",
+      x̆: "x",
+      Ŷ: "Y",
+      ŷ: "y",
+      Ÿ: "Y",
+      Y̆: "Y",
+      y̆: "y",
+      Ź: "Z",
+      ź: "z",
+      Ż: "Z",
+      ż: "z",
+      Ž: "Z",
+      ž: "z",
+      ſ: "s",
+      ƒ: "f",
+      Ơ: "O",
+      ơ: "o",
+      Ư: "U",
+      ư: "u",
+      Ǎ: "A",
+      ǎ: "a",
+      Ǐ: "I",
+      ǐ: "i",
+      Ǒ: "O",
+      ǒ: "o",
+      Ǔ: "U",
+      ǔ: "u",
+      Ǖ: "U",
+      ǖ: "u",
+      Ǘ: "U",
+      ǘ: "u",
+      Ǚ: "U",
+      ǚ: "u",
+      Ǜ: "U",
+      ǜ: "u",
+      Ứ: "U",
+      ứ: "u",
+      Ṹ: "U",
+      ṹ: "u",
+      Ǻ: "A",
+      ǻ: "a",
+      Ǽ: "AE",
+      ǽ: "ae",
+      Ǿ: "O",
+      ǿ: "o",
+      Þ: "TH",
+      þ: "th",
+      Ṕ: "P",
+      ṕ: "p",
+      Ṥ: "S",
+      ṥ: "s",
+      X́: "X",
+      x́: "x",
+      Ѓ: "\u0413",
+      ѓ: "\u0433",
+      Ќ: "\u041A",
+      ќ: "\u043A",
+      A̋: "A",
+      a̋: "a",
+      E̋: "E",
+      e̋: "e",
+      I̋: "I",
+      i̋: "i",
+      Ǹ: "N",
+      ǹ: "n",
+      Ồ: "O",
+      ồ: "o",
+      Ṑ: "O",
+      ṑ: "o",
+      Ừ: "U",
+      ừ: "u",
+      Ẁ: "W",
+      ẁ: "w",
+      Ỳ: "Y",
+      ỳ: "y",
+      Ȁ: "A",
+      ȁ: "a",
+      Ȅ: "E",
+      ȅ: "e",
+      Ȉ: "I",
+      ȉ: "i",
+      Ȍ: "O",
+      ȍ: "o",
+      Ȑ: "R",
+      ȑ: "r",
+      Ȕ: "U",
+      ȕ: "u",
+      B̌: "B",
+      b̌: "b",
+      Č̣: "C",
+      č̣: "c",
+      Ê̌: "E",
+      ê̌: "e",
+      F̌: "F",
+      f̌: "f",
+      Ǧ: "G",
+      ǧ: "g",
+      Ȟ: "H",
+      ȟ: "h",
+      J̌: "J",
+      ǰ: "j",
+      Ǩ: "K",
+      ǩ: "k",
+      M̌: "M",
+      m̌: "m",
+      P̌: "P",
+      p̌: "p",
+      Q̌: "Q",
+      q̌: "q",
+      Ř̩: "R",
+      ř̩: "r",
+      Ṧ: "S",
+      ṧ: "s",
+      V̌: "V",
+      v̌: "v",
+      W̌: "W",
+      w̌: "w",
+      X̌: "X",
+      x̌: "x",
+      Y̌: "Y",
+      y̌: "y",
+      A̧: "A",
+      a̧: "a",
+      B̧: "B",
+      b̧: "b",
+      Ḑ: "D",
+      ḑ: "d",
+      Ȩ: "E",
+      ȩ: "e",
+      Ɛ̧: "E",
+      ɛ̧: "e",
+      Ḩ: "H",
+      ḩ: "h",
+      I̧: "I",
+      i̧: "i",
+      Ɨ̧: "I",
+      ɨ̧: "i",
+      M̧: "M",
+      m̧: "m",
+      O̧: "O",
+      o̧: "o",
+      Q̧: "Q",
+      q̧: "q",
+      U̧: "U",
+      u̧: "u",
+      X̧: "X",
+      x̧: "x",
+      Z̧: "Z",
+      z̧: "z",
     };
     chars = Object.keys(characterMap).join("|");
     allAccents = new RegExp(chars, "g");
@@ -3844,33 +4443,86 @@ var init_lib = __esm({
       CONTAINS: 3,
       ACRONYM: 2,
       MATCHES: 1,
-      NO_MATCH: 0
+      NO_MATCH: 0,
     };
     defaultKeyAttributes = {
       maxRanking: Infinity,
-      minRanking: -Infinity
+      minRanking: -Infinity,
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/goober@2.1.16_csstype@3.1.3/node_modules/goober/dist/goober.modern.js
 function u(e2) {
-  let r2 = this || {}, l2 = e2.call ? e2(r2.p) : e2;
-  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r2.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2), {}) : l2, t(r2.target), r2.g, r2.o, r2.k);
+  let r2 = this || {},
+    l2 = e2.call ? e2(r2.p) : e2;
+  return i(
+    l2.unshift
+      ? l2.raw
+        ? p(l2, [].slice.call(arguments, 1), r2.p)
+        : l2.reduce(
+            (e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2),
+            {}
+          )
+      : l2,
+    t(r2.target),
+    r2.g,
+    r2.o,
+    r2.k
+  );
 }
 var e, t, l, a, n, o, c, s, i, p;
 var init_goober_modern = __esm({
   "../../node_modules/.pnpm/goober@2.1.16_csstype@3.1.3/node_modules/goober/dist/goober.modern.js"() {
     e = { data: "" };
-    t = (t2) => "object" == typeof window ? ((t2 ? t2.querySelector("#_goober") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement("style")), { innerHTML: " ", id: "_goober" })).firstChild : t2 || e;
+    t = (t2) =>
+      "object" == typeof window
+        ? (
+            (t2 ? t2.querySelector("#_goober") : window._goober) ||
+            Object.assign(
+              (t2 || document.head).appendChild(
+                document.createElement("style")
+              ),
+              { innerHTML: " ", id: "_goober" }
+            )
+          ).firstChild
+        : t2 || e;
     l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g;
     a = /\/\*[^]*?\*\/|  +/g;
     n = /\n+/g;
     o = (e2, t2) => {
-      let r2 = "", l2 = "", a2 = "";
+      let r2 = "",
+        l2 = "",
+        a2 = "";
       for (let n2 in e2) {
         let c2 = e2[n2];
-        "@" == n2[0] ? "i" == n2[1] ? r2 = n2 + " " + c2 + ";" : l2 += "f" == n2[1] ? o(c2, n2) : n2 + "{" + o(c2, "k" == n2[1] ? "" : t2) + "}" : "object" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + " " + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, "-$&").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + ":" + c2 + ";");
+        "@" == n2[0]
+          ? "i" == n2[1]
+            ? (r2 = n2 + " " + c2 + ";")
+            : (l2 +=
+                "f" == n2[1]
+                  ? o(c2, n2)
+                  : n2 + "{" + o(c2, "k" == n2[1] ? "" : t2) + "}")
+          : "object" == typeof c2
+          ? (l2 += o(
+              c2,
+              t2
+                ? t2.replace(/([^,])+/g, (e3) =>
+                    n2.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t3) =>
+                      /&/.test(t3)
+                        ? t3.replace(/&/g, e3)
+                        : e3
+                        ? e3 + " " + t3
+                        : t3
+                    )
+                  )
+                : n2
+            ))
+          : null != c2 &&
+            ((n2 = /^--/.test(n2)
+              ? n2
+              : n2.replace(/[A-Z]/g, "-$&").toLowerCase()),
+            (a2 += o.p ? o.p(n2, c2) : n2 + ":" + c2 + ";"));
       }
       return r2 + (t2 && a2 ? t2 + "{" + a2 + "}" : a2) + l2;
     };
@@ -3884,54 +4536,92 @@ var init_goober_modern = __esm({
       return e2;
     };
     i = (e2, t2, r2, i2, p2) => {
-      let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {
-        let t3 = 0, r3 = 11;
-        for (; t3 < e3.length; ) r3 = 101 * r3 + e3.charCodeAt(t3++) >>> 0;
-        return "go" + r3;
-      })(u2));
+      let u2 = s(e2),
+        d =
+          c[u2] ||
+          (c[u2] = ((e3) => {
+            let t3 = 0,
+              r3 = 11;
+            for (; t3 < e3.length; )
+              r3 = (101 * r3 + e3.charCodeAt(t3++)) >>> 0;
+            return "go" + r3;
+          })(u2));
       if (!c[d]) {
-        let t3 = u2 !== e2 ? e2 : ((e3) => {
-          let t4, r3, o2 = [{}];
-          for (; t4 = l.exec(e3.replace(a, "")); ) t4[4] ? o2.shift() : t4[3] ? (r3 = t4[3].replace(n, " ").trim(), o2.unshift(o2[0][r3] = o2[0][r3] || {})) : o2[0][t4[1]] = t4[2].replace(n, " ").trim();
-          return o2[0];
-        })(e2);
+        let t3 =
+          u2 !== e2
+            ? e2
+            : ((e3) => {
+                let t4,
+                  r3,
+                  o2 = [{}];
+                for (; (t4 = l.exec(e3.replace(a, ""))); )
+                  t4[4]
+                    ? o2.shift()
+                    : t4[3]
+                    ? ((r3 = t4[3].replace(n, " ").trim()),
+                      o2.unshift((o2[0][r3] = o2[0][r3] || {})))
+                    : (o2[0][t4[1]] = t4[2].replace(n, " ").trim());
+                return o2[0];
+              })(e2);
         c[d] = o(p2 ? { ["@keyframes " + d]: t3 } : t3, r2 ? "" : "." + d);
       }
       let f = r2 && c.g ? c.g : null;
-      return r2 && (c.g = c[d]), ((e3, t3, r3, l2) => {
-        l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r3 ? e3 + t3.data : t3.data + e3);
-      })(c[d], t2, i2, f), d;
+      return (
+        r2 && (c.g = c[d]),
+        ((e3, t3, r3, l2) => {
+          l2
+            ? (t3.data = t3.data.replace(l2, e3))
+            : -1 === t3.data.indexOf(e3) &&
+              (t3.data = r3 ? e3 + t3.data : t3.data + e3);
+        })(c[d], t2, i2, f),
+        d
+      );
     };
-    p = (e2, t2, r2) => e2.reduce((e3, l2, a2) => {
-      let n2 = t2[a2];
-      if (n2 && n2.call) {
-        let e4 = n2(r2), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;
-        n2 = t3 ? "." + t3 : e4 && "object" == typeof e4 ? e4.props ? "" : o(e4, "") : false === e4 ? "" : e4;
-      }
-      return e3 + l2 + (null == n2 ? "" : n2);
-    }, "");
+    p = (e2, t2, r2) =>
+      e2.reduce((e3, l2, a2) => {
+        let n2 = t2[a2];
+        if (n2 && n2.call) {
+          let e4 = n2(r2),
+            t3 =
+              (e4 && e4.props && e4.props.className) || (/^go/.test(e4) && e4);
+          n2 = t3
+            ? "." + t3
+            : e4 && "object" == typeof e4
+            ? e4.props
+              ? ""
+              : o(e4, "")
+            : false === e4
+            ? ""
+            : e4;
+        }
+        return e3 + l2 + (null == n2 ? "" : n2);
+      }, "");
     u.bind({ g: 1 });
     u.bind({ k: 1 });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs
 function r(e2) {
-  var t2, f, n2 = "";
+  var t2,
+    f,
+    n2 = "";
   if ("string" == typeof e2 || "number" == typeof e2) n2 += e2;
-  else if ("object" == typeof e2) if (Array.isArray(e2)) {
-    var o2 = e2.length;
-    for (t2 = 0; t2 < o2; t2++) e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += " "), n2 += f);
-  } else for (f in e2) e2[f] && (n2 && (n2 += " "), n2 += f);
+  else if ("object" == typeof e2)
+    if (Array.isArray(e2)) {
+      var o2 = e2.length;
+      for (t2 = 0; t2 < o2; t2++)
+        e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += " "), (n2 += f));
+    } else for (f in e2) e2[f] && (n2 && (n2 += " "), (n2 += f));
   return n2;
 }
 function clsx() {
-  for (var e2, t2, f = 0, n2 = "", o2 = arguments.length; f < o2; f++) (e2 = arguments[f]) && (t2 = r(e2)) && (n2 && (n2 += " "), n2 += t2);
+  for (var e2, t2, f = 0, n2 = "", o2 = arguments.length; f < o2; f++)
+    (e2 = arguments[f]) && (t2 = r(e2)) && (n2 && (n2 += " "), (n2 += t2));
   return n2;
 }
 var init_clsx = __esm({
-  "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"() {
-  }
+  "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"() {},
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.5_solid-js@1.9.5/node_modules/@solid-primitives/transition-group/dist/index.js
@@ -3948,10 +4638,9 @@ function createListTransition(source, options) {
   const [isTransitionPending] = useTransition();
   const finishRemoved = (els) => {
     setToRemove((p2) => (p2.push.apply(p2, els), p2));
-    for (const el of els)
-      exiting.delete(el);
+    for (const el of els) exiting.delete(el);
   };
-  const handleRemoved = (els, el, i2) => els.splice(i2, 0, el) ;
+  const handleRemoved = (els, el, i2) => els.splice(i2, 0, el);
   return createMemo(
     (prev) => {
       const elsToRemove = toRemove();
@@ -3964,7 +4653,13 @@ function createListTransition(source, options) {
       if (elsToRemove.length) {
         const next = prev.filter((e2) => !elsToRemove.includes(e2));
         elsToRemove.length = 0;
-        onChange({ list: next, added: [], removed: [], unchanged: next, finishRemoved });
+        onChange({
+          list: next,
+          added: [],
+          removed: [],
+          unchanged: next,
+          finishRemoved,
+        });
         return next;
       }
       return untrack(() => {
@@ -3986,11 +4681,9 @@ function createListTransition(source, options) {
             }
             handleRemoved(next, el, i2);
           }
-          if (nothingChanged && el !== next[i2])
-            nothingChanged = false;
+          if (nothingChanged && el !== next[i2]) nothingChanged = false;
         }
-        if (!removed.length && nothingChanged)
-          return prev;
+        if (!removed.length && nothingChanged) return prev;
         onChange({ list: next, added, removed, unchanged, finishRemoved });
         prevSet = nextSet;
         return next;
@@ -4003,7 +4696,7 @@ var init_dist5 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.5_solid-js@1.9.5/node_modules/@solid-primitives/transition-group/dist/index.js"() {
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+refs@1.0.8_solid-js@1.9.5/node_modules/@solid-primitives/refs/dist/index.js
@@ -4011,8 +4704,7 @@ function mergeRefs(...refs) {
   return chain(refs);
 }
 function getResolvedElements(value, predicate) {
-  if (predicate(value))
-    return value;
+  if (predicate(value)) return value;
   if (typeof value === "function" && !value.length)
     return getResolvedElements(value(), predicate);
   if (Array.isArray(value)) {
@@ -4020,16 +4712,22 @@ function getResolvedElements(value, predicate) {
     for (const item of value) {
       const result = getResolvedElements(item, predicate);
       if (result)
-        Array.isArray(result) ? results.push.apply(results, result) : results.push(result);
+        Array.isArray(result)
+          ? results.push.apply(results, result)
+          : results.push(result);
     }
     return results.length ? results : null;
   }
   return null;
 }
-function resolveElements(fn, predicate = defaultElementPredicate, serverPredicate = defaultElementPredicate) {
+function resolveElements(
+  fn,
+  predicate = defaultElementPredicate,
+  serverPredicate = defaultElementPredicate
+) {
   const children2 = createMemo(fn);
-  const memo = createMemo(
-    () => getResolvedElements(children2(), isServer ? serverPredicate : predicate)
+  const memo = createMemo(() =>
+    getResolvedElements(children2(), isServer ? serverPredicate : predicate)
   );
   memo.toArray = () => {
     const value = memo();
@@ -4043,8 +4741,10 @@ var init_dist6 = __esm({
     init_index();
     init_solid();
     init_web();
-    defaultElementPredicate = isServer ? (item) => item != null && typeof item === "object" && "t" in item : (item) => item instanceof Element;
-  }
+    defaultElementPredicate = isServer
+      ? (item) => item != null && typeof item === "object" && "t" in item
+      : (item) => item instanceof Element;
+  },
 });
 
 // ../../node_modules/.pnpm/solid-transition-group@0.2.3_solid-js@1.9.5/node_modules/solid-transition-group/dist/index.js
@@ -4052,13 +4752,15 @@ function createClassnames(props) {
   return createMemo(() => {
     const name = props.name || "s";
     return {
-      enterActive: (props.enterActiveClass || name + "-enter-active").split(" "),
+      enterActive: (props.enterActiveClass || name + "-enter-active").split(
+        " "
+      ),
       enter: (props.enterClass || name + "-enter").split(" "),
       enterTo: (props.enterToClass || name + "-enter-to").split(" "),
       exitActive: (props.exitActiveClass || name + "-exit-active").split(" "),
       exit: (props.exitClass || name + "-exit").split(" "),
       exitTo: (props.exitToClass || name + "-exit-to").split(" "),
-      move: (props.moveClass || name + "-move").split(" ")
+      move: (props.moveClass || name + "-move").split(" "),
     };
   });
 }
@@ -4071,8 +4773,7 @@ function enterTransition(classes, events, el, done) {
   el.classList.add(...classes.enter);
   el.classList.add(...classes.enterActive);
   queueMicrotask(() => {
-    if (!el.parentNode)
-      return done?.();
+    if (!el.parentNode) return done?.();
     onEnter?.(el, () => endTransition());
   });
   nextFrame(() => {
@@ -4095,8 +4796,7 @@ function enterTransition(classes, events, el, done) {
 }
 function exitTransition(classes, events, el, done) {
   const { onBeforeExit, onExit, onAfterExit } = events;
-  if (!el.parentNode)
-    return done?.();
+  if (!el.parentNode) return done?.();
   onBeforeExit?.(el);
   el.classList.add(...classes.exit);
   el.classList.add(...classes.exitActive);
@@ -4128,57 +4828,64 @@ var init_dist7 = __esm({
     init_dist6();
     TransitionGroup = (props) => {
       const classnames = createClassnames(props);
-      return createListTransition(resolveElements(() => props.children).toArray, {
-        appear: props.appear,
-        onChange({ added, removed, finishRemoved, list }) {
-          const classes = classnames();
-          for (const el of added) {
-            enterTransition(classes, props, el);
-          }
-          const toMove = [];
-          for (const el of list) {
-            if (el.isConnected && (el instanceof HTMLElement || el instanceof SVGElement)) {
-              toMove.push({ el, rect: el.getBoundingClientRect() });
+      return createListTransition(
+        resolveElements(() => props.children).toArray,
+        {
+          appear: props.appear,
+          onChange({ added, removed, finishRemoved, list }) {
+            const classes = classnames();
+            for (const el of added) {
+              enterTransition(classes, props, el);
             }
-          }
-          queueMicrotask(() => {
-            const moved = [];
-            for (const { el, rect } of toMove) {
-              if (el.isConnected) {
-                const newRect = el.getBoundingClientRect(), dX = rect.left - newRect.left, dY = rect.top - newRect.top;
-                if (dX || dY) {
-                  el.style.transform = `translate(${dX}px, ${dY}px)`;
-                  el.style.transitionDuration = "0s";
-                  moved.push(el);
-                }
+            const toMove = [];
+            for (const el of list) {
+              if (
+                el.isConnected &&
+                (el instanceof HTMLElement || el instanceof SVGElement)
+              ) {
+                toMove.push({ el, rect: el.getBoundingClientRect() });
               }
             }
-            document.body.offsetHeight;
-            for (const el of moved) {
-              let endTransition2 = function(e2) {
-                if (e2.target === el || /transform$/.test(e2.propertyName)) {
-                  el.removeEventListener("transitionend", endTransition2);
-                  el.classList.remove(...classes.move);
+            queueMicrotask(() => {
+              const moved = [];
+              for (const { el, rect } of toMove) {
+                if (el.isConnected) {
+                  const newRect = el.getBoundingClientRect(),
+                    dX = rect.left - newRect.left,
+                    dY = rect.top - newRect.top;
+                  if (dX || dY) {
+                    el.style.transform = `translate(${dX}px, ${dY}px)`;
+                    el.style.transitionDuration = "0s";
+                    moved.push(el);
+                  }
                 }
-              };
-              el.classList.add(...classes.move);
-              el.style.transform = el.style.transitionDuration = "";
-              el.addEventListener("transitionend", endTransition2);
+              }
+              document.body.offsetHeight;
+              for (const el of moved) {
+                let endTransition2 = function (e2) {
+                  if (e2.target === el || /transform$/.test(e2.propertyName)) {
+                    el.removeEventListener("transitionend", endTransition2);
+                    el.classList.remove(...classes.move);
+                  }
+                };
+                el.classList.add(...classes.move);
+                el.style.transform = el.style.transitionDuration = "";
+                el.addEventListener("transitionend", endTransition2);
+              }
+            });
+            for (const el of removed) {
+              exitTransition(classes, props, el, () => finishRemoved([el]));
             }
-          });
-          for (const el of removed) {
-            exitTransition(classes, props, el, () => finishRemoved([el]));
-          }
+          },
         }
-      });
+      );
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+keyed@1.2.2_solid-js@1.9.5/node_modules/@solid-primitives/keyed/dist/index.js
 function dispose2(list) {
-  for (const o2 of list)
-    o2.dispose();
+  for (const o2 of list) o2.dispose();
 }
 function keyArray(items, keyFn, mapFn, options = {}) {
   if (isServer) {
@@ -4192,8 +4899,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
             () => i2
           )
         );
-    } else if (options.fallback)
-      s2 = [options.fallback()];
+    } else if (options.fallback) s2 = [options.fallback()];
     return () => s2;
   }
   const prev = /* @__PURE__ */ new Map();
@@ -4205,8 +4911,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
       if (!list.length) {
         dispose2(prev.values());
         prev.clear();
-        if (!options.fallback)
-          return [];
+        if (!options.fallback) return [];
         const fb2 = createRoot((dispose22) => {
           prev.set(FALLBACK2, { dispose: dispose22 });
           return options.fallback();
@@ -4235,8 +4940,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
           result[i2] = lookup.mapped;
           lookup.setIndex?.(i2);
           lookup.setItem(() => item);
-        } else
-          addNewItem(result, item, i2, key);
+        } else addNewItem(result, item, i2, key);
       }
       for (const key of prevKeys) {
         prev.get(key)?.dispose();
@@ -4253,8 +4957,7 @@ function keyArray(items, keyFn, mapFn, options = {}) {
         const [index, setIndex] = createSignal(i2);
         save.setIndex = setIndex;
         save.mapped = mapFn(getItem, index);
-      } else
-        save.mapped = mapFn(getItem);
+      } else save.mapped = mapFn(getItem);
       prev.set(key, save);
       list[i2] = save.mapped;
     });
@@ -4277,34 +4980,35 @@ var init_dist8 = __esm({
     init_solid();
     init_web();
     FALLBACK2 = Symbol("fallback");
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.3_solid-js@1.9.5/node_modules/@solid-primitives/event-listener/dist/index.js
 function makeEventListener(target, type, handler, options) {
   target.addEventListener(type, handler, options);
-  return tryOnCleanup(target.removeEventListener.bind(target, type, handler, options));
+  return tryOnCleanup(
+    target.removeEventListener.bind(target, type, handler, options)
+  );
 }
 function createEventListener(targets, type, handler, options) {
-  if (isServer)
-    return;
+  if (isServer) return;
   const attachListeners = () => {
     asArray(access(targets)).forEach((el) => {
       if (el)
-        asArray(access(type)).forEach((type2) => makeEventListener(el, type2, handler, options));
+        asArray(access(type)).forEach((type2) =>
+          makeEventListener(el, type2, handler, options)
+        );
     });
   };
-  if (typeof targets === "function")
-    createEffect(attachListeners);
-  else
-    createRenderEffect(attachListeners);
+  if (typeof targets === "function") createEffect(attachListeners);
+  else createRenderEffect(attachListeners);
 }
 var init_dist9 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.3_solid-js@1.9.5/node_modules/@solid-primitives/event-listener/dist/index.js"() {
     init_index();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+resize-observer@2.0.26_solid-js@1.9.5/node_modules/@solid-primitives/resize-observer/dist/index.js
@@ -4316,21 +5020,28 @@ function makeResizeObserver(callback, options) {
   onCleanup(observer.disconnect.bind(observer));
   return {
     observe: (ref) => observer.observe(ref, options),
-    unobserve: observer.unobserve.bind(observer)
+    unobserve: observer.unobserve.bind(observer),
   };
 }
 function createResizeObserver(targets, onResize, options) {
-  if (isServer)
-    return;
-  const previousMap = /* @__PURE__ */ new WeakMap(), { observe, unobserve } = makeResizeObserver((entries2) => {
-    for (const entry of entries2) {
-      const { contentRect, target } = entry, width = Math.round(contentRect.width), height = Math.round(contentRect.height), previous = previousMap.get(target);
-      if (!previous || previous.width !== width || previous.height !== height) {
-        onResize(contentRect, target, entry);
-        previousMap.set(target, { width, height });
+  if (isServer) return;
+  const previousMap = /* @__PURE__ */ new WeakMap(),
+    { observe, unobserve } = makeResizeObserver((entries2) => {
+      for (const entry of entries2) {
+        const { contentRect, target } = entry,
+          width = Math.round(contentRect.width),
+          height = Math.round(contentRect.height),
+          previous = previousMap.get(target);
+        if (
+          !previous ||
+          previous.width !== width ||
+          previous.height !== height
+        ) {
+          onResize(contentRect, target, entry);
+          previousMap.set(target, { width, height });
+        }
       }
-    }
-  }, options);
+    }, options);
   createEffect((prev) => {
     const refs = filterNonNullable(asArray(access(targets)));
     handleDiffArray(refs, prev, observe, unobserve);
@@ -4342,22 +5053,21 @@ var init_dist10 = __esm({
     init_index();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@solid-primitives+props@3.1.11_solid-js@1.9.5/node_modules/@solid-primitives/props/dist/index.js
 function stringStyleToObject(style2) {
   const object = {};
   let match;
-  while (match = extractCSSregex.exec(style2)) {
+  while ((match = extractCSSregex.exec(style2))) {
     object[match[1]] = match[2];
   }
   return object;
 }
 function combineStyle(a2, b2) {
   if (typeof a2 === "string") {
-    if (typeof b2 === "string")
-      return `${a2};${b2}`;
+    if (typeof b2 === "string") return `${a2};${b2}`;
     a2 = stringStyleToObject(a2);
   } else if (typeof b2 === "string") {
     b2 = stringStyleToObject(b2);
@@ -4368,7 +5078,7 @@ var extractCSSregex;
 var init_dist11 = __esm({
   "../../node_modules/.pnpm/@solid-primitives+props@3.1.11_solid-js@1.9.5/node_modules/@solid-primitives/props/dist/index.js"() {
     extractCSSregex = /((?:--)?(?:\w+-?)+)\s*:\s*([^;]*)/g;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.9.5/node_modules/@kobalte/utils/dist/index.js
@@ -4410,7 +5120,10 @@ function getActiveElement(node, activeDescendant = false) {
     return null;
   }
   if (isFrame(activeElement) && activeElement.contentDocument) {
-    return getActiveElement(activeElement.contentDocument.body, activeDescendant);
+    return getActiveElement(
+      activeElement.contentDocument.body,
+      activeDescendant
+    );
   }
   if (activeDescendant) {
     const id = activeElement.getAttribute("aria-activedescendant");
@@ -4433,10 +5146,12 @@ function isFrame(element) {
   return element.tagName === "IFRAME";
 }
 function testPlatform(re) {
-  return typeof window !== "undefined" && window.navigator != null ? (
-    // @ts-ignore
-    re.test(window.navigator["userAgentData"]?.platform || window.navigator.platform)
-  ) : false;
+  return typeof window !== "undefined" && window.navigator != null
+    ? // @ts-ignore
+      re.test(
+        window.navigator["userAgentData"]?.platform || window.navigator.platform
+      )
+    : false;
 }
 function isMac() {
   return testPlatform(/^Mac/i);
@@ -4445,8 +5160,10 @@ function isIPhone() {
   return testPlatform(/^iPhone/i);
 }
 function isIPad() {
-  return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
-  isMac() && navigator.maxTouchPoints > 1;
+  return (
+    testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
+    (isMac() && navigator.maxTouchPoints > 1)
+  );
 }
 function isIOS() {
   return isIPhone() || isIPad();
@@ -4498,23 +5215,26 @@ function supportsPreventScroll() {
         get preventScroll() {
           supportsPreventScrollCached = true;
           return true;
-        }
+        },
       });
-    } catch (e2) {
-    }
+    } catch (e2) {}
   }
   return supportsPreventScrollCached;
 }
 function getScrollableElements(element) {
   let parent = element.parentNode;
   const scrollableElements = [];
-  const rootScrollingElement = document.scrollingElement || document.documentElement;
+  const rootScrollingElement =
+    document.scrollingElement || document.documentElement;
   while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
-    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
+    if (
+      parent.offsetHeight < parent.scrollHeight ||
+      parent.offsetWidth < parent.scrollWidth
+    ) {
       scrollableElements.push({
         element: parent,
         scrollTop: parent.scrollTop,
-        scrollLeft: parent.scrollLeft
+        scrollLeft: parent.scrollLeft,
       });
     }
     parent = parent.parentNode;
@@ -4523,7 +5243,7 @@ function getScrollableElements(element) {
     scrollableElements.push({
       element: rootScrollingElement,
       scrollTop: rootScrollingElement.scrollTop,
-      scrollLeft: rootScrollingElement.scrollLeft
+      scrollLeft: rootScrollingElement.scrollLeft,
     });
   }
   return scrollableElements;
@@ -4535,7 +5255,9 @@ function restoreScrollPosition(scrollableElements) {
   }
 }
 function getAllTabbableIn(container, includeContainer) {
-  const elements = Array.from(container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR));
+  const elements = Array.from(
+    container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR)
+  );
   const tabbableElements2 = elements.filter(isTabbable);
   if (includeContainer && isTabbable(container)) {
     tabbableElements2.unshift(container);
@@ -4553,46 +5275,73 @@ function isTabbable(element) {
   return isFocusable(element) && !hasNegativeTabIndex(element);
 }
 function isFocusable(element) {
-  return element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element);
+  return (
+    element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element)
+  );
 }
 function hasNegativeTabIndex(element) {
   const tabIndex = parseInt(element.getAttribute("tabindex") || "0", 10);
   return tabIndex < 0;
 }
 function isElementVisible(element, childElement) {
-  return element.nodeName !== "#comment" && isStyleVisible(element) && isAttributeVisible(element, childElement) && (!element.parentElement || isElementVisible(element.parentElement, element));
+  return (
+    element.nodeName !== "#comment" &&
+    isStyleVisible(element) &&
+    isAttributeVisible(element, childElement) &&
+    (!element.parentElement || isElementVisible(element.parentElement, element))
+  );
 }
 function isStyleVisible(element) {
   if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {
     return false;
   }
   const { display, visibility } = element.style;
-  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
+  let isVisible =
+    display !== "none" && visibility !== "hidden" && visibility !== "collapse";
   if (isVisible) {
     if (!element.ownerDocument.defaultView) {
       return isVisible;
     }
-    const { getComputedStyle: getComputedStyle3 } = element.ownerDocument.defaultView;
-    const { display: computedDisplay, visibility: computedVisibility } = getComputedStyle3(element);
-    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
+    const { getComputedStyle: getComputedStyle3 } =
+      element.ownerDocument.defaultView;
+    const { display: computedDisplay, visibility: computedVisibility } =
+      getComputedStyle3(element);
+    isVisible =
+      computedDisplay !== "none" &&
+      computedVisibility !== "hidden" &&
+      computedVisibility !== "collapse";
   }
   return isVisible;
 }
 function isAttributeVisible(element, childElement) {
-  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
+  return (
+    !element.hasAttribute("hidden") &&
+    (element.nodeName === "DETAILS" &&
+    childElement &&
+    childElement.nodeName !== "SUMMARY"
+      ? element.hasAttribute("open")
+      : true)
+  );
 }
 function getFocusableTreeWalker(root, opts, scope) {
-  const selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;
+  const selector = opts?.tabbable
+    ? TABBABLE_ELEMENT_SELECTOR
+    : FOCUSABLE_ELEMENT_SELECTOR;
   const walker2 = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
     acceptNode(node) {
       if (opts?.from?.contains(node)) {
         return NodeFilter.FILTER_REJECT;
       }
-      if (node.matches(selector) && isElementVisible(node) && (true) && (!opts?.accept || opts.accept(node))) {
+      if (
+        node.matches(selector) &&
+        isElementVisible(node) &&
+        true &&
+        (!opts?.accept || opts.accept(node))
+      ) {
         return NodeFilter.FILTER_ACCEPT;
       }
       return NodeFilter.FILTER_SKIP;
-    }
+    },
   });
   if (opts?.from) {
     walker2.currentNode = opts.from;
@@ -4607,7 +5356,9 @@ function getScrollParent(node) {
 }
 function isScrollable(node) {
   const style2 = window.getComputedStyle(node);
-  return /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
+  return /(auto|scroll)/.test(
+    style2.overflow + style2.overflowX + style2.overflowY
+  );
 }
 function noop3() {
   return;
@@ -4623,8 +5374,7 @@ function isPointInPolygon(point, polygon) {
     const where = (yi - yj) * (x - xi) - (xi - xj) * (y - yi);
     if (yj < yi) {
       if (y >= yj && y < yi) {
-        if (where === 0)
-          return true;
+        if (where === 0) return true;
         if (where > 0) {
           if (y === yj) {
             if (y > vy) {
@@ -4637,8 +5387,7 @@ function isPointInPolygon(point, polygon) {
       }
     } else if (yi < yj) {
       if (y > yi && y <= yj) {
-        if (where === 0)
-          return true;
+        if (where === 0) return true;
         if (where < 0) {
           if (y === yj) {
             if (y < vy) {
@@ -4649,7 +5398,7 @@ function isPointInPolygon(point, polygon) {
           }
         }
       }
-    } else if (y == yi && (x >= xj && x <= xi || x >= xi && x <= xj)) {
+    } else if (y == yi && ((x >= xj && x <= xi) || (x >= xi && x <= xj))) {
       return true;
     }
   }
@@ -4737,17 +5486,28 @@ function relativeOffset(ancestor, child, axis) {
 function scrollIntoViewport(targetElement, opts) {
   if (document.contains(targetElement)) {
     const root = document.scrollingElement || document.documentElement;
-    const isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
+    const isScrollPrevented =
+      window.getComputedStyle(root).overflow === "hidden";
     if (!isScrollPrevented) {
-      const { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
+      const { left: originalLeft, top: originalTop } =
+        targetElement.getBoundingClientRect();
       targetElement?.scrollIntoView?.({ block: "nearest" });
-      const { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
-      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
+      const { left: newLeft, top: newTop } =
+        targetElement.getBoundingClientRect();
+      if (
+        Math.abs(originalLeft - newLeft) > 1 ||
+        Math.abs(originalTop - newTop) > 1
+      ) {
         targetElement.scrollIntoView?.({ block: "nearest" });
       }
     } else {
       let scrollParent = getScrollParent(targetElement);
-      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
+      while (
+        targetElement &&
+        scrollParent &&
+        targetElement !== root &&
+        scrollParent !== root
+      ) {
         scrollIntoView(scrollParent, targetElement);
         targetElement = scrollParent;
         scrollParent = getScrollParent(targetElement);
@@ -4755,7 +5515,15 @@ function scrollIntoViewport(targetElement, opts) {
     }
   }
 }
-var EventKey, supportsPreventScrollCached, focusableElements, tabbableElements, FOCUSABLE_ELEMENT_SELECTOR, TABBABLE_ELEMENT_SELECTOR, transitionsByElement, transitionCallbacks, visuallyHiddenStyles;
+var EventKey,
+  supportsPreventScrollCached,
+  focusableElements,
+  tabbableElements,
+  FOCUSABLE_ELEMENT_SELECTOR,
+  TABBABLE_ELEMENT_SELECTOR,
+  transitionsByElement,
+  transitionCallbacks,
+  visuallyHiddenStyles;
 var init_dist12 = __esm({
   "../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.9.5/node_modules/@kobalte/utils/dist/index.js"() {
     init_solid();
@@ -4791,10 +5559,15 @@ var init_dist12 = __esm({
       "embed",
       "audio[controls]",
       "video[controls]",
-      "[contenteditable]:not([contenteditable='false'])"
+      "[contenteditable]:not([contenteditable='false'])",
+    ];
+    tabbableElements = [
+      ...focusableElements,
+      '[tabindex]:not([tabindex="-1"]):not([disabled])',
     ];
-    tabbableElements = [...focusableElements, '[tabindex]:not([tabindex="-1"]):not([disabled])'];
-    FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
+    FOCUSABLE_ELEMENT_SELECTOR =
+      focusableElements.join(":not([hidden]),") +
+      ",[tabindex]:not([disabled]):not([hidden])";
     TABBABLE_ELEMENT_SELECTOR = tabbableElements.join(
       ':not([hidden]):not([tabindex="-1"]),'
     );
@@ -4817,9 +5590,9 @@ var init_dist12 = __esm({
       padding: "0",
       position: "absolute",
       width: "1px",
-      "white-space": "nowrap"
+      "white-space": "nowrap",
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js
@@ -4830,8 +5603,7 @@ function createRegisterId(setter) {
   };
 }
 var init_E4R2EMM4 = __esm({
-  "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js"() {
-  }
+  "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/E4R2EMM4.js"() {},
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ET5T45DO.js
@@ -4849,65 +5621,82 @@ var init_ET5T45DO = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ET5T45DO.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/6Y7B2NEO.js
 function Polymorphic(props) {
   const [local, others] = splitProps(props, ["as"]);
   if (!local.as) {
-    throw new Error("[kobalte]: Polymorphic is missing the required `as` prop.");
+    throw new Error(
+      "[kobalte]: Polymorphic is missing the required `as` prop."
+    );
   }
   return (
     // @ts-ignore: Props are valid but not worth calculating
-    createComponent(Dynamic, mergeProps(others, {
-      get component() {
-        return local.as;
-      }
-    }))
+    createComponent(
+      Dynamic,
+      mergeProps(others, {
+        get component() {
+          return local.as;
+        },
+      })
+    )
   );
 }
 var init_Y7B2NEO = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/6Y7B2NEO.js"() {
     init_web();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/Q2DJLZQE.js
 function createFormControl(props) {
   const defaultId = `form-control-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
   const [labelId, setLabelId] = createSignal();
   const [fieldId, setFieldId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
   const [errorMessageId, setErrorMessageId] = createSignal();
   const getAriaLabelledBy = (fieldId2, fieldAriaLabel, fieldAriaLabelledBy) => {
     const hasAriaLabelledBy = fieldAriaLabelledBy != null || labelId() != null;
-    return [
-      fieldAriaLabelledBy,
-      labelId(),
-      // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby
-      hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        fieldAriaLabelledBy,
+        labelId(),
+        // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby
+        hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const getAriaDescribedBy = (fieldAriaDescribedBy) => {
-    return [
-      descriptionId(),
-      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.
-      // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
-      errorMessageId(),
-      fieldAriaDescribedBy
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        descriptionId(),
+        // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.
+        // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
+        errorMessageId(),
+        fieldAriaDescribedBy,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const dataset = createMemo(() => ({
     "data-valid": access(mergedProps.validationState) === "valid" ? "" : void 0,
-    "data-invalid": access(mergedProps.validationState) === "invalid" ? "" : void 0,
+    "data-invalid":
+      access(mergedProps.validationState) === "invalid" ? "" : void 0,
     "data-required": access(mergedProps.required) ? "" : void 0,
     "data-disabled": access(mergedProps.disabled) ? "" : void 0,
-    "data-readonly": access(mergedProps.readOnly) ? "" : void 0
+    "data-readonly": access(mergedProps.readOnly) ? "" : void 0,
   }));
   const formControlContext = {
     name: () => access(mergedProps.name) ?? access(mergedProps.id),
@@ -4926,34 +5715,49 @@ function createFormControl(props) {
     registerLabel: createRegisterId(setLabelId),
     registerField: createRegisterId(setFieldId),
     registerDescription: createRegisterId(setDescriptionId),
-    registerErrorMessage: createRegisterId(setErrorMessageId)
+    registerErrorMessage: createRegisterId(setErrorMessageId),
   };
   return {
-    formControlContext
+    formControlContext,
   };
 }
 function useFormControlContext() {
   const context = useContext(FormControlContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component");
+    throw new Error(
+      "[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component"
+    );
   }
   return context;
 }
 function FormControlDescription(props) {
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerDescription(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div"
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function FormControlErrorMessage(props) {
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("error-message")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("error-message"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["forceMount"]);
   const isInvalid = () => context.validationState() === "invalid";
   createEffect(() => {
@@ -4967,31 +5771,53 @@ function FormControlErrorMessage(props) {
       return local.forceMount || isInvalid();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div"
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function FormControlLabel(props) {
   let ref;
   const context = useFormControlContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref"]);
-  const tagName = createTagName(() => ref, () => "label");
+  const tagName = createTagName(
+    () => ref,
+    () => "label"
+  );
   createEffect(() => onCleanup(context.registerLabel(others.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "label",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get ["for"]() {
-      return createMemo(() => tagName() === "label")() ? context.fieldId() : void 0;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "label",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get ["for"]() {
+          return createMemo(() => tagName() === "label")()
+            ? context.fieldId()
+            : void 0;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 var FORM_CONTROL_PROP_NAMES, FormControlContext;
 var init_Q2DJLZQE = __esm({
@@ -5002,9 +5828,16 @@ var init_Q2DJLZQE = __esm({
     init_dist12();
     init_solid();
     init_web();
-    FORM_CONTROL_PROP_NAMES = ["id", "name", "validationState", "required", "disabled", "readOnly"];
+    FORM_CONTROL_PROP_NAMES = [
+      "id",
+      "name",
+      "validationState",
+      "required",
+      "disabled",
+      "readOnly",
+    ];
     FormControlContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ANN3A2QM.js
@@ -5034,14 +5867,14 @@ function isFormElement(element) {
 var init_ANN3A2QM = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ANN3A2QM.js"() {
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/BLN63FDC.js
 function createControllableSignal(props) {
   const [_value, _setValue] = createSignal(props.defaultValue?.());
   const isControlled = createMemo(() => props.value?.() !== void 0);
-  const value = createMemo(() => isControlled() ? props.value?.() : _value());
+  const value = createMemo(() => (isControlled() ? props.value?.() : _value()));
   const setValue = (next) => {
     untrack(() => {
       const nextValue = accessWith(next, value());
@@ -5070,7 +5903,7 @@ var init_BLN63FDC = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/BLN63FDC.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YGDQXQ2B.js
@@ -5078,7 +5911,7 @@ function createToggleState(props = {}) {
   const [isSelected, _setIsSelected] = createControllableBooleanSignal({
     value: () => access(props.isSelected),
     defaultValue: () => !!access(props.defaultIsSelected),
-    onChange: (value) => props.onSelectedChange?.(value)
+    onChange: (value) => props.onSelectedChange?.(value),
   });
   const setIsSelected = (value) => {
     if (!access(props.isReadOnly) && !access(props.isDisabled)) {
@@ -5093,14 +5926,14 @@ function createToggleState(props = {}) {
   return {
     isSelected,
     setIsSelected,
-    toggle
+    toggle,
   };
 }
 var init_YGDQXQ2B = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YGDQXQ2B.js"() {
     init_BLN63FDC();
     init_dist12();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/5ZKAE4VZ.js
@@ -5112,7 +5945,7 @@ var init_ZKAE4VZ = __esm({
       for (var name in all)
         __defProp2(target, name, { get: all[name], enumerable: true });
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7CVNMTYF.js
@@ -5236,7 +6069,7 @@ function createSortBasedOnDOMPosition(items, setItems) {
 function createDomCollection(props = {}) {
   const [items, setItems] = createControllableArraySignal({
     value: () => access(props.items),
-    onChange: (value) => props.onItemsChange?.(value)
+    onChange: (value) => props.onItemsChange?.(value),
   });
   createSortBasedOnDOMPosition(items, setItems);
   const registerItem = (item) => {
@@ -5261,7 +6094,7 @@ function createDomCollection(props = {}) {
       value: { registerItem },
       get children() {
         return props2.children;
-      }
+      },
     });
   };
   return { DomCollectionProvider };
@@ -5284,7 +6117,7 @@ var init_CVNMTYF = __esm({
     init_dist12();
     init_solid();
     DomCollectionContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/JMA2RWU6.js
@@ -5305,7 +6138,9 @@ function buildNodes(params) {
       return "";
     }
     const _getTextValue = params.getTextValue ?? "textValue";
-    const dataTextValue = isString2(_getTextValue) ? data[_getTextValue] : _getTextValue(data);
+    const dataTextValue = isString2(_getTextValue)
+      ? data[_getTextValue]
+      : _getTextValue(data);
     return dataTextValue != null ? String(dataTextValue) : "";
   };
   const getDisabled = (data) => {
@@ -5313,7 +6148,10 @@ function buildNodes(params) {
       return false;
     }
     const _getDisabled = params.getDisabled ?? "disabled";
-    return (isString2(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) ?? false;
+    return (
+      (isString2(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) ??
+      false
+    );
   };
   const getSectionChildren = (data) => {
     if (data == null) {
@@ -5333,7 +6171,7 @@ function buildNodes(params) {
         textValue: String(data),
         disabled: getDisabled(data),
         level,
-        index
+        index,
       });
       index++;
       continue;
@@ -5349,7 +6187,7 @@ function buildNodes(params) {
         disabled: false,
         // not applicable here
         level,
-        index
+        index,
       });
       index++;
       const sectionChildren = getSectionChildren(data) ?? [];
@@ -5361,7 +6199,7 @@ function buildNodes(params) {
           getDisabled: params.getDisabled,
           getSectionChildren: params.getSectionChildren,
           startIndex: index,
-          startLevel: level + 1
+          startLevel: level + 1,
         });
         nodes.push(...childNodes);
         index += childNodes.length;
@@ -5374,7 +6212,7 @@ function buildNodes(params) {
         textValue: getTextValue(data),
         disabled: getDisabled(data),
         level,
-        index
+        index,
       });
       index++;
     }
@@ -5388,10 +6226,9 @@ function createCollection(props, deps = []) {
       getKey: access(props.getKey),
       getTextValue: access(props.getTextValue),
       getDisabled: access(props.getDisabled),
-      getSectionChildren: access(props.getSectionChildren)
+      getSectionChildren: access(props.getSectionChildren),
     });
-    for (let i2 = 0; i2 < deps.length; i2++)
-      deps[i2]();
+    for (let i2 = 0; i2 < deps.length; i2++) deps[i2]();
     return props.factory(nodes);
   });
 }
@@ -5399,7 +6236,7 @@ var init_JMA2RWU6 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/JMA2RWU6.js"() {
     init_dist12();
     init_solid();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/XHJPQEZP.js
@@ -5415,11 +6252,13 @@ function getReadingDirection(locale) {
   return isRTL(locale) ? "rtl" : "ltr";
 }
 function getDefaultLocale() {
-  let locale = typeof navigator !== "undefined" && // @ts-ignore
-  (navigator.language || navigator.userLanguage) || "en-US";
+  let locale =
+    (typeof navigator !== "undefined" && // @ts-ignore
+      (navigator.language || navigator.userLanguage)) ||
+    "en-US";
   return {
     locale,
-    direction: getReadingDirection(locale)
+    direction: getReadingDirection(locale),
   };
 }
 function updateLocale() {
@@ -5431,11 +6270,12 @@ function updateLocale() {
 function createDefaultLocale() {
   const defaultSSRLocale = {
     locale: "en-US",
-    direction: "ltr"
+    direction: "ltr",
   };
-  const [defaultClientLocale, setDefaultClientLocale] = createSignal(currentLocale);
-  const defaultLocale = createMemo(
-    () => isServer ? defaultSSRLocale : defaultClientLocale()
+  const [defaultClientLocale, setDefaultClientLocale] =
+    createSignal(currentLocale);
+  const defaultLocale = createMemo(() =>
+    isServer ? defaultSSRLocale : defaultClientLocale()
   );
   onMount(() => {
     if (listeners.size === 0) {
@@ -5451,7 +6291,7 @@ function createDefaultLocale() {
   });
   return {
     locale: () => defaultLocale().locale,
-    direction: () => defaultLocale().direction
+    direction: () => defaultLocale().direction,
   };
 }
 function useLocale() {
@@ -5462,7 +6302,14 @@ function useLocale() {
 function createCollator(options) {
   const { locale } = useLocale();
   const cacheKey = createMemo(() => {
-    return locale() + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
+    return (
+      locale() +
+      (options
+        ? Object.entries(options)
+            .sort((a2, b2) => (a2[0] < b2[0] ? -1 : 1))
+            .join()
+        : "")
+    );
   });
   return createMemo(() => {
     const key = cacheKey();
@@ -5494,7 +6341,7 @@ var init_XHJPQEZP = __esm({
       "Nkoo",
       "Adlm",
       "Rohg",
-      "Hebr"
+      "Hebr",
     ]);
     RTL_LANGS = /* @__PURE__ */ new Set([
       "ae",
@@ -5515,13 +6362,13 @@ var init_XHJPQEZP = __esm({
       "sd",
       "ug",
       "ur",
-      "yi"
+      "yi",
     ]);
     currentLocale = getDefaultLocale();
     listeners = /* @__PURE__ */ new Set();
     I18nContext = createContext();
     cache = /* @__PURE__ */ new Map();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/H6DSIDEC.js
@@ -5557,7 +6404,7 @@ function createMultipleSelectionState(props) {
   const mergedProps = mergeDefaultProps(
     {
       selectionMode: "none",
-      selectionBehavior: "toggle"
+      selectionBehavior: "toggle",
     },
     props
   );
@@ -5580,19 +6427,30 @@ function createMultipleSelectionState(props) {
   const [selectedKeys, _setSelectedKeys] = createControllableSelectionSignal({
     value: selectedKeysProp,
     defaultValue: defaultSelectedKeys,
-    onChange: (value) => mergedProps.onSelectionChange?.(value)
+    onChange: (value) => mergedProps.onSelectionChange?.(value),
   });
-  const [selectionBehavior, setSelectionBehavior] = createSignal(access(mergedProps.selectionBehavior));
+  const [selectionBehavior, setSelectionBehavior] = createSignal(
+    access(mergedProps.selectionBehavior)
+  );
   const selectionMode = () => access(mergedProps.selectionMode);
-  const disallowEmptySelection = () => access(mergedProps.disallowEmptySelection) ?? false;
+  const disallowEmptySelection = () =>
+    access(mergedProps.disallowEmptySelection) ?? false;
   const setSelectedKeys = (keys2) => {
-    if (access(mergedProps.allowDuplicateSelectionEvents) || !isSameSelection(keys2, selectedKeys())) {
+    if (
+      access(mergedProps.allowDuplicateSelectionEvents) ||
+      !isSameSelection(keys2, selectedKeys())
+    ) {
       _setSelectedKeys(keys2);
     }
   };
   createEffect(() => {
     const selection = selectedKeys();
-    if (access(mergedProps.selectionBehavior) === "replace" && selectionBehavior() === "toggle" && typeof selection === "object" && selection.size === 0) {
+    if (
+      access(mergedProps.selectionBehavior) === "replace" &&
+      selectionBehavior() === "toggle" &&
+      typeof selection === "object" &&
+      selection.size === 0
+    ) {
       setSelectionBehavior("replace");
     }
   });
@@ -5609,7 +6467,7 @@ function createMultipleSelectionState(props) {
     focusedKey,
     setFocusedKey,
     selectedKeys,
-    setSelectedKeys
+    setSelectedKeys,
   };
 }
 function createTypeSelect(props) {
@@ -5633,10 +6491,14 @@ function createTypeSelect(props) {
       e2.stopPropagation();
     }
     let newSearch = setSearch((prev) => prev + character);
-    let key = delegate.getKeyForSearch(newSearch, manager.focusedKey()) ?? delegate.getKeyForSearch(newSearch);
+    let key =
+      delegate.getKeyForSearch(newSearch, manager.focusedKey()) ??
+      delegate.getKeyForSearch(newSearch);
     if (key == null && isAllSameLetter(newSearch)) {
       newSearch = newSearch[0];
-      key = delegate.getKeyForSearch(newSearch, manager.focusedKey()) ?? delegate.getKeyForSearch(newSearch);
+      key =
+        delegate.getKeyForSearch(newSearch, manager.focusedKey()) ??
+        delegate.getKeyForSearch(newSearch);
     }
     if (key != null) {
       manager.setFocusedKey(key);
@@ -5647,8 +6509,8 @@ function createTypeSelect(props) {
   };
   return {
     typeSelectHandlers: {
-      onKeyDown
-    }
+      onKeyDown,
+    },
   };
 }
 function getStringForKey(key) {
@@ -5662,14 +6524,15 @@ function isAllSameLetter(search) {
 }
 function createSelectableCollection(props, ref, scrollRef) {
   const defaultProps = {
-    selectOnFocus: () => access(props.selectionManager).selectionBehavior() === "replace"
+    selectOnFocus: () =>
+      access(props.selectionManager).selectionBehavior() === "replace",
   };
   const mergedProps = mergeProps(defaultProps, props);
   const finalScrollRef = () => ref();
   const { direction } = useLocale();
   let scrollPos = { top: 0, left: 0 };
   createEventListener(
-    () => !access(mergedProps.isVirtualized) ? finalScrollRef() : void 0,
+    () => (!access(mergedProps.isVirtualized) ? finalScrollRef() : void 0),
     "scroll",
     () => {
       const scrollEl = finalScrollRef();
@@ -5678,14 +6541,14 @@ function createSelectableCollection(props, ref, scrollRef) {
       }
       scrollPos = {
         top: scrollEl.scrollTop,
-        left: scrollEl.scrollLeft
+        left: scrollEl.scrollLeft,
       };
     }
   );
   const { typeSelectHandlers } = createTypeSelect({
     isDisabled: () => access(mergedProps.disallowTypeAhead),
     keyboardDelegate: () => access(mergedProps.keyboardDelegate),
-    selectionManager: () => access(mergedProps.selectionManager)
+    selectionManager: () => access(mergedProps.selectionManager),
   });
   const orientation = () => access(mergedProps.orientation) ?? "vertical";
   const onKeyDown = (e2) => {
@@ -5713,7 +6576,7 @@ function createSelectableCollection(props, ref, scrollRef) {
     const shouldFocusWrap = access(mergedProps.shouldFocusWrap);
     const focusedKey = manager.focusedKey();
     switch (e2.key) {
-      case (orientation() === "vertical" ? "ArrowDown" : "ArrowRight"): {
+      case orientation() === "vertical" ? "ArrowDown" : "ArrowRight": {
         if (delegate.getKeyBelow) {
           e2.preventDefault();
           let nextKey;
@@ -5729,7 +6592,7 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowUp" : "ArrowLeft"): {
+      case orientation() === "vertical" ? "ArrowUp" : "ArrowLeft": {
         if (delegate.getKeyAbove) {
           e2.preventDefault();
           let nextKey;
@@ -5745,7 +6608,7 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowLeft" : "ArrowUp"): {
+      case orientation() === "vertical" ? "ArrowLeft" : "ArrowUp": {
         if (delegate.getKeyLeftOf) {
           e2.preventDefault();
           const isRTL3 = direction() === "rtl";
@@ -5753,13 +6616,15 @@ function createSelectableCollection(props, ref, scrollRef) {
           if (focusedKey != null) {
             nextKey = delegate.getKeyLeftOf(focusedKey);
           } else {
-            nextKey = isRTL3 ? delegate.getFirstKey?.() : delegate.getLastKey?.();
+            nextKey = isRTL3
+              ? delegate.getFirstKey?.()
+              : delegate.getLastKey?.();
           }
           navigateToKey(nextKey);
         }
         break;
       }
-      case (orientation() === "vertical" ? "ArrowRight" : "ArrowDown"): {
+      case orientation() === "vertical" ? "ArrowRight" : "ArrowDown": {
         if (delegate.getKeyRightOf) {
           e2.preventDefault();
           const isRTL3 = direction() === "rtl";
@@ -5767,7 +6632,9 @@ function createSelectableCollection(props, ref, scrollRef) {
           if (focusedKey != null) {
             nextKey = delegate.getKeyRightOf(focusedKey);
           } else {
-            nextKey = isRTL3 ? delegate.getLastKey?.() : delegate.getFirstKey?.();
+            nextKey = isRTL3
+              ? delegate.getLastKey?.()
+              : delegate.getFirstKey?.();
           }
           navigateToKey(nextKey);
         }
@@ -5782,7 +6649,11 @@ function createSelectableCollection(props, ref, scrollRef) {
           );
           if (firstKey != null) {
             manager.setFocusedKey(firstKey);
-            if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === "multiple") {
+            if (
+              isCtrlKeyPressed(e2) &&
+              e2.shiftKey &&
+              manager.selectionMode() === "multiple"
+            ) {
               manager.extendSelection(firstKey);
             } else if (selectOnFocus) {
               manager.replaceSelection(firstKey);
@@ -5796,7 +6667,11 @@ function createSelectableCollection(props, ref, scrollRef) {
           const lastKey = delegate.getLastKey(focusedKey, isCtrlKeyPressed(e2));
           if (lastKey != null) {
             manager.setFocusedKey(lastKey);
-            if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === "multiple") {
+            if (
+              isCtrlKeyPressed(e2) &&
+              e2.shiftKey &&
+              manager.selectionMode() === "multiple"
+            ) {
               manager.extendSelection(lastKey);
             } else if (selectOnFocus) {
               manager.replaceSelection(lastKey);
@@ -5819,7 +6694,11 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
         break;
       case "a":
-        if (isCtrlKeyPressed(e2) && manager.selectionMode() === "multiple" && access(mergedProps.disallowSelectAll) !== true) {
+        if (
+          isCtrlKeyPressed(e2) &&
+          manager.selectionMode() === "multiple" &&
+          access(mergedProps.disallowSelectAll) !== true
+        ) {
           e2.preventDefault();
           manager.selectAll();
         }
@@ -5880,7 +6759,11 @@ function createSelectableCollection(props, ref, scrollRef) {
         }
       };
       const relatedTarget = e2.relatedTarget;
-      if (relatedTarget && e2.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) {
+      if (
+        relatedTarget &&
+        e2.currentTarget.compareDocumentPosition(relatedTarget) &
+          Node.DOCUMENT_POSITION_FOLLOWING
+      ) {
         navigateToFirstKey(
           manager.lastSelectedKey() ?? delegate.getLastKey?.()
         );
@@ -5936,7 +6819,11 @@ function createSelectableCollection(props, ref, scrollRef) {
     manager.setFocused(true);
     manager.setFocusedKey(focusedKey);
     const refEl = ref();
-    if (refEl && focusedKey == null && !access(mergedProps.shouldUseVirtualFocus)) {
+    if (
+      refEl &&
+      focusedKey == null &&
+      !access(mergedProps.shouldUseVirtualFocus)
+    ) {
       focusWithoutScrolling(refEl);
     }
   };
@@ -5952,7 +6839,7 @@ function createSelectableCollection(props, ref, scrollRef) {
       [
         finalScrollRef,
         () => access(mergedProps.isVirtualized),
-        () => access(mergedProps.selectionManager).focusedKey()
+        () => access(mergedProps.selectionManager).focusedKey(),
       ],
       (newValue) => {
         const [scrollEl, isVirtualized, focusedKey] = newValue;
@@ -5982,7 +6869,7 @@ function createSelectableCollection(props, ref, scrollRef) {
     onKeyDown,
     onMouseDown,
     onFocusIn,
-    onFocusOut
+    onFocusOut,
   };
 }
 function createSelectableItem(props, ref) {
@@ -6001,14 +6888,19 @@ function createSelectableItem(props, ref) {
       }
     } else if (e2?.shiftKey) {
       manager().extendSelection(key());
-    } else if (manager().selectionBehavior() === "toggle" || isCtrlKeyPressed(e2) || "pointerType" in e2 && e2.pointerType === "touch") {
+    } else if (
+      manager().selectionBehavior() === "toggle" ||
+      isCtrlKeyPressed(e2) ||
+      ("pointerType" in e2 && e2.pointerType === "touch")
+    ) {
       manager().toggleSelection(key());
     } else {
       manager().replaceSelection(key());
     }
   };
   const isSelected = () => manager().isSelected(key());
-  const isDisabled = () => access(props.disabled) || manager().isDisabled(key());
+  const isDisabled = () =>
+    access(props.disabled) || manager().isDisabled(key());
   const allowsSelection = () => !isDisabled() && manager().canSelectItem(key());
   let pointerDownType = null;
   const onPointerDown = (e2) => {
@@ -6016,7 +6908,11 @@ function createSelectableItem(props, ref) {
       return;
     }
     pointerDownType = e2.pointerType;
-    if (e2.pointerType === "mouse" && e2.button === 0 && !access(props.shouldSelectOnPressUp)) {
+    if (
+      e2.pointerType === "mouse" &&
+      e2.button === 0 &&
+      !access(props.shouldSelectOnPressUp)
+    ) {
       onSelect(e2);
     }
   };
@@ -6024,7 +6920,12 @@ function createSelectableItem(props, ref) {
     if (!allowsSelection()) {
       return;
     }
-    if (e2.pointerType === "mouse" && e2.button === 0 && access(props.shouldSelectOnPressUp) && access(props.allowsDifferentPressOrigin)) {
+    if (
+      e2.pointerType === "mouse" &&
+      e2.button === 0 &&
+      access(props.shouldSelectOnPressUp) &&
+      access(props.allowsDifferentPressOrigin)
+    ) {
       onSelect(e2);
     }
   };
@@ -6032,7 +6933,11 @@ function createSelectableItem(props, ref) {
     if (!allowsSelection()) {
       return;
     }
-    if (access(props.shouldSelectOnPressUp) && !access(props.allowsDifferentPressOrigin) || pointerDownType !== "mouse") {
+    if (
+      (access(props.shouldSelectOnPressUp) &&
+        !access(props.allowsDifferentPressOrigin)) ||
+      pointerDownType !== "mouse"
+    ) {
       onSelect(e2);
     }
   };
@@ -6076,10 +6981,16 @@ function createSelectableItem(props, ref) {
         key,
         shouldUseVirtualFocus,
         () => manager().focusedKey(),
-        () => manager().isFocused()
+        () => manager().isFocused(),
       ],
       ([refEl, key2, shouldUseVirtualFocus2, focusedKey, isFocused]) => {
-        if (refEl && key2 === focusedKey && isFocused && !shouldUseVirtualFocus2 && document.activeElement !== refEl) {
+        if (
+          refEl &&
+          key2 === focusedKey &&
+          isFocused &&
+          !shouldUseVirtualFocus2 &&
+          document.activeElement !== refEl
+        ) {
           if (props.focus) {
             props.focus();
           } else {
@@ -6100,13 +7011,15 @@ function createSelectableItem(props, ref) {
     onClick,
     onKeyDown,
     onMouseDown,
-    onFocus
+    onFocus,
   };
 }
 function createListState(props) {
   const selectionState = createMultipleSelectionState(props);
   const factory = (nodes) => {
-    return props.filter ? new ListCollection(props.filter(nodes)) : new ListCollection(nodes);
+    return props.filter
+      ? new ListCollection(props.filter(nodes))
+      : new ListCollection(nodes);
   };
   const collection = createCollection(
     {
@@ -6115,7 +7028,7 @@ function createListState(props) {
       getTextValue: () => access(props.getTextValue),
       getDisabled: () => access(props.getDisabled),
       getSectionChildren: () => access(props.getSectionChildren),
-      factory
+      factory,
     },
     [() => props.filter]
   );
@@ -6128,7 +7041,7 @@ function createListState(props) {
   });
   return {
     collection,
-    selectionManager: () => selectionManager
+    selectionManager: () => selectionManager,
   };
 }
 var Selection, SelectionManager, ListCollection;
@@ -6225,7 +7138,10 @@ var init_H6DSIDEC = __esm({
         let first;
         for (const key of this.state.selectedKeys()) {
           const item = this.collection().getItem(key);
-          const isItemBeforeFirst = item?.index != null && first?.index != null && item.index < first.index;
+          const isItemBeforeFirst =
+            item?.index != null &&
+            first?.index != null &&
+            item.index < first.index;
           if (!first || isItemBeforeFirst) {
             first = item;
           }
@@ -6236,7 +7152,10 @@ var init_H6DSIDEC = __esm({
         let last;
         for (const key of this.state.selectedKeys()) {
           const item = this.collection().getItem(key);
-          const isItemAfterLast = item?.index != null && last?.index != null && item.index > last.index;
+          const isItemAfterLast =
+            item?.index != null &&
+            last?.index != null &&
+            item.index > last.index;
           if (!last || isItemAfterLast) {
             last = item;
           }
@@ -6258,7 +7177,11 @@ var init_H6DSIDEC = __esm({
         }
         const selectedKeys = this.state.selectedKeys();
         const anchorKey = selectedKeys.anchorKey || retrievedToKey;
-        const selection = new Selection(selectedKeys, anchorKey, retrievedToKey);
+        const selection = new Selection(
+          selectedKeys,
+          anchorKey,
+          retrievedToKey
+        );
         for (const key of this.getKeyRange(
           anchorKey,
           selectedKeys.currentKey || retrievedToKey
@@ -6276,7 +7199,11 @@ var init_H6DSIDEC = __esm({
         const fromItem = this.collection().getItem(from);
         const toItem = this.collection().getItem(to);
         if (fromItem && toItem) {
-          if (fromItem.index != null && toItem.index != null && fromItem.index <= toItem.index) {
+          if (
+            fromItem.index != null &&
+            toItem.index != null &&
+            fromItem.index <= toItem.index
+          ) {
             return this.getKeyRangeInternal(from, to);
           }
           return this.getKeyRangeInternal(to, from);
@@ -6343,7 +7270,9 @@ var init_H6DSIDEC = __esm({
         if (retrievedKey == null) {
           return;
         }
-        const selection = this.canSelectItem(retrievedKey) ? new Selection([retrievedKey], retrievedKey, retrievedKey) : new Selection();
+        const selection = this.canSelectItem(retrievedKey)
+          ? new Selection([retrievedKey], retrievedKey, retrievedKey)
+          : new Selection();
         this.state.setSelectedKeys(selection);
       }
       /** Replaces the selection with the given keys. */
@@ -6398,7 +7327,10 @@ var init_H6DSIDEC = __esm({
           } else {
             this.replaceSelection(key);
           }
-        } else if (this.selectionBehavior() === "toggle" || e2 && e2.pointerType === "touch") {
+        } else if (
+          this.selectionBehavior() === "toggle" ||
+          (e2 && e2.pointerType === "touch")
+        ) {
           this.toggleSelection(key);
         } else {
           this.replaceSelection(key);
@@ -6516,22 +7448,22 @@ var init_H6DSIDEC = __esm({
         return this.getItem(keys2[idx]);
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/ZV6G25TT.js
 var access2;
 var init_ZV6G25TT = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/ZV6G25TT.js"() {
-    access2 = (v) => typeof v === "function" ? v() : v;
-  }
+    access2 = (v) => (typeof v === "function" ? v() : v);
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/reactivity/index.js
 var init_reactivity = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/reactivity/index.js"() {
     init_ZV6G25TT();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-presence@0.1.7_solid-js@1.9.5/node_modules/solid-presence/dist/index.js
@@ -6549,7 +7481,9 @@ var init_dist13 = __esm({
       const getAnimationName = () => {
         return refStyles()?.animationName ?? "none";
       };
-      const [presentState, setPresentState] = createSignal(access2(props.show) ? "present" : "hidden");
+      const [presentState, setPresentState] = createSignal(
+        access2(props.show) ? "present" : "hidden"
+      );
       let animationName = "none";
       createEffect((prevShow) => {
         const show = access2(props.show);
@@ -6559,7 +7493,10 @@ var init_dist13 = __esm({
           const currentAnimationName = getAnimationName();
           if (show) {
             setPresentState("present");
-          } else if (currentAnimationName === "none" || refStyles()?.display === "none") {
+          } else if (
+            currentAnimationName === "none" ||
+            refStyles()?.display === "none"
+          ) {
             setPresentState("hidden");
           } else {
             const isAnimating = prevAnimationName !== currentAnimationName;
@@ -6585,7 +7522,11 @@ var init_dist13 = __esm({
           const isCurrentAnimation = currentAnimationName.includes(
             event.animationName
           );
-          if (event.target === element && isCurrentAnimation && presentState() === "hiding") {
+          if (
+            event.target === element &&
+            isCurrentAnimation &&
+            presentState() === "hiding"
+          ) {
             setPresentState("hidden");
           }
         };
@@ -6599,13 +7540,14 @@ var init_dist13 = __esm({
         });
       });
       return {
-        present: () => presentState() === "present" || presentState() === "hiding",
-        state: presentState
+        present: () =>
+          presentState() === "present" || presentState() === "hiding",
+        state: presentState,
       };
     };
     presence_default = createPresence;
     src_default = presence_default;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ZKYDDHM6.js
@@ -6642,10 +7584,10 @@ function removeLayer(node) {
   layers.splice(index, 1);
 }
 function assignPointerEventToLayers() {
-  for (const {
-    node
-  } of layers) {
-    node.style.pointerEvents = isBelowPointerBlockingLayer(node) ? "none" : "auto";
+  for (const { node } of layers) {
+    node.style.pointerEvents = isBelowPointerBlockingLayer(node)
+      ? "none"
+      : "auto";
   }
 }
 function disableBodyPointerEvents(node) {
@@ -6667,7 +7609,11 @@ function restoreBodyPointerEvents(node) {
   }
   hasDisabledBodyPointerEvents = false;
 }
-var DATA_TOP_LAYER_ATTR, originalBodyPointerEvents, hasDisabledBodyPointerEvents, layers, layerStack;
+var DATA_TOP_LAYER_ATTR,
+  originalBodyPointerEvents,
+  hasDisabledBodyPointerEvents,
+  layers,
+  layerStack;
 var init_ZKYDDHM6 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ZKYDDHM6.js"() {
     init_dist12();
@@ -6685,9 +7631,9 @@ var init_ZKYDDHM6 = __esm({
       find: find2,
       assignPointerEventToLayers,
       disableBodyPointerEvents,
-      restoreBodyPointerEvents
+      restoreBodyPointerEvents,
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7OVKXYPU.js
@@ -6703,11 +7649,17 @@ function isButton(element) {
 }
 function ButtonRoot(props) {
   let ref;
-  const mergedProps = mergeDefaultProps({
-    type: "button"
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      type: "button",
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "type", "disabled"]);
-  const tagName = createTagName(() => ref, () => "button");
+  const tagName = createTagName(
+    () => ref,
+    () => "button"
+  );
   const isNativeButton = createMemo(() => {
     const elementTagName = tagName();
     if (elementTagName == null) {
@@ -6715,7 +7667,7 @@ function ButtonRoot(props) {
     }
     return isButton({
       tagName: elementTagName,
-      type: local.type
+      type: local.type,
     });
   });
   const isNativeInput = createMemo(() => {
@@ -6724,31 +7676,41 @@ function ButtonRoot(props) {
   const isNativeLink = createMemo(() => {
     return tagName() === "a" && ref?.getAttribute("href") != null;
   });
-  return createComponent(Polymorphic, mergeProps({
-    as: "button",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get type() {
-      return isNativeButton() || isNativeInput() ? local.type : void 0;
-    },
-    get role() {
-      return !isNativeButton() && !isNativeLink() ? "button" : void 0;
-    },
-    get tabIndex() {
-      return !isNativeButton() && !isNativeLink() && !local.disabled ? 0 : void 0;
-    },
-    get disabled() {
-      return isNativeButton() || isNativeInput() ? local.disabled : void 0;
-    },
-    get ["aria-disabled"]() {
-      return !isNativeButton() && !isNativeInput() && local.disabled ? true : void 0;
-    },
-    get ["data-disabled"]() {
-      return local.disabled ? "" : void 0;
-    }
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "button",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get type() {
+          return isNativeButton() || isNativeInput() ? local.type : void 0;
+        },
+        get role() {
+          return !isNativeButton() && !isNativeLink() ? "button" : void 0;
+        },
+        get tabIndex() {
+          return !isNativeButton() && !isNativeLink() && !local.disabled
+            ? 0
+            : void 0;
+        },
+        get disabled() {
+          return isNativeButton() || isNativeInput() ? local.disabled : void 0;
+        },
+        get ["aria-disabled"]() {
+          return !isNativeButton() && !isNativeInput() && local.disabled
+            ? true
+            : void 0;
+        },
+        get ["data-disabled"]() {
+          return local.disabled ? "" : void 0;
+        },
+      },
+      others
+    )
+  );
 }
 var button_exports, BUTTON_INPUT_TYPES, Button;
 var init_OVKXYPU = __esm({
@@ -6762,7 +7724,7 @@ var init_OVKXYPU = __esm({
     button_exports = {};
     __export2(button_exports, {
       Button: () => Button,
-      Root: () => ButtonRoot
+      Root: () => ButtonRoot,
     });
     BUTTON_INPUT_TYPES = [
       "button",
@@ -6770,10 +7732,10 @@ var init_OVKXYPU = __esm({
       "file",
       "image",
       "reset",
-      "submit"
+      "submit",
     ];
     Button = ButtonRoot;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
@@ -6808,7 +7770,14 @@ function getAlignmentSides(placement, rects, rtl) {
   const alignment = getAlignment(placement);
   const alignmentAxis = getAlignmentAxis(placement);
   const length = getAxisLength(alignmentAxis);
-  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
+  let mainAlignmentSide =
+    alignmentAxis === "x"
+      ? alignment === (rtl ? "end" : "start")
+        ? "right"
+        : "left"
+      : alignment === "start"
+      ? "bottom"
+      : "top";
   if (rects.reference[length] > rects.floating[length]) {
     mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
   }
@@ -6816,10 +7785,17 @@ function getAlignmentSides(placement, rects, rtl) {
 }
 function getExpandedPlacements(placement) {
   const oppositePlacement = getOppositePlacement(placement);
-  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
+  return [
+    getOppositeAlignmentPlacement(placement),
+    oppositePlacement,
+    getOppositeAlignmentPlacement(oppositePlacement),
+  ];
 }
 function getOppositeAlignmentPlacement(placement) {
-  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
+  return placement.replace(
+    /start|end/g,
+    (alignment) => oppositeAlignmentMap[alignment]
+  );
 }
 function getSideList(side, isStart, rtl) {
   const lr = ["left", "right"];
@@ -6850,7 +7826,10 @@ function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
   return list;
 }
 function getOppositePlacement(placement) {
-  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
+  return placement.replace(
+    /left|right|bottom|top/g,
+    (side) => oppositeSideMap[side]
+  );
 }
 function expandPaddingObject(padding) {
   return {
@@ -6858,24 +7837,21 @@ function expandPaddingObject(padding) {
     right: 0,
     bottom: 0,
     left: 0,
-    ...padding
+    ...padding,
   };
 }
 function getPaddingObject(padding) {
-  return typeof padding !== "number" ? expandPaddingObject(padding) : {
-    top: padding,
-    right: padding,
-    bottom: padding,
-    left: padding
-  };
+  return typeof padding !== "number"
+    ? expandPaddingObject(padding)
+    : {
+        top: padding,
+        right: padding,
+        bottom: padding,
+        left: padding,
+      };
 }
 function rectToClientRect(rect) {
-  const {
-    x,
-    y,
-    width,
-    height
-  } = rect;
+  const { x, y, width, height } = rect;
   return {
     width,
     height,
@@ -6884,10 +7860,17 @@ function rectToClientRect(rect) {
     right: x + width,
     bottom: y + height,
     x,
-    y
+    y,
   };
 }
-var sides, min, max, round, floor, createCoords, oppositeSideMap, oppositeAlignmentMap;
+var sides,
+  min,
+  max,
+  round,
+  floor,
+  createCoords,
+  oppositeSideMap,
+  oppositeAlignmentMap;
 var init_floating_ui_utils = __esm({
   "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"() {
     sides = ["top", "right", "bottom", "left"];
@@ -6897,27 +7880,24 @@ var init_floating_ui_utils = __esm({
     floor = Math.floor;
     createCoords = (v) => ({
       x: v,
-      y: v
+      y: v,
     });
     oppositeSideMap = {
       left: "right",
       right: "left",
       bottom: "top",
-      top: "bottom"
+      top: "bottom",
     };
     oppositeAlignmentMap = {
       start: "end",
-      end: "start"
+      end: "start",
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+core@1.6.5/node_modules/@floating-ui/core/dist/floating-ui.core.mjs
 function computeCoordsFromPlacement(_ref, placement, rtl) {
-  let {
-    reference,
-    floating
-  } = _ref;
+  let { reference, floating } = _ref;
   const sideAxis = getSideAxis(placement);
   const alignmentAxis = getAlignmentAxis(placement);
   const alignLength = getAxisLength(alignmentAxis);
@@ -6931,31 +7911,31 @@ function computeCoordsFromPlacement(_ref, placement, rtl) {
     case "top":
       coords = {
         x: commonX,
-        y: reference.y - floating.height
+        y: reference.y - floating.height,
       };
       break;
     case "bottom":
       coords = {
         x: commonX,
-        y: reference.y + reference.height
+        y: reference.y + reference.height,
       };
       break;
     case "right":
       coords = {
         x: reference.x + reference.width,
-        y: commonY
+        y: commonY,
       };
       break;
     case "left":
       coords = {
         x: reference.x - floating.width,
-        y: commonY
+        y: commonY,
       };
       break;
     default:
       coords = {
         x: reference.x,
-        y: reference.y
+        y: reference.y,
       };
   }
   switch (getAlignment(placement)) {
@@ -6973,55 +7953,88 @@ async function detectOverflow(state, options) {
   if (options === void 0) {
     options = {};
   }
-  const {
-    x,
-    y,
-    platform: platform2,
-    rects,
-    elements,
-    strategy
-  } = state;
+  const { x, y, platform: platform2, rects, elements, strategy } = state;
   const {
     boundary = "clippingAncestors",
     rootBoundary = "viewport",
     elementContext = "floating",
     altBoundary = false,
-    padding = 0
+    padding = 0,
   } = evaluate(options, state);
   const paddingObject = getPaddingObject(padding);
   const altContext = elementContext === "floating" ? "reference" : "floating";
   const element = elements[altBoundary ? altContext : elementContext];
-  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
-    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
-    boundary,
-    rootBoundary,
-    strategy
-  }));
-  const rect = elementContext === "floating" ? {
-    x,
-    y,
-    width: rects.floating.width,
-    height: rects.floating.height
-  } : rects.reference;
-  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
-  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
-    x: 1,
-    y: 1
-  } : {
-    x: 1,
-    y: 1
-  };
-  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
-    elements,
-    rect,
-    offsetParent,
-    strategy
-  }) : rect);
+  const clippingClientRect = rectToClientRect(
+    await platform2.getClippingRect({
+      element: (
+        (_await$platform$isEle = await (platform2.isElement == null
+          ? void 0
+          : platform2.isElement(element))) != null
+          ? _await$platform$isEle
+          : true
+      )
+        ? element
+        : element.contextElement ||
+          (await (platform2.getDocumentElement == null
+            ? void 0
+            : platform2.getDocumentElement(elements.floating))),
+      boundary,
+      rootBoundary,
+      strategy,
+    })
+  );
+  const rect =
+    elementContext === "floating"
+      ? {
+          x,
+          y,
+          width: rects.floating.width,
+          height: rects.floating.height,
+        }
+      : rects.reference;
+  const offsetParent = await (platform2.getOffsetParent == null
+    ? void 0
+    : platform2.getOffsetParent(elements.floating));
+  const offsetScale = (await (platform2.isElement == null
+    ? void 0
+    : platform2.isElement(offsetParent)))
+    ? (await (platform2.getScale == null
+        ? void 0
+        : platform2.getScale(offsetParent))) || {
+        x: 1,
+        y: 1,
+      }
+    : {
+        x: 1,
+        y: 1,
+      };
+  const elementClientRect = rectToClientRect(
+    platform2.convertOffsetParentRelativeRectToViewportRelativeRect
+      ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
+          elements,
+          rect,
+          offsetParent,
+          strategy,
+        })
+      : rect
+  );
   return {
-    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
-    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
-    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
-    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
+    top:
+      (clippingClientRect.top - elementClientRect.top + paddingObject.top) /
+      offsetScale.y,
+    bottom:
+      (elementClientRect.bottom -
+        clippingClientRect.bottom +
+        paddingObject.bottom) /
+      offsetScale.y,
+    left:
+      (clippingClientRect.left - elementClientRect.left + paddingObject.left) /
+      offsetScale.x,
+    right:
+      (elementClientRect.right -
+        clippingClientRect.right +
+        paddingObject.right) /
+      offsetScale.x,
   };
 }
 function getSideOffsets(overflow, rect) {
@@ -7029,49 +8042,48 @@ function getSideOffsets(overflow, rect) {
     top: overflow.top - rect.height,
     right: overflow.right - rect.width,
     bottom: overflow.bottom - rect.height,
-    left: overflow.left - rect.width
+    left: overflow.left - rect.width,
   };
 }
 function isAnySideFullyClipped(overflow) {
   return sides.some((side) => overflow[side] >= 0);
 }
 async function convertValueToCoords(state, options) {
-  const {
-    placement,
-    platform: platform2,
-    elements
-  } = state;
-  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
+  const { placement, platform: platform2, elements } = state;
+  const rtl = await (platform2.isRTL == null
+    ? void 0
+    : platform2.isRTL(elements.floating));
   const side = getSide(placement);
   const alignment = getAlignment(placement);
   const isVertical = getSideAxis(placement) === "y";
   const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
   const crossAxisMulti = rtl && isVertical ? -1 : 1;
   const rawValue = evaluate(options, state);
-  let {
-    mainAxis,
-    crossAxis,
-    alignmentAxis
-  } = typeof rawValue === "number" ? {
-    mainAxis: rawValue,
-    crossAxis: 0,
-    alignmentAxis: null
-  } : {
-    mainAxis: 0,
-    crossAxis: 0,
-    alignmentAxis: null,
-    ...rawValue
-  };
+  let { mainAxis, crossAxis, alignmentAxis } =
+    typeof rawValue === "number"
+      ? {
+          mainAxis: rawValue,
+          crossAxis: 0,
+          alignmentAxis: null,
+        }
+      : {
+          mainAxis: 0,
+          crossAxis: 0,
+          alignmentAxis: null,
+          ...rawValue,
+        };
   if (alignment && typeof alignmentAxis === "number") {
     crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
   }
-  return isVertical ? {
-    x: crossAxis * crossAxisMulti,
-    y: mainAxis * mainAxisMulti
-  } : {
-    x: mainAxis * mainAxisMulti,
-    y: crossAxis * crossAxisMulti
-  };
+  return isVertical
+    ? {
+        x: crossAxis * crossAxisMulti,
+        y: mainAxis * mainAxisMulti,
+      }
+    : {
+        x: mainAxis * mainAxisMulti,
+        y: crossAxis * crossAxisMulti,
+      };
 }
 var computePosition, arrow, flip, hide, offset, shift, size;
 var init_floating_ui_core = __esm({
@@ -7083,32 +8095,28 @@ var init_floating_ui_core = __esm({
         placement = "bottom",
         strategy = "absolute",
         middleware = [],
-        platform: platform2
+        platform: platform2,
       } = config;
       const validMiddleware = middleware.filter(Boolean);
-      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
+      const rtl = await (platform2.isRTL == null
+        ? void 0
+        : platform2.isRTL(floating));
       let rects = await platform2.getElementRects({
         reference,
         floating,
-        strategy
+        strategy,
       });
-      let {
-        x,
-        y
-      } = computeCoordsFromPlacement(rects, placement, rtl);
+      let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);
       let statefulPlacement = placement;
       let middlewareData = {};
       let resetCount = 0;
       for (let i2 = 0; i2 < validMiddleware.length; i2++) {
-        const {
-          name,
-          fn
-        } = validMiddleware[i2];
+        const { name, fn } = validMiddleware[i2];
         const {
           x: nextX,
           y: nextY,
           data,
-          reset: reset2
+          reset: reset2,
         } = await fn({
           x,
           y,
@@ -7120,8 +8128,8 @@ var init_floating_ui_core = __esm({
           platform: platform2,
           elements: {
             reference,
-            floating
-          }
+            floating,
+          },
         });
         x = nextX != null ? nextX : x;
         y = nextY != null ? nextY : y;
@@ -7129,8 +8137,8 @@ var init_floating_ui_core = __esm({
           ...middlewareData,
           [name]: {
             ...middlewareData[name],
-            ...data
-          }
+            ...data,
+          },
         };
         if (reset2 && resetCount <= 50) {
           resetCount++;
@@ -7139,16 +8147,20 @@ var init_floating_ui_core = __esm({
               statefulPlacement = reset2.placement;
             }
             if (reset2.rects) {
-              rects = reset2.rects === true ? await platform2.getElementRects({
-                reference,
-                floating,
-                strategy
-              }) : reset2.rects;
+              rects =
+                reset2.rects === true
+                  ? await platform2.getElementRects({
+                      reference,
+                      floating,
+                      strategy,
+                    })
+                  : reset2.rects;
             }
-            ({
-              x,
-              y
-            } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
+            ({ x, y } = computeCoordsFromPlacement(
+              rects,
+              statefulPlacement,
+              rtl
+            ));
           }
           i2 = -1;
         }
@@ -7158,7 +8170,7 @@ var init_floating_ui_core = __esm({
         y,
         placement: statefulPlacement,
         strategy,
-        middlewareData
+        middlewareData,
       };
     };
     arrow = (options) => ({
@@ -7172,19 +8184,16 @@ var init_floating_ui_core = __esm({
           rects,
           platform: platform2,
           elements,
-          middlewareData
+          middlewareData,
         } = state;
-        const {
-          element,
-          padding = 0
-        } = evaluate(options, state) || {};
+        const { element, padding = 0 } = evaluate(options, state) || {};
         if (element == null) {
           return {};
         }
         const paddingObject = getPaddingObject(padding);
         const coords = {
           x,
-          y
+          y,
         };
         const axis = getAlignmentAxis(placement);
         const length = getAxisLength(axis);
@@ -7193,37 +8202,61 @@ var init_floating_ui_core = __esm({
         const minProp = isYAxis ? "top" : "left";
         const maxProp = isYAxis ? "bottom" : "right";
         const clientProp = isYAxis ? "clientHeight" : "clientWidth";
-        const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
+        const endDiff =
+          rects.reference[length] +
+          rects.reference[axis] -
+          coords[axis] -
+          rects.floating[length];
         const startDiff = coords[axis] - rects.reference[axis];
-        const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
+        const arrowOffsetParent = await (platform2.getOffsetParent == null
+          ? void 0
+          : platform2.getOffsetParent(element));
         let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
-        if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
+        if (
+          !clientSize ||
+          !(await (platform2.isElement == null
+            ? void 0
+            : platform2.isElement(arrowOffsetParent)))
+        ) {
           clientSize = elements.floating[clientProp] || rects.floating[length];
         }
         const centerToReference = endDiff / 2 - startDiff / 2;
-        const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
+        const largestPossiblePadding =
+          clientSize / 2 - arrowDimensions[length] / 2 - 1;
         const minPadding = min(paddingObject[minProp], largestPossiblePadding);
         const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
         const min$1 = minPadding;
         const max2 = clientSize - arrowDimensions[length] - maxPadding;
-        const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
+        const center =
+          clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
         const offset3 = clamp2(min$1, center, max2);
-        const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset3 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
-        const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
+        const shouldAddOffset =
+          !middlewareData.arrow &&
+          getAlignment(placement) != null &&
+          center !== offset3 &&
+          rects.reference[length] / 2 -
+            (center < min$1 ? minPadding : maxPadding) -
+            arrowDimensions[length] / 2 <
+            0;
+        const alignmentOffset = shouldAddOffset
+          ? center < min$1
+            ? center - min$1
+            : center - max2
+          : 0;
         return {
           [axis]: coords[axis] + alignmentOffset,
           data: {
             [axis]: offset3,
             centerOffset: center - offset3 - alignmentOffset,
-            ...shouldAddOffset && {
-              alignmentOffset
-            }
+            ...(shouldAddOffset && {
+              alignmentOffset,
+            }),
           },
-          reset: shouldAddOffset
+          reset: shouldAddOffset,
         };
-      }
+      },
     });
-    flip = function(options) {
+    flip = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7238,7 +8271,7 @@ var init_floating_ui_core = __esm({
             rects,
             initialPlacement,
             platform: platform2,
-            elements
+            elements,
           } = state;
           const {
             mainAxis: checkMainAxis = true,
@@ -7249,22 +8282,43 @@ var init_floating_ui_core = __esm({
             flipAlignment = true,
             ...detectOverflowOptions
           } = evaluate(options, state);
-          if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
+          if (
+            (_middlewareData$arrow = middlewareData.arrow) != null &&
+            _middlewareData$arrow.alignmentOffset
+          ) {
             return {};
           }
           const side = getSide(placement);
           const initialSideAxis = getSideAxis(initialPlacement);
-          const isBasePlacement = getSide(initialPlacement) === initialPlacement;
-          const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
-          const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
-          const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
+          const isBasePlacement =
+            getSide(initialPlacement) === initialPlacement;
+          const rtl = await (platform2.isRTL == null
+            ? void 0
+            : platform2.isRTL(elements.floating));
+          const fallbackPlacements =
+            specifiedFallbackPlacements ||
+            (isBasePlacement || !flipAlignment
+              ? [getOppositePlacement(initialPlacement)]
+              : getExpandedPlacements(initialPlacement));
+          const hasFallbackAxisSideDirection =
+            fallbackAxisSideDirection !== "none";
           if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
-            fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
+            fallbackPlacements.push(
+              ...getOppositeAxisPlacements(
+                initialPlacement,
+                flipAlignment,
+                fallbackAxisSideDirection,
+                rtl
+              )
+            );
           }
           const placements2 = [initialPlacement, ...fallbackPlacements];
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const overflows = [];
-          let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
+          let overflowsData =
+            ((_middlewareData$flip = middlewareData.flip) == null
+              ? void 0
+              : _middlewareData$flip.overflows) || [];
           if (checkMainAxis) {
             overflows.push(overflow[side]);
           }
@@ -7272,39 +8326,63 @@ var init_floating_ui_core = __esm({
             const sides2 = getAlignmentSides(placement, rects, rtl);
             overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
           }
-          overflowsData = [...overflowsData, {
-            placement,
-            overflows
-          }];
+          overflowsData = [
+            ...overflowsData,
+            {
+              placement,
+              overflows,
+            },
+          ];
           if (!overflows.every((side2) => side2 <= 0)) {
             var _middlewareData$flip2, _overflowsData$filter;
-            const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
+            const nextIndex =
+              (((_middlewareData$flip2 = middlewareData.flip) == null
+                ? void 0
+                : _middlewareData$flip2.index) || 0) + 1;
             const nextPlacement = placements2[nextIndex];
             if (nextPlacement) {
               return {
                 data: {
                   index: nextIndex,
-                  overflows: overflowsData
+                  overflows: overflowsData,
                 },
                 reset: {
-                  placement: nextPlacement
-                }
+                  placement: nextPlacement,
+                },
               };
             }
-            let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
+            let resetPlacement =
+              (_overflowsData$filter = overflowsData
+                .filter((d) => d.overflows[0] <= 0)
+                .sort((a2, b2) => a2.overflows[1] - b2.overflows[1])[0]) == null
+                ? void 0
+                : _overflowsData$filter.placement;
             if (!resetPlacement) {
               switch (fallbackStrategy) {
                 case "bestFit": {
                   var _overflowsData$filter2;
-                  const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
-                    if (hasFallbackAxisSideDirection) {
-                      const currentSideAxis = getSideAxis(d.placement);
-                      return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
-                      // reading directions favoring greater width.
-                      currentSideAxis === "y";
-                    }
-                    return true;
-                  }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b2) => a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
+                  const placement2 =
+                    (_overflowsData$filter2 = overflowsData
+                      .filter((d) => {
+                        if (hasFallbackAxisSideDirection) {
+                          const currentSideAxis = getSideAxis(d.placement);
+                          return (
+                            currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
+                            // reading directions favoring greater width.
+                            currentSideAxis === "y"
+                          );
+                        }
+                        return true;
+                      })
+                      .map((d) => [
+                        d.placement,
+                        d.overflows
+                          .filter((overflow2) => overflow2 > 0)
+                          .reduce((acc, overflow2) => acc + overflow2, 0),
+                      ])
+                      .sort((a2, b2) => a2[1] - b2[1])[0]) == null
+                      ? void 0
+                      : _overflowsData$filter2[0];
                   if (placement2) {
                     resetPlacement = placement2;
                   }
@@ -7318,16 +8396,16 @@ var init_floating_ui_core = __esm({
             if (placement !== resetPlacement) {
               return {
                 reset: {
-                  placement: resetPlacement
-                }
+                  placement: resetPlacement,
+                },
               };
             }
           }
           return {};
-        }
+        },
       };
     };
-    hide = function(options) {
+    hide = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7335,48 +8413,44 @@ var init_floating_ui_core = __esm({
         name: "hide",
         options,
         async fn(state) {
-          const {
-            rects
-          } = state;
-          const {
-            strategy = "referenceHidden",
-            ...detectOverflowOptions
-          } = evaluate(options, state);
+          const { rects } = state;
+          const { strategy = "referenceHidden", ...detectOverflowOptions } =
+            evaluate(options, state);
           switch (strategy) {
             case "referenceHidden": {
               const overflow = await detectOverflow(state, {
                 ...detectOverflowOptions,
-                elementContext: "reference"
+                elementContext: "reference",
               });
               const offsets = getSideOffsets(overflow, rects.reference);
               return {
                 data: {
                   referenceHiddenOffsets: offsets,
-                  referenceHidden: isAnySideFullyClipped(offsets)
-                }
+                  referenceHidden: isAnySideFullyClipped(offsets),
+                },
               };
             }
             case "escaped": {
               const overflow = await detectOverflow(state, {
                 ...detectOverflowOptions,
-                altBoundary: true
+                altBoundary: true,
               });
               const offsets = getSideOffsets(overflow, rects.floating);
               return {
                 data: {
                   escapedOffsets: offsets,
-                  escaped: isAnySideFullyClipped(offsets)
-                }
+                  escaped: isAnySideFullyClipped(offsets),
+                },
               };
             }
             default: {
               return {};
             }
           }
-        }
+        },
       };
     };
-    offset = function(options) {
+    offset = function (options) {
       if (options === void 0) {
         options = 0;
       }
@@ -7385,14 +8459,16 @@ var init_floating_ui_core = __esm({
         options,
         async fn(state) {
           var _middlewareData$offse, _middlewareData$arrow;
-          const {
-            x,
-            y,
-            placement,
-            middlewareData
-          } = state;
+          const { x, y, placement, middlewareData } = state;
           const diffCoords = await convertValueToCoords(state, options);
-          if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
+          if (
+            placement ===
+              ((_middlewareData$offse = middlewareData.offset) == null
+                ? void 0
+                : _middlewareData$offse.placement) &&
+            (_middlewareData$arrow = middlewareData.arrow) != null &&
+            _middlewareData$arrow.alignmentOffset
+          ) {
             return {};
           }
           return {
@@ -7400,13 +8476,13 @@ var init_floating_ui_core = __esm({
             y: y + diffCoords.y,
             data: {
               ...diffCoords,
-              placement
-            }
+              placement,
+            },
           };
-        }
+        },
       };
     };
-    shift = function(options) {
+    shift = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7414,31 +8490,24 @@ var init_floating_ui_core = __esm({
         name: "shift",
         options,
         async fn(state) {
-          const {
-            x,
-            y,
-            placement
-          } = state;
+          const { x, y, placement } = state;
           const {
             mainAxis: checkMainAxis = true,
             crossAxis: checkCrossAxis = false,
             limiter = {
               fn: (_ref) => {
-                let {
-                  x: x2,
-                  y: y2
-                } = _ref;
+                let { x: x2, y: y2 } = _ref;
                 return {
                   x: x2,
-                  y: y2
+                  y: y2,
                 };
-              }
+              },
             },
             ...detectOverflowOptions
           } = evaluate(options, state);
           const coords = {
             x,
-            y
+            y,
           };
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const crossAxis = getSideAxis(getSide(placement));
@@ -7462,19 +8531,19 @@ var init_floating_ui_core = __esm({
           const limitedCoords = limiter.fn({
             ...state,
             [mainAxis]: mainAxisCoord,
-            [crossAxis]: crossAxisCoord
+            [crossAxis]: crossAxisCoord,
           });
           return {
             ...limitedCoords,
             data: {
               x: limitedCoords.x - x,
-              y: limitedCoords.y - y
-            }
+              y: limitedCoords.y - y,
+            },
           };
-        }
+        },
       };
     };
-    size = function(options) {
+    size = function (options) {
       if (options === void 0) {
         options = {};
       }
@@ -7482,45 +8551,56 @@ var init_floating_ui_core = __esm({
         name: "size",
         options,
         async fn(state) {
-          const {
-            placement,
-            rects,
-            platform: platform2,
-            elements
-          } = state;
-          const {
-            apply = () => {
-            },
-            ...detectOverflowOptions
-          } = evaluate(options, state);
+          const { placement, rects, platform: platform2, elements } = state;
+          const { apply = () => {}, ...detectOverflowOptions } = evaluate(
+            options,
+            state
+          );
           const overflow = await detectOverflow(state, detectOverflowOptions);
           const side = getSide(placement);
           const alignment = getAlignment(placement);
           const isYAxis = getSideAxis(placement) === "y";
-          const {
-            width,
-            height
-          } = rects.floating;
+          const { width, height } = rects.floating;
           let heightSide;
           let widthSide;
           if (side === "top" || side === "bottom") {
             heightSide = side;
-            widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
+            widthSide =
+              alignment ===
+              ((await (platform2.isRTL == null
+                ? void 0
+                : platform2.isRTL(elements.floating)))
+                ? "start"
+                : "end")
+                ? "left"
+                : "right";
           } else {
             widthSide = side;
             heightSide = alignment === "end" ? "top" : "bottom";
           }
           const maximumClippingHeight = height - overflow.top - overflow.bottom;
           const maximumClippingWidth = width - overflow.left - overflow.right;
-          const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
-          const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
+          const overflowAvailableHeight = min(
+            height - overflow[heightSide],
+            maximumClippingHeight
+          );
+          const overflowAvailableWidth = min(
+            width - overflow[widthSide],
+            maximumClippingWidth
+          );
           const noShift = !state.middlewareData.shift;
           let availableHeight = overflowAvailableHeight;
           let availableWidth = overflowAvailableWidth;
           if (isYAxis) {
-            availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
+            availableWidth =
+              alignment || noShift
+                ? min(overflowAvailableWidth, maximumClippingWidth)
+                : maximumClippingWidth;
           } else {
-            availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
+            availableHeight =
+              alignment || noShift
+                ? min(overflowAvailableHeight, maximumClippingHeight)
+                : maximumClippingHeight;
           }
           if (noShift && !alignment) {
             const xMin = max(overflow.left, 0);
@@ -7528,29 +8608,44 @@ var init_floating_ui_core = __esm({
             const yMin = max(overflow.top, 0);
             const yMax = max(overflow.bottom, 0);
             if (isYAxis) {
-              availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
+              availableWidth =
+                width -
+                2 *
+                  (xMin !== 0 || xMax !== 0
+                    ? xMin + xMax
+                    : max(overflow.left, overflow.right));
             } else {
-              availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
+              availableHeight =
+                height -
+                2 *
+                  (yMin !== 0 || yMax !== 0
+                    ? yMin + yMax
+                    : max(overflow.top, overflow.bottom));
             }
           }
           await apply({
             ...state,
             availableWidth,
-            availableHeight
+            availableHeight,
           });
-          const nextDimensions = await platform2.getDimensions(elements.floating);
-          if (width !== nextDimensions.width || height !== nextDimensions.height) {
+          const nextDimensions = await platform2.getDimensions(
+            elements.floating
+          );
+          if (
+            width !== nextDimensions.width ||
+            height !== nextDimensions.height
+          ) {
             return {
               reset: {
-                rects: true
-              }
+                rects: true,
+              },
             };
           }
           return {};
-        }
+        },
       };
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
@@ -7562,11 +8657,19 @@ function getNodeName(node) {
 }
 function getWindow2(node) {
   var _node$ownerDocument;
-  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
+  return (
+    (node == null || (_node$ownerDocument = node.ownerDocument) == null
+      ? void 0
+      : _node$ownerDocument.defaultView) || window
+  );
 }
 function getDocumentElement(node) {
   var _ref;
-  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
+  return (_ref =
+    (isNode(node) ? node.ownerDocument : node.document) || window.document) ==
+    null
+    ? void 0
+    : _ref.documentElement;
 }
 function isNode(value) {
   return value instanceof Node || value instanceof getWindow2(value).Node;
@@ -7575,22 +8678,26 @@ function isElement(value) {
   return value instanceof Element || value instanceof getWindow2(value).Element;
 }
 function isHTMLElement(value) {
-  return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;
+  return (
+    value instanceof HTMLElement ||
+    value instanceof getWindow2(value).HTMLElement
+  );
 }
 function isShadowRoot(value) {
   if (typeof ShadowRoot === "undefined") {
     return false;
   }
-  return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;
+  return (
+    value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot
+  );
 }
 function isOverflowElement(element) {
-  const {
-    overflow,
-    overflowX,
-    overflowY,
-    display
-  } = getComputedStyle2(element);
-  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
+  const { overflow, overflowX, overflowY, display } =
+    getComputedStyle2(element);
+  return (
+    /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) &&
+    !["inline", "contents"].includes(display)
+  );
 }
 function isTableElement(element) {
   return ["table", "td", "th"].includes(getNodeName(element));
@@ -7606,8 +8713,22 @@ function isTopLayer(element) {
 }
 function isContainingBlock(elementOrCss) {
   const webkit = isWebKit();
-  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
-  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
+  const css = isElement(elementOrCss)
+    ? getComputedStyle2(elementOrCss)
+    : elementOrCss;
+  return (
+    css.transform !== "none" ||
+    css.perspective !== "none" ||
+    (css.containerType ? css.containerType !== "normal" : false) ||
+    (!webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false)) ||
+    (!webkit && (css.filter ? css.filter !== "none" : false)) ||
+    ["transform", "perspective", "filter"].some((value) =>
+      (css.willChange || "").includes(value)
+    ) ||
+    ["paint", "layout", "strict", "content"].some((value) =>
+      (css.contain || "").includes(value)
+    )
+  );
 }
 function getContainingBlock(element) {
   let currentNode = getParentNode(element);
@@ -7635,25 +8756,24 @@ function getNodeScroll(element) {
   if (isElement(element)) {
     return {
       scrollLeft: element.scrollLeft,
-      scrollTop: element.scrollTop
+      scrollTop: element.scrollTop,
     };
   }
   return {
     scrollLeft: element.scrollX,
-    scrollTop: element.scrollY
+    scrollTop: element.scrollY,
   };
 }
 function getParentNode(node) {
   if (getNodeName(node) === "html") {
     return node;
   }
-  const result = (
+  const result =
     // Step into the shadow DOM of the parent of a slotted node.
     node.assignedSlot || // DOM Element detected.
     node.parentNode || // ShadowRoot detected.
-    isShadowRoot(node) && node.host || // Fallback.
-    getDocumentElement(node)
-  );
+    (isShadowRoot(node) && node.host) || // Fallback.
+    getDocumentElement(node);
   return isShadowRoot(result) ? result.host : result;
 }
 function getNearestOverflowAncestor(node) {
@@ -7675,16 +8795,29 @@ function getOverflowAncestors(node, list, traverseIframes) {
     traverseIframes = true;
   }
   const scrollableAncestor = getNearestOverflowAncestor(node);
-  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
+  const isBody =
+    scrollableAncestor ===
+    ((_node$ownerDocument2 = node.ownerDocument) == null
+      ? void 0
+      : _node$ownerDocument2.body);
   const win = getWindow2(scrollableAncestor);
   if (isBody) {
-    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
+    return list.concat(
+      win,
+      win.visualViewport || [],
+      isOverflowElement(scrollableAncestor) ? scrollableAncestor : [],
+      win.frameElement && traverseIframes
+        ? getOverflowAncestors(win.frameElement)
+        : []
+    );
   }
-  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
+  return list.concat(
+    scrollableAncestor,
+    getOverflowAncestors(scrollableAncestor, [], traverseIframes)
+  );
 }
 var init_floating_ui_utils_dom = __esm({
-  "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"() {
-  }
+  "../../node_modules/.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"() {},
 });
 
 // ../../node_modules/.pnpm/@floating-ui+dom@1.6.8/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
@@ -7695,7 +8828,8 @@ function getCssDimensions(element) {
   const hasOffset = isHTMLElement(element);
   const offsetWidth = hasOffset ? element.offsetWidth : width;
   const offsetHeight = hasOffset ? element.offsetHeight : height;
-  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
+  const shouldFallback =
+    round(width) !== offsetWidth || round(height) !== offsetHeight;
   if (shouldFallback) {
     width = offsetWidth;
     height = offsetHeight;
@@ -7703,7 +8837,7 @@ function getCssDimensions(element) {
   return {
     width,
     height,
-    $: shouldFallback
+    $: shouldFallback,
   };
 }
 function unwrapElement(element) {
@@ -7715,11 +8849,7 @@ function getScale(element) {
     return createCoords(1);
   }
   const rect = domElement.getBoundingClientRect();
-  const {
-    width,
-    height,
-    $
-  } = getCssDimensions(domElement);
+  const { width, height, $ } = getCssDimensions(domElement);
   let x = ($ ? round(rect.width) : rect.width) / width;
   let y = ($ ? round(rect.height) : rect.height) / height;
   if (!x || !Number.isFinite(x)) {
@@ -7730,7 +8860,7 @@ function getScale(element) {
   }
   return {
     x,
-    y
+    y,
   };
 }
 function getVisualOffsets(element) {
@@ -7740,19 +8870,27 @@ function getVisualOffsets(element) {
   }
   return {
     x: win.visualViewport.offsetLeft,
-    y: win.visualViewport.offsetTop
+    y: win.visualViewport.offsetTop,
   };
 }
 function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
   if (isFixed === void 0) {
     isFixed = false;
   }
-  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {
+  if (
+    !floatingOffsetParent ||
+    (isFixed && floatingOffsetParent !== getWindow2(element))
+  ) {
     return false;
   }
   return isFixed;
 }
-function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
+function getBoundingClientRect(
+  element,
+  includeScale,
+  isFixedStrategy,
+  offsetParent
+) {
   if (includeScale === void 0) {
     includeScale = false;
   }
@@ -7771,22 +8909,36 @@ function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetPar
       scale = getScale(element);
     }
   }
-  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
+  const visualOffsets = shouldAddVisualOffsets(
+    domElement,
+    isFixedStrategy,
+    offsetParent
+  )
+    ? getVisualOffsets(domElement)
+    : createCoords(0);
   let x = (clientRect.left + visualOffsets.x) / scale.x;
   let y = (clientRect.top + visualOffsets.y) / scale.y;
   let width = clientRect.width / scale.x;
   let height = clientRect.height / scale.y;
   if (domElement) {
     const win = getWindow2(domElement);
-    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow2(offsetParent) : offsetParent;
+    const offsetWin =
+      offsetParent && isElement(offsetParent)
+        ? getWindow2(offsetParent)
+        : offsetParent;
     let currentWin = win;
     let currentIFrame = currentWin.frameElement;
     while (currentIFrame && offsetParent && offsetWin !== currentWin) {
       const iframeScale = getScale(currentIFrame);
       const iframeRect = currentIFrame.getBoundingClientRect();
       const css = getComputedStyle2(currentIFrame);
-      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
-      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
+      const left =
+        iframeRect.left +
+        (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) *
+          iframeScale.x;
+      const top =
+        iframeRect.top +
+        (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
       x *= iframeScale.x;
       y *= iframeScale.y;
       width *= iframeScale.x;
@@ -7801,31 +8953,29 @@ function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetPar
     width,
     height,
     x,
-    y
+    y,
   });
 }
 function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
-  let {
-    elements,
-    rect,
-    offsetParent,
-    strategy
-  } = _ref;
+  let { elements, rect, offsetParent, strategy } = _ref;
   const isFixed = strategy === "fixed";
   const documentElement = getDocumentElement(offsetParent);
   const topLayer = elements ? isTopLayer(elements.floating) : false;
-  if (offsetParent === documentElement || topLayer && isFixed) {
+  if (offsetParent === documentElement || (topLayer && isFixed)) {
     return rect;
   }
   let scroll = {
     scrollLeft: 0,
-    scrollTop: 0
+    scrollTop: 0,
   };
   let scale = createCoords(1);
   const offsets = createCoords(0);
   const isOffsetParentAnElement = isHTMLElement(offsetParent);
-  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
-    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
+  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {
+    if (
+      getNodeName(offsetParent) !== "body" ||
+      isOverflowElement(documentElement)
+    ) {
       scroll = getNodeScroll(offsetParent);
     }
     if (isHTMLElement(offsetParent)) {
@@ -7839,21 +8989,34 @@ function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
     width: rect.width * scale.x,
     height: rect.height * scale.y,
     x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
-    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
+    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y,
   };
 }
 function getClientRects(element) {
   return Array.from(element.getClientRects());
 }
 function getWindowScrollBarX(element) {
-  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
+  return (
+    getBoundingClientRect(getDocumentElement(element)).left +
+    getNodeScroll(element).scrollLeft
+  );
 }
 function getDocumentRect(element) {
   const html = getDocumentElement(element);
   const scroll = getNodeScroll(element);
   const body = element.ownerDocument.body;
-  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
-  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
+  const width = max(
+    html.scrollWidth,
+    html.clientWidth,
+    body.scrollWidth,
+    body.clientWidth
+  );
+  const height = max(
+    html.scrollHeight,
+    html.clientHeight,
+    body.scrollHeight,
+    body.clientHeight
+  );
   let x = -scroll.scrollLeft + getWindowScrollBarX(element);
   const y = -scroll.scrollTop;
   if (getComputedStyle2(body).direction === "rtl") {
@@ -7863,7 +9026,7 @@ function getDocumentRect(element) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
 function getViewportRect(element, strategy) {
@@ -7878,7 +9041,7 @@ function getViewportRect(element, strategy) {
     width = visualViewport.width;
     height = visualViewport.height;
     const visualViewportBased = isWebKit();
-    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
+    if (!visualViewportBased || (visualViewportBased && strategy === "fixed")) {
       x = visualViewport.offsetLeft;
       y = visualViewport.offsetTop;
     }
@@ -7887,7 +9050,7 @@ function getViewportRect(element, strategy) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
 function getInnerBoundingClientRect(element, strategy) {
@@ -7903,10 +9066,14 @@ function getInnerBoundingClientRect(element, strategy) {
     width,
     height,
     x,
-    y
+    y,
   };
 }
-function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
+function getClientRectFromClippingAncestor(
+  element,
+  clippingAncestor,
+  strategy
+) {
   let rect;
   if (clippingAncestor === "viewport") {
     rect = getViewportRect(element, strategy);
@@ -7919,24 +9086,33 @@ function getClientRectFromClippingAncestor(element, clippingAncestor, strategy)
     rect = {
       ...clippingAncestor,
       x: clippingAncestor.x - visualOffsets.x,
-      y: clippingAncestor.y - visualOffsets.y
+      y: clippingAncestor.y - visualOffsets.y,
     };
   }
   return rectToClientRect(rect);
 }
 function hasFixedPositionAncestor(element, stopNode) {
   const parentNode = getParentNode(element);
-  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
+  if (
+    parentNode === stopNode ||
+    !isElement(parentNode) ||
+    isLastTraversableNode(parentNode)
+  ) {
     return false;
   }
-  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
+  return (
+    getComputedStyle2(parentNode).position === "fixed" ||
+    hasFixedPositionAncestor(parentNode, stopNode)
+  );
 }
 function getClippingElementAncestors(element, cache2) {
   const cachedResult = cache2.get(element);
   if (cachedResult) {
     return cachedResult;
   }
-  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
+  let result = getOverflowAncestors(element, [], false).filter(
+    (el) => isElement(el) && getNodeName(el) !== "body"
+  );
   let currentContainingBlockComputedStyle = null;
   const elementIsFixed = getComputedStyle2(element).position === "fixed";
   let currentNode = elementIsFixed ? getParentNode(element) : element;
@@ -7946,7 +9122,17 @@ function getClippingElementAncestors(element, cache2) {
     if (!currentNodeIsContaining && computedStyle.position === "fixed") {
       currentContainingBlockComputedStyle = null;
     }
-    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
+    const shouldDropCurrentNode = elementIsFixed
+      ? !currentNodeIsContaining && !currentContainingBlockComputedStyle
+      : (!currentNodeIsContaining &&
+          computedStyle.position === "static" &&
+          !!currentContainingBlockComputedStyle &&
+          ["absolute", "fixed"].includes(
+            currentContainingBlockComputedStyle.position
+          )) ||
+        (isOverflowElement(currentNode) &&
+          !currentNodeIsContaining &&
+          hasFixedPositionAncestor(element, currentNode));
     if (shouldDropCurrentNode) {
       result = result.filter((ancestor) => ancestor !== currentNode);
     } else {
@@ -7958,17 +9144,21 @@ function getClippingElementAncestors(element, cache2) {
   return result;
 }
 function getClippingRect(_ref) {
-  let {
-    element,
-    boundary,
-    rootBoundary,
-    strategy
-  } = _ref;
-  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
+  let { element, boundary, rootBoundary, strategy } = _ref;
+  const elementClippingAncestors =
+    boundary === "clippingAncestors"
+      ? isTopLayer(element)
+        ? []
+        : getClippingElementAncestors(element, this._c)
+      : [].concat(boundary);
   const clippingAncestors = [...elementClippingAncestors, rootBoundary];
   const firstClippingAncestor = clippingAncestors[0];
   const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
-    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
+    const rect = getClientRectFromClippingAncestor(
+      element,
+      clippingAncestor,
+      strategy
+    );
     accRect.top = max(rect.top, accRect.top);
     accRect.right = min(rect.right, accRect.right);
     accRect.bottom = min(rect.bottom, accRect.bottom);
@@ -7979,17 +9169,14 @@ function getClippingRect(_ref) {
     width: clippingRect.right - clippingRect.left,
     height: clippingRect.bottom - clippingRect.top,
     x: clippingRect.left,
-    y: clippingRect.top
+    y: clippingRect.top,
   };
 }
 function getDimensions(element) {
-  const {
-    width,
-    height
-  } = getCssDimensions(element);
+  const { width, height } = getCssDimensions(element);
   return {
     width,
-    height
+    height,
   };
 }
 function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
@@ -7999,15 +9186,23 @@ function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
   const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
   let scroll = {
     scrollLeft: 0,
-    scrollTop: 0
+    scrollTop: 0,
   };
   const offsets = createCoords(0);
-  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
-    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
+  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {
+    if (
+      getNodeName(offsetParent) !== "body" ||
+      isOverflowElement(documentElement)
+    ) {
       scroll = getNodeScroll(offsetParent);
     }
     if (isOffsetParentAnElement) {
-      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
+      const offsetRect = getBoundingClientRect(
+        offsetParent,
+        true,
+        isFixed,
+        offsetParent
+      );
       offsets.x = offsetRect.x + offsetParent.clientLeft;
       offsets.y = offsetRect.y + offsetParent.clientTop;
     } else if (documentElement) {
@@ -8020,14 +9215,17 @@ function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
     x,
     y,
     width: rect.width,
-    height: rect.height
+    height: rect.height,
   };
 }
 function isStaticPositioned(element) {
   return getComputedStyle2(element).position === "static";
 }
 function getTrueOffsetParent(element, polyfill) {
-  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
+  if (
+    !isHTMLElement(element) ||
+    getComputedStyle2(element).position === "fixed"
+  ) {
     return null;
   }
   if (polyfill) {
@@ -8051,10 +9249,19 @@ function getOffsetParent(element, polyfill) {
     return win;
   }
   let offsetParent = getTrueOffsetParent(element, polyfill);
-  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
+  while (
+    offsetParent &&
+    isTableElement(offsetParent) &&
+    isStaticPositioned(offsetParent)
+  ) {
     offsetParent = getTrueOffsetParent(offsetParent, polyfill);
   }
-  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
+  if (
+    offsetParent &&
+    isLastTraversableNode(offsetParent) &&
+    isStaticPositioned(offsetParent) &&
+    !isContainingBlock(offsetParent)
+  ) {
     return win;
   }
   return offsetParent || getContainingBlock(element) || win;
@@ -8080,12 +9287,7 @@ function observeMove(element, onMove) {
       threshold = 1;
     }
     cleanup();
-    const {
-      left,
-      top,
-      width,
-      height
-    } = element.getBoundingClientRect();
+    const { left, top, width, height } = element.getBoundingClientRect();
     if (!skip) {
       onMove();
     }
@@ -8096,10 +9298,18 @@ function observeMove(element, onMove) {
     const insetRight = floor(root.clientWidth - (left + width));
     const insetBottom = floor(root.clientHeight - (top + height));
     const insetLeft = floor(left);
-    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
+    const rootMargin =
+      -insetTop +
+      "px " +
+      -insetRight +
+      "px " +
+      -insetBottom +
+      "px " +
+      -insetLeft +
+      "px";
     const options = {
       rootMargin,
-      threshold: max(0, min(1, threshold)) || 1
+      threshold: max(0, min(1, threshold)) || 1,
     };
     let isFirstUpdate = true;
     function handleObserve(entries2) {
@@ -8122,7 +9332,7 @@ function observeMove(element, onMove) {
       io = new IntersectionObserver(handleObserve, {
         ...options,
         // Handle <iframe>s
-        root: root.ownerDocument
+        root: root.ownerDocument,
       });
     } catch (e2) {
       io = new IntersectionObserver(handleObserve, options);
@@ -8141,17 +9351,25 @@ function autoUpdate(reference, floating, update, options) {
     ancestorResize = true,
     elementResize = typeof ResizeObserver === "function",
     layoutShift = typeof IntersectionObserver === "function",
-    animationFrame = false
+    animationFrame = false,
   } = options;
   const referenceEl = unwrapElement(reference);
-  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
+  const ancestors =
+    ancestorScroll || ancestorResize
+      ? [
+          ...(referenceEl ? getOverflowAncestors(referenceEl) : []),
+          ...getOverflowAncestors(floating),
+        ]
+      : [];
   ancestors.forEach((ancestor) => {
-    ancestorScroll && ancestor.addEventListener("scroll", update, {
-      passive: true
-    });
+    ancestorScroll &&
+      ancestor.addEventListener("scroll", update, {
+        passive: true,
+      });
     ancestorResize && ancestor.addEventListener("resize", update);
   });
-  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
+  const cleanupIo =
+    referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
   let reobserveFrame = -1;
   let resizeObserver = null;
   if (elementResize) {
@@ -8162,7 +9380,8 @@ function autoUpdate(reference, floating, update, options) {
         cancelAnimationFrame(reobserveFrame);
         reobserveFrame = requestAnimationFrame(() => {
           var _resizeObserver;
-          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
+          (_resizeObserver = resizeObserver) == null ||
+            _resizeObserver.observe(floating);
         });
       }
       update();
@@ -8179,7 +9398,13 @@ function autoUpdate(reference, floating, update, options) {
   }
   function frameLoop() {
     const nextRefRect = getBoundingClientRect(reference);
-    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
+    if (
+      prevRefRect &&
+      (nextRefRect.x !== prevRefRect.x ||
+        nextRefRect.y !== prevRefRect.y ||
+        nextRefRect.width !== prevRefRect.width ||
+        nextRefRect.height !== prevRefRect.height)
+    ) {
       update();
     }
     prevRefRect = nextRefRect;
@@ -8193,32 +9418,46 @@ function autoUpdate(reference, floating, update, options) {
       ancestorResize && ancestor.removeEventListener("resize", update);
     });
     cleanupIo == null || cleanupIo();
-    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
+    (_resizeObserver2 = resizeObserver) == null ||
+      _resizeObserver2.disconnect();
     resizeObserver = null;
     if (animationFrame) {
       cancelAnimationFrame(frameId);
     }
   };
 }
-var noOffsets, getElementRects, platform, offset2, shift2, flip2, size2, hide2, arrow2, computePosition2;
+var noOffsets,
+  getElementRects,
+  platform,
+  offset2,
+  shift2,
+  flip2,
+  size2,
+  hide2,
+  arrow2,
+  computePosition2;
 var init_floating_ui_dom = __esm({
   "../../node_modules/.pnpm/@floating-ui+dom@1.6.8/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"() {
     init_floating_ui_core();
     init_floating_ui_utils();
     init_floating_ui_utils_dom();
     noOffsets = /* @__PURE__ */ createCoords(0);
-    getElementRects = async function(data) {
+    getElementRects = async function (data) {
       const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
       const getDimensionsFn = this.getDimensions;
       const floatingDimensions = await getDimensionsFn(data.floating);
       return {
-        reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
+        reference: getRectRelativeToOffsetParent(
+          data.reference,
+          await getOffsetParentFn(data.floating),
+          data.strategy
+        ),
         floating: {
           x: 0,
           y: 0,
           width: floatingDimensions.width,
-          height: floatingDimensions.height
-        }
+          height: floatingDimensions.height,
+        },
       };
     };
     platform = {
@@ -8231,7 +9470,7 @@ var init_floating_ui_dom = __esm({
       getDimensions,
       getScale,
       isElement,
-      isRTL: isRTL2
+      isRTL: isRTL2,
     };
     offset2 = offset;
     shift2 = shift;
@@ -8243,72 +9482,93 @@ var init_floating_ui_dom = __esm({
       const cache2 = /* @__PURE__ */ new Map();
       const mergedOptions = {
         platform,
-        ...options
+        ...options,
       };
       const platformWithCache = {
         ...mergedOptions.platform,
-        _c: cache2
+        _c: cache2,
       };
       return computePosition(reference, floating, {
         ...mergedOptions,
-        platform: platformWithCache
+        platform: platformWithCache,
       });
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/4X2EKUJ3.js
 function usePopperContext() {
   const context = useContext(PopperContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `usePopperContext` must be used within a `Popper` component");
+    throw new Error(
+      "[kobalte]: `usePopperContext` must be used within a `Popper` component"
+    );
   }
   return context;
 }
 function PopperArrow(props) {
   const context = usePopperContext();
-  const mergedProps = mergeDefaultProps({
-    size: DEFAULT_SIZE
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      size: DEFAULT_SIZE,
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "style", "size"]);
   const dir = () => context.currentPlacement().split("-")[0];
   const contentStyle = createComputedStyle(context.contentRef);
-  const fill = () => contentStyle()?.getPropertyValue("background-color") || "none";
-  const stroke = () => contentStyle()?.getPropertyValue(`border-${dir()}-color`) || "none";
-  const borderWidth = () => contentStyle()?.getPropertyValue(`border-${dir()}-width`) || "0px";
+  const fill = () =>
+    contentStyle()?.getPropertyValue("background-color") || "none";
+  const stroke = () =>
+    contentStyle()?.getPropertyValue(`border-${dir()}-color`) || "none";
+  const borderWidth = () =>
+    contentStyle()?.getPropertyValue(`border-${dir()}-width`) || "0px";
   const strokeWidth = () => {
     return Number.parseInt(borderWidth()) * 2 * (DEFAULT_SIZE / local.size);
   };
   const rotate = () => {
-    return `rotate(${ROTATION_DEG[dir()]} ${HALF_DEFAULT_SIZE} ${HALF_DEFAULT_SIZE}) translate(0 2)`;
+    return `rotate(${
+      ROTATION_DEG[dir()]
+    } ${HALF_DEFAULT_SIZE} ${HALF_DEFAULT_SIZE}) translate(0 2)`;
   };
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setArrowRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    "aria-hidden": "true",
-    get style() {
-      return combineStyle({
-        // server side rendering
-        position: "absolute",
-        "font-size": `${local.size}px`,
-        width: "1em",
-        height: "1em",
-        "pointer-events": "none",
-        fill: fill(),
-        stroke: stroke(),
-        "stroke-width": strokeWidth()
-      }, local.style);
-    }
-  }, others, {
-    get children() {
-      const _el$ = _tmpl$(), _el$2 = _el$.firstChild;
-      createRenderEffect(() => setAttribute(_el$2, "transform", rotate()));
-      return _el$;
-    }
-  }));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setArrowRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        "aria-hidden": "true",
+        get style() {
+          return combineStyle(
+            {
+              // server side rendering
+              position: "absolute",
+              "font-size": `${local.size}px`,
+              width: "1em",
+              height: "1em",
+              "pointer-events": "none",
+              fill: fill(),
+              stroke: stroke(),
+              "stroke-width": strokeWidth(),
+            },
+            local.style
+          );
+        },
+      },
+      others,
+      {
+        get children() {
+          const _el$ = _tmpl$(),
+            _el$2 = _el$.firstChild;
+          createRenderEffect(() => setAttribute(_el$2, "transform", rotate()));
+          return _el$;
+        },
+      }
+    )
+  );
 }
 function createComputedStyle(element) {
   const [style2, setStyle] = createSignal();
@@ -8321,22 +9581,31 @@ function createComputedStyle(element) {
 function PopperPositioner(props) {
   const context = usePopperContext();
   const [local, others] = splitProps(props, ["ref", "style"]);
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setPositionerRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    "data-popper-positioner": "",
-    get style() {
-      return combineStyle({
-        position: "absolute",
-        top: 0,
-        left: 0,
-        "min-width": "max-content"
-      }, local.style);
-    }
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setPositionerRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        "data-popper-positioner": "",
+        get style() {
+          return combineStyle(
+            {
+              position: "absolute",
+              top: 0,
+              left: 0,
+              "min-width": "max-content",
+            },
+            local.style
+          );
+        },
+      },
+      others
+    )
+  );
 }
 function createDOMRect(anchorRect) {
   const { x = 0, y = 0, width = 0, height = 0 } = anchorRect ?? {};
@@ -8351,7 +9620,7 @@ function createDOMRect(anchorRect) {
     top: y,
     right: x + width,
     bottom: y + height,
-    left: x
+    left: x,
   };
   return { ...rect, toJSON: () => rect };
 }
@@ -8368,7 +9637,7 @@ function getAnchorElement(anchor, getAnchorRect) {
         return anchor.getBoundingClientRect();
       }
       return createDOMRect();
-    }
+    },
   };
 }
 function isValidPlacement(flip22) {
@@ -8384,33 +9653,39 @@ function getTransformOrigin(placement, readingDirection) {
     return `${reversePlacement} ${alignment === "start" ? "top" : "bottom"}`;
   }
   if (alignment === "start") {
-    return `${reversePlacement} ${readingDirection === "rtl" ? "right" : "left"}`;
+    return `${reversePlacement} ${
+      readingDirection === "rtl" ? "right" : "left"
+    }`;
   }
   return `${reversePlacement} ${readingDirection === "rtl" ? "left" : "right"}`;
 }
 function PopperRoot(props) {
-  const mergedProps = mergeDefaultProps({
-    getAnchorRect: (anchor) => anchor?.getBoundingClientRect(),
-    placement: "bottom",
-    gutter: 0,
-    shift: 0,
-    flip: true,
-    slide: true,
-    overlap: false,
-    sameWidth: false,
-    fitViewport: false,
-    hideWhenDetached: false,
-    detachedPadding: 0,
-    arrowPadding: 4,
-    overflowPadding: 8
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      getAnchorRect: (anchor) => anchor?.getBoundingClientRect(),
+      placement: "bottom",
+      gutter: 0,
+      shift: 0,
+      flip: true,
+      slide: true,
+      overlap: false,
+      sameWidth: false,
+      fitViewport: false,
+      hideWhenDetached: false,
+      detachedPadding: 0,
+      arrowPadding: 4,
+      overflowPadding: 8,
+    },
+    props
+  );
   const [positionerRef, setPositionerRef] = createSignal();
   const [arrowRef, setArrowRef] = createSignal();
-  const [currentPlacement, setCurrentPlacement] = createSignal(mergedProps.placement);
-  const anchorRef = () => getAnchorElement(mergedProps.anchorRef?.(), mergedProps.getAnchorRect);
-  const {
-    direction
-  } = useLocale();
+  const [currentPlacement, setCurrentPlacement] = createSignal(
+    mergedProps.placement
+  );
+  const anchorRef = () =>
+    getAnchorElement(mergedProps.anchorRef?.(), mergedProps.getAnchorRect);
+  const { direction } = useLocale();
   async function updatePosition() {
     const referenceEl = anchorRef();
     const floatingEl = positionerRef();
@@ -8419,71 +9694,96 @@ function PopperRoot(props) {
       return;
     }
     const arrowOffset = (arrowEl?.clientHeight || 0) / 2;
-    const finalGutter = typeof mergedProps.gutter === "number" ? mergedProps.gutter + arrowOffset : mergedProps.gutter ?? arrowOffset;
-    floatingEl.style.setProperty("--kb-popper-content-overflow-padding", `${mergedProps.overflowPadding}px`);
+    const finalGutter =
+      typeof mergedProps.gutter === "number"
+        ? mergedProps.gutter + arrowOffset
+        : mergedProps.gutter ?? arrowOffset;
+    floatingEl.style.setProperty(
+      "--kb-popper-content-overflow-padding",
+      `${mergedProps.overflowPadding}px`
+    );
     referenceEl.getBoundingClientRect();
     const middleware = [
       // https://floating-ui.com/docs/offset
-      offset2(({
-        placement
-      }) => {
+      offset2(({ placement }) => {
         const hasAlignment = !!placement.split("-")[1];
         return {
           mainAxis: finalGutter,
           crossAxis: !hasAlignment ? mergedProps.shift : void 0,
-          alignmentAxis: mergedProps.shift
+          alignmentAxis: mergedProps.shift,
         };
-      })
+      }),
     ];
     if (mergedProps.flip !== false) {
-      const fallbackPlacements = typeof mergedProps.flip === "string" ? mergedProps.flip.split(" ") : void 0;
-      if (fallbackPlacements !== void 0 && !fallbackPlacements.every(isValidPlacement)) {
+      const fallbackPlacements =
+        typeof mergedProps.flip === "string"
+          ? mergedProps.flip.split(" ")
+          : void 0;
+      if (
+        fallbackPlacements !== void 0 &&
+        !fallbackPlacements.every(isValidPlacement)
+      ) {
         throw new Error("`flip` expects a spaced-delimited list of placements");
       }
-      middleware.push(flip2({
-        padding: mergedProps.overflowPadding,
-        fallbackPlacements
-      }));
+      middleware.push(
+        flip2({
+          padding: mergedProps.overflowPadding,
+          fallbackPlacements,
+        })
+      );
     }
     if (mergedProps.slide || mergedProps.overlap) {
-      middleware.push(shift2({
-        mainAxis: mergedProps.slide,
-        crossAxis: mergedProps.overlap,
-        padding: mergedProps.overflowPadding
-      }));
+      middleware.push(
+        shift2({
+          mainAxis: mergedProps.slide,
+          crossAxis: mergedProps.overlap,
+          padding: mergedProps.overflowPadding,
+        })
+      );
     }
-    middleware.push(size2({
-      padding: mergedProps.overflowPadding,
-      apply({
-        availableWidth,
-        availableHeight,
-        rects
-      }) {
-        const referenceWidth = Math.round(rects.reference.width);
-        availableWidth = Math.floor(availableWidth);
-        availableHeight = Math.floor(availableHeight);
-        floatingEl.style.setProperty("--kb-popper-anchor-width", `${referenceWidth}px`);
-        floatingEl.style.setProperty("--kb-popper-content-available-width", `${availableWidth}px`);
-        floatingEl.style.setProperty("--kb-popper-content-available-height", `${availableHeight}px`);
-        if (mergedProps.sameWidth) {
-          floatingEl.style.width = `${referenceWidth}px`;
-        }
-        if (mergedProps.fitViewport) {
-          floatingEl.style.maxWidth = `${availableWidth}px`;
-          floatingEl.style.maxHeight = `${availableHeight}px`;
-        }
-      }
-    }));
+    middleware.push(
+      size2({
+        padding: mergedProps.overflowPadding,
+        apply({ availableWidth, availableHeight, rects }) {
+          const referenceWidth = Math.round(rects.reference.width);
+          availableWidth = Math.floor(availableWidth);
+          availableHeight = Math.floor(availableHeight);
+          floatingEl.style.setProperty(
+            "--kb-popper-anchor-width",
+            `${referenceWidth}px`
+          );
+          floatingEl.style.setProperty(
+            "--kb-popper-content-available-width",
+            `${availableWidth}px`
+          );
+          floatingEl.style.setProperty(
+            "--kb-popper-content-available-height",
+            `${availableHeight}px`
+          );
+          if (mergedProps.sameWidth) {
+            floatingEl.style.width = `${referenceWidth}px`;
+          }
+          if (mergedProps.fitViewport) {
+            floatingEl.style.maxWidth = `${availableWidth}px`;
+            floatingEl.style.maxHeight = `${availableHeight}px`;
+          }
+        },
+      })
+    );
     if (mergedProps.hideWhenDetached) {
-      middleware.push(hide2({
-        padding: mergedProps.detachedPadding
-      }));
+      middleware.push(
+        hide2({
+          padding: mergedProps.detachedPadding,
+        })
+      );
     }
     if (arrowEl) {
-      middleware.push(arrow2({
-        element: arrowEl,
-        padding: mergedProps.arrowPadding
-      }));
+      middleware.push(
+        arrow2({
+          element: arrowEl,
+          padding: mergedProps.arrowPadding,
+        })
+      );
     }
     const pos = await computePosition2(referenceEl, floatingEl, {
       placement: mergedProps.placement,
@@ -8491,37 +9791,39 @@ function PopperRoot(props) {
       middleware,
       platform: {
         ...platform,
-        isRTL: () => direction() === "rtl"
-      }
+        isRTL: () => direction() === "rtl",
+      },
     });
     setCurrentPlacement(pos.placement);
     mergedProps.onCurrentPlacementChange?.(pos.placement);
     if (!floatingEl) {
       return;
     }
-    floatingEl.style.setProperty("--kb-popper-content-transform-origin", getTransformOrigin(pos.placement, direction()));
+    floatingEl.style.setProperty(
+      "--kb-popper-content-transform-origin",
+      getTransformOrigin(pos.placement, direction())
+    );
     const x = Math.round(pos.x);
     const y = Math.round(pos.y);
     let visibility;
     if (mergedProps.hideWhenDetached) {
-      visibility = pos.middlewareData.hide?.referenceHidden ? "hidden" : "visible";
+      visibility = pos.middlewareData.hide?.referenceHidden
+        ? "hidden"
+        : "visible";
     }
     Object.assign(floatingEl.style, {
       top: "0",
       left: "0",
       transform: `translate3d(${x}px, ${y}px, 0)`,
-      visibility
+      visibility,
     });
     if (arrowEl && pos.middlewareData.arrow) {
-      const {
-        x: arrowX,
-        y: arrowY
-      } = pos.middlewareData.arrow;
+      const { x: arrowX, y: arrowY } = pos.middlewareData.arrow;
       const dir = pos.placement.split("-")[0];
       Object.assign(arrowEl.style, {
         left: arrowX != null ? `${arrowX}px` : "",
         top: arrowY != null ? `${arrowY}px` : "",
-        [dir]: "100%"
+        [dir]: "100%",
       });
     }
   }
@@ -8531,10 +9833,15 @@ function PopperRoot(props) {
     if (!referenceEl || !floatingEl) {
       return;
     }
-    const cleanupAutoUpdate = autoUpdate(referenceEl, floatingEl, updatePosition, {
-      // JSDOM doesn't support ResizeObserver
-      elementResize: typeof ResizeObserver === "function"
-    });
+    const cleanupAutoUpdate = autoUpdate(
+      referenceEl,
+      floatingEl,
+      updatePosition,
+      {
+        // JSDOM doesn't support ResizeObserver
+        elementResize: typeof ResizeObserver === "function",
+      }
+    );
     onCleanup(cleanupAutoUpdate);
   });
   createEffect(() => {
@@ -8551,16 +9858,22 @@ function PopperRoot(props) {
     currentPlacement,
     contentRef: () => mergedProps.contentRef?.(),
     setPositionerRef,
-    setArrowRef
+    setArrowRef,
   };
   return createComponent(PopperContext.Provider, {
     value: context,
     get children() {
       return mergedProps.children;
-    }
+    },
   });
 }
-var PopperContext, _tmpl$, DEFAULT_SIZE, HALF_DEFAULT_SIZE, ROTATION_DEG, REVERSE_BASE_PLACEMENT, Popper;
+var PopperContext,
+  _tmpl$,
+  DEFAULT_SIZE,
+  HALF_DEFAULT_SIZE,
+  ROTATION_DEG,
+  REVERSE_BASE_PLACEMENT,
+  Popper;
 var init_X2EKUJ3 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/4X2EKUJ3.js"() {
     init_XHJPQEZP();
@@ -8571,28 +9884,30 @@ var init_X2EKUJ3 = __esm({
     init_dist11();
     init_floating_ui_dom();
     PopperContext = createContext();
-    _tmpl$ = /* @__PURE__ */ template(`<svg display="block" viewBox="0 0 30 30" style="transform:scale(1.02)"><g><path fill="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"></path><path stroke="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z">`);
+    _tmpl$ = /* @__PURE__ */ template(
+      `<svg display="block" viewBox="0 0 30 30" style="transform:scale(1.02)"><g><path fill="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"></path><path stroke="none" d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z">`
+    );
     DEFAULT_SIZE = 30;
     HALF_DEFAULT_SIZE = DEFAULT_SIZE / 2;
     ROTATION_DEG = {
       top: 180,
       right: -90,
       bottom: 0,
-      left: 90
+      left: 90,
     };
     REVERSE_BASE_PLACEMENT = {
       top: "bottom",
       right: "left",
       bottom: "top",
-      left: "right"
+      left: "right",
     };
     Popper = Object.assign(PopperRoot, {
       Arrow: PopperArrow,
       Context: PopperContext,
       usePopperContext,
-      Positioner: PopperPositioner
+      Positioner: PopperPositioner,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/QEMPLYZX.js
@@ -8621,7 +9936,7 @@ var init_QEMPLYZX = __esm({
     init_dist12();
     init_solid();
     init_web();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/QGCMYLTA.js
@@ -8657,10 +9972,10 @@ function createInteractOutside(props, ref) {
       }
       const handler2 = composeEventHandlers([
         onPointerDownOutside,
-        onInteractOutside
+        onInteractOutside,
       ]);
       target.addEventListener(POINTER_DOWN_OUTSIDE_EVENT, handler2, {
-        once: true
+        once: true,
       });
       const pointerDownOutsideEvent = new CustomEvent(
         POINTER_DOWN_OUTSIDE_EVENT,
@@ -8669,8 +9984,9 @@ function createInteractOutside(props, ref) {
           cancelable: true,
           detail: {
             originalEvent: e2,
-            isContextMenu: e2.button === 2 || isCtrlKey(e2) && e2.button === 0
-          }
+            isContextMenu:
+              e2.button === 2 || (isCtrlKey(e2) && e2.button === 0),
+          },
         }
       );
       target.dispatchEvent(pointerDownOutsideEvent);
@@ -8689,18 +10005,15 @@ function createInteractOutside(props, ref) {
     if (!container || !target || !isEventOutside(e2)) {
       return;
     }
-    const handler = composeEventHandlers([
-      onFocusOutside,
-      onInteractOutside
-    ]);
+    const handler = composeEventHandlers([onFocusOutside, onInteractOutside]);
     target.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });
     const focusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE_EVENT, {
       bubbles: false,
       cancelable: true,
       detail: {
         originalEvent: e2,
-        isContextMenu: false
-      }
+        isContextMenu: false,
+      },
     });
     target.dispatchEvent(focusOutsideEvent);
   };
@@ -8732,7 +10045,7 @@ var init_QGCMYLTA = __esm({
     init_web();
     POINTER_DOWN_OUTSIDE_EVENT = "interactOutside.pointerDownOutside";
     FOCUS_OUTSIDE_EVENT = "interactOutside.focusOutside";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/G7G3PFRJ.js
@@ -8742,7 +10055,17 @@ function useOptionalDismissableLayerContext() {
 function DismissableLayer(props) {
   let ref;
   const parentContext = useOptionalDismissableLayerContext();
-  const [local, others] = splitProps(props, ["ref", "disableOutsidePointerEvents", "excludedElements", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss", "bypassTopMostLayerCheck"]);
+  const [local, others] = splitProps(props, [
+    "ref",
+    "disableOutsidePointerEvents",
+    "excludedElements",
+    "onEscapeKeyDown",
+    "onPointerDownOutside",
+    "onFocusOutside",
+    "onInteractOutside",
+    "onDismiss",
+    "bypassTopMostLayerCheck",
+  ]);
   const nestedLayers = /* @__PURE__ */ new Set([]);
   const registerNestedLayer = (element) => {
     nestedLayers.add(element);
@@ -8756,7 +10079,10 @@ function DismissableLayer(props) {
     if (!ref) {
       return false;
     }
-    return local.excludedElements?.some((node) => contains(node(), element)) || [...nestedLayers].some((layer) => contains(layer, element));
+    return (
+      local.excludedElements?.some((node) => contains(node(), element)) ||
+      [...nestedLayers].some((layer) => contains(layer, element))
+    );
   };
   const onPointerDownOutside = (e2) => {
     if (!ref || layerStack.isBelowPointerBlockingLayer(ref)) {
@@ -8778,11 +10104,14 @@ function DismissableLayer(props) {
       local.onDismiss?.();
     }
   };
-  createInteractOutside({
-    shouldExcludeElement,
-    onPointerDownOutside,
-    onFocusOutside
-  }, () => ref);
+  createInteractOutside(
+    {
+      shouldExcludeElement,
+      onPointerDownOutside,
+      onFocusOutside,
+    },
+    () => ref
+  );
   createEscapeKeyDown({
     ownerDocument: () => getDocument(ref),
     onEscapeKeyDown: (e2) => {
@@ -8794,7 +10123,7 @@ function DismissableLayer(props) {
         e2.preventDefault();
         local.onDismiss();
       }
-    }
+    },
   });
   onMount(() => {
     if (!ref) {
@@ -8803,7 +10132,7 @@ function DismissableLayer(props) {
     layerStack.addLayer({
       node: ref,
       isPointerBlocking: local.disableOutsidePointerEvents,
-      dismiss: local.onDismiss
+      dismiss: local.onDismiss,
     });
     const unregisterFromParentLayer = parentContext?.registerNestedLayer(ref);
     layerStack.assignPointerEventToLayers();
@@ -8818,38 +10147,50 @@ function DismissableLayer(props) {
       layerStack.restoreBodyPointerEvents(ref);
     });
   });
-  createEffect(on([() => ref, () => local.disableOutsidePointerEvents], ([ref2, disableOutsidePointerEvents]) => {
-    if (!ref2) {
-      return;
-    }
-    const layer = layerStack.find(ref2);
-    if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {
-      layer.isPointerBlocking = disableOutsidePointerEvents;
-      layerStack.assignPointerEventToLayers();
-    }
-    if (disableOutsidePointerEvents) {
-      layerStack.disableBodyPointerEvents(ref2);
-    }
-    onCleanup(() => {
-      layerStack.restoreBodyPointerEvents(ref2);
-    });
-  }, {
-    defer: true
-  }));
+  createEffect(
+    on(
+      [() => ref, () => local.disableOutsidePointerEvents],
+      ([ref2, disableOutsidePointerEvents]) => {
+        if (!ref2) {
+          return;
+        }
+        const layer = layerStack.find(ref2);
+        if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {
+          layer.isPointerBlocking = disableOutsidePointerEvents;
+          layerStack.assignPointerEventToLayers();
+        }
+        if (disableOutsidePointerEvents) {
+          layerStack.disableBodyPointerEvents(ref2);
+        }
+        onCleanup(() => {
+          layerStack.restoreBodyPointerEvents(ref2);
+        });
+      },
+      {
+        defer: true,
+      }
+    )
+  );
   const context = {
-    registerNestedLayer
+    registerNestedLayer,
   };
   return createComponent(DismissableLayerContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs((el) => ref = el, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        }
-      }, others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+          },
+          others
+        )
+      );
+    },
   });
 }
 var DismissableLayerContext;
@@ -8863,7 +10204,7 @@ var init_G7G3PFRJ = __esm({
     init_dist12();
     init_solid();
     DismissableLayerContext = createContext();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7LCANGHD.js
@@ -8871,7 +10212,7 @@ function createDisclosureState(props = {}) {
   const [isOpen, setIsOpen] = createControllableBooleanSignal({
     value: () => access(props.open),
     defaultValue: () => !!access(props.defaultOpen),
-    onChange: (value) => props.onOpenChange?.(value)
+    onChange: (value) => props.onOpenChange?.(value),
   });
   const open = () => {
     setIsOpen(true);
@@ -8887,39 +10228,52 @@ function createDisclosureState(props = {}) {
     setIsOpen,
     open,
     close,
-    toggle
+    toggle,
   };
 }
 var init_LCANGHD = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/7LCANGHD.js"() {
     init_BLN63FDC();
     init_dist12();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/Q2BOFK7I.js
 function useRadioGroupContext() {
   const context = useContext(RadioGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component");
+    throw new Error(
+      "[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component"
+    );
   }
   return context;
 }
 function useRadioGroupItemContext() {
   const context = useContext(RadioGroupItemContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component");
+    throw new Error(
+      "[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component"
+    );
   }
   return context;
 }
 function RadioGroupItem(props) {
   const formControlContext = useFormControlContext();
   const radioGroupContext = useRadioGroupContext();
-  const defaultId = `${formControlContext.generateId("item")}-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["value", "disabled", "onPointerDown"]);
+  const defaultId = `${formControlContext.generateId(
+    "item"
+  )}-${createUniqueId()}`;
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "value",
+    "disabled",
+    "onPointerDown",
+  ]);
   const [inputId, setInputId] = createSignal();
   const [labelId, setLabelId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
@@ -8940,7 +10294,7 @@ function RadioGroupItem(props) {
   const dataset = createMemo(() => ({
     ...formControlContext.dataset(),
     "data-disabled": isDisabled() ? "" : void 0,
-    "data-checked": isSelected() ? "" : void 0
+    "data-checked": isSelected() ? "" : void 0,
   }));
   const context = {
     value: () => local.value,
@@ -8957,27 +10311,37 @@ function RadioGroupItem(props) {
     registerLabel: createRegisterId(setLabelId),
     registerDescription: createRegisterId(setDescriptionId),
     setIsFocused,
-    setInputRef
+    setInputRef,
   };
   return createComponent(RadioGroupItemContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        role: "group",
-        onPointerDown
-      }, dataset, others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            role: "group",
+            onPointerDown,
+          },
+          dataset,
+          others
+        )
+      );
+    },
   });
 }
 function RadioGroupItemControl(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("control")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["onClick", "onKeyDown"]);
-  const onClick = (e2) => {
-    callHandler(e2, local.onClick);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("control"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, ["onClick", "onKeyDown"]);
+  const onClick = (e2) => {
+    callHandler(e2, local.onClick);
     context.select();
     context.inputRef()?.focus();
   };
@@ -8988,68 +10352,118 @@ function RadioGroupItemControl(props) {
       context.inputRef()?.focus();
     }
   };
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    onClick,
-    onKeyDown
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        onClick,
+        onKeyDown,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function RadioGroupItemDescription(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerDescription(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div"
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function RadioGroupItemIndicator(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("indicator")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("indicator"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "forceMount"]);
   const [ref, setRef] = createSignal();
-  const {
-    present
-  } = src_default({
+  const { present } = src_default({
     show: () => local.forceMount || context.isSelected(),
-    element: () => ref() ?? null
+    element: () => ref() ?? null,
   });
   return createComponent(Show, {
     get when() {
       return present();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs(setRef, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        }
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs(setRef, local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function RadioGroupItemInput(props) {
   const formControlContext = useFormControlContext();
   const radioGroupContext = useRadioGroupContext();
   const radioContext = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: radioContext.generateId("input")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "style", "aria-labelledby", "aria-describedby", "onChange", "onFocus", "onBlur"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: radioContext.generateId("input"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "style",
+    "aria-labelledby",
+    "aria-describedby",
+    "onChange",
+    "onFocus",
+    "onBlur",
+  ]);
   const ariaLabelledBy = () => {
-    return [
-      local["aria-labelledby"],
-      radioContext.labelId(),
-      // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby
-      local["aria-labelledby"] != null && others["aria-label"] != null ? others.id : void 0
-    ].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        local["aria-labelledby"],
+        radioContext.labelId(),
+        // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby
+        local["aria-labelledby"] != null && others["aria-label"] != null
+          ? others.id
+          : void 0,
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const ariaDescribedBy = () => {
-    return [local["aria-describedby"], radioContext.descriptionId(), radioGroupContext.ariaDescribedBy()].filter(Boolean).join(" ") || void 0;
+    return (
+      [
+        local["aria-describedby"],
+        radioContext.descriptionId(),
+        radioGroupContext.ariaDescribedBy(),
+      ]
+        .filter(Boolean)
+        .join(" ") || void 0
+    );
   };
   const [isInternalChangeEvent, setIsInternalChangeEvent] = createSignal(false);
   const onChange = (e2) => {
@@ -9070,101 +10484,156 @@ function RadioGroupItemInput(props) {
     callHandler(e2, local.onBlur);
     radioContext.setIsFocused(false);
   };
-  createEffect(on([() => radioContext.isSelected(), () => radioContext.value()], (c2) => {
-    if (!c2[0] && c2[1] === radioContext.value())
-      return;
-    setIsInternalChangeEvent(true);
-    const ref = radioContext.inputRef();
-    ref?.dispatchEvent(new Event("input", {
-      bubbles: true,
-      cancelable: true
-    }));
-    ref?.dispatchEvent(new Event("change", {
-      bubbles: true,
-      cancelable: true
-    }));
-  }, {
-    defer: true
-  }));
+  createEffect(
+    on(
+      [() => radioContext.isSelected(), () => radioContext.value()],
+      (c2) => {
+        if (!c2[0] && c2[1] === radioContext.value()) return;
+        setIsInternalChangeEvent(true);
+        const ref = radioContext.inputRef();
+        ref?.dispatchEvent(
+          new Event("input", {
+            bubbles: true,
+            cancelable: true,
+          })
+        );
+        ref?.dispatchEvent(
+          new Event("change", {
+            bubbles: true,
+            cancelable: true,
+          })
+        );
+      },
+      {
+        defer: true,
+      }
+    )
+  );
   createEffect(() => onCleanup(radioContext.registerInput(others.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "input",
-    ref(r$) {
-      const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    type: "radio",
-    get name() {
-      return formControlContext.name();
-    },
-    get value() {
-      return radioContext.value();
-    },
-    get checked() {
-      return radioContext.isSelected();
-    },
-    get required() {
-      return formControlContext.isRequired();
-    },
-    get disabled() {
-      return radioContext.isDisabled();
-    },
-    get readonly() {
-      return formControlContext.isReadOnly();
-    },
-    get style() {
-      return combineStyle({
-        ...visuallyHiddenStyles
-      }, local.style);
-    },
-    get ["aria-labelledby"]() {
-      return ariaLabelledBy();
-    },
-    get ["aria-describedby"]() {
-      return ariaDescribedBy();
-    },
-    onChange,
-    onFocus,
-    onBlur
-  }, () => radioContext.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "input",
+        ref(r$) {
+          const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        type: "radio",
+        get name() {
+          return formControlContext.name();
+        },
+        get value() {
+          return radioContext.value();
+        },
+        get checked() {
+          return radioContext.isSelected();
+        },
+        get required() {
+          return formControlContext.isRequired();
+        },
+        get disabled() {
+          return radioContext.isDisabled();
+        },
+        get readonly() {
+          return formControlContext.isReadOnly();
+        },
+        get style() {
+          return combineStyle(
+            {
+              ...visuallyHiddenStyles,
+            },
+            local.style
+          );
+        },
+        get ["aria-labelledby"]() {
+          return ariaLabelledBy();
+        },
+        get ["aria-describedby"]() {
+          return ariaDescribedBy();
+        },
+        onChange,
+        onFocus,
+        onBlur,
+      },
+      () => radioContext.dataset(),
+      others
+    )
+  );
 }
 function RadioGroupItemLabel(props) {
   const context = useRadioGroupItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   createEffect(() => onCleanup(context.registerLabel(mergedProps.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "label",
-    get ["for"]() {
-      return context.inputId();
-    }
-  }, () => context.dataset(), mergedProps));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "label",
+        get ["for"]() {
+          return context.inputId();
+        },
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function RadioGroupLabel(props) {
-  return createComponent(FormControlLabel, mergeProps({
-    as: "span"
-  }, props));
+  return createComponent(
+    FormControlLabel,
+    mergeProps(
+      {
+        as: "span",
+      },
+      props
+    )
+  );
 }
 function RadioGroupRoot(props) {
   let ref;
   const defaultId = `radiogroup-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId,
-    orientation: "vertical"
-  }, props);
-  const [local, formControlProps, others] = splitProps(mergedProps, ["ref", "value", "defaultValue", "onChange", "orientation", "aria-labelledby", "aria-describedby"], FORM_CONTROL_PROP_NAMES);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+      orientation: "vertical",
+    },
+    props
+  );
+  const [local, formControlProps, others] = splitProps(
+    mergedProps,
+    [
+      "ref",
+      "value",
+      "defaultValue",
+      "onChange",
+      "orientation",
+      "aria-labelledby",
+      "aria-describedby",
+    ],
+    FORM_CONTROL_PROP_NAMES
+  );
   const [selected, setSelected] = createControllableSignal({
     value: () => local.value,
     defaultValue: () => local.defaultValue,
-    onChange: (value) => local.onChange?.(value)
+    onChange: (value) => local.onChange?.(value),
   });
-  const {
-    formControlContext
-  } = createFormControl(formControlProps);
-  createFormResetListener(() => ref, () => setSelected(local.defaultValue ?? ""));
+  const { formControlContext } = createFormControl(formControlProps);
+  createFormResetListener(
+    () => ref,
+    () => setSelected(local.defaultValue ?? "")
+  );
   const ariaLabelledBy = () => {
-    return formControlContext.getAriaLabelledBy(access(formControlProps.id), others["aria-label"], local["aria-labelledby"]);
+    return formControlContext.getAriaLabelledBy(
+      access(formControlProps.id),
+      others["aria-label"],
+      local["aria-labelledby"]
+    );
   };
   const ariaDescribedBy = () => {
     return formControlContext.getAriaDescribedBy(local["aria-describedby"]);
@@ -9185,7 +10654,7 @@ function RadioGroupRoot(props) {
           const radio = el;
           radio.checked = isSelectedValue(radio.value);
         }
-    }
+    },
   };
   return createComponent(FormControlContext.Provider, {
     value: formControlContext,
@@ -9193,41 +10662,50 @@ function RadioGroupRoot(props) {
       return createComponent(RadioGroupContext.Provider, {
         value: context,
         get children() {
-          return createComponent(Polymorphic, mergeProps({
-            as: "div",
-            ref(r$) {
-              const _ref$ = mergeRefs((el) => ref = el, local.ref);
-              typeof _ref$ === "function" && _ref$(r$);
-            },
-            role: "radiogroup",
-            get id() {
-              return access(formControlProps.id);
-            },
-            get ["aria-invalid"]() {
-              return formControlContext.validationState() === "invalid" || void 0;
-            },
-            get ["aria-required"]() {
-              return formControlContext.isRequired() || void 0;
-            },
-            get ["aria-disabled"]() {
-              return formControlContext.isDisabled() || void 0;
-            },
-            get ["aria-readonly"]() {
-              return formControlContext.isReadOnly() || void 0;
-            },
-            get ["aria-orientation"]() {
-              return local.orientation;
-            },
-            get ["aria-labelledby"]() {
-              return ariaLabelledBy();
-            },
-            get ["aria-describedby"]() {
-              return ariaDescribedBy();
-            }
-          }, () => formControlContext.dataset(), others));
-        }
+          return createComponent(
+            Polymorphic,
+            mergeProps(
+              {
+                as: "div",
+                ref(r$) {
+                  const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+                  typeof _ref$ === "function" && _ref$(r$);
+                },
+                role: "radiogroup",
+                get id() {
+                  return access(formControlProps.id);
+                },
+                get ["aria-invalid"]() {
+                  return (
+                    formControlContext.validationState() === "invalid" || void 0
+                  );
+                },
+                get ["aria-required"]() {
+                  return formControlContext.isRequired() || void 0;
+                },
+                get ["aria-disabled"]() {
+                  return formControlContext.isDisabled() || void 0;
+                },
+                get ["aria-readonly"]() {
+                  return formControlContext.isReadOnly() || void 0;
+                },
+                get ["aria-orientation"]() {
+                  return local.orientation;
+                },
+                get ["aria-labelledby"]() {
+                  return ariaLabelledBy();
+                },
+                get ["aria-describedby"]() {
+                  return ariaDescribedBy();
+                },
+              },
+              () => formControlContext.dataset(),
+              others
+            )
+          );
+        },
       });
-    }
+    },
   });
 }
 var radio_group_exports, RadioGroupContext, RadioGroupItemContext, RadioGroup;
@@ -9256,7 +10734,7 @@ var init_Q2BOFK7I = __esm({
       ItemLabel: () => RadioGroupItemLabel,
       Label: () => RadioGroupLabel,
       RadioGroup: () => RadioGroup,
-      Root: () => RadioGroupRoot
+      Root: () => RadioGroupRoot,
     });
     RadioGroupContext = createContext();
     RadioGroupItemContext = createContext();
@@ -9269,9 +10747,9 @@ var init_Q2BOFK7I = __esm({
       ItemIndicator: RadioGroupItemIndicator,
       ItemInput: RadioGroupItemInput,
       ItemLabel: RadioGroupItemLabel,
-      Label: RadioGroupLabel
+      Label: RadioGroupLabel,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/GLKC2QFF.js
@@ -9298,9 +10776,10 @@ function createSelectableList(props, ref, scrollRef) {
       allowsTabNavigation: () => access(props.allowsTabNavigation),
       isVirtualized: () => access(props.isVirtualized),
       scrollToKey: (key) => access(props.scrollToKey)?.(key),
-      orientation: () => access(props.orientation)
+      orientation: () => access(props.orientation),
     },
-    ref);
+    ref
+  );
 }
 var ListKeyboardDelegate;
 var init_GLKC2QFF = __esm({
@@ -9402,7 +10881,8 @@ var init_GLKC2QFF = __esm({
         if (!collator) {
           return;
         }
-        let key = fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();
+        let key =
+          fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();
         while (key != null) {
           const item = this.collection().getItem(key);
           if (item) {
@@ -9415,7 +10895,7 @@ var init_GLKC2QFF = __esm({
         }
       }
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ISKHZMHS.js
@@ -9427,7 +10907,7 @@ function createFocusScope(props, ref) {
     },
     resume() {
       setIsPaused(false);
-    }
+    },
   };
   let lastFocusedElement = null;
   const onMountAutoFocus = (e2) => props.onMountAutoFocus?.(e2);
@@ -9445,7 +10925,9 @@ function createFocusScope(props, ref) {
     if (!container) {
       return [];
     }
-    return getAllTabbableIn(container, true).filter((el) => !el.hasAttribute("data-focus-trap"));
+    return getAllTabbableIn(container, true).filter(
+      (el) => !el.hasAttribute("data-focus-trap")
+    );
   };
   const firstTabbable = () => {
     const items = tabbables();
@@ -9481,7 +10963,10 @@ function createFocusScope(props, ref) {
     const previouslyFocusedElement = getActiveElement(container);
     const hasFocusedCandidate = contains(container, previouslyFocusedElement);
     if (!hasFocusedCandidate) {
-      const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT_EVENT, EVENT_OPTIONS);
+      const mountEvent = new CustomEvent(
+        AUTOFOCUS_ON_MOUNT_EVENT,
+        EVENT_OPTIONS
+      );
       container.addEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);
       container.dispatchEvent(mountEvent);
       if (!mountEvent.defaultPrevented) {
@@ -9496,16 +10981,27 @@ function createFocusScope(props, ref) {
     onCleanup(() => {
       container.removeEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);
       setTimeout(() => {
-        const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS);
+        const unmountEvent = new CustomEvent(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          EVENT_OPTIONS
+        );
         if (shouldPreventUnmountAutoFocus()) {
           unmountEvent.preventDefault();
         }
-        container.addEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);
+        container.addEventListener(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          onUnmountAutoFocus
+        );
         container.dispatchEvent(unmountEvent);
         if (!unmountEvent.defaultPrevented) {
-          focusWithoutScrolling(previouslyFocusedElement ?? ownerDocument().body);
+          focusWithoutScrolling(
+            previouslyFocusedElement ?? ownerDocument().body
+          );
         }
-        container.removeEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);
+        container.removeEventListener(
+          AUTOFOCUS_ON_UNMOUNT_EVENT,
+          onUnmountAutoFocus
+        );
         focusScopeStack.remove(focusScope);
       }, 0);
     });
@@ -9583,7 +11079,7 @@ function createFocusScope(props, ref) {
     });
     observer.observe(container, {
       childList: true,
-      subtree: false
+      subtree: false,
     });
     onCleanup(() => {
       startSentinel.removeEventListener("focusin", onFocus);
@@ -9594,7 +11090,10 @@ function createFocusScope(props, ref) {
     });
   });
 }
-var AUTOFOCUS_ON_MOUNT_EVENT, AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS, focusScopeStack;
+var AUTOFOCUS_ON_MOUNT_EVENT,
+  AUTOFOCUS_ON_UNMOUNT_EVENT,
+  EVENT_OPTIONS,
+  focusScopeStack;
 var init_ISKHZMHS = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/ISKHZMHS.js"() {
     init_ZKYDDHM6();
@@ -9605,7 +11104,7 @@ var init_ISKHZMHS = __esm({
     AUTOFOCUS_ON_UNMOUNT_EVENT = "focusScope.autoFocusOnUnmount";
     EVENT_OPTIONS = {
       bubbles: false,
-      cancelable: true
+      cancelable: true,
     };
     focusScopeStack = {
       /** A stack of focus scopes, with the active one at the top */
@@ -9623,9 +11122,9 @@ var init_ISKHZMHS = __esm({
       remove(scope) {
         this.stack = removeItemFromArray(this.stack, scope);
         this.active()?.resume();
-      }
+      },
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YA7DCYMB.js
@@ -9633,7 +11132,7 @@ var DATA_LIVE_ANNOUNCER_ATTR;
 var init_YA7DCYMB = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/YA7DCYMB.js"() {
     DATA_LIVE_ANNOUNCER_ATTR = "data-live-announcer";
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/TZGE2AQH.js
@@ -9655,7 +11154,12 @@ function ariaHideOutside(targets, root = document.body) {
       visibleNodes.add(element);
     }
     const acceptNode = (node) => {
-      if (visibleNodes.has(node) || node.parentElement && hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute("role") !== "row") {
+      if (
+        visibleNodes.has(node) ||
+        (node.parentElement &&
+          hiddenNodes.has(node.parentElement) &&
+          node.parentElement.getAttribute("role") !== "row")
+      ) {
         return NodeFilter.FILTER_REJECT;
       }
       for (const target of visibleNodes) {
@@ -9666,7 +11170,7 @@ function ariaHideOutside(targets, root = document.body) {
       return NodeFilter.FILTER_ACCEPT;
     };
     const walker2 = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {
-      acceptNode
+      acceptNode,
     });
     const acceptRoot = acceptNode(root2);
     if (acceptRoot === NodeFilter.FILTER_ACCEPT) {
@@ -9700,9 +11204,11 @@ function ariaHideOutside(targets, root = document.body) {
       if (change.type !== "childList" || change.addedNodes.length === 0) {
         continue;
       }
-      if (![...visibleNodes, ...hiddenNodes].some(
-        (node) => node.contains(change.target)
-      )) {
+      if (
+        ![...visibleNodes, ...hiddenNodes].some((node) =>
+          node.contains(change.target)
+        )
+      ) {
         for (const node of change.removedNodes) {
           if (node instanceof Element) {
             visibleNodes.delete(node);
@@ -9710,7 +11216,11 @@ function ariaHideOutside(targets, root = document.body) {
           }
         }
         for (const node of change.addedNodes) {
-          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true")) {
+          if (
+            (node instanceof HTMLElement || node instanceof SVGElement) &&
+            (node.dataset.liveAnnouncer === "true" ||
+              node.dataset.reactAriaTopLayer === "true")
+          ) {
             visibleNodes.add(node);
           } else if (node instanceof Element) {
             walk(node);
@@ -9726,7 +11236,7 @@ function ariaHideOutside(targets, root = document.body) {
     },
     disconnect() {
       observer.disconnect();
-    }
+    },
   };
   observerStack.push(observerWrapper);
   return () => {
@@ -9762,7 +11272,7 @@ var init_TZGE2AQH = __esm({
     init_solid();
     refCountMap = /* @__PURE__ */ new WeakMap();
     observerStack = [];
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/chunk/HD4B7J7A.js
@@ -9787,7 +11297,7 @@ var init_HD4B7J7A = __esm({
           activeStyles.set(props.key, {
             activeCount: 1,
             originalStyles,
-            properties: properties.map((property) => property.key)
+            properties: properties.map((property) => property.key),
           });
         }
         Object.assign(props.element.style, props.style);
@@ -9802,7 +11312,9 @@ var init_HD4B7J7A = __esm({
             return;
           }
           activeStyles.delete(props.key);
-          for (const [key, value] of Object.entries(activeStyle2.originalStyles)) {
+          for (const [key, value] of Object.entries(
+            activeStyle2.originalStyles
+          )) {
             props.element.style[key] = value;
           }
           for (const property of activeStyle2.properties) {
@@ -9816,14 +11328,14 @@ var init_HD4B7J7A = __esm({
       });
     };
     style_default = createStyle;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/create/style.js
 var init_style = __esm({
   "../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/create/style.js"() {
     init_HD4B7J7A();
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@corvu+utils@0.3.2_solid-js@1.9.5/node_modules/@corvu/utils/dist/scroll/index.js
@@ -9835,17 +11347,27 @@ var init_scroll = __esm({
         case "x":
           return [element.clientWidth, element.scrollLeft, element.scrollWidth];
         case "y":
-          return [element.clientHeight, element.scrollTop, element.scrollHeight];
+          return [
+            element.clientHeight,
+            element.scrollTop,
+            element.scrollHeight,
+          ];
       }
     };
     isScrollContainer = (element, axis) => {
       const styles = getComputedStyle(element);
       const overflow = axis === "x" ? styles.overflowX : styles.overflowY;
-      return overflow === "auto" || overflow === "scroll" || // The HTML element is a scroll container if it has overflow visible
-      element.tagName === "HTML" && overflow === "visible";
+      return (
+        overflow === "auto" ||
+        overflow === "scroll" || // The HTML element is a scroll container if it has overflow visible
+        (element.tagName === "HTML" && overflow === "visible")
+      );
     };
     getScrollAtLocation = (location, axis, stopAt) => {
-      const directionFactor = axis === "x" && window.getComputedStyle(location).direction === "rtl" ? -1 : 1;
+      const directionFactor =
+        axis === "x" && window.getComputedStyle(location).direction === "rtl"
+          ? -1
+          : 1;
       let currentElement = location;
       let availableScroll = 0;
       let availableScrollTop = 0;
@@ -9855,24 +11377,38 @@ var init_scroll = __esm({
           currentElement,
           axis
         );
-        const scrolled = scrollSize - clientSize - directionFactor * scrollOffset;
-        if ((scrollOffset !== 0 || scrolled !== 0) && isScrollContainer(currentElement, axis)) {
+        const scrolled =
+          scrollSize - clientSize - directionFactor * scrollOffset;
+        if (
+          (scrollOffset !== 0 || scrolled !== 0) &&
+          isScrollContainer(currentElement, axis)
+        ) {
           availableScroll += scrolled;
           availableScrollTop += scrollOffset;
         }
         if (currentElement === (stopAt ?? document.documentElement)) {
           wrapperReached = true;
         } else {
-          currentElement = currentElement._$host ?? currentElement.parentElement;
+          currentElement =
+            currentElement._$host ?? currentElement.parentElement;
         }
       } while (currentElement && !wrapperReached);
       return [availableScroll, availableScrollTop];
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/solid-prevent-scroll@0.1.9_solid-js@1.9.5/node_modules/solid-prevent-scroll/dist/index.js
-var preventScrollStack, setPreventScrollStack, isActive, createPreventScroll, getDeltaXY, getTouchXY, wouldScroll, contains2, preventScroll_default, src_default2;
+var preventScrollStack,
+  setPreventScrollStack,
+  isActive,
+  createPreventScroll,
+  getDeltaXY,
+  getTouchXY,
+  wouldScroll,
+  contains2,
+  preventScroll_default,
+  src_default2;
 var init_dist14 = __esm({
   "../../node_modules/.pnpm/solid-prevent-scroll@0.1.9_solid-js@1.9.5/node_modules/solid-prevent-scroll/dist/index.js"() {
     init_reactivity();
@@ -9880,7 +11416,8 @@ var init_dist14 = __esm({
     init_style();
     init_scroll();
     [preventScrollStack, setPreventScrollStack] = createSignal([]);
-    isActive = (id) => preventScrollStack().indexOf(id) === preventScrollStack().length - 1;
+    isActive = (id) =>
+      preventScrollStack().indexOf(id) === preventScrollStack().length - 1;
     createPreventScroll = (props) => {
       const defaultedProps = mergeProps(
         {
@@ -9890,7 +11427,7 @@ var init_dist14 = __esm({
           preventScrollbarShift: true,
           preventScrollbarShiftMode: "padding",
           restoreScrollPosition: true,
-          allowPinchZoom: false
+          allowPinchZoom: false,
         },
         props
       );
@@ -9902,13 +11439,16 @@ var init_dist14 = __esm({
         if (!access2(defaultedProps.enabled)) return;
         setPreventScrollStack((stack) => [...stack, preventScrollId]);
         onCleanup(() => {
-          setPreventScrollStack(
-            (stack) => stack.filter((id) => id !== preventScrollId)
+          setPreventScrollStack((stack) =>
+            stack.filter((id) => id !== preventScrollId)
           );
         });
       });
       createEffect(() => {
-        if (!access2(defaultedProps.enabled) || !access2(defaultedProps.hideScrollbar))
+        if (
+          !access2(defaultedProps.enabled) ||
+          !access2(defaultedProps.hideScrollbar)
+        )
           return;
         const { body } = document;
         const scrollbarWidth = window.innerWidth - body.offsetWidth;
@@ -9916,14 +11456,20 @@ var init_dist14 = __esm({
           const style2 = { overflow: "hidden" };
           const properties = [];
           if (scrollbarWidth > 0) {
-            if (access2(defaultedProps.preventScrollbarShiftMode) === "padding") {
-              style2.paddingRight = `calc(${window.getComputedStyle(body).paddingRight} + ${scrollbarWidth}px)`;
+            if (
+              access2(defaultedProps.preventScrollbarShiftMode) === "padding"
+            ) {
+              style2.paddingRight = `calc(${
+                window.getComputedStyle(body).paddingRight
+              } + ${scrollbarWidth}px)`;
             } else {
-              style2.marginRight = `calc(${window.getComputedStyle(body).marginRight} + ${scrollbarWidth}px)`;
+              style2.marginRight = `calc(${
+                window.getComputedStyle(body).marginRight
+              } + ${scrollbarWidth}px)`;
             }
             properties.push({
               key: "--scrollbar-width",
-              value: `${scrollbarWidth}px`
+              value: `${scrollbarWidth}px`,
             });
           }
           const offsetTop = window.scrollY;
@@ -9934,31 +11480,35 @@ var init_dist14 = __esm({
             style: style2,
             properties,
             cleanup: () => {
-              if (access2(defaultedProps.restoreScrollPosition) && scrollbarWidth > 0) {
+              if (
+                access2(defaultedProps.restoreScrollPosition) &&
+                scrollbarWidth > 0
+              ) {
                 window.scrollTo(offsetLeft, offsetTop);
               }
-            }
+            },
           });
         } else {
           style_default({
             key: "prevent-scroll",
             element: body,
             style: {
-              overflow: "hidden"
-            }
+              overflow: "hidden",
+            },
           });
         }
       });
       createEffect(() => {
-        if (!isActive(preventScrollId) || !access2(defaultedProps.enabled)) return;
+        if (!isActive(preventScrollId) || !access2(defaultedProps.enabled))
+          return;
         document.addEventListener("wheel", maybePreventWheel, {
-          passive: false
+          passive: false,
         });
         document.addEventListener("touchstart", logTouchStart, {
-          passive: false
+          passive: false,
         });
         document.addEventListener("touchmove", maybePreventTouch, {
-          passive: false
+          passive: false,
         });
         onCleanup(() => {
           document.removeEventListener("wheel", maybePreventWheel);
@@ -9995,7 +11545,10 @@ var init_dist14 = __esm({
         if (event.touches.length === 2) {
           shouldCancel = !access2(defaultedProps.allowPinchZoom);
         } else {
-          if (currentTouchStartAxis == null || currentTouchStartDelta === null) {
+          if (
+            currentTouchStartAxis == null ||
+            currentTouchStartDelta === null
+          ) {
             const delta = getTouchXY(event).map(
               (touch, i2) => currentTouchStart[i2] - touch
             );
@@ -10024,11 +11577,11 @@ var init_dist14 = __esm({
         }
       };
     };
-    getDeltaXY = (event) => [
-      event.deltaX,
-      event.deltaY
-    ];
-    getTouchXY = (event) => event.changedTouches[0] ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
+    getDeltaXY = (event) => [event.deltaX, event.deltaY];
+    getTouchXY = (event) =>
+      event.changedTouches[0]
+        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]
+        : [0, 0];
     wouldScroll = (target, axis, delta, wrapper) => {
       const targetInWrapper = wrapper !== null && contains2(wrapper, target);
       const [availableScroll, availableScrollTop] = getScrollAtLocation(
@@ -10055,7 +11608,7 @@ var init_dist14 = __esm({
     };
     preventScroll_default = createPreventScroll;
     src_default2 = preventScroll_default;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/3F4B62RP.js
@@ -10065,21 +11618,27 @@ function useOptionalMenuContext() {
 function useMenuContext() {
   const context = useOptionalMenuContext();
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuContext` must be used within a `Menu` component");
+    throw new Error(
+      "[kobalte]: `useMenuContext` must be used within a `Menu` component"
+    );
   }
   return context;
 }
 function useMenuItemContext() {
   const context = useContext(MenuItemContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component");
+    throw new Error(
+      "[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component"
+    );
   }
   return context;
 }
 function useMenuRootContext() {
   const context = useContext(MenuRootContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component");
+    throw new Error(
+      "[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component"
+    );
   }
   return context;
 }
@@ -10087,10 +11646,29 @@ function MenuItemBase(props) {
   let ref;
   const rootContext = useMenuRootContext();
   const menuContext = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`item-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "textValue", "disabled", "closeOnSelect", "checked", "indeterminate", "onSelect", "onPointerMove", "onPointerLeave", "onPointerDown", "onPointerUp", "onClick", "onKeyDown", "onMouseDown", "onFocus"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`item-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "textValue",
+    "disabled",
+    "closeOnSelect",
+    "checked",
+    "indeterminate",
+    "onSelect",
+    "onPointerMove",
+    "onPointerLeave",
+    "onPointerDown",
+    "onPointerUp",
+    "onClick",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocus",
+  ]);
   const [labelId, setLabelId] = createSignal();
   const [descriptionId, setDescriptionId] = createSignal();
   const [labelRef, setLabelRef] = createSignal();
@@ -10110,17 +11688,21 @@ function MenuItemBase(props) {
       ref: () => ref,
       type: "item",
       key: key(),
-      textValue: local.textValue ?? labelRef()?.textContent ?? ref?.textContent ?? "",
-      disabled: local.disabled ?? false
-    })
+      textValue:
+        local.textValue ?? labelRef()?.textContent ?? ref?.textContent ?? "",
+      disabled: local.disabled ?? false,
+    }),
   });
-  const selectableItem = createSelectableItem({
-    key,
-    selectionManager,
-    shouldSelectOnPressUp: true,
-    allowsDifferentPressOrigin: true,
-    disabled: () => local.disabled
-  }, () => ref);
+  const selectableItem = createSelectableItem(
+    {
+      key,
+      selectionManager,
+      shouldSelectOnPressUp: true,
+      allowsDifferentPressOrigin: true,
+      disabled: () => local.disabled,
+    },
+    () => ref
+  );
   const onPointerMove = (e2) => {
     callHandler(e2, local.onPointerMove);
     if (e2.pointerType !== "mouse") {
@@ -10178,7 +11760,7 @@ function MenuItemBase(props) {
     "data-indeterminate": local.indeterminate ? "" : void 0,
     "data-checked": local.checked && !local.indeterminate ? "" : void 0,
     "data-disabled": local.disabled ? "" : void 0,
-    "data-highlighted": isHighlighted() ? "" : void 0
+    "data-highlighted": isHighlighted() ? "" : void 0,
   }));
   const context = {
     isChecked: () => local.checked,
@@ -10186,81 +11768,120 @@ function MenuItemBase(props) {
     setLabelRef,
     generateId: createGenerateId(() => others.id),
     registerLabel: createRegisterId(setLabelId),
-    registerDescription: createRegisterId(setDescriptionId)
+    registerDescription: createRegisterId(setDescriptionId),
   };
   return createComponent(MenuItemContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        ref(r$) {
-          const _ref$ = mergeRefs((el) => ref = el, local.ref);
-          typeof _ref$ === "function" && _ref$(r$);
-        },
-        get tabIndex() {
-          return selectableItem.tabIndex();
-        },
-        get ["aria-checked"]() {
-          return ariaChecked();
-        },
-        get ["aria-disabled"]() {
-          return local.disabled;
-        },
-        get ["aria-labelledby"]() {
-          return labelId();
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            ref(r$) {
+              const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+              typeof _ref$ === "function" && _ref$(r$);
+            },
+            get tabIndex() {
+              return selectableItem.tabIndex();
+            },
+            get ["aria-checked"]() {
+              return ariaChecked();
+            },
+            get ["aria-disabled"]() {
+              return local.disabled;
+            },
+            get ["aria-labelledby"]() {
+              return labelId();
+            },
+            get ["aria-describedby"]() {
+              return descriptionId();
+            },
+            get ["data-key"]() {
+              return selectableItem.dataKey();
+            },
+            get onPointerDown() {
+              return composeEventHandlers([
+                local.onPointerDown,
+                selectableItem.onPointerDown,
+              ]);
+            },
+            get onPointerUp() {
+              return composeEventHandlers([
+                onPointerUp,
+                selectableItem.onPointerUp,
+              ]);
+            },
+            get onClick() {
+              return composeEventHandlers([
+                local.onClick,
+                selectableItem.onClick,
+              ]);
+            },
+            get onKeyDown() {
+              return composeEventHandlers([
+                onKeyDown,
+                selectableItem.onKeyDown,
+              ]);
+            },
+            get onMouseDown() {
+              return composeEventHandlers([
+                local.onMouseDown,
+                selectableItem.onMouseDown,
+              ]);
+            },
+            get onFocus() {
+              return composeEventHandlers([
+                local.onFocus,
+                selectableItem.onFocus,
+              ]);
+            },
+            onPointerMove,
+            onPointerLeave,
+          },
+          dataset,
+          others
+        )
+      );
+    },
+  });
+}
+function MenuCheckboxItem(props) {
+  const mergedProps = mergeDefaultProps(
+    {
+      closeOnSelect: false,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "checked",
+    "defaultChecked",
+    "onChange",
+    "onSelect",
+  ]);
+  const state = createToggleState({
+    isSelected: () => local.checked,
+    defaultIsSelected: () => local.defaultChecked,
+    onSelectedChange: (checked) => local.onChange?.(checked),
+    isDisabled: () => others.disabled,
+  });
+  const onSelect = () => {
+    local.onSelect?.();
+    state.toggle();
+  };
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitemcheckbox",
+        get checked() {
+          return state.isSelected();
         },
-        get ["aria-describedby"]() {
-          return descriptionId();
-        },
-        get ["data-key"]() {
-          return selectableItem.dataKey();
-        },
-        get onPointerDown() {
-          return composeEventHandlers([local.onPointerDown, selectableItem.onPointerDown]);
-        },
-        get onPointerUp() {
-          return composeEventHandlers([onPointerUp, selectableItem.onPointerUp]);
-        },
-        get onClick() {
-          return composeEventHandlers([local.onClick, selectableItem.onClick]);
-        },
-        get onKeyDown() {
-          return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
-        },
-        get onMouseDown() {
-          return composeEventHandlers([local.onMouseDown, selectableItem.onMouseDown]);
-        },
-        get onFocus() {
-          return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
-        },
-        onPointerMove,
-        onPointerLeave
-      }, dataset, others));
-    }
-  });
-}
-function MenuCheckboxItem(props) {
-  const mergedProps = mergeDefaultProps({
-    closeOnSelect: false
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["checked", "defaultChecked", "onChange", "onSelect"]);
-  const state = createToggleState({
-    isSelected: () => local.checked,
-    defaultIsSelected: () => local.defaultChecked,
-    onSelectedChange: (checked) => local.onChange?.(checked),
-    isDisabled: () => others.disabled
-  });
-  const onSelect = () => {
-    local.onSelect?.();
-    state.toggle();
-  };
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitemcheckbox",
-    get checked() {
-      return state.isSelected();
-    },
-    onSelect
-  }, others));
+        onSelect,
+      },
+      others
+    )
+  );
 }
 function useOptionalMenubarContext() {
   return useContext(MenubarContext);
@@ -10269,29 +11890,47 @@ function MenuTrigger(props) {
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
-  const {
-    direction
-  } = useLocale();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId("trigger")
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "disabled", "onPointerDown", "onClick", "onKeyDown", "onMouseOver", "onFocus"]);
+  const { direction } = useLocale();
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId("trigger"),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "disabled",
+    "onPointerDown",
+    "onClick",
+    "onKeyDown",
+    "onMouseOver",
+    "onFocus",
+  ]);
   let key = () => rootContext.value();
   if (optionalMenubarContext !== void 0) {
     key = () => rootContext.value() ?? local.id;
     if (optionalMenubarContext.lastValue() === void 0)
       optionalMenubarContext.setLastValue(key);
   }
-  const tagName = createTagName(() => context.triggerRef(), () => "button");
+  const tagName = createTagName(
+    () => context.triggerRef(),
+    () => "button"
+  );
   const isNativeLink = createMemo(() => {
-    return tagName() === "a" && context.triggerRef()?.getAttribute("href") != null;
+    return (
+      tagName() === "a" && context.triggerRef()?.getAttribute("href") != null
+    );
   });
-  createEffect(on(() => optionalMenubarContext?.value(), (value) => {
-    if (!isNativeLink())
-      return;
-    if (value === key())
-      context.triggerRef()?.focus();
-  }));
+  createEffect(
+    on(
+      () => optionalMenubarContext?.value(),
+      (value) => {
+        if (!isNativeLink()) return;
+        if (value === key()) context.triggerRef()?.focus();
+      }
+    )
+  );
   const handleClick = () => {
     if (optionalMenubarContext !== void 0) {
       if (!context.isOpen()) {
@@ -10303,8 +11942,7 @@ function MenuTrigger(props) {
         if (optionalMenubarContext.value() === key())
           optionalMenubarContext.closeMenu();
       }
-    } else
-      context.toggle(true);
+    } else context.toggle(true);
   };
   const onPointerDown = (e2) => {
     callHandler(e2, local.onPointerDown);
@@ -10316,8 +11954,7 @@ function MenuTrigger(props) {
   const onClick = (e2) => {
     callHandler(e2, local.onClick);
     if (!local.disabled) {
-      if (e2.currentTarget.dataset.pointerType === "touch")
-        handleClick();
+      if (e2.currentTarget.dataset.pointerType === "touch") handleClick();
     }
   };
   const onKeyDown = (e2) => {
@@ -10349,15 +11986,13 @@ function MenuTrigger(props) {
         context.open("last");
         break;
       case MENUBAR_KEYS.next(direction(), rootContext.orientation()):
-        if (optionalMenubarContext === void 0)
-          break;
+        if (optionalMenubarContext === void 0) break;
         e2.stopPropagation();
         e2.preventDefault();
         optionalMenubarContext.nextMenu();
         break;
       case MENUBAR_KEYS.previous(direction(), rootContext.orientation()):
-        if (optionalMenubarContext === void 0)
-          break;
+        if (optionalMenubarContext === void 0) break;
         e2.stopPropagation();
         e2.preventDefault();
         optionalMenubarContext.previousMenu();
@@ -10366,52 +12001,74 @@ function MenuTrigger(props) {
   };
   const onMouseOver = (e2) => {
     callHandler(e2, local.onMouseOver);
-    if (context.triggerRef()?.dataset.pointerType === "touch")
-      return;
-    if (!local.disabled && optionalMenubarContext !== void 0 && optionalMenubarContext.value() !== void 0) {
+    if (context.triggerRef()?.dataset.pointerType === "touch") return;
+    if (
+      !local.disabled &&
+      optionalMenubarContext !== void 0 &&
+      optionalMenubarContext.value() !== void 0
+    ) {
       optionalMenubarContext.setValue(key);
     }
   };
   const onFocus = (e2) => {
     callHandler(e2, local.onFocus);
-    if (optionalMenubarContext !== void 0 && e2.currentTarget.dataset.pointerType !== "touch")
+    if (
+      optionalMenubarContext !== void 0 &&
+      e2.currentTarget.dataset.pointerType !== "touch"
+    )
       optionalMenubarContext.setValue(key);
   };
   createEffect(() => onCleanup(context.registerTriggerId(local.id)));
-  return createComponent(ButtonRoot, mergeProps({
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setTriggerRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get ["data-kb-menu-value-trigger"]() {
-      return rootContext.value();
-    },
-    get id() {
-      return local.id;
-    },
-    get disabled() {
-      return local.disabled;
-    },
-    "aria-haspopup": "true",
-    get ["aria-expanded"]() {
-      return context.isOpen();
-    },
-    get ["aria-controls"]() {
-      return createMemo(() => !!context.isOpen())() ? context.contentId() : void 0;
-    },
-    get ["data-highlighted"]() {
-      return key() !== void 0 && optionalMenubarContext?.value() === key() ? true : void 0;
-    },
-    get tabIndex() {
-      return optionalMenubarContext !== void 0 ? optionalMenubarContext.value() === key() || optionalMenubarContext.lastValue() === key() ? 0 : -1 : void 0;
-    },
-    onPointerDown,
-    onMouseOver,
-    onClick,
-    onKeyDown,
-    onFocus,
-    role: optionalMenubarContext !== void 0 ? "menuitem" : void 0
-  }, () => context.dataset(), others));
+  return createComponent(
+    ButtonRoot,
+    mergeProps(
+      {
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setTriggerRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get ["data-kb-menu-value-trigger"]() {
+          return rootContext.value();
+        },
+        get id() {
+          return local.id;
+        },
+        get disabled() {
+          return local.disabled;
+        },
+        "aria-haspopup": "true",
+        get ["aria-expanded"]() {
+          return context.isOpen();
+        },
+        get ["aria-controls"]() {
+          return createMemo(() => !!context.isOpen())()
+            ? context.contentId()
+            : void 0;
+        },
+        get ["data-highlighted"]() {
+          return key() !== void 0 && optionalMenubarContext?.value() === key()
+            ? true
+            : void 0;
+        },
+        get tabIndex() {
+          return optionalMenubarContext !== void 0
+            ? optionalMenubarContext.value() === key() ||
+              optionalMenubarContext.lastValue() === key()
+              ? 0
+              : -1
+            : void 0;
+        },
+        onPointerDown,
+        onMouseOver,
+        onClick,
+        onKeyDown,
+        onFocus,
+        role: optionalMenubarContext !== void 0 ? "menuitem" : void 0,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function useOptionalNavigationMenuContext() {
   return useContext(NavigationMenuContext);
@@ -10422,35 +12079,61 @@ function MenuContentBase(props) {
   const context = useMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
   const optionalNavigationMenuContext = useOptionalNavigationMenuContext();
-  const {
-    direction
-  } = useLocale();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`content-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "style", "onOpenAutoFocus", "onCloseAutoFocus", "onEscapeKeyDown", "onFocusOutside", "onPointerEnter", "onPointerMove", "onKeyDown", "onMouseDown", "onFocusIn", "onFocusOut"]);
+  const { direction } = useLocale();
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`content-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "style",
+    "onOpenAutoFocus",
+    "onCloseAutoFocus",
+    "onEscapeKeyDown",
+    "onFocusOutside",
+    "onPointerEnter",
+    "onPointerMove",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocusIn",
+    "onFocusOut",
+  ]);
   let lastPointerX = 0;
   const isRootModalContent = () => {
-    return context.parentMenuContext() == null && optionalMenubarContext === void 0 && rootContext.isModal();
+    return (
+      context.parentMenuContext() == null &&
+      optionalMenubarContext === void 0 &&
+      rootContext.isModal()
+    );
   };
-  const selectableList = createSelectableList({
-    selectionManager: context.listState().selectionManager,
-    collection: context.listState().collection,
-    autoFocus: context.autoFocus,
-    deferAutoFocus: true,
-    // ensure all menu items are mounted and collection is not empty before trying to autofocus.
-    shouldFocusWrap: true,
-    disallowTypeAhead: () => !context.listState().selectionManager().isFocused(),
-    orientation: () => rootContext.orientation() === "horizontal" ? "vertical" : "horizontal"
-  }, () => ref);
-  createFocusScope({
-    trapFocus: () => isRootModalContent() && context.isOpen(),
-    onMountAutoFocus: (event) => {
-      if (optionalMenubarContext === void 0)
-        local.onOpenAutoFocus?.(event);
+  const selectableList = createSelectableList(
+    {
+      selectionManager: context.listState().selectionManager,
+      collection: context.listState().collection,
+      autoFocus: context.autoFocus,
+      deferAutoFocus: true,
+      // ensure all menu items are mounted and collection is not empty before trying to autofocus.
+      shouldFocusWrap: true,
+      disallowTypeAhead: () =>
+        !context.listState().selectionManager().isFocused(),
+      orientation: () =>
+        rootContext.orientation() === "horizontal" ? "vertical" : "horizontal",
     },
-    onUnmountAutoFocus: local.onCloseAutoFocus
-  }, () => ref);
+    () => ref
+  );
+  createFocusScope(
+    {
+      trapFocus: () => isRootModalContent() && context.isOpen(),
+      onMountAutoFocus: (event) => {
+        if (optionalMenubarContext === void 0) local.onOpenAutoFocus?.(event);
+      },
+      onUnmountAutoFocus: local.onCloseAutoFocus,
+    },
+    () => ref
+  );
   const onKeyDown = (e2) => {
     if (!contains(e2.currentTarget, e2.target)) {
       return;
@@ -10469,8 +12152,7 @@ function MenuContentBase(props) {
             optionalMenubarContext.nextMenu();
             break;
           case MENUBAR_KEYS.previous(direction(), rootContext.orientation()):
-            if (e2.currentTarget.hasAttribute("data-closed"))
-              break;
+            if (e2.currentTarget.hasAttribute("data-closed")) break;
             e2.stopPropagation();
             e2.preventDefault();
             context.close(true);
@@ -10496,8 +12178,16 @@ function MenuContentBase(props) {
     if (!context.isOpen()) {
       return;
     }
-    context.parentMenuContext()?.listState().selectionManager().setFocused(false);
-    context.parentMenuContext()?.listState().selectionManager().setFocusedKey(void 0);
+    context
+      .parentMenuContext()
+      ?.listState()
+      .selectionManager()
+      .setFocused(false);
+    context
+      .parentMenuContext()
+      ?.listState()
+      .selectionManager()
+      .setFocusedKey(void 0);
   };
   const onPointerMove = (e2) => {
     callHandler(e2, local.onPointerMove);
@@ -10527,15 +12217,28 @@ function MenuContentBase(props) {
     get "aria-labelledby"() {
       return context.triggerId();
     },
-    onKeyDown: composeEventHandlers([local.onKeyDown, selectableList.onKeyDown, onKeyDown]),
-    onMouseDown: composeEventHandlers([local.onMouseDown, selectableList.onMouseDown]),
-    onFocusIn: composeEventHandlers([local.onFocusIn, selectableList.onFocusIn]),
-    onFocusOut: composeEventHandlers([local.onFocusOut, selectableList.onFocusOut]),
+    onKeyDown: composeEventHandlers([
+      local.onKeyDown,
+      selectableList.onKeyDown,
+      onKeyDown,
+    ]),
+    onMouseDown: composeEventHandlers([
+      local.onMouseDown,
+      selectableList.onMouseDown,
+    ]),
+    onFocusIn: composeEventHandlers([
+      local.onFocusIn,
+      selectableList.onFocusIn,
+    ]),
+    onFocusOut: composeEventHandlers([
+      local.onFocusOut,
+      selectableList.onFocusOut,
+    ]),
     onPointerEnter,
     onPointerMove,
     get "data-orientation"() {
       return rootContext.orientation();
-    }
+    },
   };
   return createComponent(Show, {
     get when() {
@@ -10544,41 +12247,67 @@ function MenuContentBase(props) {
     get children() {
       return createComponent(Show, {
         get when() {
-          return optionalNavigationMenuContext === void 0 || context.parentMenuContext() != null;
+          return (
+            optionalNavigationMenuContext === void 0 ||
+            context.parentMenuContext() != null
+          );
         },
         get fallback() {
-          return createComponent(Polymorphic, mergeProps({
-            as: "div"
-          }, () => context.dataset(), commonAttributes, others));
+          return createComponent(
+            Polymorphic,
+            mergeProps(
+              {
+                as: "div",
+              },
+              () => context.dataset(),
+              commonAttributes,
+              others
+            )
+          );
         },
         get children() {
           return createComponent(Popper.Positioner, {
             get children() {
-              return createComponent(DismissableLayer, mergeProps({
-                get disableOutsidePointerEvents() {
-                  return createMemo(() => !!isRootModalContent())() && context.isOpen();
-                },
-                get excludedElements() {
-                  return [context.triggerRef];
-                },
-                bypassTopMostLayerCheck: true,
-                get style() {
-                  return combineStyle({
-                    "--kb-menu-content-transform-origin": "var(--kb-popper-content-transform-origin)",
-                    position: "relative"
-                  }, local.style);
-                },
-                onEscapeKeyDown,
-                onFocusOutside,
-                get onDismiss() {
-                  return context.close;
-                }
-              }, () => context.dataset(), commonAttributes, others));
-            }
+              return createComponent(
+                DismissableLayer,
+                mergeProps(
+                  {
+                    get disableOutsidePointerEvents() {
+                      return (
+                        createMemo(() => !!isRootModalContent())() &&
+                        context.isOpen()
+                      );
+                    },
+                    get excludedElements() {
+                      return [context.triggerRef];
+                    },
+                    bypassTopMostLayerCheck: true,
+                    get style() {
+                      return combineStyle(
+                        {
+                          "--kb-menu-content-transform-origin":
+                            "var(--kb-popper-content-transform-origin)",
+                          position: "relative",
+                        },
+                        local.style
+                      );
+                    },
+                    onEscapeKeyDown,
+                    onFocusOutside,
+                    get onDismiss() {
+                      return context.close;
+                    },
+                  },
+                  () => context.dataset(),
+                  commonAttributes,
+                  others
+                )
+              );
+            },
           });
-        }
+        },
       });
-    }
+    },
   });
 }
 function MenuContent(props) {
@@ -10588,126 +12317,198 @@ function MenuContent(props) {
   const [local, others] = splitProps(props, ["ref"]);
   src_default2({
     element: () => ref ?? null,
-    enabled: () => context.contentPresent() && rootContext.preventScroll()
+    enabled: () => context.contentPresent() && rootContext.preventScroll(),
   });
-  return createComponent(MenuContentBase, mergeProps({
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => {
-        ref = el;
-      }, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    }
-  }, others));
+  return createComponent(
+    MenuContentBase,
+    mergeProps(
+      {
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => {
+            ref = el;
+          }, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+      },
+      others
+    )
+  );
 }
 function useMenuGroupContext() {
   const context = useContext(MenuGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component");
+    throw new Error(
+      "[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component"
+    );
   }
   return context;
 }
 function MenuGroup(props) {
   const rootContext = useMenuRootContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`group-${createUniqueId()}`)
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`group-${createUniqueId()}`),
+    },
+    props
+  );
   const [labelId, setLabelId] = createSignal();
   const context = {
     generateId: createGenerateId(() => mergedProps.id),
-    registerLabelId: createRegisterId(setLabelId)
+    registerLabelId: createRegisterId(setLabelId),
   };
   return createComponent(MenuGroupContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div",
-        role: "group",
-        get ["aria-labelledby"]() {
-          return labelId();
-        }
-      }, mergedProps));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+            role: "group",
+            get ["aria-labelledby"]() {
+              return labelId();
+            },
+          },
+          mergedProps
+        )
+      );
+    },
   });
 }
 function MenuGroupLabel(props) {
   const context = useMenuGroupContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["id"]);
   createEffect(() => onCleanup(context.registerLabelId(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "span",
-    get id() {
-      return local.id;
-    },
-    "aria-hidden": "true"
-  }, others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "span",
+        get id() {
+          return local.id;
+        },
+        "aria-hidden": "true",
+      },
+      others
+    )
+  );
 }
 function MenuIcon(props) {
   const context = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    children: "\u25BC"
-  }, props);
-  return createComponent(Polymorphic, mergeProps({
-    as: "span",
-    "aria-hidden": "true"
-  }, () => context.dataset(), mergedProps));
+  const mergedProps = mergeDefaultProps(
+    {
+      children: "\u25BC",
+    },
+    props
+  );
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "span",
+        "aria-hidden": "true",
+      },
+      () => context.dataset(),
+      mergedProps
+    )
+  );
 }
 function MenuItem(props) {
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitem",
-    closeOnSelect: true
-  }, props));
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitem",
+        closeOnSelect: true,
+      },
+      props
+    )
+  );
 }
 function MenuItemDescription(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("description")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("description"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["id"]);
   createEffect(() => onCleanup(context.registerDescription(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    get id() {
-      return local.id;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        get id() {
+          return local.id;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuItemIndicator(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("indicator")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("indicator"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["forceMount"]);
   return createComponent(Show, {
     get when() {
       return local.forceMount || context.isChecked();
     },
     get children() {
-      return createComponent(Polymorphic, mergeProps({
-        as: "div"
-      }, () => context.dataset(), others));
-    }
+      return createComponent(
+        Polymorphic,
+        mergeProps(
+          {
+            as: "div",
+          },
+          () => context.dataset(),
+          others
+        )
+      );
+    },
   });
 }
 function MenuItemLabel(props) {
   const context = useMenuItemContext();
-  const mergedProps = mergeDefaultProps({
-    id: context.generateId("label")
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: context.generateId("label"),
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["ref", "id"]);
   createEffect(() => onCleanup(context.registerLabel(local.id)));
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs(context.setLabelRef, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get id() {
-      return local.id;
-    }
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs(context.setLabelRef, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get id() {
+          return local.id;
+        },
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuPortal(props) {
   const context = useMenuContext();
@@ -10717,57 +12518,76 @@ function MenuPortal(props) {
     },
     get children() {
       return createComponent(Portal, props);
-    }
+    },
   });
 }
 function useMenuRadioGroupContext() {
   const context = useContext(MenuRadioGroupContext);
   if (context === void 0) {
-    throw new Error("[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component");
+    throw new Error(
+      "[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component"
+    );
   }
   return context;
 }
 function MenuRadioGroup(props) {
   const rootContext = useMenuRootContext();
   const defaultId = rootContext.generateId(`radiogroup-${createUniqueId()}`);
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["value", "defaultValue", "onChange", "disabled"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "value",
+    "defaultValue",
+    "onChange",
+    "disabled",
+  ]);
   const [selected, setSelected] = createControllableSignal({
     value: () => local.value,
     defaultValue: () => local.defaultValue,
-    onChange: (value) => local.onChange?.(value)
+    onChange: (value) => local.onChange?.(value),
   });
   const context = {
     isDisabled: () => local.disabled,
     isSelectedValue: (value) => value === selected(),
-    setSelectedValue: setSelected
+    setSelectedValue: setSelected,
   };
   return createComponent(MenuRadioGroupContext.Provider, {
     value: context,
     get children() {
       return createComponent(MenuGroup, others);
-    }
+    },
   });
 }
 function MenuRadioItem(props) {
   const context = useMenuRadioGroupContext();
-  const mergedProps = mergeDefaultProps({
-    closeOnSelect: false
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      closeOnSelect: false,
+    },
+    props
+  );
   const [local, others] = splitProps(mergedProps, ["value", "onSelect"]);
   const onSelect = () => {
     local.onSelect?.();
     context.setSelectedValue(local.value);
   };
-  return createComponent(MenuItemBase, mergeProps({
-    role: "menuitemradio",
-    get checked() {
-      return context.isSelectedValue(local.value);
-    },
-    onSelect
-  }, others));
+  return createComponent(
+    MenuItemBase,
+    mergeProps(
+      {
+        role: "menuitemradio",
+        get checked() {
+          return context.isSelectedValue(local.value);
+        },
+        onSelect,
+      },
+      others
+    )
+  );
 }
 function getPointerGraceArea(placement, event, contentEl) {
   const basePlacement = placement.split("-")[0];
@@ -10819,10 +12639,20 @@ function Menu(props) {
   const parentMenuContext = useOptionalMenuContext();
   const optionalMenubarContext = useOptionalMenubarContext();
   const optionalNavigationMenuContext = useOptionalNavigationMenuContext();
-  const mergedProps = mergeDefaultProps({
-    placement: rootContext.orientation() === "horizontal" ? "bottom-start" : "right-start"
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["open", "defaultOpen", "onOpenChange"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      placement:
+        rootContext.orientation() === "horizontal"
+          ? "bottom-start"
+          : "right-start",
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "open",
+    "defaultOpen",
+    "onOpenChange",
+  ]);
   let pointerGraceTimeoutId = 0;
   let pointerGraceIntent = null;
   let pointerDir = "right";
@@ -10831,29 +12661,27 @@ function Menu(props) {
   const [triggerRef, setTriggerRef] = createSignal();
   const [contentRef, setContentRef] = createSignal();
   const [focusStrategy, setFocusStrategy] = createSignal(true);
-  const [currentPlacement, setCurrentPlacement] = createSignal(others.placement);
+  const [currentPlacement, setCurrentPlacement] = createSignal(
+    others.placement
+  );
   const [nestedMenus, setNestedMenus] = createSignal([]);
   const [items, setItems] = createSignal([]);
-  const {
-    DomCollectionProvider
-  } = createDomCollection({
+  const { DomCollectionProvider } = createDomCollection({
     items,
-    onItemsChange: setItems
+    onItemsChange: setItems,
   });
   const disclosureState = createDisclosureState({
     open: () => local.open,
     defaultOpen: () => local.defaultOpen,
-    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen)
+    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen),
   });
-  const {
-    present: contentPresent
-  } = src_default({
+  const { present: contentPresent } = src_default({
     show: () => rootContext.forceMount() || disclosureState.isOpen(),
-    element: () => contentRef() ?? null
+    element: () => contentRef() ?? null,
   });
   const listState = createListState({
     selectionMode: "none",
-    dataSource: items
+    dataSource: items,
   });
   const open = (focusStrategy2) => {
     setFocusStrategy(focusStrategy2);
@@ -10880,8 +12708,7 @@ function Menu(props) {
   const focusContent = () => {
     if (optionalNavigationMenuContext != null)
       setTimeout(() => _focusContent());
-    else
-      _focusContent();
+    else _focusContent();
   };
   const registerNestedMenu = (element) => {
     setNestedMenus((prev) => [...prev, element]);
@@ -10893,7 +12720,9 @@ function Menu(props) {
   };
   const isPointerMovingToSubmenu = (e2) => {
     const isMovingTowards = pointerDir === pointerGraceIntent?.side;
-    return isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent?.area);
+    return (
+      isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent?.area)
+    );
   };
   const onItemEnter = (e2) => {
     if (isPointerMovingToSubmenu(e2)) {
@@ -10913,9 +12742,13 @@ function Menu(props) {
   };
   createHideOutside({
     isDisabled: () => {
-      return !(parentMenuContext == null && disclosureState.isOpen() && rootContext.isModal());
+      return !(
+        parentMenuContext == null &&
+        disclosureState.isOpen() &&
+        rootContext.isModal()
+      );
     },
-    targets: () => [contentRef(), ...nestedMenus()].filter(Boolean)
+    targets: () => [contentRef(), ...nestedMenus()].filter(Boolean),
   });
   createEffect(() => {
     const contentEl = contentRef();
@@ -10928,19 +12761,19 @@ function Menu(props) {
     });
   });
   createEffect(() => {
-    if (parentMenuContext !== void 0)
-      return;
-    optionalMenubarContext?.registerMenu(rootContext.value(), [contentRef(), ...nestedMenus()]);
+    if (parentMenuContext !== void 0) return;
+    optionalMenubarContext?.registerMenu(rootContext.value(), [
+      contentRef(),
+      ...nestedMenus(),
+    ]);
   });
   createEffect(() => {
     if (parentMenuContext !== void 0 || optionalMenubarContext === void 0)
       return;
     if (optionalMenubarContext.value() === rootContext.value()) {
       triggerRef()?.focus();
-      if (optionalMenubarContext.autoFocusMenu())
-        open(true);
-    } else
-      close();
+      if (optionalMenubarContext.autoFocusMenu()) open(true);
+    } else close();
   });
   createEffect(() => {
     if (parentMenuContext !== void 0 || optionalMenubarContext === void 0)
@@ -10949,13 +12782,12 @@ function Menu(props) {
       optionalMenubarContext.setValue(rootContext.value());
   });
   onCleanup(() => {
-    if (parentMenuContext !== void 0)
-      return;
+    if (parentMenuContext !== void 0) return;
     optionalMenubarContext?.unregisterMenu(rootContext.value());
   });
   const dataset = createMemo(() => ({
     "data-expanded": disclosureState.isOpen() ? "" : void 0,
-    "data-closed": !disclosureState.isOpen() ? "" : void 0
+    "data-closed": !disclosureState.isOpen() ? "" : void 0,
   }));
   const context = {
     dataset,
@@ -10980,13 +12812,13 @@ function Menu(props) {
     onItemEnter,
     onItemLeave,
     onTriggerLeave,
-    setPointerDir: (dir) => pointerDir = dir,
-    setPointerGraceTimeoutId: (id) => pointerGraceTimeoutId = id,
-    setPointerGraceIntent: (intent) => pointerGraceIntent = intent,
+    setPointerDir: (dir) => (pointerDir = dir),
+    setPointerGraceTimeoutId: (id) => (pointerGraceTimeoutId = id),
+    setPointerGraceIntent: (intent) => (pointerGraceIntent = intent),
     registerNestedMenu,
     registerItemToParentDomCollection: parentDomCollectionContext?.registerItem,
     registerTriggerId: createRegisterId(setTriggerId),
-    registerContentId: createRegisterId(setContentId)
+    registerContentId: createRegisterId(setContentId),
   };
   return createComponent(DomCollectionProvider, {
     get children() {
@@ -10999,36 +12831,44 @@ function Menu(props) {
               return others.children;
             },
             get children() {
-              return createComponent(Popper, mergeProps({
-                anchorRef: triggerRef,
-                contentRef,
-                onCurrentPlacementChange: setCurrentPlacement
-              }, others));
-            }
+              return createComponent(
+                Popper,
+                mergeProps(
+                  {
+                    anchorRef: triggerRef,
+                    contentRef,
+                    onCurrentPlacementChange: setCurrentPlacement,
+                  },
+                  others
+                )
+              );
+            },
           });
-        }
+        },
       });
-    }
+    },
   });
 }
 function MenuSub(props) {
-  const {
-    direction
-  } = useLocale();
-  return createComponent(Menu, mergeProps({
-    get placement() {
-      return direction() === "rtl" ? "left-start" : "right-start";
-    },
-    flip: true
-  }, props));
+  const { direction } = useLocale();
+  return createComponent(
+    Menu,
+    mergeProps(
+      {
+        get placement() {
+          return direction() === "rtl" ? "left-start" : "right-start";
+        },
+        flip: true,
+      },
+      props
+    )
+  );
 }
 function MenuSubContent(props) {
   const context = useMenuContext();
   const rootContext = useMenuRootContext();
   const [local, others] = splitProps(props, ["onFocusOutside", "onKeyDown"]);
-  const {
-    direction
-  } = useLocale();
+  const { direction } = useLocale();
   const onOpenAutoFocus = (e2) => {
     e2.preventDefault();
   };
@@ -11045,28 +12885,53 @@ function MenuSubContent(props) {
   const onKeyDown = (e2) => {
     callHandler(e2, local.onKeyDown);
     const isKeyDownInside = contains(e2.currentTarget, e2.target);
-    const isCloseKey = SUB_CLOSE_KEYS.close(direction(), rootContext.orientation()).includes(e2.key);
+    const isCloseKey = SUB_CLOSE_KEYS.close(
+      direction(),
+      rootContext.orientation()
+    ).includes(e2.key);
     const isSubMenu = context.parentMenuContext() != null;
     if (isKeyDownInside && isCloseKey && isSubMenu) {
       context.close();
       focusWithoutScrolling(context.triggerRef());
     }
   };
-  return createComponent(MenuContentBase, mergeProps({
-    onOpenAutoFocus,
-    onCloseAutoFocus,
-    onFocusOutside,
-    onKeyDown
-  }, others));
+  return createComponent(
+    MenuContentBase,
+    mergeProps(
+      {
+        onOpenAutoFocus,
+        onCloseAutoFocus,
+        onFocusOutside,
+        onKeyDown,
+      },
+      others
+    )
+  );
 }
 function MenuSubTrigger(props) {
   let ref;
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
-  const mergedProps = mergeDefaultProps({
-    id: rootContext.generateId(`sub-trigger-${createUniqueId()}`)
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "id", "textValue", "disabled", "onPointerMove", "onPointerLeave", "onPointerDown", "onPointerUp", "onClick", "onKeyDown", "onMouseDown", "onFocus"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: rootContext.generateId(`sub-trigger-${createUniqueId()}`),
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "ref",
+    "id",
+    "textValue",
+    "disabled",
+    "onPointerMove",
+    "onPointerLeave",
+    "onPointerDown",
+    "onPointerUp",
+    "onClick",
+    "onKeyDown",
+    "onMouseDown",
+    "onFocus",
+  ]);
   let openTimeoutId = null;
   const clearOpenTimeout = () => {
     if (isServer) {
@@ -11077,26 +12942,29 @@ function MenuSubTrigger(props) {
     }
     openTimeoutId = null;
   };
-  const {
-    direction
-  } = useLocale();
+  const { direction } = useLocale();
   const key = () => local.id;
   const parentSelectionManager = () => {
     const parentMenuContext = context.parentMenuContext();
     if (parentMenuContext == null) {
-      throw new Error("[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component");
+      throw new Error(
+        "[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component"
+      );
     }
     return parentMenuContext.listState().selectionManager();
   };
   const collection = () => context.listState().collection();
   const isHighlighted = () => parentSelectionManager().focusedKey() === key();
-  const selectableItem = createSelectableItem({
-    key,
-    selectionManager: parentSelectionManager,
-    shouldSelectOnPressUp: true,
-    allowsDifferentPressOrigin: true,
-    disabled: () => local.disabled
-  }, () => ref);
+  const selectableItem = createSelectableItem(
+    {
+      key,
+      selectionManager: parentSelectionManager,
+      shouldSelectOnPressUp: true,
+      allowsDifferentPressOrigin: true,
+      disabled: () => local.disabled,
+    },
+    () => ref
+  );
   const onClick = (e2) => {
     callHandler(e2, local.onClick);
     if (!context.isOpen() && !local.disabled) {
@@ -11128,7 +12996,10 @@ function MenuSubTrigger(props) {
     if (!e2.defaultPrevented) {
       if (context.listState().selectionManager().isFocused()) {
         context.listState().selectionManager().setFocused(false);
-        context.listState().selectionManager().setFocusedKey(void 0);
+        context
+          .listState()
+          .selectionManager()
+          .setFocusedKey(void 0);
       }
       focusWithoutScrolling(e2.currentTarget);
       parentMenuContext?.listState().selectionManager().setFocused(true);
@@ -11147,7 +13018,7 @@ function MenuSubTrigger(props) {
       parentMenuContext?.setPointerGraceIntent({
         area: getPointerGraceArea(context.currentPlacement(), e2, contentEl),
         // Safe because sub menu always open "left" or "right".
-        side: context.currentPlacement().split("-")[0]
+        side: context.currentPlacement().split("-")[0],
       });
       window.clearTimeout(parentMenuContext?.pointerGraceTimeoutId());
       const pointerGraceTimeoutId = window.setTimeout(() => {
@@ -11171,7 +13042,11 @@ function MenuSubTrigger(props) {
     if (local.disabled) {
       return;
     }
-    if (SUB_OPEN_KEYS.open(direction(), rootContext.orientation()).includes(e2.key)) {
+    if (
+      SUB_OPEN_KEYS.open(direction(), rootContext.orientation()).includes(
+        e2.key
+      )
+    ) {
       e2.stopPropagation();
       e2.preventDefault();
       parentSelectionManager().setFocused(false);
@@ -11181,101 +13056,142 @@ function MenuSubTrigger(props) {
       }
       context.focusContent();
       context.listState().selectionManager().setFocused(true);
-      context.listState().selectionManager().setFocusedKey(collection().getFirstKey());
+      context
+        .listState()
+        .selectionManager()
+        .setFocusedKey(collection().getFirstKey());
     }
   };
   createEffect(() => {
     if (context.registerItemToParentDomCollection == null) {
-      throw new Error("[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component");
+      throw new Error(
+        "[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component"
+      );
     }
     const unregister = context.registerItemToParentDomCollection({
       ref: () => ref,
       type: "item",
       key: key(),
       textValue: local.textValue ?? ref?.textContent ?? "",
-      disabled: local.disabled ?? false
+      disabled: local.disabled ?? false,
     });
     onCleanup(unregister);
   });
-  createEffect(on(() => context.parentMenuContext()?.pointerGraceTimeoutId(), (pointerGraceTimer) => {
-    onCleanup(() => {
-      window.clearTimeout(pointerGraceTimer);
-      context.parentMenuContext()?.setPointerGraceIntent(null);
-    });
-  }));
+  createEffect(
+    on(
+      () => context.parentMenuContext()?.pointerGraceTimeoutId(),
+      (pointerGraceTimer) => {
+        onCleanup(() => {
+          window.clearTimeout(pointerGraceTimer);
+          context.parentMenuContext()?.setPointerGraceIntent(null);
+        });
+      }
+    )
+  );
   createEffect(() => onCleanup(context.registerTriggerId(local.id)));
   onCleanup(() => {
     clearOpenTimeout();
   });
-  return createComponent(Polymorphic, mergeProps({
-    as: "div",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => {
-        context.setTriggerRef(el);
-        ref = el;
-      }, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get id() {
-      return local.id;
-    },
-    role: "menuitem",
-    get tabIndex() {
-      return selectableItem.tabIndex();
-    },
-    "aria-haspopup": "true",
-    get ["aria-expanded"]() {
-      return context.isOpen();
-    },
-    get ["aria-controls"]() {
-      return createMemo(() => !!context.isOpen())() ? context.contentId() : void 0;
-    },
-    get ["aria-disabled"]() {
-      return local.disabled;
-    },
-    get ["data-key"]() {
-      return selectableItem.dataKey();
-    },
-    get ["data-highlighted"]() {
-      return isHighlighted() ? "" : void 0;
-    },
-    get ["data-disabled"]() {
-      return local.disabled ? "" : void 0;
-    },
-    get onPointerDown() {
-      return composeEventHandlers([local.onPointerDown, selectableItem.onPointerDown]);
-    },
-    get onPointerUp() {
-      return composeEventHandlers([local.onPointerUp, selectableItem.onPointerUp]);
-    },
-    get onClick() {
-      return composeEventHandlers([onClick, selectableItem.onClick]);
-    },
-    get onKeyDown() {
-      return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
-    },
-    get onMouseDown() {
-      return composeEventHandlers([local.onMouseDown, selectableItem.onMouseDown]);
-    },
-    get onFocus() {
-      return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
-    },
-    onPointerMove,
-    onPointerLeave
-  }, () => context.dataset(), others));
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "div",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => {
+            context.setTriggerRef(el);
+            ref = el;
+          }, local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get id() {
+          return local.id;
+        },
+        role: "menuitem",
+        get tabIndex() {
+          return selectableItem.tabIndex();
+        },
+        "aria-haspopup": "true",
+        get ["aria-expanded"]() {
+          return context.isOpen();
+        },
+        get ["aria-controls"]() {
+          return createMemo(() => !!context.isOpen())()
+            ? context.contentId()
+            : void 0;
+        },
+        get ["aria-disabled"]() {
+          return local.disabled;
+        },
+        get ["data-key"]() {
+          return selectableItem.dataKey();
+        },
+        get ["data-highlighted"]() {
+          return isHighlighted() ? "" : void 0;
+        },
+        get ["data-disabled"]() {
+          return local.disabled ? "" : void 0;
+        },
+        get onPointerDown() {
+          return composeEventHandlers([
+            local.onPointerDown,
+            selectableItem.onPointerDown,
+          ]);
+        },
+        get onPointerUp() {
+          return composeEventHandlers([
+            local.onPointerUp,
+            selectableItem.onPointerUp,
+          ]);
+        },
+        get onClick() {
+          return composeEventHandlers([onClick, selectableItem.onClick]);
+        },
+        get onKeyDown() {
+          return composeEventHandlers([onKeyDown, selectableItem.onKeyDown]);
+        },
+        get onMouseDown() {
+          return composeEventHandlers([
+            local.onMouseDown,
+            selectableItem.onMouseDown,
+          ]);
+        },
+        get onFocus() {
+          return composeEventHandlers([local.onFocus, selectableItem.onFocus]);
+        },
+        onPointerMove,
+        onPointerLeave,
+      },
+      () => context.dataset(),
+      others
+    )
+  );
 }
 function MenuRoot(props) {
   const optionalMenubarContext = useOptionalMenubarContext();
   const defaultId = `menu-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId,
-    modal: true
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["id", "modal", "preventScroll", "forceMount", "open", "defaultOpen", "onOpenChange", "value", "orientation"]);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+      modal: true,
+    },
+    props
+  );
+  const [local, others] = splitProps(mergedProps, [
+    "id",
+    "modal",
+    "preventScroll",
+    "forceMount",
+    "open",
+    "defaultOpen",
+    "onOpenChange",
+    "value",
+    "orientation",
+  ]);
   const disclosureState = createDisclosureState({
     open: () => local.open,
     defaultOpen: () => local.defaultOpen,
-    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen)
+    onOpenChange: (isOpen) => local.onOpenChange?.(isOpen),
   });
   const context = {
     isModal: () => local.modal ?? true,
@@ -11283,23 +13199,43 @@ function MenuRoot(props) {
     forceMount: () => local.forceMount ?? false,
     generateId: createGenerateId(() => local.id),
     value: () => local.value,
-    orientation: () => local.orientation ?? optionalMenubarContext?.orientation() ?? "horizontal"
+    orientation: () =>
+      local.orientation ??
+      optionalMenubarContext?.orientation() ??
+      "horizontal",
   };
   return createComponent(MenuRootContext.Provider, {
     value: context,
     get children() {
-      return createComponent(Menu, mergeProps({
-        get open() {
-          return disclosureState.isOpen();
-        },
-        get onOpenChange() {
-          return disclosureState.setIsOpen;
-        }
-      }, others));
-    }
+      return createComponent(
+        Menu,
+        mergeProps(
+          {
+            get open() {
+              return disclosureState.isOpen();
+            },
+            get onOpenChange() {
+              return disclosureState.setIsOpen;
+            },
+          },
+          others
+        )
+      );
+    },
   });
 }
-var MenuContext, MenuItemContext, MenuRootContext, MenubarContext, MENUBAR_KEYS, MENU_KEYS, NavigationMenuContext, MenuGroupContext, MenuRadioGroupContext, SUB_CLOSE_KEYS, SELECTION_KEYS, SUB_OPEN_KEYS;
+var MenuContext,
+  MenuItemContext,
+  MenuRootContext,
+  MenubarContext,
+  MENUBAR_KEYS,
+  MENU_KEYS,
+  NavigationMenuContext,
+  MenuGroupContext,
+  MenuRadioGroupContext,
+  SUB_CLOSE_KEYS,
+  SELECTION_KEYS,
+  SUB_OPEN_KEYS;
 var init_F4B62RP = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/3F4B62RP.js"() {
     init_X2EKUJ3();
@@ -11328,12 +13264,22 @@ var init_F4B62RP = __esm({
     MenuRootContext = createContext();
     MenubarContext = createContext();
     MENUBAR_KEYS = {
-      next: (dir, orientation) => dir === "ltr" ? orientation === "horizontal" ? "ArrowRight" : "ArrowDown" : orientation === "horizontal" ? "ArrowLeft" : "ArrowUp",
-      previous: (dir, orientation) => MENUBAR_KEYS.next(dir === "ltr" ? "rtl" : "ltr", orientation)
+      next: (dir, orientation) =>
+        dir === "ltr"
+          ? orientation === "horizontal"
+            ? "ArrowRight"
+            : "ArrowDown"
+          : orientation === "horizontal"
+          ? "ArrowLeft"
+          : "ArrowUp",
+      previous: (dir, orientation) =>
+        MENUBAR_KEYS.next(dir === "ltr" ? "rtl" : "ltr", orientation),
     };
     MENU_KEYS = {
-      first: (orientation) => orientation === "horizontal" ? "ArrowDown" : "ArrowRight",
-      last: (orientation) => orientation === "horizontal" ? "ArrowUp" : "ArrowLeft"
+      first: (orientation) =>
+        orientation === "horizontal" ? "ArrowDown" : "ArrowRight",
+      last: (orientation) =>
+        orientation === "horizontal" ? "ArrowUp" : "ArrowLeft",
     };
     NavigationMenuContext = createContext();
     MenuGroupContext = createContext();
@@ -11344,44 +13290,62 @@ var init_F4B62RP = __esm({
           return [orientation === "horizontal" ? "ArrowLeft" : "ArrowUp"];
         }
         return [orientation === "horizontal" ? "ArrowRight" : "ArrowDown"];
-      }
+      },
     };
     SELECTION_KEYS = ["Enter", " "];
     SUB_OPEN_KEYS = {
       open: (dir, orientation) => {
         if (dir === "ltr") {
-          return [...SELECTION_KEYS, orientation === "horizontal" ? "ArrowRight" : "ArrowDown"];
+          return [
+            ...SELECTION_KEYS,
+            orientation === "horizontal" ? "ArrowRight" : "ArrowDown",
+          ];
         }
-        return [...SELECTION_KEYS, orientation === "horizontal" ? "ArrowLeft" : "ArrowUp"];
-      }
+        return [
+          ...SELECTION_KEYS,
+          orientation === "horizontal" ? "ArrowLeft" : "ArrowUp",
+        ];
+      },
     };
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/STGRFJHZ.js
 function SeparatorRoot(props) {
   let ref;
-  const mergedProps = mergeDefaultProps({
-    orientation: "horizontal"
-  }, props);
-  const [local, others] = splitProps(mergedProps, ["ref", "orientation"]);
-  const tagName = createTagName(() => ref, () => "hr");
-  return createComponent(Polymorphic, mergeProps({
-    as: "hr",
-    ref(r$) {
-      const _ref$ = mergeRefs((el) => ref = el, local.ref);
-      typeof _ref$ === "function" && _ref$(r$);
-    },
-    get role() {
-      return tagName() !== "hr" ? "separator" : void 0;
-    },
-    get ["aria-orientation"]() {
-      return local.orientation === "vertical" ? "vertical" : void 0;
+  const mergedProps = mergeDefaultProps(
+    {
+      orientation: "horizontal",
     },
-    get ["data-orientation"]() {
-      return local.orientation;
-    }
-  }, others));
+    props
+  );
+  const [local, others] = splitProps(mergedProps, ["ref", "orientation"]);
+  const tagName = createTagName(
+    () => ref,
+    () => "hr"
+  );
+  return createComponent(
+    Polymorphic,
+    mergeProps(
+      {
+        as: "hr",
+        ref(r$) {
+          const _ref$ = mergeRefs((el) => (ref = el), local.ref);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        get role() {
+          return tagName() !== "hr" ? "separator" : void 0;
+        },
+        get ["aria-orientation"]() {
+          return local.orientation === "vertical" ? "vertical" : void 0;
+        },
+        get ["data-orientation"]() {
+          return local.orientation;
+        },
+      },
+      others
+    )
+  );
 }
 var separator_exports, Separator;
 var init_STGRFJHZ = __esm({
@@ -11395,17 +13359,20 @@ var init_STGRFJHZ = __esm({
     separator_exports = {};
     __export2(separator_exports, {
       Root: () => SeparatorRoot,
-      Separator: () => Separator
+      Separator: () => Separator,
     });
     Separator = SeparatorRoot;
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/chunk/V2JBZ7BJ.js
 function DropdownMenuContent(props) {
   const rootContext = useMenuRootContext();
   const context = useMenuContext();
-  const [local, others] = splitProps(props, ["onCloseAutoFocus", "onInteractOutside"]);
+  const [local, others] = splitProps(props, [
+    "onCloseAutoFocus",
+    "onInteractOutside",
+  ]);
   let hasInteractedOutside = false;
   const onCloseAutoFocus = (e2) => {
     local.onCloseAutoFocus?.(e2);
@@ -11421,16 +13388,25 @@ function DropdownMenuContent(props) {
       hasInteractedOutside = true;
     }
   };
-  return createComponent(MenuContent, mergeProps({
-    onCloseAutoFocus,
-    onInteractOutside
-  }, others));
+  return createComponent(
+    MenuContent,
+    mergeProps(
+      {
+        onCloseAutoFocus,
+        onInteractOutside,
+      },
+      others
+    )
+  );
 }
 function DropdownMenuRoot(props) {
   const defaultId = `dropdownmenu-${createUniqueId()}`;
-  const mergedProps = mergeDefaultProps({
-    id: defaultId
-  }, props);
+  const mergedProps = mergeDefaultProps(
+    {
+      id: defaultId,
+    },
+    props
+  );
   return createComponent(MenuRoot, mergedProps);
 }
 var dropdown_menu_exports, DropdownMenu;
@@ -11464,7 +13440,7 @@ var init_V2JBZ7BJ = __esm({
       Sub: () => MenuSub,
       SubContent: () => MenuSubContent,
       SubTrigger: () => MenuSubTrigger,
-      Trigger: () => MenuTrigger
+      Trigger: () => MenuTrigger,
     });
     DropdownMenu = Object.assign(DropdownMenuRoot, {
       Arrow: PopperArrow,
@@ -11484,9 +13460,9 @@ var init_V2JBZ7BJ = __esm({
       Sub: MenuSub,
       SubContent: MenuSubContent,
       SubTrigger: MenuSubTrigger,
-      Trigger: MenuTrigger
+      Trigger: MenuTrigger,
     });
-  }
+  },
 });
 
 // ../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/index.js
@@ -11494,7 +13470,7 @@ var init_dist15 = __esm({
   "../../node_modules/.pnpm/@kobalte+core@0.13.4_solid-js@1.9.5/node_modules/@kobalte/core/dist/index.js"() {
     init_Q2BOFK7I();
     init_V2JBZ7BJ();
-  }
+  },
 });
 
 // src/theme.ts
@@ -11518,7 +13494,7 @@ var init_theme = __esm({
           600: "#475467",
           700: "#344054",
           800: "#1d2939",
-          900: "#101828"
+          900: "#101828",
         },
         darkGray: {
           50: "#525c7a",
@@ -11530,7 +13506,7 @@ var init_theme = __esm({
           600: "#212530",
           700: "#191c24",
           800: "#111318",
-          900: "#0b0d10"
+          900: "#0b0d10",
         },
         gray: {
           50: "#f9fafb",
@@ -11542,7 +13518,7 @@ var init_theme = __esm({
           600: "#475467",
           700: "#344054",
           800: "#1d2939",
-          900: "#101828"
+          900: "#101828",
         },
         blue: {
           25: "#F5FAFF",
@@ -11555,7 +13531,7 @@ var init_theme = __esm({
           600: "#1570EF",
           700: "#175CD3",
           800: "#1849A9",
-          900: "#194185"
+          900: "#194185",
         },
         green: {
           25: "#F6FEF9",
@@ -11568,7 +13544,7 @@ var init_theme = __esm({
           600: "#039855",
           700: "#027A48",
           800: "#05603A",
-          900: "#054F31"
+          900: "#054F31",
         },
         red: {
           50: "#fef2f2",
@@ -11581,7 +13557,7 @@ var init_theme = __esm({
           700: "#b91c1c",
           800: "#991b1b",
           900: "#7f1d1d",
-          950: "#450a0a"
+          950: "#450a0a",
         },
         yellow: {
           25: "#FFFCF5",
@@ -11594,7 +13570,7 @@ var init_theme = __esm({
           600: "#DC6803",
           700: "#B54708",
           800: "#93370D",
-          900: "#7A2E0E"
+          900: "#7A2E0E",
         },
         purple: {
           25: "#FAFAFF",
@@ -11607,7 +13583,7 @@ var init_theme = __esm({
           600: "#6938EF",
           700: "#5925DC",
           800: "#4A1FB8",
-          900: "#3E1C96"
+          900: "#3E1C96",
         },
         teal: {
           25: "#F6FEFC",
@@ -11620,7 +13596,7 @@ var init_theme = __esm({
           600: "#0E9384",
           700: "#107569",
           800: "#125D56",
-          900: "#134E48"
+          900: "#134E48",
         },
         pink: {
           25: "#fdf2f8",
@@ -11633,7 +13609,7 @@ var init_theme = __esm({
           600: "#be185d",
           700: "#9d174d",
           800: "#831843",
-          900: "#500724"
+          900: "#500724",
         },
         cyan: {
           25: "#ecfeff",
@@ -11646,8 +13622,8 @@ var init_theme = __esm({
           600: "#0e7490",
           700: "#155e75",
           800: "#164e63",
-          900: "#083344"
-        }
+          900: "#083344",
+        },
       },
       alpha: {
         100: "ff",
@@ -11660,7 +13636,7 @@ var init_theme = __esm({
         30: "4d",
         20: "33",
         10: "1a",
-        0: "00"
+        0: "00",
       },
       font: {
         size: {
@@ -11677,7 +13653,7 @@ var init_theme = __esm({
           "6xl": "calc(var(--tsqd-font-size) * 3.75)",
           "7xl": "calc(var(--tsqd-font-size) * 4.5)",
           "8xl": "calc(var(--tsqd-font-size) * 6)",
-          "9xl": "calc(var(--tsqd-font-size) * 8)"
+          "9xl": "calc(var(--tsqd-font-size) * 8)",
         },
         lineHeight: {
           xs: "calc(var(--tsqd-font-size) * 1)",
@@ -11692,7 +13668,7 @@ var init_theme = __esm({
           "6xl": "calc(var(--tsqd-font-size) * 3.25)",
           "7xl": "calc(var(--tsqd-font-size) * 3.5)",
           "8xl": "calc(var(--tsqd-font-size) * 3.75)",
-          "9xl": "calc(var(--tsqd-font-size) * 4)"
+          "9xl": "calc(var(--tsqd-font-size) * 4)",
         },
         weight: {
           thin: "100",
@@ -11703,8 +13679,8 @@ var init_theme = __esm({
           semibold: "600",
           bold: "700",
           extrabold: "800",
-          black: "900"
-        }
+          black: "900",
+        },
       },
       breakpoints: {
         xs: "320px",
@@ -11712,7 +13688,7 @@ var init_theme = __esm({
         md: "768px",
         lg: "1024px",
         xl: "1280px",
-        "2xl": "1536px"
+        "2xl": "1536px",
       },
       border: {
         radius: {
@@ -11724,8 +13700,8 @@ var init_theme = __esm({
           xl: "calc(var(--tsqd-font-size) * 0.75)",
           "2xl": "calc(var(--tsqd-font-size) * 1)",
           "3xl": "calc(var(--tsqd-font-size) * 1.5)",
-          full: "9999px"
-        }
+          full: "9999px",
+        },
       },
       size: {
         0: "0px",
@@ -11765,17 +13741,21 @@ var init_theme = __esm({
         64: "calc(var(--tsqd-font-size) * 16)",
         72: "calc(var(--tsqd-font-size) * 18)",
         80: "calc(var(--tsqd-font-size) * 20)",
-        96: "calc(var(--tsqd-font-size) * 24)"
+        96: "calc(var(--tsqd-font-size) * 24)",
       },
       shadow: {
         xs: (_ = "rgb(0 0 0 / 0.1)") => `0 1px 2px 0 rgb(0 0 0 / 0.05)`,
-        sm: (color = "rgb(0 0 0 / 0.1)") => `0 1px 3px 0 ${color}, 0 1px 2px -1px ${color}`,
-        md: (color = "rgb(0 0 0 / 0.1)") => `0 4px 6px -1px ${color}, 0 2px 4px -2px ${color}`,
-        lg: (color = "rgb(0 0 0 / 0.1)") => `0 10px 15px -3px ${color}, 0 4px 6px -4px ${color}`,
-        xl: (color = "rgb(0 0 0 / 0.1)") => `0 20px 25px -5px ${color}, 0 8px 10px -6px ${color}`,
+        sm: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 1px 3px 0 ${color}, 0 1px 2px -1px ${color}`,
+        md: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 4px 6px -1px ${color}, 0 2px 4px -2px ${color}`,
+        lg: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 10px 15px -3px ${color}, 0 4px 6px -4px ${color}`,
+        xl: (color = "rgb(0 0 0 / 0.1)") =>
+          `0 20px 25px -5px ${color}, 0 8px 10px -6px ${color}`,
         "2xl": (color = "rgb(0 0 0 / 0.25)") => `0 25px 50px -12px ${color}`,
         inner: (color = "rgb(0 0 0 / 0.05)") => `inset 0 2px 4px 0 ${color}`,
-        none: () => `none`
+        none: () => `none`,
       },
       zIndices: {
         hide: -1,
@@ -11790,10 +13770,10 @@ var init_theme = __esm({
         popover: 1500,
         skipLink: 1600,
         toast: 1700,
-        tooltip: 1800
-      }
+        tooltip: 1800,
+      },
     };
-  }
+  },
 });
 
 // src/icons/index.tsx
@@ -11855,8 +13835,15 @@ function Pencil() {
 }
 function CopiedCopier(props) {
   return (() => {
-    var _el$15 = _tmpl$13(), _el$16 = _el$15.firstChild;
-    createRenderEffect(() => setAttribute(_el$16, "stroke", props.theme === "dark" ? "#12B76A" : "#027A48"));
+    var _el$15 = _tmpl$13(),
+      _el$16 = _el$15.firstChild;
+    createRenderEffect(() =>
+      setAttribute(
+        _el$16,
+        "stroke",
+        props.theme === "dark" ? "#12B76A" : "#027A48"
+      )
+    );
     return _el$15;
   })();
 }
@@ -11867,25 +13854,42 @@ function List() {
   return _tmpl$15();
 }
 function Check(props) {
-  return [createComponent(Show, {
-    get when() {
-      return props.checked;
-    },
-    get children() {
-      var _el$19 = _tmpl$13(), _el$20 = _el$19.firstChild;
-      createRenderEffect(() => setAttribute(_el$20, "stroke", props.theme === "dark" ? "#9B8AFB" : "#6938EF"));
-      return _el$19;
-    }
-  }), createComponent(Show, {
-    get when() {
-      return !props.checked;
-    },
-    get children() {
-      var _el$21 = _tmpl$16(), _el$22 = _el$21.firstChild;
-      createRenderEffect(() => setAttribute(_el$22, "stroke", props.theme === "dark" ? "#9B8AFB" : "#6938EF"));
-      return _el$21;
-    }
-  })];
+  return [
+    createComponent(Show, {
+      get when() {
+        return props.checked;
+      },
+      get children() {
+        var _el$19 = _tmpl$13(),
+          _el$20 = _el$19.firstChild;
+        createRenderEffect(() =>
+          setAttribute(
+            _el$20,
+            "stroke",
+            props.theme === "dark" ? "#9B8AFB" : "#6938EF"
+          )
+        );
+        return _el$19;
+      },
+    }),
+    createComponent(Show, {
+      get when() {
+        return !props.checked;
+      },
+      get children() {
+        var _el$21 = _tmpl$16(),
+          _el$22 = _el$21.firstChild;
+        createRenderEffect(() =>
+          setAttribute(
+            _el$22,
+            "stroke",
+            props.theme === "dark" ? "#9B8AFB" : "#6938EF"
+          )
+        );
+        return _el$21;
+      },
+    }),
+  ];
 }
 function CheckCircle() {
   return _tmpl$17();
@@ -11902,7 +13906,99 @@ function PauseCircle() {
 function TanstackLogo() {
   const id = createUniqueId();
   return (() => {
-    var _el$27 = _tmpl$21(), _el$28 = _el$27.firstChild, _el$29 = _el$28.nextSibling, _el$30 = _el$29.nextSibling, _el$31 = _el$30.firstChild, _el$32 = _el$30.nextSibling, _el$33 = _el$32.firstChild, _el$34 = _el$32.nextSibling, _el$35 = _el$34.nextSibling, _el$36 = _el$35.firstChild, _el$37 = _el$35.nextSibling, _el$38 = _el$37.firstChild, _el$39 = _el$37.nextSibling, _el$40 = _el$39.nextSibling, _el$41 = _el$40.firstChild, _el$42 = _el$40.nextSibling, _el$43 = _el$42.firstChild, _el$44 = _el$42.nextSibling, _el$45 = _el$44.nextSibling, _el$46 = _el$45.firstChild, _el$47 = _el$45.nextSibling, _el$48 = _el$47.firstChild, _el$49 = _el$47.nextSibling, _el$50 = _el$49.nextSibling, _el$51 = _el$50.firstChild, _el$52 = _el$50.nextSibling, _el$53 = _el$52.firstChild, _el$54 = _el$52.nextSibling, _el$55 = _el$54.nextSibling, _el$56 = _el$55.firstChild, _el$57 = _el$55.nextSibling, _el$58 = _el$57.firstChild, _el$59 = _el$57.nextSibling, _el$60 = _el$59.nextSibling, _el$61 = _el$60.firstChild, _el$62 = _el$60.nextSibling, _el$63 = _el$62.firstChild, _el$64 = _el$62.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.nextSibling, _el$67 = _el$66.nextSibling, _el$68 = _el$67.nextSibling, _el$69 = _el$68.nextSibling, _el$70 = _el$64.nextSibling, _el$71 = _el$70.firstChild, _el$72 = _el$70.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$72.nextSibling, _el$75 = _el$74.firstChild, _el$76 = _el$75.nextSibling, _el$77 = _el$76.nextSibling, _el$78 = _el$77.firstChild, _el$79 = _el$78.nextSibling, _el$80 = _el$79.nextSibling, _el$81 = _el$80.nextSibling, _el$82 = _el$81.nextSibling, _el$83 = _el$82.nextSibling, _el$84 = _el$83.nextSibling, _el$85 = _el$84.nextSibling, _el$86 = _el$85.nextSibling, _el$87 = _el$86.nextSibling, _el$88 = _el$87.nextSibling, _el$89 = _el$88.nextSibling, _el$90 = _el$74.nextSibling, _el$91 = _el$90.firstChild, _el$92 = _el$90.nextSibling, _el$93 = _el$92.firstChild, _el$94 = _el$92.nextSibling, _el$95 = _el$94.firstChild, _el$96 = _el$95.nextSibling, _el$97 = _el$94.nextSibling, _el$98 = _el$97.firstChild, _el$99 = _el$97.nextSibling, _el$100 = _el$99.firstChild, _el$101 = _el$99.nextSibling, _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.nextSibling, _el$105 = _el$104.nextSibling, _el$106 = _el$105.nextSibling, _el$107 = _el$106.nextSibling, _el$108 = _el$107.nextSibling, _el$109 = _el$108.nextSibling, _el$110 = _el$109.nextSibling, _el$111 = _el$110.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling, _el$119 = _el$118.nextSibling;
+    var _el$27 = _tmpl$21(),
+      _el$28 = _el$27.firstChild,
+      _el$29 = _el$28.nextSibling,
+      _el$30 = _el$29.nextSibling,
+      _el$31 = _el$30.firstChild,
+      _el$32 = _el$30.nextSibling,
+      _el$33 = _el$32.firstChild,
+      _el$34 = _el$32.nextSibling,
+      _el$35 = _el$34.nextSibling,
+      _el$36 = _el$35.firstChild,
+      _el$37 = _el$35.nextSibling,
+      _el$38 = _el$37.firstChild,
+      _el$39 = _el$37.nextSibling,
+      _el$40 = _el$39.nextSibling,
+      _el$41 = _el$40.firstChild,
+      _el$42 = _el$40.nextSibling,
+      _el$43 = _el$42.firstChild,
+      _el$44 = _el$42.nextSibling,
+      _el$45 = _el$44.nextSibling,
+      _el$46 = _el$45.firstChild,
+      _el$47 = _el$45.nextSibling,
+      _el$48 = _el$47.firstChild,
+      _el$49 = _el$47.nextSibling,
+      _el$50 = _el$49.nextSibling,
+      _el$51 = _el$50.firstChild,
+      _el$52 = _el$50.nextSibling,
+      _el$53 = _el$52.firstChild,
+      _el$54 = _el$52.nextSibling,
+      _el$55 = _el$54.nextSibling,
+      _el$56 = _el$55.firstChild,
+      _el$57 = _el$55.nextSibling,
+      _el$58 = _el$57.firstChild,
+      _el$59 = _el$57.nextSibling,
+      _el$60 = _el$59.nextSibling,
+      _el$61 = _el$60.firstChild,
+      _el$62 = _el$60.nextSibling,
+      _el$63 = _el$62.firstChild,
+      _el$64 = _el$62.nextSibling,
+      _el$65 = _el$64.firstChild,
+      _el$66 = _el$65.nextSibling,
+      _el$67 = _el$66.nextSibling,
+      _el$68 = _el$67.nextSibling,
+      _el$69 = _el$68.nextSibling,
+      _el$70 = _el$64.nextSibling,
+      _el$71 = _el$70.firstChild,
+      _el$72 = _el$70.nextSibling,
+      _el$73 = _el$72.firstChild,
+      _el$74 = _el$72.nextSibling,
+      _el$75 = _el$74.firstChild,
+      _el$76 = _el$75.nextSibling,
+      _el$77 = _el$76.nextSibling,
+      _el$78 = _el$77.firstChild,
+      _el$79 = _el$78.nextSibling,
+      _el$80 = _el$79.nextSibling,
+      _el$81 = _el$80.nextSibling,
+      _el$82 = _el$81.nextSibling,
+      _el$83 = _el$82.nextSibling,
+      _el$84 = _el$83.nextSibling,
+      _el$85 = _el$84.nextSibling,
+      _el$86 = _el$85.nextSibling,
+      _el$87 = _el$86.nextSibling,
+      _el$88 = _el$87.nextSibling,
+      _el$89 = _el$88.nextSibling,
+      _el$90 = _el$74.nextSibling,
+      _el$91 = _el$90.firstChild,
+      _el$92 = _el$90.nextSibling,
+      _el$93 = _el$92.firstChild,
+      _el$94 = _el$92.nextSibling,
+      _el$95 = _el$94.firstChild,
+      _el$96 = _el$95.nextSibling,
+      _el$97 = _el$94.nextSibling,
+      _el$98 = _el$97.firstChild,
+      _el$99 = _el$97.nextSibling,
+      _el$100 = _el$99.firstChild,
+      _el$101 = _el$99.nextSibling,
+      _el$102 = _el$101.firstChild,
+      _el$103 = _el$102.nextSibling,
+      _el$104 = _el$103.nextSibling,
+      _el$105 = _el$104.nextSibling,
+      _el$106 = _el$105.nextSibling,
+      _el$107 = _el$106.nextSibling,
+      _el$108 = _el$107.nextSibling,
+      _el$109 = _el$108.nextSibling,
+      _el$110 = _el$109.nextSibling,
+      _el$111 = _el$110.nextSibling,
+      _el$112 = _el$111.nextSibling,
+      _el$113 = _el$112.nextSibling,
+      _el$114 = _el$113.nextSibling,
+      _el$115 = _el$114.nextSibling,
+      _el$116 = _el$115.nextSibling,
+      _el$117 = _el$116.nextSibling,
+      _el$118 = _el$117.nextSibling,
+      _el$119 = _el$118.nextSibling;
     setAttribute(_el$28, "id", `a-${id}`);
     setAttribute(_el$29, "fill", `url(#a-${id})`);
     setAttribute(_el$31, "id", `am-${id}`);
@@ -11984,7 +14080,29 @@ function TanstackLogo() {
     return _el$27;
   })();
 }
-var _tmpl$2, _tmpl$22, _tmpl$3, _tmpl$4, _tmpl$5, _tmpl$6, _tmpl$7, _tmpl$8, _tmpl$9, _tmpl$0, _tmpl$1, _tmpl$10, _tmpl$11, _tmpl$12, _tmpl$13, _tmpl$14, _tmpl$15, _tmpl$16, _tmpl$17, _tmpl$18, _tmpl$19, _tmpl$20, _tmpl$21;
+var _tmpl$2,
+  _tmpl$22,
+  _tmpl$3,
+  _tmpl$4,
+  _tmpl$5,
+  _tmpl$6,
+  _tmpl$7,
+  _tmpl$8,
+  _tmpl$9,
+  _tmpl$0,
+  _tmpl$1,
+  _tmpl$10,
+  _tmpl$11,
+  _tmpl$12,
+  _tmpl$13,
+  _tmpl$14,
+  _tmpl$15,
+  _tmpl$16,
+  _tmpl$17,
+  _tmpl$18,
+  _tmpl$19,
+  _tmpl$20,
+  _tmpl$21;
 var init_icons = __esm({
   "src/icons/index.tsx"() {
     init_web();
@@ -11992,34 +14110,92 @@ var init_icons = __esm({
     init_web();
     init_web();
     init_solid();
-    _tmpl$2 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 14 14"fill=none xmlns=http://www.w3.org/2000/svg><path d="M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$22 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$3 = /* @__PURE__ */ template(`<svg width=10 height=6 viewBox="0 0 10 6"fill=none xmlns=http://www.w3.org/2000/svg><path d="M1 1L5 5L9 1"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$4 = /* @__PURE__ */ template(`<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$5 = /* @__PURE__ */ template(`<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$6 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$7 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$8 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$9 = /* @__PURE__ */ template(`<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M0 0h24v24H0z"></path><path d="M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z">`);
-    _tmpl$0 = /* @__PURE__ */ template(`<svg stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z"></path><path d="M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z">`);
-    _tmpl$1 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d="M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$10 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$11 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d="M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>`);
-    _tmpl$12 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M2.5 21.4998L8.04927 19.3655C8.40421 19.229 8.58168 19.1607 8.74772 19.0716C8.8952 18.9924 9.0358 18.901 9.16804 18.7984C9.31692 18.6829 9.45137 18.5484 9.72028 18.2795L21 6.99982C22.1046 5.89525 22.1046 4.10438 21 2.99981C19.8955 1.89525 18.1046 1.89524 17 2.99981L5.72028 14.2795C5.45138 14.5484 5.31692 14.6829 5.20139 14.8318C5.09877 14.964 5.0074 15.1046 4.92823 15.2521C4.83911 15.4181 4.77085 15.5956 4.63433 15.9506L2.5 21.4998ZM2.5 21.4998L4.55812 16.1488C4.7054 15.7659 4.77903 15.5744 4.90534 15.4867C5.01572 15.4101 5.1523 15.3811 5.2843 15.4063C5.43533 15.4351 5.58038 15.5802 5.87048 15.8703L8.12957 18.1294C8.41967 18.4195 8.56472 18.5645 8.59356 18.7155C8.61877 18.8475 8.58979 18.9841 8.51314 19.0945C8.42545 19.2208 8.23399 19.2944 7.85107 19.4417L2.5 21.4998Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$13 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$14 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$15 = /* @__PURE__ */ template(`<svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>`);
-    _tmpl$16 = /* @__PURE__ */ template(`<svg viewBox="0 0 24 24"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d="M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$17 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$18 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>`);
-    _tmpl$19 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$20 = /* @__PURE__ */ template(`<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$21 = /* @__PURE__ */ template(`<svg version=1.0 viewBox="0 0 633 633"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform="matrix(633 0 0 633 422177 -103358)"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform="matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d="m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform="matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d="m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform="matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform="matrix(110 5.7648 -6.3599 121.35 73933 -15933)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform="matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform="matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform="matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform="matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d="m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1"fill=none stroke-linecap=round stroke-width=8></path><path d="m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8"fill=none stroke-linecap=round stroke-width=8></path><path d="m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9"fill=none stroke-linecap=round stroke-width=8></path><path d="m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform="matrix(532 0 0 633 354760 -102959)"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform="matrix(227 0 0 227 151421 -37204)"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform="matrix(30 0 0 1 19770 -253)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform="matrix(26.5 0 0 5.5 17439 -1025.5)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform="matrix(29 0 0 8 19107 -1361)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform="matrix(24 0 0 13 15783 -2145)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform="matrix(20 0 0 19 13137 -3096)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform="matrix(13.83 0 0 22.85 9050 -3703.4)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform="matrix(7.5 0 0 24.5 4860 -3953)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform="matrix(.5 0 0 24.5 231.5 -3944)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>`);
-  }
+    _tmpl$2 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 14 14"fill=none xmlns=http://www.w3.org/2000/svg><path d="M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$22 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$3 = /* @__PURE__ */ template(
+      `<svg width=10 height=6 viewBox="0 0 10 6"fill=none xmlns=http://www.w3.org/2000/svg><path d="M1 1L5 5L9 1"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$4 = /* @__PURE__ */ template(
+      `<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$5 = /* @__PURE__ */ template(
+      `<svg width=12 height=12 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$6 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$7 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$8 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d="M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$9 = /* @__PURE__ */ template(
+      `<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M0 0h24v24H0z"></path><path d="M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z">`
+    );
+    _tmpl$0 = /* @__PURE__ */ template(
+      `<svg stroke-width=0 viewBox="0 0 24 24"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d="M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z"></path><path d="M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z">`
+    );
+    _tmpl$1 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d="M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$10 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$11 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d="M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>`
+    );
+    _tmpl$12 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M2.5 21.4998L8.04927 19.3655C8.40421 19.229 8.58168 19.1607 8.74772 19.0716C8.8952 18.9924 9.0358 18.901 9.16804 18.7984C9.31692 18.6829 9.45137 18.5484 9.72028 18.2795L21 6.99982C22.1046 5.89525 22.1046 4.10438 21 2.99981C19.8955 1.89525 18.1046 1.89524 17 2.99981L5.72028 14.2795C5.45138 14.5484 5.31692 14.6829 5.20139 14.8318C5.09877 14.964 5.0074 15.1046 4.92823 15.2521C4.83911 15.4181 4.77085 15.5956 4.63433 15.9506L2.5 21.4998ZM2.5 21.4998L4.55812 16.1488C4.7054 15.7659 4.77903 15.5744 4.90534 15.4867C5.01572 15.4101 5.1523 15.3811 5.2843 15.4063C5.43533 15.4351 5.58038 15.5802 5.87048 15.8703L8.12957 18.1294C8.41967 18.4195 8.56472 18.5645 8.59356 18.7155C8.61877 18.8475 8.58979 18.9841 8.51314 19.0945C8.42545 19.2208 8.23399 19.2944 7.85107 19.4417L2.5 21.4998Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$13 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$14 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$15 = /* @__PURE__ */ template(
+      `<svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>`
+    );
+    _tmpl$16 = /* @__PURE__ */ template(
+      `<svg viewBox="0 0 24 24"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d="M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$17 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$18 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>`
+    );
+    _tmpl$19 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$20 = /* @__PURE__ */ template(
+      `<svg width=14 height=14 viewBox="0 0 24 24"fill=none xmlns=http://www.w3.org/2000/svg><path d="M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$21 = /* @__PURE__ */ template(
+      `<svg version=1.0 viewBox="0 0 633 633"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform="matrix(633 0 0 633 422177 -103358)"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform="matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d="m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform="matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d="m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform="matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform="matrix(110 5.7648 -6.3599 121.35 73933 -15933)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform="matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform="matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform="matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform="matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d="m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d="m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1"fill=none stroke-linecap=round stroke-width=8></path><path d="m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8"fill=none stroke-linecap=round stroke-width=8></path><path d="m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9"fill=none stroke-linecap=round stroke-width=8></path><path d="m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform="matrix(532 0 0 633 354760 -102959)"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform="matrix(227 0 0 227 151421 -37204)"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform="matrix(30 0 0 1 19770 -253)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform="matrix(26.5 0 0 5.5 17439 -1025.5)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform="matrix(29 0 0 8 19107 -1361)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform="matrix(24 0 0 13 15783 -2145)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform="matrix(20 0 0 19 13137 -3096)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform="matrix(13.83 0 0 22.85 9050 -3703.4)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform="matrix(7.5 0 0 24.5 4860 -3953)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform="matrix(.5 0 0 24.5 231.5 -3944)"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>`
+    );
+  },
 });
 
 // src/constants.ts
-var firstBreakpoint, secondBreakpoint, thirdBreakpoint, BUTTON_POSITION, POSITION, THEME_PREFERENCE, INITIAL_IS_OPEN, DEFAULT_HEIGHT, PIP_DEFAULT_HEIGHT, DEFAULT_WIDTH, DEFAULT_SORT_FN_NAME, DEFAULT_SORT_ORDER, DEFAULT_MUTATION_SORT_FN_NAME;
+var firstBreakpoint,
+  secondBreakpoint,
+  thirdBreakpoint,
+  BUTTON_POSITION,
+  POSITION,
+  THEME_PREFERENCE,
+  INITIAL_IS_OPEN,
+  DEFAULT_HEIGHT,
+  PIP_DEFAULT_HEIGHT,
+  DEFAULT_WIDTH,
+  DEFAULT_SORT_FN_NAME,
+  DEFAULT_SORT_ORDER,
+  DEFAULT_MUTATION_SORT_FN_NAME;
 var init_constants = __esm({
   "src/constants.ts"() {
     init_utils();
@@ -12036,7 +14212,7 @@ var init_constants = __esm({
     DEFAULT_SORT_FN_NAME = Object.keys(sortFns)[0];
     DEFAULT_SORT_ORDER = 1;
     DEFAULT_MUTATION_SORT_FN_NAME = Object.keys(mutationSortFns)[0];
-  }
+  },
 });
 
 // src/contexts/QueryDevtoolsContext.ts
@@ -12052,9 +14228,9 @@ var init_QueryDevtoolsContext = __esm({
       onlineManager: void 0,
       queryFlavor: "",
       version: "",
-      shadowDOMTarget: void 0
+      shadowDOMTarget: void 0,
     });
-  }
+  },
 });
 
 // src/contexts/PiPContext.tsx
@@ -12080,9 +14256,15 @@ var init_PiPContext = __esm({
         if (pipWindow() != null) {
           return;
         }
-        const pip = window.open("", "TSQD-Devtools-Panel", `width=${width},height=${height},popup`);
+        const pip = window.open(
+          "",
+          "TSQD-Devtools-Panel",
+          `width=${width},height=${height},popup`
+        );
         if (!pip) {
-          throw new Error("Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode.");
+          throw new Error(
+            "Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode."
+          );
         }
         pip.document.head.innerHTML = "";
         pip.document.body.innerHTML = "";
@@ -12093,9 +14275,14 @@ var init_PiPContext = __esm({
           props.setLocalStore("pip_open", "false");
           setPipWindow(null);
         });
-        [...(useQueryDevtoolsContext().shadowDOMTarget || document).styleSheets].forEach((styleSheet) => {
+        [
+          ...(useQueryDevtoolsContext().shadowDOMTarget || document)
+            .styleSheets,
+        ].forEach((styleSheet) => {
           try {
-            const cssRules = [...styleSheet.cssRules].map((rule) => rule.cssText).join("");
+            const cssRules = [...styleSheet.cssRules]
+              .map((rule) => rule.cssText)
+              .join("");
             const style2 = document.createElement("style");
             const style_node = styleSheet.ownerNode;
             let style_id = "";
@@ -12119,22 +14306,42 @@ var init_PiPContext = __esm({
             pip.document.head.appendChild(link);
           }
         });
-        delegateEvents(["focusin", "focusout", "pointermove", "keydown", "pointerdown", "pointerup", "click", "mousedown", "input"], pip.document);
+        delegateEvents(
+          [
+            "focusin",
+            "focusout",
+            "pointermove",
+            "keydown",
+            "pointerdown",
+            "pointerup",
+            "click",
+            "mousedown",
+            "input",
+          ],
+          pip.document
+        );
         props.setLocalStore("pip_open", "true");
         setPipWindow(pip);
       };
       createEffect(() => {
         const pip_open = props.localStore.pip_open ?? "false";
         if (pip_open === "true" && !props.disabled) {
-          requestPipWindow(Number(window.innerWidth), Number(props.localStore.height || PIP_DEFAULT_HEIGHT));
+          requestPipWindow(
+            Number(window.innerWidth),
+            Number(props.localStore.height || PIP_DEFAULT_HEIGHT)
+          );
         }
       });
       createEffect(() => {
-        const gooberStyles = (useQueryDevtoolsContext().shadowDOMTarget || document).querySelector("#_goober");
+        const gooberStyles = (
+          useQueryDevtoolsContext().shadowDOMTarget || document
+        ).querySelector("#_goober");
         const w = pipWindow();
         if (gooberStyles && w) {
           const observer = new MutationObserver(() => {
-            const pip_style = (useQueryDevtoolsContext().shadowDOMTarget || w.document).querySelector("#_goober");
+            const pip_style = (
+              useQueryDevtoolsContext().shadowDOMTarget || w.document
+            ).querySelector("#_goober");
             if (pip_style) {
               pip_style.textContent = gooberStyles.textContent;
             }
@@ -12144,7 +14351,7 @@ var init_PiPContext = __esm({
             // observe direct children
             subtree: true,
             // and lower descendants too
-            characterDataOldValue: true
+            characterDataOldValue: true,
             // pass old data to callback
           });
           onCleanup(() => {
@@ -12156,13 +14363,13 @@ var init_PiPContext = __esm({
         pipWindow: pipWindow(),
         requestPipWindow,
         closePipWindow,
-        disabled: props.disabled ?? false
+        disabled: props.disabled ?? false,
       }));
       return createComponent(PiPContext.Provider, {
         value,
         get children() {
           return props.children;
-        }
+        },
       });
     };
     usePiPWindow = () => {
@@ -12175,7 +14382,7 @@ var init_PiPContext = __esm({
       });
       return context;
     };
-  }
+  },
 });
 
 // src/contexts/ThemeContext.ts
@@ -12186,10 +14393,8 @@ var ThemeContext;
 var init_ThemeContext = __esm({
   "src/contexts/ThemeContext.ts"() {
     init_solid();
-    ThemeContext = createContext(
-      () => "dark"
-    );
-  }
+    ThemeContext = createContext(() => "dark");
+  },
 });
 
 // src/contexts/index.ts
@@ -12198,7 +14403,7 @@ var init_contexts = __esm({
     init_PiPContext();
     init_QueryDevtoolsContext();
     init_ThemeContext();
-  }
+  },
 });
 
 // src/Explorer.tsx
@@ -12216,37 +14421,46 @@ function isIterable(x) {
 }
 function Explorer(props) {
   const theme = useTheme();
-  const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-    target: useQueryDevtoolsContext().shadowDOMTarget
-  }) : u;
+  const css = useQueryDevtoolsContext().shadowDOMTarget
+    ? u.bind({
+        target: useQueryDevtoolsContext().shadowDOMTarget,
+      })
+    : u;
   const styles = createMemo(() => {
     return theme() === "dark" ? darkStyles(css) : lightStyles(css);
   });
   const queryClient = useQueryDevtoolsContext().client;
-  const [expanded, setExpanded] = createSignal((props.defaultExpanded || []).includes(props.label));
+  const [expanded, setExpanded] = createSignal(
+    (props.defaultExpanded || []).includes(props.label)
+  );
   const toggleExpanded = () => setExpanded((old) => !old);
   const [expandedPages, setExpandedPages] = createSignal([]);
   const subEntries = createMemo(() => {
     if (Array.isArray(props.value)) {
       return props.value.map((d, i2) => ({
         label: i2.toString(),
-        value: d
+        value: d,
       }));
-    } else if (props.value !== null && typeof props.value === "object" && isIterable(props.value) && typeof props.value[Symbol.iterator] === "function") {
+    } else if (
+      props.value !== null &&
+      typeof props.value === "object" &&
+      isIterable(props.value) &&
+      typeof props.value[Symbol.iterator] === "function"
+    ) {
       if (props.value instanceof Map) {
         return Array.from(props.value, ([key, val]) => ({
           label: key,
-          value: val
+          value: val,
         }));
       }
       return Array.from(props.value, (val, i2) => ({
         label: i2.toString(),
-        value: val
+        value: val,
       }));
     } else if (typeof props.value === "object" && props.value !== null) {
       return Object.entries(props.value).map(([key, val]) => ({
         label: key,
-        value: val
+        value: val,
       }));
     }
     return [];
@@ -12254,7 +14468,12 @@ function Explorer(props) {
   const type = createMemo(() => {
     if (Array.isArray(props.value)) {
       return "array";
-    } else if (props.value !== null && typeof props.value === "object" && isIterable(props.value) && typeof props.value[Symbol.iterator] === "function") {
+    } else if (
+      props.value !== null &&
+      typeof props.value === "object" &&
+      isIterable(props.value) &&
+      typeof props.value[Symbol.iterator] === "function"
+    ) {
       return "Iterable";
     } else if (typeof props.value === "object" && props.value !== null) {
       return "object";
@@ -12265,306 +14484,507 @@ function Explorer(props) {
   const currentDataPath = props.dataPath ?? [];
   return (() => {
     var _el$6 = _tmpl$72();
-    insert(_el$6, createComponent(Show, {
-      get when() {
-        return subEntryPages().length;
-      },
-      get children() {
-        return [(() => {
-          var _el$7 = _tmpl$82(), _el$8 = _el$7.firstChild, _el$9 = _el$8.firstChild, _el$0 = _el$9.nextSibling, _el$1 = _el$0.nextSibling, _el$10 = _el$1.nextSibling, _el$11 = _el$10.firstChild;
-          _el$8.$$click = () => toggleExpanded();
-          insert(_el$8, createComponent(Expander, {
-            get expanded() {
-              return expanded();
-            }
-          }), _el$9);
-          insert(_el$0, () => props.label);
-          insert(_el$10, () => String(type()).toLowerCase() === "iterable" ? "(Iterable) " : "", _el$11);
-          insert(_el$10, () => subEntries().length, _el$11);
-          insert(_el$10, () => subEntries().length > 1 ? `items` : `item`, null);
-          insert(_el$7, createComponent(Show, {
-            get when() {
-              return props.editable;
-            },
-            get children() {
-              var _el$12 = _tmpl$72();
-              insert(_el$12, createComponent(CopyButton, {
-                get value() {
-                  return props.value;
-                }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return props.itemsDeletable && props.activeQuery !== void 0;
+    insert(
+      _el$6,
+      createComponent(Show, {
+        get when() {
+          return subEntryPages().length;
+        },
+        get children() {
+          return [
+            (() => {
+              var _el$7 = _tmpl$82(),
+                _el$8 = _el$7.firstChild,
+                _el$9 = _el$8.firstChild,
+                _el$0 = _el$9.nextSibling,
+                _el$1 = _el$0.nextSibling,
+                _el$10 = _el$1.nextSibling,
+                _el$11 = _el$10.firstChild;
+              _el$8.$$click = () => toggleExpanded();
+              insert(
+                _el$8,
+                createComponent(Expander, {
+                  get expanded() {
+                    return expanded();
+                  },
+                }),
+                _el$9
+              );
+              insert(_el$0, () => props.label);
+              insert(
+                _el$10,
+                () =>
+                  String(type()).toLowerCase() === "iterable"
+                    ? "(Iterable) "
+                    : "",
+                _el$11
+              );
+              insert(_el$10, () => subEntries().length, _el$11);
+              insert(
+                _el$10,
+                () => (subEntries().length > 1 ? `items` : `item`),
+                null
+              );
+              insert(
+                _el$7,
+                createComponent(Show, {
+                  get when() {
+                    return props.editable;
+                  },
+                  get children() {
+                    var _el$12 = _tmpl$72();
+                    insert(
+                      _el$12,
+                      createComponent(CopyButton, {
+                        get value() {
+                          return props.value;
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            props.itemsDeletable && props.activeQuery !== void 0
+                          );
+                        },
+                        get children() {
+                          return createComponent(DeleteItemButton, {
+                            get activeQuery() {
+                              return props.activeQuery;
+                            },
+                            dataPath: currentDataPath,
+                          });
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            type() === "array" && props.activeQuery !== void 0
+                          );
+                        },
+                        get children() {
+                          return createComponent(ClearArrayButton, {
+                            get activeQuery() {
+                              return props.activeQuery;
+                            },
+                            dataPath: currentDataPath,
+                          });
+                        },
+                      }),
+                      null
+                    );
+                    insert(
+                      _el$12,
+                      createComponent(Show, {
+                        get when() {
+                          return (
+                            createMemo(() => !!!!props.onEdit)() &&
+                            !serialize(props.value).meta
+                          );
+                        },
+                        get children() {
+                          var _el$13 = _tmpl$62();
+                          _el$13.$$click = () => {
+                            props.onEdit?.();
+                          };
+                          insert(_el$13, createComponent(Pencil, {}));
+                          createRenderEffect(() =>
+                            className(_el$13, styles().actionButton)
+                          );
+                          return _el$13;
+                        },
+                      }),
+                      null
+                    );
+                    createRenderEffect(() =>
+                      className(_el$12, styles().actions)
+                    );
+                    return _el$12;
+                  },
+                }),
+                null
+              );
+              createRenderEffect(
+                (_p$) => {
+                  var _v$3 = styles().expanderButtonContainer,
+                    _v$4 = styles().expanderButton,
+                    _v$5 = styles().info;
+                  _v$3 !== _p$.e && className(_el$7, (_p$.e = _v$3));
+                  _v$4 !== _p$.t && className(_el$8, (_p$.t = _v$4));
+                  _v$5 !== _p$.a && className(_el$10, (_p$.a = _v$5));
+                  return _p$;
                 },
-                get children() {
-                  return createComponent(DeleteItemButton, {
-                    get activeQuery() {
-                      return props.activeQuery;
-                    },
-                    dataPath: currentDataPath
-                  });
+                {
+                  e: void 0,
+                  t: void 0,
+                  a: void 0,
                 }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return type() === "array" && props.activeQuery !== void 0;
-                },
-                get children() {
-                  return createComponent(ClearArrayButton, {
-                    get activeQuery() {
-                      return props.activeQuery;
-                    },
-                    dataPath: currentDataPath
-                  });
-                }
-              }), null);
-              insert(_el$12, createComponent(Show, {
-                get when() {
-                  return createMemo(() => !!!!props.onEdit)() && !serialize(props.value).meta;
-                },
-                get children() {
-                  var _el$13 = _tmpl$62();
-                  _el$13.$$click = () => {
-                    props.onEdit?.();
-                  };
-                  insert(_el$13, createComponent(Pencil, {}));
-                  createRenderEffect(() => className(_el$13, styles().actionButton));
-                  return _el$13;
-                }
-              }), null);
-              createRenderEffect(() => className(_el$12, styles().actions));
-              return _el$12;
-            }
-          }), null);
-          createRenderEffect((_p$) => {
-            var _v$3 = styles().expanderButtonContainer, _v$4 = styles().expanderButton, _v$5 = styles().info;
-            _v$3 !== _p$.e && className(_el$7, _p$.e = _v$3);
-            _v$4 !== _p$.t && className(_el$8, _p$.t = _v$4);
-            _v$5 !== _p$.a && className(_el$10, _p$.a = _v$5);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
-          return _el$7;
-        })(), createComponent(Show, {
-          get when() {
-            return expanded();
-          },
-          get children() {
-            return [createComponent(Show, {
+              );
+              return _el$7;
+            })(),
+            createComponent(Show, {
               get when() {
-                return subEntryPages().length === 1;
+                return expanded();
               },
               get children() {
-                var _el$14 = _tmpl$72();
-                insert(_el$14, createComponent(Key, {
-                  get each() {
-                    return subEntries();
-                  },
-                  by: (item) => item.label,
-                  children: (entry) => {
-                    return createComponent(Explorer, {
-                      get defaultExpanded() {
-                        return props.defaultExpanded;
-                      },
-                      get label() {
-                        return entry().label;
-                      },
-                      get value() {
-                        return entry().value;
-                      },
-                      get editable() {
-                        return props.editable;
-                      },
-                      get dataPath() {
-                        return [...currentDataPath, entry().label];
-                      },
-                      get activeQuery() {
-                        return props.activeQuery;
-                      },
-                      get itemsDeletable() {
-                        return type() === "array" || type() === "Iterable" || type() === "object";
-                      }
-                    });
-                  }
-                }));
-                createRenderEffect(() => className(_el$14, styles().subEntry));
-                return _el$14;
-              }
-            }), createComponent(Show, {
-              get when() {
-                return subEntryPages().length > 1;
-              },
-              get children() {
-                var _el$15 = _tmpl$72();
-                insert(_el$15, createComponent(Index, {
-                  get each() {
-                    return subEntryPages();
-                  },
-                  children: (entries2, index) => (() => {
-                    var _el$21 = _tmpl$102(), _el$22 = _el$21.firstChild, _el$23 = _el$22.firstChild, _el$24 = _el$23.firstChild, _el$28 = _el$24.nextSibling, _el$26 = _el$28.nextSibling, _el$29 = _el$26.nextSibling; _el$29.nextSibling;
-                    _el$23.$$click = () => setExpandedPages((old) => old.includes(index) ? old.filter((d) => d !== index) : [...old, index]);
-                    insert(_el$23, createComponent(Expander, {
-                      get expanded() {
-                        return expandedPages().includes(index);
-                      }
-                    }), _el$24);
-                    insert(_el$23, index * 100, _el$28);
-                    insert(_el$23, index * 100 + 100 - 1, _el$29);
-                    insert(_el$22, createComponent(Show, {
-                      get when() {
-                        return expandedPages().includes(index);
-                      },
-                      get children() {
-                        var _el$30 = _tmpl$72();
-                        insert(_el$30, createComponent(Key, {
+                return [
+                  createComponent(Show, {
+                    get when() {
+                      return subEntryPages().length === 1;
+                    },
+                    get children() {
+                      var _el$14 = _tmpl$72();
+                      insert(
+                        _el$14,
+                        createComponent(Key, {
                           get each() {
-                            return entries2();
+                            return subEntries();
                           },
-                          by: (entry) => entry.label,
-                          children: (entry) => createComponent(Explorer, {
-                            get defaultExpanded() {
-                              return props.defaultExpanded;
-                            },
-                            get label() {
-                              return entry().label;
-                            },
-                            get value() {
-                              return entry().value;
-                            },
-                            get editable() {
-                              return props.editable;
-                            },
-                            get dataPath() {
-                              return [...currentDataPath, entry().label];
-                            },
-                            get activeQuery() {
-                              return props.activeQuery;
-                            }
-                          })
-                        }));
-                        createRenderEffect(() => className(_el$30, styles().subEntry));
-                        return _el$30;
-                      }
-                    }), null);
-                    createRenderEffect((_p$) => {
-                      var _v$0 = styles().entry, _v$1 = styles().expanderButton;
-                      _v$0 !== _p$.e && className(_el$22, _p$.e = _v$0);
-                      _v$1 !== _p$.t && className(_el$23, _p$.t = _v$1);
-                      return _p$;
-                    }, {
-                      e: void 0,
-                      t: void 0
-                    });
-                    return _el$21;
-                  })()
-                }));
-                createRenderEffect(() => className(_el$15, styles().subEntry));
-                return _el$15;
-              }
-            })];
-          }
-        })];
-      }
-    }), null);
-    insert(_el$6, createComponent(Show, {
-      get when() {
-        return subEntryPages().length === 0;
-      },
-      get children() {
-        var _el$16 = _tmpl$110(), _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild;
-        insert(_el$17, () => props.label, _el$18);
-        insert(_el$16, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!(props.editable && props.activeQuery !== void 0))() && (type() === "string" || type() === "number" || type() === "boolean");
-          },
-          get fallback() {
-            return (() => {
-              var _el$31 = _tmpl$02();
-              insert(_el$31, () => displayValue(props.value));
-              createRenderEffect(() => className(_el$31, styles().value));
-              return _el$31;
-            })();
-          },
-          get children() {
-            return [createComponent(Show, {
+                          by: (item) => item.label,
+                          children: (entry) => {
+                            return createComponent(Explorer, {
+                              get defaultExpanded() {
+                                return props.defaultExpanded;
+                              },
+                              get label() {
+                                return entry().label;
+                              },
+                              get value() {
+                                return entry().value;
+                              },
+                              get editable() {
+                                return props.editable;
+                              },
+                              get dataPath() {
+                                return [...currentDataPath, entry().label];
+                              },
+                              get activeQuery() {
+                                return props.activeQuery;
+                              },
+                              get itemsDeletable() {
+                                return (
+                                  type() === "array" ||
+                                  type() === "Iterable" ||
+                                  type() === "object"
+                                );
+                              },
+                            });
+                          },
+                        })
+                      );
+                      createRenderEffect(() =>
+                        className(_el$14, styles().subEntry)
+                      );
+                      return _el$14;
+                    },
+                  }),
+                  createComponent(Show, {
+                    get when() {
+                      return subEntryPages().length > 1;
+                    },
+                    get children() {
+                      var _el$15 = _tmpl$72();
+                      insert(
+                        _el$15,
+                        createComponent(Index, {
+                          get each() {
+                            return subEntryPages();
+                          },
+                          children: (entries2, index) =>
+                            (() => {
+                              var _el$21 = _tmpl$102(),
+                                _el$22 = _el$21.firstChild,
+                                _el$23 = _el$22.firstChild,
+                                _el$24 = _el$23.firstChild,
+                                _el$28 = _el$24.nextSibling,
+                                _el$26 = _el$28.nextSibling,
+                                _el$29 = _el$26.nextSibling;
+                              _el$29.nextSibling;
+                              _el$23.$$click = () =>
+                                setExpandedPages((old) =>
+                                  old.includes(index)
+                                    ? old.filter((d) => d !== index)
+                                    : [...old, index]
+                                );
+                              insert(
+                                _el$23,
+                                createComponent(Expander, {
+                                  get expanded() {
+                                    return expandedPages().includes(index);
+                                  },
+                                }),
+                                _el$24
+                              );
+                              insert(_el$23, index * 100, _el$28);
+                              insert(_el$23, index * 100 + 100 - 1, _el$29);
+                              insert(
+                                _el$22,
+                                createComponent(Show, {
+                                  get when() {
+                                    return expandedPages().includes(index);
+                                  },
+                                  get children() {
+                                    var _el$30 = _tmpl$72();
+                                    insert(
+                                      _el$30,
+                                      createComponent(Key, {
+                                        get each() {
+                                          return entries2();
+                                        },
+                                        by: (entry) => entry.label,
+                                        children: (entry) =>
+                                          createComponent(Explorer, {
+                                            get defaultExpanded() {
+                                              return props.defaultExpanded;
+                                            },
+                                            get label() {
+                                              return entry().label;
+                                            },
+                                            get value() {
+                                              return entry().value;
+                                            },
+                                            get editable() {
+                                              return props.editable;
+                                            },
+                                            get dataPath() {
+                                              return [
+                                                ...currentDataPath,
+                                                entry().label,
+                                              ];
+                                            },
+                                            get activeQuery() {
+                                              return props.activeQuery;
+                                            },
+                                          }),
+                                      })
+                                    );
+                                    createRenderEffect(() =>
+                                      className(_el$30, styles().subEntry)
+                                    );
+                                    return _el$30;
+                                  },
+                                }),
+                                null
+                              );
+                              createRenderEffect(
+                                (_p$) => {
+                                  var _v$0 = styles().entry,
+                                    _v$1 = styles().expanderButton;
+                                  _v$0 !== _p$.e &&
+                                    className(_el$22, (_p$.e = _v$0));
+                                  _v$1 !== _p$.t &&
+                                    className(_el$23, (_p$.t = _v$1));
+                                  return _p$;
+                                },
+                                {
+                                  e: void 0,
+                                  t: void 0,
+                                }
+                              );
+                              return _el$21;
+                            })(),
+                        })
+                      );
+                      createRenderEffect(() =>
+                        className(_el$15, styles().subEntry)
+                      );
+                      return _el$15;
+                    },
+                  }),
+                ];
+              },
+            }),
+          ];
+        },
+      }),
+      null
+    );
+    insert(
+      _el$6,
+      createComponent(Show, {
+        get when() {
+          return subEntryPages().length === 0;
+        },
+        get children() {
+          var _el$16 = _tmpl$110(),
+            _el$17 = _el$16.firstChild,
+            _el$18 = _el$17.firstChild;
+          insert(_el$17, () => props.label, _el$18);
+          insert(
+            _el$16,
+            createComponent(Show, {
               get when() {
-                return createMemo(() => !!(props.editable && props.activeQuery !== void 0))() && (type() === "string" || type() === "number");
+                return (
+                  createMemo(
+                    () => !!(props.editable && props.activeQuery !== void 0)
+                  )() &&
+                  (type() === "string" ||
+                    type() === "number" ||
+                    type() === "boolean")
+                );
+              },
+              get fallback() {
+                return (() => {
+                  var _el$31 = _tmpl$02();
+                  insert(_el$31, () => displayValue(props.value));
+                  createRenderEffect(() => className(_el$31, styles().value));
+                  return _el$31;
+                })();
               },
               get children() {
-                var _el$19 = _tmpl$92();
-                _el$19.addEventListener("change", (changeEvent) => {
-                  const oldData = props.activeQuery.state.data;
-                  const newData = updateNestedDataByPath(oldData, currentDataPath, type() === "number" ? changeEvent.target.valueAsNumber : changeEvent.target.value);
-                  queryClient.setQueryData(props.activeQuery.queryKey, newData);
-                });
-                createRenderEffect((_p$) => {
-                  var _v$6 = type() === "number" ? "number" : "text", _v$7 = clsx(styles().value, styles().editableInput);
-                  _v$6 !== _p$.e && setAttribute(_el$19, "type", _p$.e = _v$6);
-                  _v$7 !== _p$.t && className(_el$19, _p$.t = _v$7);
-                  return _p$;
-                }, {
-                  e: void 0,
-                  t: void 0
-                });
-                createRenderEffect(() => _el$19.value = props.value);
-                return _el$19;
-              }
-            }), createComponent(Show, {
+                return [
+                  createComponent(Show, {
+                    get when() {
+                      return (
+                        createMemo(
+                          () =>
+                            !!(props.editable && props.activeQuery !== void 0)
+                        )() &&
+                        (type() === "string" || type() === "number")
+                      );
+                    },
+                    get children() {
+                      var _el$19 = _tmpl$92();
+                      _el$19.addEventListener("change", (changeEvent) => {
+                        const oldData = props.activeQuery.state.data;
+                        const newData = updateNestedDataByPath(
+                          oldData,
+                          currentDataPath,
+                          type() === "number"
+                            ? changeEvent.target.valueAsNumber
+                            : changeEvent.target.value
+                        );
+                        queryClient.setQueryData(
+                          props.activeQuery.queryKey,
+                          newData
+                        );
+                      });
+                      createRenderEffect(
+                        (_p$) => {
+                          var _v$6 = type() === "number" ? "number" : "text",
+                            _v$7 = clsx(styles().value, styles().editableInput);
+                          _v$6 !== _p$.e &&
+                            setAttribute(_el$19, "type", (_p$.e = _v$6));
+                          _v$7 !== _p$.t && className(_el$19, (_p$.t = _v$7));
+                          return _p$;
+                        },
+                        {
+                          e: void 0,
+                          t: void 0,
+                        }
+                      );
+                      createRenderEffect(() => (_el$19.value = props.value));
+                      return _el$19;
+                    },
+                  }),
+                  createComponent(Show, {
+                    get when() {
+                      return type() === "boolean";
+                    },
+                    get children() {
+                      var _el$20 = _tmpl$02();
+                      insert(
+                        _el$20,
+                        createComponent(ToggleValueButton, {
+                          get activeQuery() {
+                            return props.activeQuery;
+                          },
+                          dataPath: currentDataPath,
+                          get value() {
+                            return props.value;
+                          },
+                        }),
+                        null
+                      );
+                      insert(_el$20, () => displayValue(props.value), null);
+                      createRenderEffect(() =>
+                        className(
+                          _el$20,
+                          clsx(
+                            styles().value,
+                            styles().actions,
+                            styles().editableInput
+                          )
+                        )
+                      );
+                      return _el$20;
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$16,
+            createComponent(Show, {
               get when() {
-                return type() === "boolean";
+                return (
+                  props.editable &&
+                  props.itemsDeletable &&
+                  props.activeQuery !== void 0
+                );
               },
               get children() {
-                var _el$20 = _tmpl$02();
-                insert(_el$20, createComponent(ToggleValueButton, {
+                return createComponent(DeleteItemButton, {
                   get activeQuery() {
                     return props.activeQuery;
                   },
                   dataPath: currentDataPath,
-                  get value() {
-                    return props.value;
-                  }
-                }), null);
-                insert(_el$20, () => displayValue(props.value), null);
-                createRenderEffect(() => className(_el$20, clsx(styles().value, styles().actions, styles().editableInput)));
-                return _el$20;
-              }
-            })];
-          }
-        }), null);
-        insert(_el$16, createComponent(Show, {
-          get when() {
-            return props.editable && props.itemsDeletable && props.activeQuery !== void 0;
-          },
-          get children() {
-            return createComponent(DeleteItemButton, {
-              get activeQuery() {
-                return props.activeQuery;
+                });
               },
-              dataPath: currentDataPath
-            });
-          }
-        }), null);
-        createRenderEffect((_p$) => {
-          var _v$8 = styles().row, _v$9 = styles().label;
-          _v$8 !== _p$.e && className(_el$16, _p$.e = _v$8);
-          _v$9 !== _p$.t && className(_el$17, _p$.t = _v$9);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
-        return _el$16;
-      }
-    }), null);
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$8 = styles().row,
+                _v$9 = styles().label;
+              _v$8 !== _p$.e && className(_el$16, (_p$.e = _v$8));
+              _v$9 !== _p$.t && className(_el$17, (_p$.t = _v$9));
+              return _p$;
+            },
+            {
+              e: void 0,
+              t: void 0,
+            }
+          );
+          return _el$16;
+        },
+      }),
+      null
+    );
     createRenderEffect(() => className(_el$6, styles().entry));
     return _el$6;
   })();
 }
-var _tmpl$23, _tmpl$24, _tmpl$32, _tmpl$42, _tmpl$52, _tmpl$62, _tmpl$72, _tmpl$82, _tmpl$92, _tmpl$02, _tmpl$110, _tmpl$102, Expander, CopyButton, ClearArrayButton, DeleteItemButton, ToggleValueButton, stylesFactory, lightStyles, darkStyles;
+var _tmpl$23,
+  _tmpl$24,
+  _tmpl$32,
+  _tmpl$42,
+  _tmpl$52,
+  _tmpl$62,
+  _tmpl$72,
+  _tmpl$82,
+  _tmpl$92,
+  _tmpl$02,
+  _tmpl$110,
+  _tmpl$102,
+  Expander,
+  CopyButton,
+  ClearArrayButton,
+  DeleteItemButton,
+  ToggleValueButton,
+  stylesFactory,
+  lightStyles,
+  darkStyles;
 var init_Explorer = __esm({
   "src/Explorer.tsx"() {
     init_web();
@@ -12585,12 +15005,24 @@ var init_Explorer = __esm({
     init_utils();
     init_icons();
     init_contexts();
-    _tmpl$23 = /* @__PURE__ */ template(`<span><svg width=16 height=16 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M6 12L10 8L6 4"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`);
-    _tmpl$24 = /* @__PURE__ */ template(`<button title="Copy object to clipboard">`);
-    _tmpl$32 = /* @__PURE__ */ template(`<button title="Remove all items"aria-label="Remove all items">`);
-    _tmpl$42 = /* @__PURE__ */ template(`<button title="Delete item"aria-label="Delete item">`);
-    _tmpl$52 = /* @__PURE__ */ template(`<button title="Toggle value"aria-label="Toggle value">`);
-    _tmpl$62 = /* @__PURE__ */ template(`<button title="Bulk Edit Data"aria-label="Bulk Edit Data">`);
+    _tmpl$23 = /* @__PURE__ */ template(
+      `<span><svg width=16 height=16 viewBox="0 0 16 16"fill=none xmlns=http://www.w3.org/2000/svg><path d="M6 12L10 8L6 4"stroke-width=2 stroke-linecap=round stroke-linejoin=round>`
+    );
+    _tmpl$24 = /* @__PURE__ */ template(
+      `<button title="Copy object to clipboard">`
+    );
+    _tmpl$32 = /* @__PURE__ */ template(
+      `<button title="Remove all items"aria-label="Remove all items">`
+    );
+    _tmpl$42 = /* @__PURE__ */ template(
+      `<button title="Delete item"aria-label="Delete item">`
+    );
+    _tmpl$52 = /* @__PURE__ */ template(
+      `<button title="Toggle value"aria-label="Toggle value">`
+    );
+    _tmpl$62 = /* @__PURE__ */ template(
+      `<button title="Bulk Edit Data"aria-label="Bulk Edit Data">`
+    );
     _tmpl$72 = /* @__PURE__ */ template(`<div>`);
     _tmpl$82 = /* @__PURE__ */ template(`<div><button> <span></span> <span> `);
     _tmpl$92 = /* @__PURE__ */ template(`<input>`);
@@ -12599,95 +15031,138 @@ var init_Explorer = __esm({
     _tmpl$102 = /* @__PURE__ */ template(`<div><div><button> [<!>...<!>]`);
     Expander = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
       return (() => {
         var _el$ = _tmpl$23();
-        createRenderEffect(() => className(_el$, clsx(styles().expander, css`
-          transform: rotate(${props.expanded ? 90 : 0}deg);
-        `, props.expanded && css`
-            & svg {
-              top: -1px;
-            }
-          `)));
+        createRenderEffect(() =>
+          className(
+            _el$,
+            clsx(
+              styles().expander,
+              css`
+                transform: rotate(${props.expanded ? 90 : 0}deg);
+              `,
+              props.expanded &&
+                css`
+                  & svg {
+                    top: -1px;
+                  }
+                `
+            )
+          )
+        );
         return _el$;
       })();
     };
     CopyButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
       const [copyState, setCopyState] = createSignal("NoCopy");
       return (() => {
         var _el$2 = _tmpl$24();
-        addEventListener(_el$2, "click", copyState() === "NoCopy" ? () => {
-          navigator.clipboard.writeText(stringify(props.value)).then(() => {
-            setCopyState("SuccessCopy");
-            setTimeout(() => {
-              setCopyState("NoCopy");
-            }, 1500);
-          }, (err) => {
-            setCopyState("ErrorCopy");
-            setTimeout(() => {
-              setCopyState("NoCopy");
-            }, 1500);
-          });
-        } : void 0, true);
-        insert(_el$2, createComponent(Switch, {
-          get children() {
-            return [createComponent(Match, {
-              get when() {
-                return copyState() === "NoCopy";
-              },
-              get children() {
-                return createComponent(Copier, {});
-              }
-            }), createComponent(Match, {
-              get when() {
-                return copyState() === "SuccessCopy";
-              },
-              get children() {
-                return createComponent(CopiedCopier, {
-                  get theme() {
-                    return theme();
+        addEventListener(
+          _el$2,
+          "click",
+          copyState() === "NoCopy"
+            ? () => {
+                navigator.clipboard.writeText(stringify(props.value)).then(
+                  () => {
+                    setCopyState("SuccessCopy");
+                    setTimeout(() => {
+                      setCopyState("NoCopy");
+                    }, 1500);
+                  },
+                  (err) => {
+                    setCopyState("ErrorCopy");
+                    setTimeout(() => {
+                      setCopyState("NoCopy");
+                    }, 1500);
                   }
-                });
-              }
-            }), createComponent(Match, {
-              get when() {
-                return copyState() === "ErrorCopy";
-              },
-              get children() {
-                return createComponent(ErrorCopier, {});
+                );
               }
-            })];
+            : void 0,
+          true
+        );
+        insert(
+          _el$2,
+          createComponent(Switch, {
+            get children() {
+              return [
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "NoCopy";
+                  },
+                  get children() {
+                    return createComponent(Copier, {});
+                  },
+                }),
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "SuccessCopy";
+                  },
+                  get children() {
+                    return createComponent(CopiedCopier, {
+                      get theme() {
+                        return theme();
+                      },
+                    });
+                  },
+                }),
+                createComponent(Match, {
+                  get when() {
+                    return copyState() === "ErrorCopy";
+                  },
+                  get children() {
+                    return createComponent(ErrorCopier, {});
+                  },
+                }),
+              ];
+            },
+          })
+        );
+        createRenderEffect(
+          (_p$) => {
+            var _v$ = styles().actionButton,
+              _v$2 = `${
+                copyState() === "NoCopy"
+                  ? "Copy object to clipboard"
+                  : copyState() === "SuccessCopy"
+                  ? "Object copied to clipboard"
+                  : "Error copying object to clipboard"
+              }`;
+            _v$ !== _p$.e && className(_el$2, (_p$.e = _v$));
+            _v$2 !== _p$.t && setAttribute(_el$2, "aria-label", (_p$.t = _v$2));
+            return _p$;
+          },
+          {
+            e: void 0,
+            t: void 0,
           }
-        }));
-        createRenderEffect((_p$) => {
-          var _v$ = styles().actionButton, _v$2 = `${copyState() === "NoCopy" ? "Copy object to clipboard" : copyState() === "SuccessCopy" ? "Object copied to clipboard" : "Error copying object to clipboard"}`;
-          _v$ !== _p$.e && className(_el$2, _p$.e = _v$);
-          _v$2 !== _p$.t && setAttribute(_el$2, "aria-label", _p$.t = _v$2);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
+        );
         return _el$2;
       })();
     };
     ClearArrayButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12706,9 +15181,11 @@ var init_Explorer = __esm({
     };
     DeleteItemButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12727,9 +15204,11 @@ var init_Explorer = __esm({
     };
     ToggleValueButton = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles(css) : lightStyles(css);
       });
@@ -12738,167 +15217,241 @@ var init_Explorer = __esm({
         var _el$5 = _tmpl$52();
         _el$5.$$click = () => {
           const oldData = props.activeQuery.state.data;
-          const newData = updateNestedDataByPath(oldData, props.dataPath, !props.value);
+          const newData = updateNestedDataByPath(
+            oldData,
+            props.dataPath,
+            !props.value
+          );
           queryClient.setQueryData(props.activeQuery.queryKey, newData);
         };
-        insert(_el$5, createComponent(Check, {
-          get theme() {
-            return theme();
-          },
-          get checked() {
-            return props.value;
-          }
-        }));
-        createRenderEffect(() => className(_el$5, clsx(styles().actionButton, css`
-          width: ${tokens.size[3.5]};
-          height: ${tokens.size[3.5]};
-        `)));
+        insert(
+          _el$5,
+          createComponent(Check, {
+            get theme() {
+              return theme();
+            },
+            get checked() {
+              return props.value;
+            },
+          })
+        );
+        createRenderEffect(() =>
+          className(
+            _el$5,
+            clsx(
+              styles().actionButton,
+              css`
+                width: ${tokens.size[3.5]};
+                height: ${tokens.size[3.5]};
+              `
+            )
+          )
+        );
         return _el$5;
       })();
     };
     stylesFactory = (theme, css) => {
-      const {
-        colors,
-        font,
-        size: size3,
-        border
-      } = tokens;
-      const t2 = (light, dark) => theme === "light" ? light : dark;
+      const { colors, font, size: size3, border } = tokens;
+      const t2 = (light, dark) => (theme === "light" ? light : dark);
       return {
         entry: css`
-      & * {
-        font-size: ${font.size.xs};
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-      }
-      position: relative;
-      outline: none;
-      word-break: break-word;
-    `,
+          & * {
+            font-size: ${font.size.xs};
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+          }
+          position: relative;
+          outline: none;
+          word-break: break-word;
+        `,
         subEntry: css`
-      margin: 0 0 0 0.5em;
-      padding-left: 0.75em;
-      border-left: 2px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      /* outline: 1px solid ${colors.teal[400]}; */
-    `,
+          margin: 0 0 0 0.5em;
+          padding-left: 0.75em;
+          border-left: 2px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          /* outline: 1px solid ${colors.teal[400]}; */
+        `,
         expander: css`
-      & path {
-        stroke: ${colors.gray[400]};
-      }
-      & svg {
-        width: ${size3[3]};
-        height: ${size3[3]};
-      }
-      display: inline-flex;
-      align-items: center;
-      transition: all 0.1s ease;
-      /* outline: 1px solid ${colors.blue[400]}; */
-    `,
+          & path {
+            stroke: ${colors.gray[400]};
+          }
+          & svg {
+            width: ${size3[3]};
+            height: ${size3[3]};
+          }
+          display: inline-flex;
+          align-items: center;
+          transition: all 0.1s ease;
+          /* outline: 1px solid ${colors.blue[400]}; */
+        `,
         expanderButtonContainer: css`
-      display: flex;
-      align-items: center;
-      line-height: ${size3[4]};
-      min-height: ${size3[4]};
-      gap: ${size3[2]};
-    `,
+          display: flex;
+          align-items: center;
+          line-height: ${size3[4]};
+          min-height: ${size3[4]};
+          gap: ${size3[2]};
+        `,
         expanderButton: css`
-      cursor: pointer;
-      color: inherit;
-      font: inherit;
-      outline: inherit;
-      height: ${size3[5]};
-      background: transparent;
-      border: none;
-      padding: 0;
-      display: inline-flex;
-      align-items: center;
-      gap: ${size3[1]};
-      position: relative;
-      /* outline: 1px solid ${colors.green[400]}; */
+          cursor: pointer;
+          color: inherit;
+          font: inherit;
+          outline: inherit;
+          height: ${size3[5]};
+          background: transparent;
+          border: none;
+          padding: 0;
+          display: inline-flex;
+          align-items: center;
+          gap: ${size3[1]};
+          position: relative;
+          /* outline: 1px solid ${colors.green[400]}; */
 
-      &:focus-visible {
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
+          &:focus-visible {
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
 
-      & svg {
-        position: relative;
-        left: 1px;
-      }
-    `,
+          & svg {
+            position: relative;
+            left: 1px;
+          }
+        `,
         info: css`
-      color: ${t2(colors.gray[500], colors.gray[500])};
-      font-size: ${font.size.xs};
-      margin-left: ${size3[1]};
-      /* outline: 1px solid ${colors.yellow[400]}; */
-    `,
+          color: ${t2(colors.gray[500], colors.gray[500])};
+          font-size: ${font.size.xs};
+          margin-left: ${size3[1]};
+          /* outline: 1px solid ${colors.yellow[400]}; */
+        `,
         label: css`
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      white-space: nowrap;
-    `,
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          white-space: nowrap;
+        `,
         value: css`
-      color: ${t2(colors.purple[600], colors.purple[400])};
-      flex-grow: 1;
-    `,
+          color: ${t2(colors.purple[600], colors.purple[400])};
+          flex-grow: 1;
+        `,
         actions: css`
-      display: inline-flex;
-      gap: ${size3[2]};
-      align-items: center;
-    `,
+          display: inline-flex;
+          gap: ${size3[2]};
+          align-items: center;
+        `,
         row: css`
-      display: inline-flex;
-      gap: ${size3[2]};
-      width: 100%;
-      margin: ${size3[0.25]} 0px;
-      line-height: ${size3[4.5]};
-      align-items: center;
-    `,
+          display: inline-flex;
+          gap: ${size3[2]};
+          width: 100%;
+          margin: ${size3[0.25]} 0px;
+          line-height: ${size3[4.5]};
+          align-items: center;
+        `,
         editableInput: css`
-      border: none;
-      padding: ${size3[0.5]} ${size3[1]} ${size3[0.5]} ${size3[1.5]};
-      flex-grow: 1;
-      border-radius: ${border.radius.xs};
-      background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          border: none;
+          padding: ${size3[0.5]} ${size3[1]} ${size3[0.5]} ${size3[1.5]};
+          flex-grow: 1;
+          border-radius: ${border.radius.xs};
+          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
 
-      &:hover {
-        background-color: ${t2(colors.gray[300], colors.darkGray[600])};
-      }
-    `,
+          &:hover {
+            background-color: ${t2(colors.gray[300], colors.darkGray[600])};
+          }
+        `,
         actionButton: css`
-      background-color: transparent;
-      color: ${t2(colors.gray[500], colors.gray[500])};
-      border: none;
-      display: inline-flex;
-      padding: 0px;
-      align-items: center;
-      justify-content: center;
-      cursor: pointer;
-      width: ${size3[3]};
-      height: ${size3[3]};
-      position: relative;
-      z-index: 1;
+          background-color: transparent;
+          color: ${t2(colors.gray[500], colors.gray[500])};
+          border: none;
+          display: inline-flex;
+          padding: 0px;
+          align-items: center;
+          justify-content: center;
+          cursor: pointer;
+          width: ${size3[3]};
+          height: ${size3[3]};
+          position: relative;
+          z-index: 1;
 
-      &:hover svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-      }
+          &:hover svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+          }
 
-      &:focus-visible {
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-        outline-offset: 2px;
-      }
-    `
+          &:focus-visible {
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+            outline-offset: 2px;
+          }
+        `,
       };
     };
     lightStyles = (css) => stylesFactory("light", css);
     darkStyles = (css) => stylesFactory("dark", css);
     delegateEvents(["click"]);
-  }
+  },
 });
 
 // src/Devtools.tsx
-var _tmpl$25, _tmpl$26, _tmpl$33, _tmpl$43, _tmpl$53, _tmpl$63, _tmpl$73, _tmpl$83, _tmpl$93, _tmpl$03, _tmpl$111, _tmpl$103, _tmpl$112, _tmpl$122, _tmpl$132, _tmpl$142, _tmpl$152, _tmpl$162, _tmpl$172, _tmpl$182, _tmpl$192, _tmpl$202, _tmpl$212, _tmpl$222, _tmpl$232, _tmpl$242, _tmpl$252, _tmpl$262, _tmpl$27, _tmpl$28, _tmpl$29, _tmpl$30, _tmpl$31, _tmpl$322, _tmpl$332, selectedQueryHash, setSelectedQueryHash, selectedMutationId, setSelectedMutationId, panelWidth, setPanelWidth, offline, setOffline, Devtools, PiPPanel, ParentPanel, DraggablePanel, ContentView, QueryRow, MutationRow, QueryStatusCount, MutationStatusCount, QueryStatus, QueryDetails, MutationDetails, queryCacheMap, setupQueryCacheSubscription, createSubscribeToQueryCacheBatcher, mutationCacheMap, setupMutationCacheSubscription, createSubscribeToMutationCacheBatcher, DEV_TOOLS_EVENT, sendDevToolsEvent, stylesFactory2, lightStyles2, darkStyles2;
+var _tmpl$25,
+  _tmpl$26,
+  _tmpl$33,
+  _tmpl$43,
+  _tmpl$53,
+  _tmpl$63,
+  _tmpl$73,
+  _tmpl$83,
+  _tmpl$93,
+  _tmpl$03,
+  _tmpl$111,
+  _tmpl$103,
+  _tmpl$112,
+  _tmpl$122,
+  _tmpl$132,
+  _tmpl$142,
+  _tmpl$152,
+  _tmpl$162,
+  _tmpl$172,
+  _tmpl$182,
+  _tmpl$192,
+  _tmpl$202,
+  _tmpl$212,
+  _tmpl$222,
+  _tmpl$232,
+  _tmpl$242,
+  _tmpl$252,
+  _tmpl$262,
+  _tmpl$27,
+  _tmpl$28,
+  _tmpl$29,
+  _tmpl$30,
+  _tmpl$31,
+  _tmpl$322,
+  _tmpl$332,
+  selectedQueryHash,
+  setSelectedQueryHash,
+  selectedMutationId,
+  setSelectedMutationId,
+  panelWidth,
+  setPanelWidth,
+  offline,
+  setOffline,
+  Devtools,
+  PiPPanel,
+  ParentPanel,
+  DraggablePanel,
+  ContentView,
+  QueryRow,
+  MutationRow,
+  QueryStatusCount,
+  MutationStatusCount,
+  QueryStatus,
+  QueryDetails,
+  MutationDetails,
+  queryCacheMap,
+  setupQueryCacheSubscription,
+  createSubscribeToQueryCacheBatcher,
+  mutationCacheMap,
+  setupMutationCacheSubscription,
+  createSubscribeToMutationCacheBatcher,
+  DEV_TOOLS_EVENT,
+  sendDevToolsEvent,
+  stylesFactory2,
+  lightStyles2,
+  darkStyles2;
 var init_Devtools = __esm({
   "src/Devtools.tsx"() {
     init_web();
@@ -12927,14 +15480,24 @@ var init_Devtools = __esm({
     init_Explorer();
     init_contexts();
     init_constants();
-    _tmpl$25 = /* @__PURE__ */ template(`<div><div aria-hidden=true></div><button type=button aria-label="Open Tanstack query devtools"class=tsqd-open-btn>`);
+    _tmpl$25 = /* @__PURE__ */ template(
+      `<div><div aria-hidden=true></div><button type=button aria-label="Open Tanstack query devtools"class=tsqd-open-btn>`
+    );
     _tmpl$26 = /* @__PURE__ */ template(`<div>`);
-    _tmpl$33 = /* @__PURE__ */ template(`<aside aria-label="Tanstack query devtools"><div></div><button aria-label="Close tanstack query devtools">`);
-    _tmpl$43 = /* @__PURE__ */ template(`<select name=tsqd-queries-filter-sort>`);
-    _tmpl$53 = /* @__PURE__ */ template(`<select name=tsqd-mutations-filter-sort>`);
+    _tmpl$33 = /* @__PURE__ */ template(
+      `<aside aria-label="Tanstack query devtools"><div></div><button aria-label="Close tanstack query devtools">`
+    );
+    _tmpl$43 = /* @__PURE__ */ template(
+      `<select name=tsqd-queries-filter-sort>`
+    );
+    _tmpl$53 = /* @__PURE__ */ template(
+      `<select name=tsqd-mutations-filter-sort>`
+    );
     _tmpl$63 = /* @__PURE__ */ template(`<span>Asc`);
     _tmpl$73 = /* @__PURE__ */ template(`<span>Desc`);
-    _tmpl$83 = /* @__PURE__ */ template(`<button aria-label="Open in picture-in-picture mode"title="Open in picture-in-picture mode">`);
+    _tmpl$83 = /* @__PURE__ */ template(
+      `<button aria-label="Open in picture-in-picture mode"title="Open in picture-in-picture mode">`
+    );
     _tmpl$93 = /* @__PURE__ */ template(`<div>Settings`);
     _tmpl$03 = /* @__PURE__ */ template(`<span>Position`);
     _tmpl$111 = /* @__PURE__ */ template(`<span>Top`);
@@ -12945,36 +15508,64 @@ var init_Devtools = __esm({
     _tmpl$142 = /* @__PURE__ */ template(`<span>Light`);
     _tmpl$152 = /* @__PURE__ */ template(`<span>Dark`);
     _tmpl$162 = /* @__PURE__ */ template(`<span>System`);
-    _tmpl$172 = /* @__PURE__ */ template(`<div><div class=tsqd-queries-container>`);
-    _tmpl$182 = /* @__PURE__ */ template(`<div><div class=tsqd-mutations-container>`);
-    _tmpl$192 = /* @__PURE__ */ template(`<div><div><div><button aria-label="Close Tanstack query devtools"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label="Filter queries by query key"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label="Clear query cache"></button><button>`);
+    _tmpl$172 = /* @__PURE__ */ template(
+      `<div><div class=tsqd-queries-container>`
+    );
+    _tmpl$182 = /* @__PURE__ */ template(
+      `<div><div class=tsqd-mutations-container>`
+    );
+    _tmpl$192 = /* @__PURE__ */ template(
+      `<div><div><div><button aria-label="Close Tanstack query devtools"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label="Filter queries by query key"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label="Clear query cache"></button><button>`
+    );
     _tmpl$202 = /* @__PURE__ */ template(`<option>Sort by `);
-    _tmpl$212 = /* @__PURE__ */ template(`<div class=tsqd-query-disabled-indicator>disabled`);
-    _tmpl$222 = /* @__PURE__ */ template(`<div class=tsqd-query-static-indicator>static`);
-    _tmpl$232 = /* @__PURE__ */ template(`<button><div></div><code class=tsqd-query-hash>`);
-    _tmpl$242 = /* @__PURE__ */ template(`<div role=tooltip id=tsqd-status-tooltip>`);
+    _tmpl$212 = /* @__PURE__ */ template(
+      `<div class=tsqd-query-disabled-indicator>disabled`
+    );
+    _tmpl$222 = /* @__PURE__ */ template(
+      `<div class=tsqd-query-static-indicator>static`
+    );
+    _tmpl$232 = /* @__PURE__ */ template(
+      `<button><div></div><code class=tsqd-query-hash>`
+    );
+    _tmpl$242 = /* @__PURE__ */ template(
+      `<div role=tooltip id=tsqd-status-tooltip>`
+    );
     _tmpl$252 = /* @__PURE__ */ template(`<span>`);
     _tmpl$262 = /* @__PURE__ */ template(`<button><span></span><span>`);
     _tmpl$27 = /* @__PURE__ */ template(`<button><span></span> Error`);
-    _tmpl$28 = /* @__PURE__ */ template(`<div><span></span>Trigger Error<select><option value=""disabled selected>`);
-    _tmpl$29 = /* @__PURE__ */ template(`<div class="tsqd-query-details-explorer-container tsqd-query-details-data-explorer">`);
-    _tmpl$30 = /* @__PURE__ */ template(`<form><textarea name=data></textarea><div><span></span><div><button type=button>Cancel</button><button>Save`);
-    _tmpl$31 = /* @__PURE__ */ template(`<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data </div><div>Query Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`);
+    _tmpl$28 = /* @__PURE__ */ template(
+      `<div><span></span>Trigger Error<select><option value=""disabled selected>`
+    );
+    _tmpl$29 = /* @__PURE__ */ template(
+      `<div class="tsqd-query-details-explorer-container tsqd-query-details-data-explorer">`
+    );
+    _tmpl$30 = /* @__PURE__ */ template(
+      `<form><textarea name=data></textarea><div><span></span><div><button type=button>Cancel</button><button>Save`
+    );
+    _tmpl$31 = /* @__PURE__ */ template(
+      `<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data </div><div>Query Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`
+    );
     _tmpl$322 = /* @__PURE__ */ template(`<option>`);
-    _tmpl$332 = /* @__PURE__ */ template(`<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Context Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Data Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Mutations Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`);
+    _tmpl$332 = /* @__PURE__ */ template(
+      `<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Context Details</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Data Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer"></div><div>Mutations Explorer</div><div class="tsqd-query-details-explorer-container tsqd-query-details-query-explorer">`
+    );
     [selectedQueryHash, setSelectedQueryHash] = createSignal(null);
     [selectedMutationId, setSelectedMutationId] = createSignal(null);
     [panelWidth, setPanelWidth] = createSignal(0);
     [offline, setOffline] = createSignal(false);
     Devtools = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const onlineManager = createMemo(() => useQueryDevtoolsContext().onlineManager);
+      const onlineManager = createMemo(
+        () => useQueryDevtoolsContext().onlineManager
+      );
       onMount(() => {
         const unsubscribe = onlineManager().subscribe((online) => {
           setOffline(!online);
@@ -12988,10 +15579,18 @@ var init_Devtools = __esm({
         return useQueryDevtoolsContext().buttonPosition || BUTTON_POSITION;
       });
       const isOpen = createMemo(() => {
-        return props.localStore.open === "true" ? true : props.localStore.open === "false" ? false : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;
+        return props.localStore.open === "true"
+          ? true
+          : props.localStore.open === "false"
+          ? false
+          : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;
       });
       const position = createMemo(() => {
-        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;
+        return (
+          props.localStore.position ||
+          useQueryDevtoolsContext().position ||
+          POSITION
+        );
       });
       let transitionsContainerRef;
       createEffect(() => {
@@ -12999,8 +15598,14 @@ var init_Devtools = __esm({
         const height = props.localStore.height || DEFAULT_HEIGHT;
         const width = props.localStore.width || DEFAULT_WIDTH;
         const panelPosition = position();
-        root.style.setProperty("--tsqd-panel-height", `${panelPosition === "top" ? "-" : ""}${height}px`);
-        root.style.setProperty("--tsqd-panel-width", `${panelPosition === "left" ? "-" : ""}${width}px`);
+        root.style.setProperty(
+          "--tsqd-panel-height",
+          `${panelPosition === "top" ? "-" : ""}${height}px`
+        );
+        root.style.setProperty(
+          "--tsqd-panel-width",
+          `${panelPosition === "left" ? "-" : ""}${width}px`
+        );
       });
       onMount(() => {
         const onFocus = () => {
@@ -13015,120 +15620,161 @@ var init_Devtools = __esm({
         });
       });
       const pip_open = createMemo(() => props.localStore.pip_open ?? "false");
-      return [createComponent(Show, {
-        get when() {
-          return createMemo(() => !!pip().pipWindow)() && pip_open() == "true";
-        },
-        get children() {
-          return createComponent(Portal, {
-            get mount() {
-              return pip().pipWindow?.document.body;
-            },
-            get children() {
-              return createComponent(PiPPanel, {
-                get children() {
-                  return createComponent(ContentView, props);
-                }
-              });
-            }
-          });
-        }
-      }), (() => {
-        var _el$ = _tmpl$26();
-        var _ref$ = transitionsContainerRef;
-        typeof _ref$ === "function" ? use(_ref$, _el$) : transitionsContainerRef = _el$;
-        insert(_el$, createComponent(TransitionGroup, {
-          name: "tsqd-panel-transition",
+      return [
+        createComponent(Show, {
+          get when() {
+            return (
+              createMemo(() => !!pip().pipWindow)() && pip_open() == "true"
+            );
+          },
           get children() {
-            return createComponent(Show, {
-              get when() {
-                return createMemo(() => !!(isOpen() && !pip().pipWindow))() && pip_open() == "false";
+            return createComponent(Portal, {
+              get mount() {
+                return pip().pipWindow?.document.body;
               },
               get children() {
-                return createComponent(DraggablePanel, {
-                  get localStore() {
-                    return props.localStore;
+                return createComponent(PiPPanel, {
+                  get children() {
+                    return createComponent(ContentView, props);
                   },
-                  get setLocalStore() {
-                    return props.setLocalStore;
-                  }
                 });
-              }
+              },
             });
-          }
-        }), null);
-        insert(_el$, createComponent(TransitionGroup, {
-          name: "tsqd-button-transition",
-          get children() {
-            return createComponent(Show, {
-              get when() {
-                return !isOpen();
+          },
+        }),
+        (() => {
+          var _el$ = _tmpl$26();
+          var _ref$ = transitionsContainerRef;
+          typeof _ref$ === "function"
+            ? use(_ref$, _el$)
+            : (transitionsContainerRef = _el$);
+          insert(
+            _el$,
+            createComponent(TransitionGroup, {
+              name: "tsqd-panel-transition",
+              get children() {
+                return createComponent(Show, {
+                  get when() {
+                    return (
+                      createMemo(() => !!(isOpen() && !pip().pipWindow))() &&
+                      pip_open() == "false"
+                    );
+                  },
+                  get children() {
+                    return createComponent(DraggablePanel, {
+                      get localStore() {
+                        return props.localStore;
+                      },
+                      get setLocalStore() {
+                        return props.setLocalStore;
+                      },
+                    });
+                  },
+                });
               },
+            }),
+            null
+          );
+          insert(
+            _el$,
+            createComponent(TransitionGroup, {
+              name: "tsqd-button-transition",
               get children() {
-                var _el$2 = _tmpl$25(), _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;
-                insert(_el$3, createComponent(TanstackLogo, {}));
-                _el$4.$$click = () => props.setLocalStore("open", "true");
-                insert(_el$4, createComponent(TanstackLogo, {}));
-                createRenderEffect(() => className(_el$2, clsx(styles().devtoolsBtn, styles()[`devtoolsBtn-position-${buttonPosition()}`], "tsqd-open-btn-container")));
-                return _el$2;
-              }
-            });
-          }
-        }), null);
-        createRenderEffect(() => className(_el$, clsx(css`
-            & .tsqd-panel-transition-exit-active,
-            & .tsqd-panel-transition-enter-active {
-              transition:
-                opacity 0.3s,
-                transform 0.3s;
-            }
+                return createComponent(Show, {
+                  get when() {
+                    return !isOpen();
+                  },
+                  get children() {
+                    var _el$2 = _tmpl$25(),
+                      _el$3 = _el$2.firstChild,
+                      _el$4 = _el$3.nextSibling;
+                    insert(_el$3, createComponent(TanstackLogo, {}));
+                    _el$4.$$click = () => props.setLocalStore("open", "true");
+                    insert(_el$4, createComponent(TanstackLogo, {}));
+                    createRenderEffect(() =>
+                      className(
+                        _el$2,
+                        clsx(
+                          styles().devtoolsBtn,
+                          styles()[`devtoolsBtn-position-${buttonPosition()}`],
+                          "tsqd-open-btn-container"
+                        )
+                      )
+                    );
+                    return _el$2;
+                  },
+                });
+              },
+            }),
+            null
+          );
+          createRenderEffect(() =>
+            className(
+              _el$,
+              clsx(
+                css`
+                  & .tsqd-panel-transition-exit-active,
+                  & .tsqd-panel-transition-enter-active {
+                    transition: opacity 0.3s, transform 0.3s;
+                  }
 
-            & .tsqd-panel-transition-exit-to,
-            & .tsqd-panel-transition-enter {
-              ${position() === "top" || position() === "bottom" ? `transform: translateY(var(--tsqd-panel-height));` : `transform: translateX(var(--tsqd-panel-width));`}
-            }
+                  & .tsqd-panel-transition-exit-to,
+                  & .tsqd-panel-transition-enter {
+                    ${position() === "top" || position() === "bottom"
+                      ? `transform: translateY(var(--tsqd-panel-height));`
+                      : `transform: translateX(var(--tsqd-panel-width));`}
+                  }
 
-            & .tsqd-button-transition-exit-active,
-            & .tsqd-button-transition-enter-active {
-              transition:
-                opacity 0.3s,
-                transform 0.3s;
-              opacity: 1;
-            }
+                  & .tsqd-button-transition-exit-active,
+                  & .tsqd-button-transition-enter-active {
+                    transition: opacity 0.3s, transform 0.3s;
+                    opacity: 1;
+                  }
 
-            & .tsqd-button-transition-exit-to,
-            & .tsqd-button-transition-enter {
-              transform: ${buttonPosition() === "relative" ? `none;` : buttonPosition() === "top-left" ? `translateX(-72px);` : buttonPosition() === "top-right" ? `translateX(72px);` : `translateY(72px);`};
-              opacity: 0;
-            }
-          `, "tsqd-transitions-container")));
-        return _el$;
-      })()];
+                  & .tsqd-button-transition-exit-to,
+                  & .tsqd-button-transition-enter {
+                    transform: ${buttonPosition() === "relative"
+                      ? `none;`
+                      : buttonPosition() === "top-left"
+                      ? `translateX(-72px);`
+                      : buttonPosition() === "top-right"
+                      ? `translateX(72px);`
+                      : `translateY(72px);`};
+                    opacity: 0;
+                  }
+                `,
+                "tsqd-transitions-container"
+              )
+            )
+          );
+          return _el$;
+        })(),
+      ];
     };
     PiPPanel = (props) => {
       const pip = usePiPWindow();
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       createEffect(() => {
         const win = pip().pipWindow;
@@ -13153,80 +15799,102 @@ var init_Devtools = __esm({
         _el$5.style.setProperty("height", "100vh");
         _el$5.style.setProperty("width", "100vw");
         insert(_el$5, () => props.children);
-        createRenderEffect(() => className(_el$5, clsx(styles().panel, getPanelDynamicStyles(), {
-          [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint
-        }, "tsqd-main-panel")));
+        createRenderEffect(() =>
+          className(
+            _el$5,
+            clsx(
+              styles().panel,
+              getPanelDynamicStyles(),
+              {
+                [css`
+                  min-width: min-content;
+                `]: panelWidth() < thirdBreakpoint,
+              },
+              "tsqd-main-panel"
+            )
+          )
+        );
         return _el$5;
       })();
     };
     ParentPanel = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       let panelRef;
       onMount(() => {
-        createResizeObserver(panelRef, ({
-          width
-        }, el) => {
+        createResizeObserver(panelRef, ({ width }, el) => {
           if (el === panelRef) {
             setPanelWidth(width);
           }
         });
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       return (() => {
         var _el$6 = _tmpl$26();
         var _ref$2 = panelRef;
-        typeof _ref$2 === "function" ? use(_ref$2, _el$6) : panelRef = _el$6;
+        typeof _ref$2 === "function" ? use(_ref$2, _el$6) : (panelRef = _el$6);
         _el$6.style.setProperty("--tsqd-font-size", "16px");
         insert(_el$6, () => props.children);
-        createRenderEffect(() => className(_el$6, clsx(styles().parentPanel, getPanelDynamicStyles(), {
-          [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint
-        }, "tsqd-main-panel")));
+        createRenderEffect(() =>
+          className(
+            _el$6,
+            clsx(
+              styles().parentPanel,
+              getPanelDynamicStyles(),
+              {
+                [css`
+                  min-width: min-content;
+                `]: panelWidth() < thirdBreakpoint,
+              },
+              "tsqd-main-panel"
+            )
+          )
+        );
         return _el$6;
       })();
     };
     DraggablePanel = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const [isResizing, setIsResizing] = createSignal(false);
-      const position = createMemo(() => props.localStore.position || useQueryDevtoolsContext().position || POSITION);
+      const position = createMemo(
+        () =>
+          props.localStore.position ||
+          useQueryDevtoolsContext().position ||
+          POSITION
+      );
       const handleDragStart = (event) => {
         const panelElement = event.currentTarget.parentElement;
         if (!panelElement) return;
         setIsResizing(true);
-        const {
-          height,
-          width
-        } = panelElement.getBoundingClientRect();
+        const { height, width } = panelElement.getBoundingClientRect();
         const startX = event.clientX;
         const startY = event.clientY;
         let newSize = 0;
@@ -13235,7 +15903,10 @@ var init_Devtools = __esm({
         const runDrag = (moveEvent) => {
           moveEvent.preventDefault();
           if (position() === "left" || position() === "right") {
-            const valToAdd = position() === "right" ? startX - moveEvent.clientX : moveEvent.clientX - startX;
+            const valToAdd =
+              position() === "right"
+                ? startX - moveEvent.clientX
+                : moveEvent.clientX - startX;
             newSize = Math.round(width + valToAdd);
             if (newSize < minWidth) {
               newSize = minWidth;
@@ -13246,7 +15917,10 @@ var init_Devtools = __esm({
               props.setLocalStore("width", String(newWidth));
             }
           } else {
-            const valToAdd = position() === "bottom" ? startY - moveEvent.clientY : moveEvent.clientY - startY;
+            const valToAdd =
+              position() === "bottom"
+                ? startY - moveEvent.clientY
+                : moveEvent.clientY - startY;
             newSize = Math.round(height + valToAdd);
             if (newSize < minHeight) {
               newSize = minHeight;
@@ -13267,83 +15941,123 @@ var init_Devtools = __esm({
       };
       let panelRef;
       onMount(() => {
-        createResizeObserver(panelRef, ({
-          width
-        }, el) => {
+        createResizeObserver(panelRef, ({ width }, el) => {
           if (el === panelRef) {
             setPanelWidth(width);
           }
         });
       });
       createEffect(() => {
-        const rootContainer = panelRef.parentElement?.parentElement?.parentElement;
+        const rootContainer =
+          panelRef.parentElement?.parentElement?.parentElement;
         if (!rootContainer) return;
         const currentPosition = props.localStore.position || POSITION;
         const styleProp = getSidedProp("padding", currentPosition);
-        const isVertical = props.localStore.position === "left" || props.localStore.position === "right";
+        const isVertical =
+          props.localStore.position === "left" ||
+          props.localStore.position === "right";
         const previousPaddings = (({
           padding,
           paddingTop,
           paddingBottom,
           paddingLeft,
-          paddingRight
+          paddingRight,
         }) => ({
           padding,
           paddingTop,
           paddingBottom,
           paddingLeft,
-          paddingRight
+          paddingRight,
         }))(rootContainer.style);
-        rootContainer.style[styleProp] = `${isVertical ? props.localStore.width : props.localStore.height}px`;
+        rootContainer.style[styleProp] = `${
+          isVertical ? props.localStore.width : props.localStore.height
+        }px`;
         onCleanup(() => {
-          Object.entries(previousPaddings).forEach(([property, previousValue]) => {
-            rootContainer.style[property] = previousValue;
-          });
+          Object.entries(previousPaddings).forEach(
+            ([property, previousValue]) => {
+              rootContainer.style[property] = previousValue;
+            }
+          );
         });
       });
       const getPanelDynamicStyles = () => {
-        const {
-          colors
-        } = tokens;
-        const t2 = (light, dark) => theme() === "dark" ? dark : light;
+        const { colors } = tokens;
+        const t2 = (light, dark) => (theme() === "dark" ? dark : light);
         if (panelWidth() < secondBreakpoint) {
           return css`
-        flex-direction: column;
-        background-color: ${t2(colors.gray[300], colors.gray[600])};
-      `;
+            flex-direction: column;
+            background-color: ${t2(colors.gray[300], colors.gray[600])};
+          `;
         }
         return css`
-      flex-direction: row;
-      background-color: ${t2(colors.gray[200], colors.darkGray[900])};
-    `;
+          flex-direction: row;
+          background-color: ${t2(colors.gray[200], colors.darkGray[900])};
+        `;
       };
       return (() => {
-        var _el$7 = _tmpl$33(), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;
+        var _el$7 = _tmpl$33(),
+          _el$8 = _el$7.firstChild,
+          _el$9 = _el$8.nextSibling;
         var _ref$3 = panelRef;
-        typeof _ref$3 === "function" ? use(_ref$3, _el$7) : panelRef = _el$7;
+        typeof _ref$3 === "function" ? use(_ref$3, _el$7) : (panelRef = _el$7);
         _el$8.$$mousedown = handleDragStart;
         _el$9.$$click = () => props.setLocalStore("open", "false");
         insert(_el$9, createComponent(ChevronDown, {}));
         insert(_el$7, createComponent(ContentView, props), null);
-        createRenderEffect((_p$) => {
-          var _v$ = clsx(styles().panel, styles()[`panel-position-${position()}`], getPanelDynamicStyles(), {
-            [css`
-            min-width: min-content;
-          `]: panelWidth() < thirdBreakpoint && (position() === "right" || position() === "left")
-          }, "tsqd-main-panel"), _v$2 = position() === "bottom" || position() === "top" ? `${props.localStore.height || DEFAULT_HEIGHT}px` : "auto", _v$3 = position() === "right" || position() === "left" ? `${props.localStore.width || DEFAULT_WIDTH}px` : "auto", _v$4 = clsx(styles().dragHandle, styles()[`dragHandle-position-${position()}`], "tsqd-drag-handle"), _v$5 = clsx(styles().closeBtn, styles()[`closeBtn-position-${position()}`], "tsqd-minimize-btn");
-          _v$ !== _p$.e && className(_el$7, _p$.e = _v$);
-          _v$2 !== _p$.t && ((_p$.t = _v$2) != null ? _el$7.style.setProperty("height", _v$2) : _el$7.style.removeProperty("height"));
-          _v$3 !== _p$.a && ((_p$.a = _v$3) != null ? _el$7.style.setProperty("width", _v$3) : _el$7.style.removeProperty("width"));
-          _v$4 !== _p$.o && className(_el$8, _p$.o = _v$4);
-          _v$5 !== _p$.i && className(_el$9, _p$.i = _v$5);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0,
-          a: void 0,
-          o: void 0,
-          i: void 0
-        });
+        createRenderEffect(
+          (_p$) => {
+            var _v$ = clsx(
+                styles().panel,
+                styles()[`panel-position-${position()}`],
+                getPanelDynamicStyles(),
+                {
+                  [css`
+                    min-width: min-content;
+                  `]:
+                    panelWidth() < thirdBreakpoint &&
+                    (position() === "right" || position() === "left"),
+                },
+                "tsqd-main-panel"
+              ),
+              _v$2 =
+                position() === "bottom" || position() === "top"
+                  ? `${props.localStore.height || DEFAULT_HEIGHT}px`
+                  : "auto",
+              _v$3 =
+                position() === "right" || position() === "left"
+                  ? `${props.localStore.width || DEFAULT_WIDTH}px`
+                  : "auto",
+              _v$4 = clsx(
+                styles().dragHandle,
+                styles()[`dragHandle-position-${position()}`],
+                "tsqd-drag-handle"
+              ),
+              _v$5 = clsx(
+                styles().closeBtn,
+                styles()[`closeBtn-position-${position()}`],
+                "tsqd-minimize-btn"
+              );
+            _v$ !== _p$.e && className(_el$7, (_p$.e = _v$));
+            _v$2 !== _p$.t &&
+              ((_p$.t = _v$2) != null
+                ? _el$7.style.setProperty("height", _v$2)
+                : _el$7.style.removeProperty("height"));
+            _v$3 !== _p$.a &&
+              ((_p$.a = _v$3) != null
+                ? _el$7.style.setProperty("width", _v$3)
+                : _el$7.style.removeProperty("width"));
+            _v$4 !== _p$.o && className(_el$8, (_p$.o = _v$4));
+            _v$5 !== _p$.i && className(_el$9, (_p$.i = _v$5));
+            return _p$;
+          },
+          {
+            e: void 0,
+            t: void 0,
+            a: void 0,
+            o: void 0,
+            i: void 0,
+          }
+        );
         return _el$7;
       })();
     };
@@ -13352,21 +16066,33 @@ var init_Devtools = __esm({
       setupMutationCacheSubscription();
       let containerRef;
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       const pip = usePiPWindow();
       const [selectedView, setSelectedView] = createSignal("queries");
-      const sort = createMemo(() => props.localStore.sort || DEFAULT_SORT_FN_NAME);
-      const sortOrder = createMemo(() => Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER);
-      const mutationSort = createMemo(() => props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME);
-      const mutationSortOrder = createMemo(() => Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER);
+      const sort = createMemo(
+        () => props.localStore.sort || DEFAULT_SORT_FN_NAME
+      );
+      const sortOrder = createMemo(
+        () => Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER
+      );
+      const mutationSort = createMemo(
+        () => props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME
+      );
+      const mutationSortOrder = createMemo(
+        () => Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER
+      );
       const sortFn = createMemo(() => sortFns[sort()]);
       const mutationSortFn = createMemo(() => mutationSortFns[mutationSort()]);
-      const onlineManager = createMemo(() => useQueryDevtoolsContext().onlineManager);
+      const onlineManager = createMemo(
+        () => useQueryDevtoolsContext().onlineManager
+      );
       const query_cache = createMemo(() => {
         return useQueryDevtoolsContext().client.getQueryCache();
       });
@@ -13376,24 +16102,61 @@ var init_Devtools = __esm({
       const queryCount = createSubscribeToQueryCacheBatcher((queryCache) => {
         return queryCache().getAll().length;
       }, false);
-      const queries = createMemo(on(() => [queryCount(), props.localStore.filter, sort(), sortOrder()], () => {
-        const curr = query_cache().getAll();
-        const filtered = props.localStore.filter ? curr.filter((item) => rankItem(item.queryHash, props.localStore.filter || "").passed) : [...curr];
-        const sorted = sortFn() ? filtered.sort((a2, b2) => sortFn()(a2, b2) * sortOrder()) : filtered;
-        return sorted;
-      }));
-      const mutationCount = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        return mutationCache().getAll().length;
-      }, false);
-      const mutations = createMemo(on(() => [mutationCount(), props.localStore.mutationFilter, mutationSort(), mutationSortOrder()], () => {
-        const curr = mutation_cache().getAll();
-        const filtered = props.localStore.mutationFilter ? curr.filter((item) => {
-          const value = `${item.options.mutationKey ? JSON.stringify(item.options.mutationKey) + " - " : ""}${new Date(item.state.submittedAt).toLocaleString()}`;
-          return rankItem(value, props.localStore.mutationFilter || "").passed;
-        }) : [...curr];
-        const sorted = mutationSortFn() ? filtered.sort((a2, b2) => mutationSortFn()(a2, b2) * mutationSortOrder()) : filtered;
-        return sorted;
-      }));
+      const queries = createMemo(
+        on(
+          () => [queryCount(), props.localStore.filter, sort(), sortOrder()],
+          () => {
+            const curr = query_cache().getAll();
+            const filtered = props.localStore.filter
+              ? curr.filter(
+                  (item) =>
+                    rankItem(item.queryHash, props.localStore.filter || "")
+                      .passed
+                )
+              : [...curr];
+            const sorted = sortFn()
+              ? filtered.sort((a2, b2) => sortFn()(a2, b2) * sortOrder())
+              : filtered;
+            return sorted;
+          }
+        )
+      );
+      const mutationCount = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          return mutationCache().getAll().length;
+        },
+        false
+      );
+      const mutations = createMemo(
+        on(
+          () => [
+            mutationCount(),
+            props.localStore.mutationFilter,
+            mutationSort(),
+            mutationSortOrder(),
+          ],
+          () => {
+            const curr = mutation_cache().getAll();
+            const filtered = props.localStore.mutationFilter
+              ? curr.filter((item) => {
+                  const value = `${
+                    item.options.mutationKey
+                      ? JSON.stringify(item.options.mutationKey) + " - "
+                      : ""
+                  }${new Date(item.state.submittedAt).toLocaleString()}`;
+                  return rankItem(value, props.localStore.mutationFilter || "")
+                    .passed;
+                })
+              : [...curr];
+            const sorted = mutationSortFn()
+              ? filtered.sort(
+                  (a2, b2) => mutationSortFn()(a2, b2) * mutationSortOrder()
+                )
+              : filtered;
+            return sorted;
+          }
+        )
+      );
       const setDevtoolsPosition = (pos) => {
         props.setLocalStore("position", pos);
       };
@@ -13402,796 +16165,1496 @@ var init_Devtools = __esm({
         const variable = computedStyle.getPropertyValue("--tsqd-font-size");
         el.style.setProperty("--tsqd-font-size", variable);
       };
-      return [(() => {
-        var _el$0 = _tmpl$192(), _el$1 = _el$0.firstChild, _el$10 = _el$1.firstChild, _el$11 = _el$10.firstChild, _el$12 = _el$11.firstChild, _el$13 = _el$12.nextSibling, _el$14 = _el$13.firstChild, _el$15 = _el$1.nextSibling, _el$16 = _el$15.firstChild, _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild, _el$19 = _el$17.nextSibling, _el$22 = _el$19.nextSibling, _el$25 = _el$16.nextSibling, _el$26 = _el$25.firstChild, _el$27 = _el$26.nextSibling;
-        var _ref$4 = containerRef;
-        typeof _ref$4 === "function" ? use(_ref$4, _el$0) : containerRef = _el$0;
-        _el$11.$$click = () => {
-          if (!pip().pipWindow && !props.showPanelViewOnly) {
-            props.setLocalStore("open", "false");
-            return;
-          }
-          if (props.onClose) {
-            props.onClose();
-          }
-        };
-        insert(_el$13, () => useQueryDevtoolsContext().queryFlavor, _el$14);
-        insert(_el$13, () => useQueryDevtoolsContext().version, null);
-        insert(_el$10, createComponent(radio_group_exports.Root, {
-          get ["class"]() {
-            return clsx(styles().viewToggle);
-          },
-          get value() {
-            return selectedView();
-          },
-          onChange: (value) => {
-            setSelectedView(value);
-            setSelectedQueryHash(null);
-            setSelectedMutationId(null);
-          },
-          get children() {
-            return [createComponent(radio_group_exports.Item, {
-              value: "queries",
-              "class": "tsqd-radio-toggle",
+      return [
+        (() => {
+          var _el$0 = _tmpl$192(),
+            _el$1 = _el$0.firstChild,
+            _el$10 = _el$1.firstChild,
+            _el$11 = _el$10.firstChild,
+            _el$12 = _el$11.firstChild,
+            _el$13 = _el$12.nextSibling,
+            _el$14 = _el$13.firstChild,
+            _el$15 = _el$1.nextSibling,
+            _el$16 = _el$15.firstChild,
+            _el$17 = _el$16.firstChild,
+            _el$18 = _el$17.firstChild,
+            _el$19 = _el$17.nextSibling,
+            _el$22 = _el$19.nextSibling,
+            _el$25 = _el$16.nextSibling,
+            _el$26 = _el$25.firstChild,
+            _el$27 = _el$26.nextSibling;
+          var _ref$4 = containerRef;
+          typeof _ref$4 === "function"
+            ? use(_ref$4, _el$0)
+            : (containerRef = _el$0);
+          _el$11.$$click = () => {
+            if (!pip().pipWindow && !props.showPanelViewOnly) {
+              props.setLocalStore("open", "false");
+              return;
+            }
+            if (props.onClose) {
+              props.onClose();
+            }
+          };
+          insert(_el$13, () => useQueryDevtoolsContext().queryFlavor, _el$14);
+          insert(_el$13, () => useQueryDevtoolsContext().version, null);
+          insert(
+            _el$10,
+            createComponent(radio_group_exports.Root, {
+              get ["class"]() {
+                return clsx(styles().viewToggle);
+              },
+              get value() {
+                return selectedView();
+              },
+              onChange: (value) => {
+                setSelectedView(value);
+                setSelectedQueryHash(null);
+                setSelectedMutationId(null);
+              },
               get children() {
-                return [createComponent(radio_group_exports.ItemInput, {}), createComponent(radio_group_exports.ItemControl, {
-                  get children() {
-                    return createComponent(radio_group_exports.ItemIndicator, {});
-                  }
-                }), createComponent(radio_group_exports.ItemLabel, {
-                  title: "Toggle Queries View",
-                  children: "Queries"
-                })];
-              }
-            }), createComponent(radio_group_exports.Item, {
-              value: "mutations",
-              "class": "tsqd-radio-toggle",
+                return [
+                  createComponent(radio_group_exports.Item, {
+                    value: "queries",
+                    class: "tsqd-radio-toggle",
+                    get children() {
+                      return [
+                        createComponent(radio_group_exports.ItemInput, {}),
+                        createComponent(radio_group_exports.ItemControl, {
+                          get children() {
+                            return createComponent(
+                              radio_group_exports.ItemIndicator,
+                              {}
+                            );
+                          },
+                        }),
+                        createComponent(radio_group_exports.ItemLabel, {
+                          title: "Toggle Queries View",
+                          children: "Queries",
+                        }),
+                      ];
+                    },
+                  }),
+                  createComponent(radio_group_exports.Item, {
+                    value: "mutations",
+                    class: "tsqd-radio-toggle",
+                    get children() {
+                      return [
+                        createComponent(radio_group_exports.ItemInput, {}),
+                        createComponent(radio_group_exports.ItemControl, {
+                          get children() {
+                            return createComponent(
+                              radio_group_exports.ItemIndicator,
+                              {}
+                            );
+                          },
+                        }),
+                        createComponent(radio_group_exports.ItemLabel, {
+                          title: "Toggle Mutations View",
+                          children: "Mutations",
+                        }),
+                      ];
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$1,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
+              },
               get children() {
-                return [createComponent(radio_group_exports.ItemInput, {}), createComponent(radio_group_exports.ItemControl, {
-                  get children() {
-                    return createComponent(radio_group_exports.ItemIndicator, {});
-                  }
-                }), createComponent(radio_group_exports.ItemLabel, {
-                  title: "Toggle Mutations View",
-                  children: "Mutations"
-                })];
-              }
-            })];
-          }
-        }), null);
-        insert(_el$1, createComponent(Show, {
-          get when() {
-            return selectedView() === "queries";
-          },
-          get children() {
-            return createComponent(QueryStatusCount, {});
-          }
-        }), null);
-        insert(_el$1, createComponent(Show, {
-          get when() {
-            return selectedView() === "mutations";
-          },
-          get children() {
-            return createComponent(MutationStatusCount, {});
-          }
-        }), null);
-        insert(_el$17, createComponent(Search, {}), _el$18);
-        _el$18.$$input = (e2) => {
-          if (selectedView() === "queries") {
-            props.setLocalStore("filter", e2.currentTarget.value);
-          } else {
-            props.setLocalStore("mutationFilter", e2.currentTarget.value);
-          }
-        };
-        insert(_el$19, createComponent(Show, {
-          get when() {
-            return selectedView() === "queries";
-          },
-          get children() {
-            var _el$20 = _tmpl$43();
-            _el$20.addEventListener("change", (e2) => {
-              props.setLocalStore("sort", e2.currentTarget.value);
-            });
-            insert(_el$20, () => Object.keys(sortFns).map((key) => (() => {
-              var _el$43 = _tmpl$202(); _el$43.firstChild;
-              _el$43.value = key;
-              insert(_el$43, key, null);
-              return _el$43;
-            })()));
-            createRenderEffect(() => _el$20.value = sort());
-            return _el$20;
-          }
-        }), null);
-        insert(_el$19, createComponent(Show, {
-          get when() {
-            return selectedView() === "mutations";
-          },
-          get children() {
-            var _el$21 = _tmpl$53();
-            _el$21.addEventListener("change", (e2) => {
-              props.setLocalStore("mutationSort", e2.currentTarget.value);
-            });
-            insert(_el$21, () => Object.keys(mutationSortFns).map((key) => (() => {
-              var _el$45 = _tmpl$202(); _el$45.firstChild;
-              _el$45.value = key;
-              insert(_el$45, key, null);
-              return _el$45;
-            })()));
-            createRenderEffect(() => _el$21.value = mutationSort());
-            return _el$21;
-          }
-        }), null);
-        insert(_el$19, createComponent(ChevronDown, {}), null);
-        _el$22.$$click = () => {
-          if (selectedView() === "queries") {
-            props.setLocalStore("sortOrder", String(sortOrder() * -1));
-          } else {
-            props.setLocalStore("mutationSortOrder", String(mutationSortOrder() * -1));
-          }
-        };
-        insert(_el$22, createComponent(Show, {
-          get when() {
-            return (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === 1;
-          },
-          get children() {
-            return [_tmpl$63(), createComponent(ArrowUp, {})];
-          }
-        }), null);
-        insert(_el$22, createComponent(Show, {
-          get when() {
-            return (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1;
-          },
-          get children() {
-            return [_tmpl$73(), createComponent(ArrowDown, {})];
-          }
-        }), null);
-        _el$26.$$click = () => {
-          if (selectedView() === "queries") {
-            sendDevToolsEvent({
-              type: "CLEAR_QUERY_CACHE"
-            });
-            query_cache().clear();
-          } else {
-            sendDevToolsEvent({
-              type: "CLEAR_MUTATION_CACHE"
-            });
-            mutation_cache().clear();
-          }
-        };
-        insert(_el$26, createComponent(Trash, {}));
-        _el$27.$$click = () => {
-          onlineManager().setOnline(!onlineManager().isOnline());
-        };
-        insert(_el$27, (() => {
-          var _c$ = createMemo(() => !!offline());
-          return () => _c$() ? createComponent(Offline, {}) : createComponent(Wifi, {});
-        })());
-        insert(_el$25, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!!pip().pipWindow)() && !pip().disabled;
-          },
-          get children() {
-            var _el$28 = _tmpl$83();
-            _el$28.$$click = () => {
-              pip().requestPipWindow(Number(window.innerWidth), Number(props.localStore.height ?? 500));
-            };
-            insert(_el$28, createComponent(PiPIcon, {}));
-            createRenderEffect(() => className(_el$28, clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-open-pip")));
-            return _el$28;
-          }
-        }), null);
-        insert(_el$25, createComponent(dropdown_menu_exports.Root, {
-          gutter: 4,
-          get children() {
-            return [createComponent(dropdown_menu_exports.Trigger, {
-              get ["class"]() {
-                return clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-settings");
+                return createComponent(QueryStatusCount, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$1,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
               },
               get children() {
-                return createComponent(Settings, {});
-              }
-            }), createComponent(dropdown_menu_exports.Portal, {
-              ref: (el) => setComputedVariables(el),
-              get mount() {
-                return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
+                return createComponent(MutationStatusCount, {});
+              },
+            }),
+            null
+          );
+          insert(_el$17, createComponent(Search, {}), _el$18);
+          _el$18.$$input = (e2) => {
+            if (selectedView() === "queries") {
+              props.setLocalStore("filter", e2.currentTarget.value);
+            } else {
+              props.setLocalStore("mutationFilter", e2.currentTarget.value);
+            }
+          };
+          insert(
+            _el$19,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
               },
               get children() {
-                return createComponent(dropdown_menu_exports.Content, {
-                  get ["class"]() {
-                    return clsx(styles().settingsMenu, "tsqd-settings-menu");
-                  },
-                  get children() {
-                    return [(() => {
-                      var _el$29 = _tmpl$93();
-                      createRenderEffect(() => className(_el$29, clsx(styles().settingsMenuHeader, "tsqd-settings-menu-header")));
-                      return _el$29;
-                    })(), createComponent(Show, {
-                      get when() {
-                        return !props.showPanelViewOnly;
-                      },
-                      get children() {
-                        return createComponent(dropdown_menu_exports.Sub, {
-                          overlap: true,
-                          gutter: 8,
-                          shift: -4,
-                          get children() {
-                            return [createComponent(dropdown_menu_exports.SubTrigger, {
-                              get ["class"]() {
-                                return clsx(styles().settingsSubTrigger, "tsqd-settings-menu-sub-trigger", "tsqd-settings-menu-sub-trigger-position");
+                var _el$20 = _tmpl$43();
+                _el$20.addEventListener("change", (e2) => {
+                  props.setLocalStore("sort", e2.currentTarget.value);
+                });
+                insert(_el$20, () =>
+                  Object.keys(sortFns).map((key) =>
+                    (() => {
+                      var _el$43 = _tmpl$202();
+                      _el$43.firstChild;
+                      _el$43.value = key;
+                      insert(_el$43, key, null);
+                      return _el$43;
+                    })()
+                  )
+                );
+                createRenderEffect(() => (_el$20.value = sort()));
+                return _el$20;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$19,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
+              },
+              get children() {
+                var _el$21 = _tmpl$53();
+                _el$21.addEventListener("change", (e2) => {
+                  props.setLocalStore("mutationSort", e2.currentTarget.value);
+                });
+                insert(_el$21, () =>
+                  Object.keys(mutationSortFns).map((key) =>
+                    (() => {
+                      var _el$45 = _tmpl$202();
+                      _el$45.firstChild;
+                      _el$45.value = key;
+                      insert(_el$45, key, null);
+                      return _el$45;
+                    })()
+                  )
+                );
+                createRenderEffect(() => (_el$21.value = mutationSort()));
+                return _el$21;
+              },
+            }),
+            null
+          );
+          insert(_el$19, createComponent(ChevronDown, {}), null);
+          _el$22.$$click = () => {
+            if (selectedView() === "queries") {
+              props.setLocalStore("sortOrder", String(sortOrder() * -1));
+            } else {
+              props.setLocalStore(
+                "mutationSortOrder",
+                String(mutationSortOrder() * -1)
+              );
+            }
+          };
+          insert(
+            _el$22,
+            createComponent(Show, {
+              get when() {
+                return (
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === 1
+                );
+              },
+              get children() {
+                return [_tmpl$63(), createComponent(ArrowUp, {})];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$22,
+            createComponent(Show, {
+              get when() {
+                return (
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1
+                );
+              },
+              get children() {
+                return [_tmpl$73(), createComponent(ArrowDown, {})];
+              },
+            }),
+            null
+          );
+          _el$26.$$click = () => {
+            if (selectedView() === "queries") {
+              sendDevToolsEvent({
+                type: "CLEAR_QUERY_CACHE",
+              });
+              query_cache().clear();
+            } else {
+              sendDevToolsEvent({
+                type: "CLEAR_MUTATION_CACHE",
+              });
+              mutation_cache().clear();
+            }
+          };
+          insert(_el$26, createComponent(Trash, {}));
+          _el$27.$$click = () => {
+            onlineManager().setOnline(!onlineManager().isOnline());
+          };
+          insert(
+            _el$27,
+            (() => {
+              var _c$ = createMemo(() => !!offline());
+              return () =>
+                _c$()
+                  ? createComponent(Offline, {})
+                  : createComponent(Wifi, {});
+            })()
+          );
+          insert(
+            _el$25,
+            createComponent(Show, {
+              get when() {
+                return (
+                  createMemo(() => !!!pip().pipWindow)() && !pip().disabled
+                );
+              },
+              get children() {
+                var _el$28 = _tmpl$83();
+                _el$28.$$click = () => {
+                  pip().requestPipWindow(
+                    Number(window.innerWidth),
+                    Number(props.localStore.height ?? 500)
+                  );
+                };
+                insert(_el$28, createComponent(PiPIcon, {}));
+                createRenderEffect(() =>
+                  className(
+                    _el$28,
+                    clsx(
+                      styles().actionsBtn,
+                      "tsqd-actions-btn",
+                      "tsqd-action-open-pip"
+                    )
+                  )
+                );
+                return _el$28;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$25,
+            createComponent(dropdown_menu_exports.Root, {
+              gutter: 4,
+              get children() {
+                return [
+                  createComponent(dropdown_menu_exports.Trigger, {
+                    get ["class"]() {
+                      return clsx(
+                        styles().actionsBtn,
+                        "tsqd-actions-btn",
+                        "tsqd-action-settings"
+                      );
+                    },
+                    get children() {
+                      return createComponent(Settings, {});
+                    },
+                  }),
+                  createComponent(dropdown_menu_exports.Portal, {
+                    ref: (el) => setComputedVariables(el),
+                    get mount() {
+                      return createMemo(() => !!pip().pipWindow)()
+                        ? pip().pipWindow.document.body
+                        : document.body;
+                    },
+                    get children() {
+                      return createComponent(dropdown_menu_exports.Content, {
+                        get ["class"]() {
+                          return clsx(
+                            styles().settingsMenu,
+                            "tsqd-settings-menu"
+                          );
+                        },
+                        get children() {
+                          return [
+                            (() => {
+                              var _el$29 = _tmpl$93();
+                              createRenderEffect(() =>
+                                className(
+                                  _el$29,
+                                  clsx(
+                                    styles().settingsMenuHeader,
+                                    "tsqd-settings-menu-header"
+                                  )
+                                )
+                              );
+                              return _el$29;
+                            })(),
+                            createComponent(Show, {
+                              get when() {
+                                return !props.showPanelViewOnly;
                               },
                               get children() {
-                                return [_tmpl$03(), createComponent(ChevronDown, {})];
-                              }
-                            }), createComponent(dropdown_menu_exports.Portal, {
-                              ref: (el) => setComputedVariables(el),
-                              get mount() {
-                                return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
+                                return createComponent(
+                                  dropdown_menu_exports.Sub,
+                                  {
+                                    overlap: true,
+                                    gutter: 8,
+                                    shift: -4,
+                                    get children() {
+                                      return [
+                                        createComponent(
+                                          dropdown_menu_exports.SubTrigger,
+                                          {
+                                            get ["class"]() {
+                                              return clsx(
+                                                styles().settingsSubTrigger,
+                                                "tsqd-settings-menu-sub-trigger",
+                                                "tsqd-settings-menu-sub-trigger-position"
+                                              );
+                                            },
+                                            get children() {
+                                              return [
+                                                _tmpl$03(),
+                                                createComponent(
+                                                  ChevronDown,
+                                                  {}
+                                                ),
+                                              ];
+                                            },
+                                          }
+                                        ),
+                                        createComponent(
+                                          dropdown_menu_exports.Portal,
+                                          {
+                                            ref: (el) =>
+                                              setComputedVariables(el),
+                                            get mount() {
+                                              return createMemo(
+                                                () => !!pip().pipWindow
+                                              )()
+                                                ? pip().pipWindow.document.body
+                                                : document.body;
+                                            },
+                                            get children() {
+                                              return createComponent(
+                                                dropdown_menu_exports.SubContent,
+                                                {
+                                                  get ["class"]() {
+                                                    return clsx(
+                                                      styles().settingsMenu,
+                                                      "tsqd-settings-submenu"
+                                                    );
+                                                  },
+                                                  get children() {
+                                                    return [
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "top"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-top"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$111(),
+                                                              createComponent(
+                                                                ArrowUp,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "bottom"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-bottom"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$103(),
+                                                              createComponent(
+                                                                ArrowDown,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "left"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-left"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$112(),
+                                                              createComponent(
+                                                                ArrowLeft,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                      createComponent(
+                                                        dropdown_menu_exports.Item,
+                                                        {
+                                                          onSelect: () => {
+                                                            setDevtoolsPosition(
+                                                              "right"
+                                                            );
+                                                          },
+                                                          as: "button",
+                                                          get ["class"]() {
+                                                            return clsx(
+                                                              styles()
+                                                                .settingsSubButton,
+                                                              "tsqd-settings-menu-position-btn",
+                                                              "tsqd-settings-menu-position-btn-right"
+                                                            );
+                                                          },
+                                                          get children() {
+                                                            return [
+                                                              _tmpl$122(),
+                                                              createComponent(
+                                                                ArrowRight,
+                                                                {}
+                                                              ),
+                                                            ];
+                                                          },
+                                                        }
+                                                      ),
+                                                    ];
+                                                  },
+                                                }
+                                              );
+                                            },
+                                          }
+                                        ),
+                                      ];
+                                    },
+                                  }
+                                );
                               },
+                            }),
+                            createComponent(dropdown_menu_exports.Sub, {
+                              overlap: true,
+                              gutter: 8,
+                              shift: -4,
                               get children() {
-                                return createComponent(dropdown_menu_exports.SubContent, {
-                                  get ["class"]() {
-                                    return clsx(styles().settingsMenu, "tsqd-settings-submenu");
-                                  },
-                                  get children() {
-                                    return [createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("top");
-                                      },
-                                      as: "button",
+                                return [
+                                  createComponent(
+                                    dropdown_menu_exports.SubTrigger,
+                                    {
                                       get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-top");
+                                        return clsx(
+                                          styles().settingsSubTrigger,
+                                          "tsqd-settings-menu-sub-trigger",
+                                          "tsqd-settings-menu-sub-trigger-position"
+                                        );
                                       },
                                       get children() {
-                                        return [_tmpl$111(), createComponent(ArrowUp, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("bottom");
+                                        return [
+                                          _tmpl$132(),
+                                          createComponent(ChevronDown, {}),
+                                        ];
                                       },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-bottom");
-                                      },
-                                      get children() {
-                                        return [_tmpl$103(), createComponent(ArrowDown, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("left");
-                                      },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-left");
+                                    }
+                                  ),
+                                  createComponent(
+                                    dropdown_menu_exports.Portal,
+                                    {
+                                      ref: (el) => setComputedVariables(el),
+                                      get mount() {
+                                        return createMemo(
+                                          () => !!pip().pipWindow
+                                        )()
+                                          ? pip().pipWindow.document.body
+                                          : document.body;
                                       },
                                       get children() {
-                                        return [_tmpl$112(), createComponent(ArrowLeft, {})];
-                                      }
-                                    }), createComponent(dropdown_menu_exports.Item, {
-                                      onSelect: () => {
-                                        setDevtoolsPosition("right");
-                                      },
-                                      as: "button",
-                                      get ["class"]() {
-                                        return clsx(styles().settingsSubButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-right");
+                                        return createComponent(
+                                          dropdown_menu_exports.SubContent,
+                                          {
+                                            get ["class"]() {
+                                              return clsx(
+                                                styles().settingsMenu,
+                                                "tsqd-settings-submenu"
+                                              );
+                                            },
+                                            get children() {
+                                              return [
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "light"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "light" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-top"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$142(),
+                                                        createComponent(
+                                                          Sun,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "dark"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "dark" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-bottom"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$152(),
+                                                        createComponent(
+                                                          Moon,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                                createComponent(
+                                                  dropdown_menu_exports.Item,
+                                                  {
+                                                    onSelect: () => {
+                                                      props.setLocalStore(
+                                                        "theme_preference",
+                                                        "system"
+                                                      );
+                                                    },
+                                                    as: "button",
+                                                    get ["class"]() {
+                                                      return clsx(
+                                                        styles()
+                                                          .settingsSubButton,
+                                                        props.localStore
+                                                          .theme_preference ===
+                                                          "system" &&
+                                                          styles()
+                                                            .themeSelectedButton,
+                                                        "tsqd-settings-menu-position-btn",
+                                                        "tsqd-settings-menu-position-btn-left"
+                                                      );
+                                                    },
+                                                    get children() {
+                                                      return [
+                                                        _tmpl$162(),
+                                                        createComponent(
+                                                          Monitor,
+                                                          {}
+                                                        ),
+                                                      ];
+                                                    },
+                                                  }
+                                                ),
+                                              ];
+                                            },
+                                          }
+                                        );
                                       },
-                                      get children() {
-                                        return [_tmpl$122(), createComponent(ArrowRight, {})];
-                                      }
-                                    })];
-                                  }
-                                });
-                              }
-                            })];
-                          }
-                        });
-                      }
-                    }), createComponent(dropdown_menu_exports.Sub, {
-                      overlap: true,
-                      gutter: 8,
-                      shift: -4,
-                      get children() {
-                        return [createComponent(dropdown_menu_exports.SubTrigger, {
-                          get ["class"]() {
-                            return clsx(styles().settingsSubTrigger, "tsqd-settings-menu-sub-trigger", "tsqd-settings-menu-sub-trigger-position");
-                          },
-                          get children() {
-                            return [_tmpl$132(), createComponent(ChevronDown, {})];
-                          }
-                        }), createComponent(dropdown_menu_exports.Portal, {
-                          ref: (el) => setComputedVariables(el),
-                          get mount() {
-                            return createMemo(() => !!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;
-                          },
-                          get children() {
-                            return createComponent(dropdown_menu_exports.SubContent, {
-                              get ["class"]() {
-                                return clsx(styles().settingsMenu, "tsqd-settings-submenu");
+                                    }
+                                  ),
+                                ];
                               },
-                              get children() {
-                                return [createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "light");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "light" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-top");
-                                  },
-                                  get children() {
-                                    return [_tmpl$142(), createComponent(Sun, {})];
-                                  }
-                                }), createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "dark");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "dark" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-bottom");
-                                  },
-                                  get children() {
-                                    return [_tmpl$152(), createComponent(Moon, {})];
-                                  }
-                                }), createComponent(dropdown_menu_exports.Item, {
-                                  onSelect: () => {
-                                    props.setLocalStore("theme_preference", "system");
-                                  },
-                                  as: "button",
-                                  get ["class"]() {
-                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === "system" && styles().themeSelectedButton, "tsqd-settings-menu-position-btn", "tsqd-settings-menu-position-btn-left");
-                                  },
-                                  get children() {
-                                    return [_tmpl$162(), createComponent(Monitor, {})];
-                                  }
-                                })];
-                              }
-                            });
-                          }
-                        })];
-                      }
-                    })];
-                  }
-                });
-              }
-            })];
-          }
-        }), null);
-        insert(_el$0, createComponent(Show, {
+                            }),
+                          ];
+                        },
+                      });
+                    },
+                  }),
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$0,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "queries";
+              },
+              get children() {
+                var _el$39 = _tmpl$172(),
+                  _el$40 = _el$39.firstChild;
+                insert(
+                  _el$40,
+                  createComponent(Key, {
+                    by: (q) => q.queryHash,
+                    get each() {
+                      return queries();
+                    },
+                    children: (query) =>
+                      createComponent(QueryRow, {
+                        get query() {
+                          return query();
+                        },
+                      }),
+                  })
+                );
+                createRenderEffect(() =>
+                  className(
+                    _el$39,
+                    clsx(
+                      styles().overflowQueryContainer,
+                      "tsqd-queries-overflow-container"
+                    )
+                  )
+                );
+                return _el$39;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$0,
+            createComponent(Show, {
+              get when() {
+                return selectedView() === "mutations";
+              },
+              get children() {
+                var _el$41 = _tmpl$182(),
+                  _el$42 = _el$41.firstChild;
+                insert(
+                  _el$42,
+                  createComponent(Key, {
+                    by: (m) => m.mutationId,
+                    get each() {
+                      return mutations();
+                    },
+                    children: (mutation) =>
+                      createComponent(MutationRow, {
+                        get mutation() {
+                          return mutation();
+                        },
+                      }),
+                  })
+                );
+                createRenderEffect(() =>
+                  className(
+                    _el$41,
+                    clsx(
+                      styles().overflowQueryContainer,
+                      "tsqd-mutations-overflow-container"
+                    )
+                  )
+                );
+                return _el$41;
+              },
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$6 = clsx(
+                  styles().queriesContainer,
+                  panelWidth() < secondBreakpoint &&
+                    (selectedQueryHash() || selectedMutationId()) &&
+                    css`
+                      height: 50%;
+                      max-height: 50%;
+                    `,
+                  panelWidth() < secondBreakpoint &&
+                    !(selectedQueryHash() || selectedMutationId()) &&
+                    css`
+                      height: 100%;
+                      max-height: 100%;
+                    `,
+                  "tsqd-queries-container"
+                ),
+                _v$7 = clsx(styles().row, "tsqd-header"),
+                _v$8 = styles().logoAndToggleContainer,
+                _v$9 = clsx(styles().logo, "tsqd-text-logo-container"),
+                _v$0 = clsx(styles().tanstackLogo, "tsqd-text-logo-tanstack"),
+                _v$1 = clsx(
+                  styles().queryFlavorLogo,
+                  "tsqd-text-logo-query-flavor"
+                ),
+                _v$10 = clsx(styles().row, "tsqd-filters-actions-container"),
+                _v$11 = clsx(
+                  styles().filtersContainer,
+                  "tsqd-filters-container"
+                ),
+                _v$12 = clsx(
+                  styles().filterInput,
+                  "tsqd-query-filter-textfield-container"
+                ),
+                _v$13 = clsx("tsqd-query-filter-textfield"),
+                _v$14 = clsx(
+                  styles().filterSelect,
+                  "tsqd-query-filter-sort-container"
+                ),
+                _v$15 = `Sort order ${
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1
+                    ? "descending"
+                    : "ascending"
+                }`,
+                _v$16 =
+                  (selectedView() === "queries"
+                    ? sortOrder()
+                    : mutationSortOrder()) === -1,
+                _v$17 = clsx(
+                  styles().actionsContainer,
+                  "tsqd-actions-container"
+                ),
+                _v$18 = clsx(
+                  styles().actionsBtn,
+                  "tsqd-actions-btn",
+                  "tsqd-action-clear-cache"
+                ),
+                _v$19 = `Clear ${selectedView()} cache`,
+                _v$20 = clsx(
+                  styles().actionsBtn,
+                  offline() && styles().actionsBtnOffline,
+                  "tsqd-actions-btn",
+                  "tsqd-action-mock-offline-behavior"
+                ),
+                _v$21 = `${
+                  offline()
+                    ? "Unset offline mocking behavior"
+                    : "Mock offline behavior"
+                }`,
+                _v$22 = offline(),
+                _v$23 = `${
+                  offline()
+                    ? "Unset offline mocking behavior"
+                    : "Mock offline behavior"
+                }`;
+              _v$6 !== _p$.e && className(_el$0, (_p$.e = _v$6));
+              _v$7 !== _p$.t && className(_el$1, (_p$.t = _v$7));
+              _v$8 !== _p$.a && className(_el$10, (_p$.a = _v$8));
+              _v$9 !== _p$.o && className(_el$11, (_p$.o = _v$9));
+              _v$0 !== _p$.i && className(_el$12, (_p$.i = _v$0));
+              _v$1 !== _p$.n && className(_el$13, (_p$.n = _v$1));
+              _v$10 !== _p$.s && className(_el$15, (_p$.s = _v$10));
+              _v$11 !== _p$.h && className(_el$16, (_p$.h = _v$11));
+              _v$12 !== _p$.r && className(_el$17, (_p$.r = _v$12));
+              _v$13 !== _p$.d && className(_el$18, (_p$.d = _v$13));
+              _v$14 !== _p$.l && className(_el$19, (_p$.l = _v$14));
+              _v$15 !== _p$.u &&
+                setAttribute(_el$22, "aria-label", (_p$.u = _v$15));
+              _v$16 !== _p$.c &&
+                setAttribute(_el$22, "aria-pressed", (_p$.c = _v$16));
+              _v$17 !== _p$.w && className(_el$25, (_p$.w = _v$17));
+              _v$18 !== _p$.m && className(_el$26, (_p$.m = _v$18));
+              _v$19 !== _p$.f && setAttribute(_el$26, "title", (_p$.f = _v$19));
+              _v$20 !== _p$.y && className(_el$27, (_p$.y = _v$20));
+              _v$21 !== _p$.g &&
+                setAttribute(_el$27, "aria-label", (_p$.g = _v$21));
+              _v$22 !== _p$.p &&
+                setAttribute(_el$27, "aria-pressed", (_p$.p = _v$22));
+              _v$23 !== _p$.b && setAttribute(_el$27, "title", (_p$.b = _v$23));
+              return _p$;
+            },
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
+              c: void 0,
+              w: void 0,
+              m: void 0,
+              f: void 0,
+              y: void 0,
+              g: void 0,
+              p: void 0,
+              b: void 0,
+            }
+          );
+          createRenderEffect(
+            () =>
+              (_el$18.value =
+                selectedView() === "queries"
+                  ? props.localStore.filter || ""
+                  : props.localStore.mutationFilter || "")
+          );
+          return _el$0;
+        })(),
+        createComponent(Show, {
           get when() {
-            return selectedView() === "queries";
+            return (
+              createMemo(() => selectedView() === "queries")() &&
+              selectedQueryHash()
+            );
           },
           get children() {
-            var _el$39 = _tmpl$172(), _el$40 = _el$39.firstChild;
-            insert(_el$40, createComponent(Key, {
-              by: (q) => q.queryHash,
-              get each() {
-                return queries();
-              },
-              children: (query) => createComponent(QueryRow, {
-                get query() {
-                  return query();
-                }
-              })
-            }));
-            createRenderEffect(() => className(_el$39, clsx(styles().overflowQueryContainer, "tsqd-queries-overflow-container")));
-            return _el$39;
-          }
-        }), null);
-        insert(_el$0, createComponent(Show, {
+            return createComponent(QueryDetails, {});
+          },
+        }),
+        createComponent(Show, {
           get when() {
-            return selectedView() === "mutations";
+            return (
+              createMemo(() => selectedView() === "mutations")() &&
+              selectedMutationId()
+            );
           },
           get children() {
-            var _el$41 = _tmpl$182(), _el$42 = _el$41.firstChild;
-            insert(_el$42, createComponent(Key, {
-              by: (m) => m.mutationId,
-              get each() {
-                return mutations();
-              },
-              children: (mutation) => createComponent(MutationRow, {
-                get mutation() {
-                  return mutation();
-                }
-              })
-            }));
-            createRenderEffect(() => className(_el$41, clsx(styles().overflowQueryContainer, "tsqd-mutations-overflow-container")));
-            return _el$41;
-          }
-        }), null);
-        createRenderEffect((_p$) => {
-          var _v$6 = clsx(styles().queriesContainer, panelWidth() < secondBreakpoint && (selectedQueryHash() || selectedMutationId()) && css`
-              height: 50%;
-              max-height: 50%;
-            `, panelWidth() < secondBreakpoint && !(selectedQueryHash() || selectedMutationId()) && css`
-              height: 100%;
-              max-height: 100%;
-            `, "tsqd-queries-container"), _v$7 = clsx(styles().row, "tsqd-header"), _v$8 = styles().logoAndToggleContainer, _v$9 = clsx(styles().logo, "tsqd-text-logo-container"), _v$0 = clsx(styles().tanstackLogo, "tsqd-text-logo-tanstack"), _v$1 = clsx(styles().queryFlavorLogo, "tsqd-text-logo-query-flavor"), _v$10 = clsx(styles().row, "tsqd-filters-actions-container"), _v$11 = clsx(styles().filtersContainer, "tsqd-filters-container"), _v$12 = clsx(styles().filterInput, "tsqd-query-filter-textfield-container"), _v$13 = clsx("tsqd-query-filter-textfield"), _v$14 = clsx(styles().filterSelect, "tsqd-query-filter-sort-container"), _v$15 = `Sort order ${(selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1 ? "descending" : "ascending"}`, _v$16 = (selectedView() === "queries" ? sortOrder() : mutationSortOrder()) === -1, _v$17 = clsx(styles().actionsContainer, "tsqd-actions-container"), _v$18 = clsx(styles().actionsBtn, "tsqd-actions-btn", "tsqd-action-clear-cache"), _v$19 = `Clear ${selectedView()} cache`, _v$20 = clsx(styles().actionsBtn, offline() && styles().actionsBtnOffline, "tsqd-actions-btn", "tsqd-action-mock-offline-behavior"), _v$21 = `${offline() ? "Unset offline mocking behavior" : "Mock offline behavior"}`, _v$22 = offline(), _v$23 = `${offline() ? "Unset offline mocking behavior" : "Mock offline behavior"}`;
-          _v$6 !== _p$.e && className(_el$0, _p$.e = _v$6);
-          _v$7 !== _p$.t && className(_el$1, _p$.t = _v$7);
-          _v$8 !== _p$.a && className(_el$10, _p$.a = _v$8);
-          _v$9 !== _p$.o && className(_el$11, _p$.o = _v$9);
-          _v$0 !== _p$.i && className(_el$12, _p$.i = _v$0);
-          _v$1 !== _p$.n && className(_el$13, _p$.n = _v$1);
-          _v$10 !== _p$.s && className(_el$15, _p$.s = _v$10);
-          _v$11 !== _p$.h && className(_el$16, _p$.h = _v$11);
-          _v$12 !== _p$.r && className(_el$17, _p$.r = _v$12);
-          _v$13 !== _p$.d && className(_el$18, _p$.d = _v$13);
-          _v$14 !== _p$.l && className(_el$19, _p$.l = _v$14);
-          _v$15 !== _p$.u && setAttribute(_el$22, "aria-label", _p$.u = _v$15);
-          _v$16 !== _p$.c && setAttribute(_el$22, "aria-pressed", _p$.c = _v$16);
-          _v$17 !== _p$.w && className(_el$25, _p$.w = _v$17);
-          _v$18 !== _p$.m && className(_el$26, _p$.m = _v$18);
-          _v$19 !== _p$.f && setAttribute(_el$26, "title", _p$.f = _v$19);
-          _v$20 !== _p$.y && className(_el$27, _p$.y = _v$20);
-          _v$21 !== _p$.g && setAttribute(_el$27, "aria-label", _p$.g = _v$21);
-          _v$22 !== _p$.p && setAttribute(_el$27, "aria-pressed", _p$.p = _v$22);
-          _v$23 !== _p$.b && setAttribute(_el$27, "title", _p$.b = _v$23);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0,
-          a: void 0,
-          o: void 0,
-          i: void 0,
-          n: void 0,
-          s: void 0,
-          h: void 0,
-          r: void 0,
-          d: void 0,
-          l: void 0,
-          u: void 0,
-          c: void 0,
-          w: void 0,
-          m: void 0,
-          f: void 0,
-          y: void 0,
-          g: void 0,
-          p: void 0,
-          b: void 0
-        });
-        createRenderEffect(() => _el$18.value = selectedView() === "queries" ? props.localStore.filter || "" : props.localStore.mutationFilter || "");
-        return _el$0;
-      })(), createComponent(Show, {
-        get when() {
-          return createMemo(() => selectedView() === "queries")() && selectedQueryHash();
-        },
-        get children() {
-          return createComponent(QueryDetails, {});
-        }
-      }), createComponent(Show, {
-        get when() {
-          return createMemo(() => selectedView() === "mutations")() && selectedMutationId();
-        },
-        get children() {
-          return createComponent(MutationDetails, {});
-        }
-      })];
+            return createComponent(MutationDetails, {});
+          },
+        }),
+      ];
     };
     QueryRow = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const queryState = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.state, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isDisabled = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isDisabled() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isStatic = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isStatic() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const isStale = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.isStale() ?? false, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const observers = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().find({
-        queryKey: props.query.queryKey
-      })?.getObserversCount() ?? 0, true, (e2) => e2.query.queryHash === props.query.queryHash);
-      const color = createMemo(() => getQueryStatusColor({
-        queryState: queryState(),
-        observerCount: observers(),
-        isStale: isStale()
-      }));
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const queryState = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache().find({
+            queryKey: props.query.queryKey,
+          })?.state,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isDisabled = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isDisabled() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isStatic = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isStatic() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const isStale = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.isStale() ?? false,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const observers = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .find({
+              queryKey: props.query.queryKey,
+            })
+            ?.getObserversCount() ?? 0,
+        true,
+        (e2) => e2.query.queryHash === props.query.queryHash
+      );
+      const color = createMemo(() =>
+        getQueryStatusColor({
+          queryState: queryState(),
+          observerCount: observers(),
+          isStale: isStale(),
+        })
+      );
       const getObserverCountColorStyles = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][200] + alpha[80], colors[color()][900])};
-      color: ${t2(colors[color()][800], colors[color()][300])};
-    `;
+          background-color: ${t2(
+            colors[color()][200] + alpha[80],
+            colors[color()][900]
+          )};
+          color: ${t2(colors[color()][800], colors[color()][300])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return queryState();
         },
         get children() {
-          var _el$47 = _tmpl$232(), _el$48 = _el$47.firstChild, _el$49 = _el$48.nextSibling;
-          _el$47.$$click = () => setSelectedQueryHash(props.query.queryHash === selectedQueryHash() ? null : props.query.queryHash);
+          var _el$47 = _tmpl$232(),
+            _el$48 = _el$47.firstChild,
+            _el$49 = _el$48.nextSibling;
+          _el$47.$$click = () =>
+            setSelectedQueryHash(
+              props.query.queryHash === selectedQueryHash()
+                ? null
+                : props.query.queryHash
+            );
           insert(_el$48, observers);
           insert(_el$49, () => props.query.queryHash);
-          insert(_el$47, createComponent(Show, {
-            get when() {
-              return isDisabled();
-            },
-            get children() {
-              return _tmpl$212();
-            }
-          }), null);
-          insert(_el$47, createComponent(Show, {
-            get when() {
-              return isStatic();
+          insert(
+            _el$47,
+            createComponent(Show, {
+              get when() {
+                return isDisabled();
+              },
+              get children() {
+                return _tmpl$212();
+              },
+            }),
+            null
+          );
+          insert(
+            _el$47,
+            createComponent(Show, {
+              get when() {
+                return isStatic();
+              },
+              get children() {
+                return _tmpl$222();
+              },
+            }),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$24 = clsx(
+                  styles().queryRow,
+                  selectedQueryHash() === props.query.queryHash &&
+                    styles().selectedQueryRow,
+                  "tsqd-query-row"
+                ),
+                _v$25 = `Query key ${props.query.queryHash}`,
+                _v$26 = clsx(
+                  getObserverCountColorStyles(),
+                  "tsqd-query-observer-count"
+                );
+              _v$24 !== _p$.e && className(_el$47, (_p$.e = _v$24));
+              _v$25 !== _p$.t &&
+                setAttribute(_el$47, "aria-label", (_p$.t = _v$25));
+              _v$26 !== _p$.a && className(_el$48, (_p$.a = _v$26));
+              return _p$;
             },
-            get children() {
-              return _tmpl$222();
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
             }
-          }), null);
-          createRenderEffect((_p$) => {
-            var _v$24 = clsx(styles().queryRow, selectedQueryHash() === props.query.queryHash && styles().selectedQueryRow, "tsqd-query-row"), _v$25 = `Query key ${props.query.queryHash}`, _v$26 = clsx(getObserverCountColorStyles(), "tsqd-query-observer-count");
-            _v$24 !== _p$.e && className(_el$47, _p$.e = _v$24);
-            _v$25 !== _p$.t && setAttribute(_el$47, "aria-label", _p$.t = _v$25);
-            _v$26 !== _p$.a && className(_el$48, _p$.a = _v$26);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
+          );
           return _el$47;
-        }
+        },
       });
     };
     MutationRow = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const mutationState = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
-        return mutation?.state;
-      });
-      const isPaused = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
-        if (!mutation) return false;
-        return mutation.state.isPaused;
-      });
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const mutationState = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === props.mutation.mutationId
+          );
+          return mutation?.state;
+        }
+      );
+      const isPaused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === props.mutation.mutationId
+          );
+          if (!mutation) return false;
+          return mutation.state.isPaused;
+        }
+      );
       const status = createSubscribeToMutationCacheBatcher((mutationCache) => {
         const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === props.mutation.mutationId);
+        const mutation = mutations.find(
+          (m) => m.mutationId === props.mutation.mutationId
+        );
         if (!mutation) return "idle";
         return mutation.state.status;
       });
-      const color = createMemo(() => getMutationStatusColor({
-        isPaused: isPaused(),
-        status: status()
-      }));
+      const color = createMemo(() =>
+        getMutationStatusColor({
+          isPaused: isPaused(),
+          status: status(),
+        })
+      );
       const getObserverCountColorStyles = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][200] + alpha[80], colors[color()][900])};
-      color: ${t2(colors[color()][800], colors[color()][300])};
-    `;
+          background-color: ${t2(
+            colors[color()][200] + alpha[80],
+            colors[color()][900]
+          )};
+          color: ${t2(colors[color()][800], colors[color()][300])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return mutationState();
         },
         get children() {
-          var _el$52 = _tmpl$232(), _el$53 = _el$52.firstChild, _el$54 = _el$53.nextSibling;
+          var _el$52 = _tmpl$232(),
+            _el$53 = _el$52.firstChild,
+            _el$54 = _el$53.nextSibling;
           _el$52.$$click = () => {
-            setSelectedMutationId(props.mutation.mutationId === selectedMutationId() ? null : props.mutation.mutationId);
+            setSelectedMutationId(
+              props.mutation.mutationId === selectedMutationId()
+                ? null
+                : props.mutation.mutationId
+            );
           };
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "purple";
-            },
-            get children() {
-              return createComponent(PauseCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "green";
-            },
-            get children() {
-              return createComponent(CheckCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "red";
-            },
-            get children() {
-              return createComponent(XCircle, {});
-            }
-          }), null);
-          insert(_el$53, createComponent(Show, {
-            get when() {
-              return color() === "yellow";
-            },
-            get children() {
-              return createComponent(LoadingCircle, {});
-            }
-          }), null);
-          insert(_el$54, createComponent(Show, {
-            get when() {
-              return props.mutation.options.mutationKey;
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "purple";
+              },
+              get children() {
+                return createComponent(PauseCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "green";
+              },
+              get children() {
+                return createComponent(CheckCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "red";
+              },
+              get children() {
+                return createComponent(XCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$53,
+            createComponent(Show, {
+              get when() {
+                return color() === "yellow";
+              },
+              get children() {
+                return createComponent(LoadingCircle, {});
+              },
+            }),
+            null
+          );
+          insert(
+            _el$54,
+            createComponent(Show, {
+              get when() {
+                return props.mutation.options.mutationKey;
+              },
+              get children() {
+                return [
+                  createMemo(() =>
+                    JSON.stringify(props.mutation.options.mutationKey)
+                  ),
+                  " -",
+                  " ",
+                ];
+              },
+            }),
+            null
+          );
+          insert(
+            _el$54,
+            () => new Date(props.mutation.state.submittedAt).toLocaleString(),
+            null
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$27 = clsx(
+                  styles().queryRow,
+                  selectedMutationId() === props.mutation.mutationId &&
+                    styles().selectedQueryRow,
+                  "tsqd-query-row"
+                ),
+                _v$28 = `Mutation submitted at ${new Date(
+                  props.mutation.state.submittedAt
+                ).toLocaleString()}`,
+                _v$29 = clsx(
+                  getObserverCountColorStyles(),
+                  "tsqd-query-observer-count"
+                );
+              _v$27 !== _p$.e && className(_el$52, (_p$.e = _v$27));
+              _v$28 !== _p$.t &&
+                setAttribute(_el$52, "aria-label", (_p$.t = _v$28));
+              _v$29 !== _p$.a && className(_el$53, (_p$.a = _v$29));
+              return _p$;
             },
-            get children() {
-              return [createMemo(() => JSON.stringify(props.mutation.options.mutationKey)), " -", " "];
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
             }
-          }), null);
-          insert(_el$54, () => new Date(props.mutation.state.submittedAt).toLocaleString(), null);
-          createRenderEffect((_p$) => {
-            var _v$27 = clsx(styles().queryRow, selectedMutationId() === props.mutation.mutationId && styles().selectedQueryRow, "tsqd-query-row"), _v$28 = `Mutation submitted at ${new Date(props.mutation.state.submittedAt).toLocaleString()}`, _v$29 = clsx(getObserverCountColorStyles(), "tsqd-query-observer-count");
-            _v$27 !== _p$.e && className(_el$52, _p$.e = _v$27);
-            _v$28 !== _p$.t && setAttribute(_el$52, "aria-label", _p$.t = _v$28);
-            _v$29 !== _p$.a && className(_el$53, _p$.a = _v$29);
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0
-          });
+          );
           return _el$52;
-        }
+        },
       });
     };
     QueryStatusCount = () => {
-      const stale = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "stale").length);
-      const fresh = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "fresh").length);
-      const fetching = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "fetching").length);
-      const paused = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "paused").length);
-      const inactive = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().filter((q) => getQueryStatusLabel(q) === "inactive").length);
+      const stale = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "stale").length
+      );
+      const fresh = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "fresh").length
+      );
+      const fetching = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "fetching").length
+      );
+      const paused = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "paused").length
+      );
+      const inactive = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .filter((q) => getQueryStatusLabel(q) === "inactive").length
+      );
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       return (() => {
         var _el$55 = _tmpl$26();
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Fresh",
-          color: "green",
-          get count() {
-            return fresh();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Fetching",
-          color: "blue",
-          get count() {
-            return fetching();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Paused",
-          color: "purple",
-          get count() {
-            return paused();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Stale",
-          color: "yellow",
-          get count() {
-            return stale();
-          }
-        }), null);
-        insert(_el$55, createComponent(QueryStatus, {
-          label: "Inactive",
-          color: "gray",
-          get count() {
-            return inactive();
-          }
-        }), null);
-        createRenderEffect(() => className(_el$55, clsx(styles().queryStatusContainer, "tsqd-query-status-container")));
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Fresh",
+            color: "green",
+            get count() {
+              return fresh();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Fetching",
+            color: "blue",
+            get count() {
+              return fetching();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Paused",
+            color: "purple",
+            get count() {
+              return paused();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Stale",
+            color: "yellow",
+            get count() {
+              return stale();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$55,
+          createComponent(QueryStatus, {
+            label: "Inactive",
+            color: "gray",
+            get count() {
+              return inactive();
+            },
+          }),
+          null
+        );
+        createRenderEffect(() =>
+          className(
+            _el$55,
+            clsx(styles().queryStatusContainer, "tsqd-query-status-container")
+          )
+        );
         return _el$55;
       })();
     };
     MutationStatusCount = () => {
-      const success = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "green").length);
-      const pending = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "yellow").length);
-      const paused = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "purple").length);
-      const error = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().filter((m) => getMutationStatusColor({
-        isPaused: m.state.isPaused,
-        status: m.state.status
-      }) === "red").length);
+      const success = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "green"
+            ).length
+      );
+      const pending = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "yellow"
+            ).length
+      );
+      const paused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "purple"
+            ).length
+      );
+      const error = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .filter(
+              (m) =>
+                getMutationStatusColor({
+                  isPaused: m.state.isPaused,
+                  status: m.state.status,
+                }) === "red"
+            ).length
+      );
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
       return (() => {
         var _el$56 = _tmpl$26();
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Paused",
-          color: "purple",
-          get count() {
-            return paused();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Pending",
-          color: "yellow",
-          get count() {
-            return pending();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Success",
-          color: "green",
-          get count() {
-            return success();
-          }
-        }), null);
-        insert(_el$56, createComponent(QueryStatus, {
-          label: "Error",
-          color: "red",
-          get count() {
-            return error();
-          }
-        }), null);
-        createRenderEffect(() => className(_el$56, clsx(styles().queryStatusContainer, "tsqd-query-status-container")));
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Paused",
+            color: "purple",
+            get count() {
+              return paused();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Pending",
+            color: "yellow",
+            get count() {
+              return pending();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Success",
+            color: "green",
+            get count() {
+              return success();
+            },
+          }),
+          null
+        );
+        insert(
+          _el$56,
+          createComponent(QueryStatus, {
+            label: "Error",
+            color: "red",
+            get count() {
+              return error();
+            },
+          }),
+          null
+        );
+        createRenderEffect(() =>
+          className(
+            _el$56,
+            clsx(styles().queryStatusContainer, "tsqd-query-status-container")
+          )
+        );
         return _el$56;
       })();
     };
     QueryStatus = (props) => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors,
-        alpha
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
+      const { colors, alpha } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
       let tagRef;
       const [mouseOver, setMouseOver] = createSignal(false);
       const [focused, setFocused] = createSignal(false);
       const showLabel = createMemo(() => {
         if (selectedQueryHash()) {
-          if (panelWidth() < firstBreakpoint && panelWidth() > secondBreakpoint) {
+          if (
+            panelWidth() < firstBreakpoint &&
+            panelWidth() > secondBreakpoint
+          ) {
             return false;
           }
         }
@@ -14201,9 +17664,11 @@ var init_Devtools = __esm({
         return true;
       });
       return (() => {
-        var _el$57 = _tmpl$262(), _el$59 = _el$57.firstChild, _el$61 = _el$59.nextSibling;
+        var _el$57 = _tmpl$262(),
+          _el$59 = _el$57.firstChild,
+          _el$61 = _el$59.nextSibling;
         var _ref$5 = tagRef;
-        typeof _ref$5 === "function" ? use(_ref$5, _el$57) : tagRef = _el$57;
+        typeof _ref$5 === "function" ? use(_ref$5, _el$57) : (tagRef = _el$57);
         _el$57.addEventListener("mouseleave", () => {
           setMouseOver(false);
           setFocused(false);
@@ -14211,76 +17676,138 @@ var init_Devtools = __esm({
         _el$57.addEventListener("mouseenter", () => setMouseOver(true));
         _el$57.addEventListener("blur", () => setFocused(false));
         _el$57.addEventListener("focus", () => setFocused(true));
-        spread(_el$57, mergeProps({
-          get disabled() {
-            return showLabel();
-          },
-          get ["class"]() {
-            return clsx(styles().queryStatusTag, !showLabel() && css`
-            cursor: pointer;
-            &:hover {
-              background: ${t2(colors.gray[200], colors.darkGray[400])}${alpha[80]};
-            }
-          `, "tsqd-query-status-tag", `tsqd-query-status-tag-${props.label.toLowerCase()}`);
-          }
-        }, () => mouseOver() || focused() ? {
-          "aria-describedby": "tsqd-status-tooltip"
-        } : {}), false, true);
-        insert(_el$57, createComponent(Show, {
-          get when() {
-            return createMemo(() => !!!showLabel())() && (mouseOver() || focused());
-          },
-          get children() {
-            var _el$58 = _tmpl$242();
-            insert(_el$58, () => props.label);
-            createRenderEffect(() => className(_el$58, clsx(styles().statusTooltip, "tsqd-query-status-tooltip")));
-            return _el$58;
-          }
-        }), _el$59);
-        insert(_el$57, createComponent(Show, {
-          get when() {
-            return showLabel();
+        spread(
+          _el$57,
+          mergeProps(
+            {
+              get disabled() {
+                return showLabel();
+              },
+              get ["class"]() {
+                return clsx(
+                  styles().queryStatusTag,
+                  !showLabel() &&
+                    css`
+                      cursor: pointer;
+                      &:hover {
+                        background: ${t2(
+                            colors.gray[200],
+                            colors.darkGray[400]
+                          )}${alpha[80]};
+                      }
+                    `,
+                  "tsqd-query-status-tag",
+                  `tsqd-query-status-tag-${props.label.toLowerCase()}`
+                );
+              },
+            },
+            () =>
+              mouseOver() || focused()
+                ? {
+                    "aria-describedby": "tsqd-status-tooltip",
+                  }
+                : {}
+          ),
+          false,
+          true
+        );
+        insert(
+          _el$57,
+          createComponent(Show, {
+            get when() {
+              return (
+                createMemo(() => !!!showLabel())() && (mouseOver() || focused())
+              );
+            },
+            get children() {
+              var _el$58 = _tmpl$242();
+              insert(_el$58, () => props.label);
+              createRenderEffect(() =>
+                className(
+                  _el$58,
+                  clsx(styles().statusTooltip, "tsqd-query-status-tooltip")
+                )
+              );
+              return _el$58;
+            },
+          }),
+          _el$59
+        );
+        insert(
+          _el$57,
+          createComponent(Show, {
+            get when() {
+              return showLabel();
+            },
+            get children() {
+              var _el$60 = _tmpl$252();
+              insert(_el$60, () => props.label);
+              createRenderEffect(() =>
+                className(
+                  _el$60,
+                  clsx(
+                    styles().queryStatusTagLabel,
+                    "tsqd-query-status-tag-label"
+                  )
+                )
+              );
+              return _el$60;
+            },
+          }),
+          _el$61
+        );
+        insert(_el$61, () => props.count);
+        createRenderEffect(
+          (_p$) => {
+            var _v$30 = clsx(
+                css`
+                  width: ${tokens.size[1.5]};
+                  height: ${tokens.size[1.5]};
+                  border-radius: ${tokens.border.radius.full};
+                  background-color: ${tokens.colors[props.color][500]};
+                `,
+                "tsqd-query-status-tag-dot"
+              ),
+              _v$31 = clsx(
+                styles().queryStatusCount,
+                props.count > 0 &&
+                  props.color !== "gray" &&
+                  css`
+                    background-color: ${t2(
+                      colors[props.color][100],
+                      colors[props.color][900]
+                    )};
+                    color: ${t2(
+                      colors[props.color][700],
+                      colors[props.color][300]
+                    )};
+                  `,
+                "tsqd-query-status-tag-count"
+              );
+            _v$30 !== _p$.e && className(_el$59, (_p$.e = _v$30));
+            _v$31 !== _p$.t && className(_el$61, (_p$.t = _v$31));
+            return _p$;
           },
-          get children() {
-            var _el$60 = _tmpl$252();
-            insert(_el$60, () => props.label);
-            createRenderEffect(() => className(_el$60, clsx(styles().queryStatusTagLabel, "tsqd-query-status-tag-label")));
-            return _el$60;
+          {
+            e: void 0,
+            t: void 0,
           }
-        }), _el$61);
-        insert(_el$61, () => props.count);
-        createRenderEffect((_p$) => {
-          var _v$30 = clsx(css`
-            width: ${tokens.size[1.5]};
-            height: ${tokens.size[1.5]};
-            border-radius: ${tokens.border.radius.full};
-            background-color: ${tokens.colors[props.color][500]};
-          `, "tsqd-query-status-tag-dot"), _v$31 = clsx(styles().queryStatusCount, props.count > 0 && props.color !== "gray" && css`
-              background-color: ${t2(colors[props.color][100], colors[props.color][900])};
-              color: ${t2(colors[props.color][700], colors[props.color][300])};
-            `, "tsqd-query-status-tag-count");
-          _v$30 !== _p$.e && className(_el$59, _p$.e = _v$30);
-          _v$31 !== _p$.t && className(_el$61, _p$.t = _v$31);
-          return _p$;
-        }, {
-          e: void 0,
-          t: void 0
-        });
+        );
         return _el$57;
       })();
     };
     QueryDetails = () => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
+      const { colors } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
       const queryClient = useQueryDevtoolsContext().client;
       const [restoringLoading, setRestoringLoading] = createSignal(false);
       const [dataMode, setDataMode] = createSignal("view");
@@ -14288,34 +17815,66 @@ var init_Devtools = __esm({
       const errorTypes = createMemo(() => {
         return useQueryDevtoolsContext().errorTypes || [];
       });
-      const activeQuery = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash()), false);
-      const activeQueryFresh = createSubscribeToQueryCacheBatcher((queryCache) => {
-        return queryCache().getAll().find((query) => query.queryHash === selectedQueryHash());
-      }, false);
-      const activeQueryState = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.state, false);
-      const activeQueryStateData = createSubscribeToQueryCacheBatcher((queryCache) => {
-        return queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.state.data;
-      }, false);
+      const activeQuery = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash()),
+        false
+      );
+      const activeQueryFresh = createSubscribeToQueryCacheBatcher(
+        (queryCache) => {
+          return queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash());
+        },
+        false
+      );
+      const activeQueryState = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())?.state,
+        false
+      );
+      const activeQueryStateData = createSubscribeToQueryCacheBatcher(
+        (queryCache) => {
+          return queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())?.state
+            .data;
+        },
+        false
+      );
       const statusLabel = createSubscribeToQueryCacheBatcher((queryCache) => {
-        const query = queryCache().getAll().find((q) => q.queryHash === selectedQueryHash());
+        const query = queryCache()
+          .getAll()
+          .find((q) => q.queryHash === selectedQueryHash());
         if (!query) return "inactive";
         return getQueryStatusLabel(query);
       });
       const queryStatus = createSubscribeToQueryCacheBatcher((queryCache) => {
-        const query = queryCache().getAll().find((q) => q.queryHash === selectedQueryHash());
+        const query = queryCache()
+          .getAll()
+          .find((q) => q.queryHash === selectedQueryHash());
         if (!query) return "pending";
         return query.state.status;
       });
-      const observerCount = createSubscribeToQueryCacheBatcher((queryCache) => queryCache().getAll().find((query) => query.queryHash === selectedQueryHash())?.getObserversCount() ?? 0);
+      const observerCount = createSubscribeToQueryCacheBatcher(
+        (queryCache) =>
+          queryCache()
+            .getAll()
+            .find((query) => query.queryHash === selectedQueryHash())
+            ?.getObserversCount() ?? 0
+      );
       const color = createMemo(() => getQueryStatusColorByLabel(statusLabel()));
       const handleRefetch = () => {
         sendDevToolsEvent({
           type: "REFETCH",
-          queryHash: activeQuery()?.queryHash
+          queryHash: activeQuery()?.queryHash,
         });
         const promise = activeQuery()?.fetch();
-        promise?.catch(() => {
-        });
+        promise?.catch(() => {});
       };
       const triggerError = (errorType) => {
         const activeQueryVal = activeQuery();
@@ -14324,18 +17883,20 @@ var init_Devtools = __esm({
           type: "TRIGGER_ERROR",
           queryHash: activeQueryVal.queryHash,
           metadata: {
-            error: errorType?.name
-          }
+            error: errorType?.name,
+          },
         });
-        const error = errorType?.initializer(activeQueryVal) ?? new Error("Unknown error from devtools");
+        const error =
+          errorType?.initializer(activeQueryVal) ??
+          new Error("Unknown error from devtools");
         const __previousQueryOptions = activeQueryVal.options;
         activeQueryVal.setState({
           status: "error",
           error,
           fetchMeta: {
             ...activeQueryVal.state.fetchMeta,
-            __previousQueryOptions
-          }
+            __previousQueryOptions,
+          },
         });
       };
       const restoreQueryAfterLoadingOrError = () => {
@@ -14343,17 +17904,19 @@ var init_Devtools = __esm({
         if (!activeQueryVal) return;
         sendDevToolsEvent({
           type: "RESTORE_LOADING",
-          queryHash: activeQueryVal.queryHash
+          queryHash: activeQueryVal.queryHash,
         });
         const previousState = activeQueryVal.state;
-        const previousOptions = activeQueryVal.state.fetchMeta ? activeQueryVal.state.fetchMeta.__previousQueryOptions : null;
+        const previousOptions = activeQueryVal.state.fetchMeta
+          ? activeQueryVal.state.fetchMeta.__previousQueryOptions
+          : null;
         activeQueryVal.cancel({
-          silent: true
+          silent: true,
         });
         activeQueryVal.setState({
           ...previousState,
           fetchStatus: "idle",
-          fetchMeta: null
+          fetchMeta: null,
         });
         if (previousOptions) {
           activeQueryVal.fetch(previousOptions);
@@ -14367,46 +17930,77 @@ var init_Devtools = __esm({
       const getQueryStatusColors = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-        border-color: ${t2(colors[color()][400], colors[color()][600])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+            border-color: ${t2(colors[color()][400], colors[color()][600])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][100], colors[color()][900])};
-      color: ${t2(colors[color()][700], colors[color()][300])};
-      border-color: ${t2(colors[color()][400], colors[color()][600])};
-    `;
+          background-color: ${t2(colors[color()][100], colors[color()][900])};
+          color: ${t2(colors[color()][700], colors[color()][300])};
+          border-color: ${t2(colors[color()][400], colors[color()][600])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return createMemo(() => !!activeQuery())() && activeQueryState();
         },
         get children() {
-          var _el$62 = _tmpl$31(), _el$63 = _el$62.firstChild, _el$64 = _el$63.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.firstChild, _el$67 = _el$66.firstChild, _el$68 = _el$66.nextSibling, _el$69 = _el$65.nextSibling, _el$70 = _el$69.firstChild, _el$71 = _el$70.nextSibling, _el$72 = _el$69.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$73.nextSibling, _el$75 = _el$64.nextSibling, _el$76 = _el$75.nextSibling, _el$77 = _el$76.firstChild, _el$78 = _el$77.firstChild, _el$79 = _el$77.nextSibling, _el$80 = _el$79.firstChild, _el$81 = _el$79.nextSibling, _el$82 = _el$81.firstChild, _el$83 = _el$81.nextSibling, _el$84 = _el$83.firstChild, _el$85 = _el$83.nextSibling, _el$86 = _el$85.firstChild, _el$87 = _el$86.nextSibling, _el$96 = _el$76.nextSibling; _el$96.firstChild; var _el$106 = _el$96.nextSibling, _el$107 = _el$106.nextSibling;
+          var _el$62 = _tmpl$31(),
+            _el$63 = _el$62.firstChild,
+            _el$64 = _el$63.nextSibling,
+            _el$65 = _el$64.firstChild,
+            _el$66 = _el$65.firstChild,
+            _el$67 = _el$66.firstChild,
+            _el$68 = _el$66.nextSibling,
+            _el$69 = _el$65.nextSibling,
+            _el$70 = _el$69.firstChild,
+            _el$71 = _el$70.nextSibling,
+            _el$72 = _el$69.nextSibling,
+            _el$73 = _el$72.firstChild,
+            _el$74 = _el$73.nextSibling,
+            _el$75 = _el$64.nextSibling,
+            _el$76 = _el$75.nextSibling,
+            _el$77 = _el$76.firstChild,
+            _el$78 = _el$77.firstChild,
+            _el$79 = _el$77.nextSibling,
+            _el$80 = _el$79.firstChild,
+            _el$81 = _el$79.nextSibling,
+            _el$82 = _el$81.firstChild,
+            _el$83 = _el$81.nextSibling,
+            _el$84 = _el$83.firstChild,
+            _el$85 = _el$83.nextSibling,
+            _el$86 = _el$85.firstChild,
+            _el$87 = _el$86.nextSibling,
+            _el$96 = _el$76.nextSibling;
+          _el$96.firstChild;
+          var _el$106 = _el$96.nextSibling,
+            _el$107 = _el$106.nextSibling;
           insert(_el$67, () => displayValue(activeQuery().queryKey, true));
           insert(_el$68, statusLabel);
           insert(_el$71, observerCount);
-          insert(_el$74, () => new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString());
+          insert(_el$74, () =>
+            new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString()
+          );
           _el$77.$$click = handleRefetch;
           _el$79.$$click = () => {
             sendDevToolsEvent({
               type: "INVALIDATE",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.invalidateQueries(activeQuery());
           };
           _el$81.$$click = () => {
             sendDevToolsEvent({
               type: "RESET",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.resetQueries(activeQuery());
           };
           _el$83.$$click = () => {
             sendDevToolsEvent({
               type: "REMOVE",
-              queryHash: activeQuery()?.queryHash
+              queryHash: activeQuery()?.queryHash,
             });
             queryClient.removeQueries(activeQuery());
             setSelectedQueryHash(null);
@@ -14420,394 +18014,686 @@ var init_Devtools = __esm({
               if (!activeQueryVal) return;
               sendDevToolsEvent({
                 type: "TRIGGER_LOADING",
-                queryHash: activeQueryVal.queryHash
+                queryHash: activeQueryVal.queryHash,
               });
               const __previousQueryOptions = activeQueryVal.options;
               activeQueryVal.fetch({
                 ...__previousQueryOptions,
                 queryFn: () => {
-                  return new Promise(() => {
-                  });
+                  return new Promise(() => {});
                 },
-                gcTime: -1
+                gcTime: -1,
               });
               activeQueryVal.setState({
                 data: void 0,
                 status: "pending",
                 fetchMeta: {
                   ...activeQueryVal.state.fetchMeta,
-                  __previousQueryOptions
-                }
+                  __previousQueryOptions,
+                },
               });
             }
           };
-          insert(_el$85, () => queryStatus() === "pending" ? "Restore" : "Trigger", _el$87);
-          insert(_el$76, createComponent(Show, {
-            get when() {
-              return errorTypes().length === 0 || queryStatus() === "error";
-            },
-            get children() {
-              var _el$88 = _tmpl$27(), _el$89 = _el$88.firstChild, _el$90 = _el$89.nextSibling;
-              _el$88.$$click = () => {
-                if (!activeQuery().state.error) {
-                  triggerError();
-                } else {
-                  sendDevToolsEvent({
-                    type: "RESTORE_ERROR",
-                    queryHash: activeQuery()?.queryHash
-                  });
-                  queryClient.resetQueries(activeQuery());
-                }
-              };
-              insert(_el$88, () => queryStatus() === "error" ? "Restore" : "Trigger", _el$90);
-              createRenderEffect((_p$) => {
-                var _v$32 = clsx(css`
-                  color: ${t2(colors.red[500], colors.red[400])};
-                `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-error"), _v$33 = queryStatus() === "pending", _v$34 = css`
-                  background-color: ${t2(colors.red[500], colors.red[400])};
-                `;
-                _v$32 !== _p$.e && className(_el$88, _p$.e = _v$32);
-                _v$33 !== _p$.t && (_el$88.disabled = _p$.t = _v$33);
-                _v$34 !== _p$.a && className(_el$89, _p$.a = _v$34);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0
-              });
-              return _el$88;
-            }
-          }), null);
-          insert(_el$76, createComponent(Show, {
-            get when() {
-              return !(errorTypes().length === 0 || queryStatus() === "error");
-            },
-            get children() {
-              var _el$91 = _tmpl$28(), _el$92 = _el$91.firstChild, _el$93 = _el$92.nextSibling, _el$94 = _el$93.nextSibling; _el$94.firstChild;
-              _el$94.addEventListener("change", (e2) => {
-                const errorType = errorTypes().find((et) => et.name === e2.currentTarget.value);
-                triggerError(errorType);
-              });
-              insert(_el$94, createComponent(For, {
-                get each() {
-                  return errorTypes();
-                },
-                children: (errorType) => (() => {
-                  var _el$108 = _tmpl$322();
-                  insert(_el$108, () => errorType.name);
-                  createRenderEffect(() => _el$108.value = errorType.name);
-                  return _el$108;
-                })()
-              }), null);
-              insert(_el$91, createComponent(ChevronDown, {}), null);
-              createRenderEffect((_p$) => {
-                var _v$35 = clsx(styles().actionsSelect, "tsqd-query-details-actions-btn", "tsqd-query-details-action-error-multiple"), _v$36 = css`
-                  background-color: ${tokens.colors.red[400]};
-                `, _v$37 = queryStatus() === "pending";
-                _v$35 !== _p$.e && className(_el$91, _p$.e = _v$35);
-                _v$36 !== _p$.t && className(_el$92, _p$.t = _v$36);
-                _v$37 !== _p$.a && (_el$94.disabled = _p$.a = _v$37);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0
-              });
-              return _el$91;
-            }
-          }), null);
-          insert(_el$96, () => dataMode() === "view" ? "Explorer" : "Editor", null);
-          insert(_el$62, createComponent(Show, {
-            get when() {
-              return dataMode() === "view";
-            },
-            get children() {
-              var _el$98 = _tmpl$29();
-              insert(_el$98, createComponent(Explorer, {
-                label: "Data",
-                defaultExpanded: ["Data"],
-                get value() {
-                  return activeQueryStateData();
-                },
-                editable: true,
-                onEdit: () => setDataMode("edit"),
-                get activeQuery() {
-                  return activeQuery();
-                }
-              }));
-              createRenderEffect((_$p) => (_$p = tokens.size[2]) != null ? _el$98.style.setProperty("padding", _$p) : _el$98.style.removeProperty("padding"));
-              return _el$98;
-            }
-          }), _el$106);
-          insert(_el$62, createComponent(Show, {
-            get when() {
-              return dataMode() === "edit";
+          insert(
+            _el$85,
+            () => (queryStatus() === "pending" ? "Restore" : "Trigger"),
+            _el$87
+          );
+          insert(
+            _el$76,
+            createComponent(Show, {
+              get when() {
+                return errorTypes().length === 0 || queryStatus() === "error";
+              },
+              get children() {
+                var _el$88 = _tmpl$27(),
+                  _el$89 = _el$88.firstChild,
+                  _el$90 = _el$89.nextSibling;
+                _el$88.$$click = () => {
+                  if (!activeQuery().state.error) {
+                    triggerError();
+                  } else {
+                    sendDevToolsEvent({
+                      type: "RESTORE_ERROR",
+                      queryHash: activeQuery()?.queryHash,
+                    });
+                    queryClient.resetQueries(activeQuery());
+                  }
+                };
+                insert(
+                  _el$88,
+                  () => (queryStatus() === "error" ? "Restore" : "Trigger"),
+                  _el$90
+                );
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$32 = clsx(
+                        css`
+                          color: ${t2(colors.red[500], colors.red[400])};
+                        `,
+                        "tsqd-query-details-actions-btn",
+                        "tsqd-query-details-action-error"
+                      ),
+                      _v$33 = queryStatus() === "pending",
+                      _v$34 = css`
+                        background-color: ${t2(
+                          colors.red[500],
+                          colors.red[400]
+                        )};
+                      `;
+                    _v$32 !== _p$.e && className(_el$88, (_p$.e = _v$32));
+                    _v$33 !== _p$.t && (_el$88.disabled = _p$.t = _v$33);
+                    _v$34 !== _p$.a && className(_el$89, (_p$.a = _v$34));
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                  }
+                );
+                return _el$88;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$76,
+            createComponent(Show, {
+              get when() {
+                return !(
+                  errorTypes().length === 0 || queryStatus() === "error"
+                );
+              },
+              get children() {
+                var _el$91 = _tmpl$28(),
+                  _el$92 = _el$91.firstChild,
+                  _el$93 = _el$92.nextSibling,
+                  _el$94 = _el$93.nextSibling;
+                _el$94.firstChild;
+                _el$94.addEventListener("change", (e2) => {
+                  const errorType = errorTypes().find(
+                    (et) => et.name === e2.currentTarget.value
+                  );
+                  triggerError(errorType);
+                });
+                insert(
+                  _el$94,
+                  createComponent(For, {
+                    get each() {
+                      return errorTypes();
+                    },
+                    children: (errorType) =>
+                      (() => {
+                        var _el$108 = _tmpl$322();
+                        insert(_el$108, () => errorType.name);
+                        createRenderEffect(
+                          () => (_el$108.value = errorType.name)
+                        );
+                        return _el$108;
+                      })(),
+                  }),
+                  null
+                );
+                insert(_el$91, createComponent(ChevronDown, {}), null);
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$35 = clsx(
+                        styles().actionsSelect,
+                        "tsqd-query-details-actions-btn",
+                        "tsqd-query-details-action-error-multiple"
+                      ),
+                      _v$36 = css`
+                        background-color: ${tokens.colors.red[400]};
+                      `,
+                      _v$37 = queryStatus() === "pending";
+                    _v$35 !== _p$.e && className(_el$91, (_p$.e = _v$35));
+                    _v$36 !== _p$.t && className(_el$92, (_p$.t = _v$36));
+                    _v$37 !== _p$.a && (_el$94.disabled = _p$.a = _v$37);
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                  }
+                );
+                return _el$91;
+              },
+            }),
+            null
+          );
+          insert(
+            _el$96,
+            () => (dataMode() === "view" ? "Explorer" : "Editor"),
+            null
+          );
+          insert(
+            _el$62,
+            createComponent(Show, {
+              get when() {
+                return dataMode() === "view";
+              },
+              get children() {
+                var _el$98 = _tmpl$29();
+                insert(
+                  _el$98,
+                  createComponent(Explorer, {
+                    label: "Data",
+                    defaultExpanded: ["Data"],
+                    get value() {
+                      return activeQueryStateData();
+                    },
+                    editable: true,
+                    onEdit: () => setDataMode("edit"),
+                    get activeQuery() {
+                      return activeQuery();
+                    },
+                  })
+                );
+                createRenderEffect((_$p) =>
+                  (_$p = tokens.size[2]) != null
+                    ? _el$98.style.setProperty("padding", _$p)
+                    : _el$98.style.removeProperty("padding")
+                );
+                return _el$98;
+              },
+            }),
+            _el$106
+          );
+          insert(
+            _el$62,
+            createComponent(Show, {
+              get when() {
+                return dataMode() === "edit";
+              },
+              get children() {
+                var _el$99 = _tmpl$30(),
+                  _el$100 = _el$99.firstChild,
+                  _el$101 = _el$100.nextSibling,
+                  _el$102 = _el$101.firstChild,
+                  _el$103 = _el$102.nextSibling,
+                  _el$104 = _el$103.firstChild,
+                  _el$105 = _el$104.nextSibling;
+                _el$99.addEventListener("submit", (e2) => {
+                  e2.preventDefault();
+                  const formData = new FormData(e2.currentTarget);
+                  const data = formData.get("data");
+                  try {
+                    const parsedData = JSON.parse(data);
+                    activeQuery().setState({
+                      ...activeQuery().state,
+                      data: parsedData,
+                    });
+                    setDataMode("view");
+                  } catch (error) {
+                    setDataEditError(true);
+                  }
+                });
+                _el$100.addEventListener("focus", () =>
+                  setDataEditError(false)
+                );
+                insert(_el$102, () => (dataEditError() ? "Invalid Value" : ""));
+                _el$104.$$click = () => setDataMode("view");
+                createRenderEffect(
+                  (_p$) => {
+                    var _v$38 = clsx(
+                        styles().devtoolsEditForm,
+                        "tsqd-query-details-data-editor"
+                      ),
+                      _v$39 = styles().devtoolsEditTextarea,
+                      _v$40 = dataEditError(),
+                      _v$41 = styles().devtoolsEditFormActions,
+                      _v$42 = styles().devtoolsEditFormError,
+                      _v$43 = styles().devtoolsEditFormActionContainer,
+                      _v$44 = clsx(
+                        styles().devtoolsEditFormAction,
+                        css`
+                          color: ${t2(colors.gray[600], colors.gray[300])};
+                        `
+                      ),
+                      _v$45 = clsx(
+                        styles().devtoolsEditFormAction,
+                        css`
+                          color: ${t2(colors.blue[600], colors.blue[400])};
+                        `
+                      );
+                    _v$38 !== _p$.e && className(_el$99, (_p$.e = _v$38));
+                    _v$39 !== _p$.t && className(_el$100, (_p$.t = _v$39));
+                    _v$40 !== _p$.a &&
+                      setAttribute(_el$100, "data-error", (_p$.a = _v$40));
+                    _v$41 !== _p$.o && className(_el$101, (_p$.o = _v$41));
+                    _v$42 !== _p$.i && className(_el$102, (_p$.i = _v$42));
+                    _v$43 !== _p$.n && className(_el$103, (_p$.n = _v$43));
+                    _v$44 !== _p$.s && className(_el$104, (_p$.s = _v$44));
+                    _v$45 !== _p$.h && className(_el$105, (_p$.h = _v$45));
+                    return _p$;
+                  },
+                  {
+                    e: void 0,
+                    t: void 0,
+                    a: void 0,
+                    o: void 0,
+                    i: void 0,
+                    n: void 0,
+                    s: void 0,
+                    h: void 0,
+                  }
+                );
+                createRenderEffect(
+                  () =>
+                    (_el$100.value = JSON.stringify(
+                      activeQueryStateData(),
+                      null,
+                      2
+                    ))
+                );
+                return _el$99;
+              },
+            }),
+            _el$106
+          );
+          insert(
+            _el$107,
+            createComponent(Explorer, {
+              label: "Query",
+              defaultExpanded: ["Query", "queryKey"],
+              get value() {
+                return activeQueryFresh();
+              },
+            })
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$46 = clsx(
+                  styles().detailsContainer,
+                  "tsqd-query-details-container"
+                ),
+                _v$47 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$48 = clsx(
+                  styles().detailsBody,
+                  "tsqd-query-details-summary-container"
+                ),
+                _v$49 = clsx(
+                  styles().queryDetailsStatus,
+                  getQueryStatusColors()
+                ),
+                _v$50 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$51 = clsx(
+                  styles().actionsBody,
+                  "tsqd-query-details-actions-container"
+                ),
+                _v$52 = clsx(
+                  css`
+                    color: ${t2(colors.blue[600], colors.blue[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-refetch"
+                ),
+                _v$53 = statusLabel() === "fetching",
+                _v$54 = css`
+                  background-color: ${t2(colors.blue[600], colors.blue[400])};
+                `,
+                _v$55 = clsx(
+                  css`
+                    color: ${t2(colors.yellow[600], colors.yellow[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-invalidate"
+                ),
+                _v$56 = queryStatus() === "pending",
+                _v$57 = css`
+                  background-color: ${t2(
+                    colors.yellow[600],
+                    colors.yellow[400]
+                  )};
+                `,
+                _v$58 = clsx(
+                  css`
+                    color: ${t2(colors.gray[600], colors.gray[300])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-reset"
+                ),
+                _v$59 = queryStatus() === "pending",
+                _v$60 = css`
+                  background-color: ${t2(colors.gray[600], colors.gray[400])};
+                `,
+                _v$61 = clsx(
+                  css`
+                    color: ${t2(colors.pink[500], colors.pink[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-remove"
+                ),
+                _v$62 = statusLabel() === "fetching",
+                _v$63 = css`
+                  background-color: ${t2(colors.pink[500], colors.pink[400])};
+                `,
+                _v$64 = clsx(
+                  css`
+                    color: ${t2(colors.cyan[500], colors.cyan[400])};
+                  `,
+                  "tsqd-query-details-actions-btn",
+                  "tsqd-query-details-action-loading"
+                ),
+                _v$65 = restoringLoading(),
+                _v$66 = css`
+                  background-color: ${t2(colors.cyan[500], colors.cyan[400])};
+                `,
+                _v$67 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$68 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$69 = tokens.size[2];
+              _v$46 !== _p$.e && className(_el$62, (_p$.e = _v$46));
+              _v$47 !== _p$.t && className(_el$63, (_p$.t = _v$47));
+              _v$48 !== _p$.a && className(_el$64, (_p$.a = _v$48));
+              _v$49 !== _p$.o && className(_el$68, (_p$.o = _v$49));
+              _v$50 !== _p$.i && className(_el$75, (_p$.i = _v$50));
+              _v$51 !== _p$.n && className(_el$76, (_p$.n = _v$51));
+              _v$52 !== _p$.s && className(_el$77, (_p$.s = _v$52));
+              _v$53 !== _p$.h && (_el$77.disabled = _p$.h = _v$53);
+              _v$54 !== _p$.r && className(_el$78, (_p$.r = _v$54));
+              _v$55 !== _p$.d && className(_el$79, (_p$.d = _v$55));
+              _v$56 !== _p$.l && (_el$79.disabled = _p$.l = _v$56);
+              _v$57 !== _p$.u && className(_el$80, (_p$.u = _v$57));
+              _v$58 !== _p$.c && className(_el$81, (_p$.c = _v$58));
+              _v$59 !== _p$.w && (_el$81.disabled = _p$.w = _v$59);
+              _v$60 !== _p$.m && className(_el$82, (_p$.m = _v$60));
+              _v$61 !== _p$.f && className(_el$83, (_p$.f = _v$61));
+              _v$62 !== _p$.y && (_el$83.disabled = _p$.y = _v$62);
+              _v$63 !== _p$.g && className(_el$84, (_p$.g = _v$63));
+              _v$64 !== _p$.p && className(_el$85, (_p$.p = _v$64));
+              _v$65 !== _p$.b && (_el$85.disabled = _p$.b = _v$65);
+              _v$66 !== _p$.T && className(_el$86, (_p$.T = _v$66));
+              _v$67 !== _p$.A && className(_el$96, (_p$.A = _v$67));
+              _v$68 !== _p$.O && className(_el$106, (_p$.O = _v$68));
+              _v$69 !== _p$.I &&
+                ((_p$.I = _v$69) != null
+                  ? _el$107.style.setProperty("padding", _v$69)
+                  : _el$107.style.removeProperty("padding"));
+              return _p$;
             },
-            get children() {
-              var _el$99 = _tmpl$30(), _el$100 = _el$99.firstChild, _el$101 = _el$100.nextSibling, _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.firstChild, _el$105 = _el$104.nextSibling;
-              _el$99.addEventListener("submit", (e2) => {
-                e2.preventDefault();
-                const formData = new FormData(e2.currentTarget);
-                const data = formData.get("data");
-                try {
-                  const parsedData = JSON.parse(data);
-                  activeQuery().setState({
-                    ...activeQuery().state,
-                    data: parsedData
-                  });
-                  setDataMode("view");
-                } catch (error) {
-                  setDataEditError(true);
-                }
-              });
-              _el$100.addEventListener("focus", () => setDataEditError(false));
-              insert(_el$102, () => dataEditError() ? "Invalid Value" : "");
-              _el$104.$$click = () => setDataMode("view");
-              createRenderEffect((_p$) => {
-                var _v$38 = clsx(styles().devtoolsEditForm, "tsqd-query-details-data-editor"), _v$39 = styles().devtoolsEditTextarea, _v$40 = dataEditError(), _v$41 = styles().devtoolsEditFormActions, _v$42 = styles().devtoolsEditFormError, _v$43 = styles().devtoolsEditFormActionContainer, _v$44 = clsx(styles().devtoolsEditFormAction, css`
-                      color: ${t2(colors.gray[600], colors.gray[300])};
-                    `), _v$45 = clsx(styles().devtoolsEditFormAction, css`
-                      color: ${t2(colors.blue[600], colors.blue[400])};
-                    `);
-                _v$38 !== _p$.e && className(_el$99, _p$.e = _v$38);
-                _v$39 !== _p$.t && className(_el$100, _p$.t = _v$39);
-                _v$40 !== _p$.a && setAttribute(_el$100, "data-error", _p$.a = _v$40);
-                _v$41 !== _p$.o && className(_el$101, _p$.o = _v$41);
-                _v$42 !== _p$.i && className(_el$102, _p$.i = _v$42);
-                _v$43 !== _p$.n && className(_el$103, _p$.n = _v$43);
-                _v$44 !== _p$.s && className(_el$104, _p$.s = _v$44);
-                _v$45 !== _p$.h && className(_el$105, _p$.h = _v$45);
-                return _p$;
-              }, {
-                e: void 0,
-                t: void 0,
-                a: void 0,
-                o: void 0,
-                i: void 0,
-                n: void 0,
-                s: void 0,
-                h: void 0
-              });
-              createRenderEffect(() => _el$100.value = JSON.stringify(activeQueryStateData(), null, 2));
-              return _el$99;
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
+              c: void 0,
+              w: void 0,
+              m: void 0,
+              f: void 0,
+              y: void 0,
+              g: void 0,
+              p: void 0,
+              b: void 0,
+              T: void 0,
+              A: void 0,
+              O: void 0,
+              I: void 0,
             }
-          }), _el$106);
-          insert(_el$107, createComponent(Explorer, {
-            label: "Query",
-            defaultExpanded: ["Query", "queryKey"],
-            get value() {
-              return activeQueryFresh();
-            }
-          }));
-          createRenderEffect((_p$) => {
-            var _v$46 = clsx(styles().detailsContainer, "tsqd-query-details-container"), _v$47 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$48 = clsx(styles().detailsBody, "tsqd-query-details-summary-container"), _v$49 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$50 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$51 = clsx(styles().actionsBody, "tsqd-query-details-actions-container"), _v$52 = clsx(css`
-                color: ${t2(colors.blue[600], colors.blue[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-refetch"), _v$53 = statusLabel() === "fetching", _v$54 = css`
-                background-color: ${t2(colors.blue[600], colors.blue[400])};
-              `, _v$55 = clsx(css`
-                color: ${t2(colors.yellow[600], colors.yellow[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-invalidate"), _v$56 = queryStatus() === "pending", _v$57 = css`
-                background-color: ${t2(colors.yellow[600], colors.yellow[400])};
-              `, _v$58 = clsx(css`
-                color: ${t2(colors.gray[600], colors.gray[300])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-reset"), _v$59 = queryStatus() === "pending", _v$60 = css`
-                background-color: ${t2(colors.gray[600], colors.gray[400])};
-              `, _v$61 = clsx(css`
-                color: ${t2(colors.pink[500], colors.pink[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-remove"), _v$62 = statusLabel() === "fetching", _v$63 = css`
-                background-color: ${t2(colors.pink[500], colors.pink[400])};
-              `, _v$64 = clsx(css`
-                color: ${t2(colors.cyan[500], colors.cyan[400])};
-              `, "tsqd-query-details-actions-btn", "tsqd-query-details-action-loading"), _v$65 = restoringLoading(), _v$66 = css`
-                background-color: ${t2(colors.cyan[500], colors.cyan[400])};
-              `, _v$67 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$68 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$69 = tokens.size[2];
-            _v$46 !== _p$.e && className(_el$62, _p$.e = _v$46);
-            _v$47 !== _p$.t && className(_el$63, _p$.t = _v$47);
-            _v$48 !== _p$.a && className(_el$64, _p$.a = _v$48);
-            _v$49 !== _p$.o && className(_el$68, _p$.o = _v$49);
-            _v$50 !== _p$.i && className(_el$75, _p$.i = _v$50);
-            _v$51 !== _p$.n && className(_el$76, _p$.n = _v$51);
-            _v$52 !== _p$.s && className(_el$77, _p$.s = _v$52);
-            _v$53 !== _p$.h && (_el$77.disabled = _p$.h = _v$53);
-            _v$54 !== _p$.r && className(_el$78, _p$.r = _v$54);
-            _v$55 !== _p$.d && className(_el$79, _p$.d = _v$55);
-            _v$56 !== _p$.l && (_el$79.disabled = _p$.l = _v$56);
-            _v$57 !== _p$.u && className(_el$80, _p$.u = _v$57);
-            _v$58 !== _p$.c && className(_el$81, _p$.c = _v$58);
-            _v$59 !== _p$.w && (_el$81.disabled = _p$.w = _v$59);
-            _v$60 !== _p$.m && className(_el$82, _p$.m = _v$60);
-            _v$61 !== _p$.f && className(_el$83, _p$.f = _v$61);
-            _v$62 !== _p$.y && (_el$83.disabled = _p$.y = _v$62);
-            _v$63 !== _p$.g && className(_el$84, _p$.g = _v$63);
-            _v$64 !== _p$.p && className(_el$85, _p$.p = _v$64);
-            _v$65 !== _p$.b && (_el$85.disabled = _p$.b = _v$65);
-            _v$66 !== _p$.T && className(_el$86, _p$.T = _v$66);
-            _v$67 !== _p$.A && className(_el$96, _p$.A = _v$67);
-            _v$68 !== _p$.O && className(_el$106, _p$.O = _v$68);
-            _v$69 !== _p$.I && ((_p$.I = _v$69) != null ? _el$107.style.setProperty("padding", _v$69) : _el$107.style.removeProperty("padding"));
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0,
-            o: void 0,
-            i: void 0,
-            n: void 0,
-            s: void 0,
-            h: void 0,
-            r: void 0,
-            d: void 0,
-            l: void 0,
-            u: void 0,
-            c: void 0,
-            w: void 0,
-            m: void 0,
-            f: void 0,
-            y: void 0,
-            g: void 0,
-            p: void 0,
-            b: void 0,
-            T: void 0,
-            A: void 0,
-            O: void 0,
-            I: void 0
-          });
+          );
           return _el$62;
-        }
+        },
       });
     };
     MutationDetails = () => {
       const theme = useTheme();
-      const css = useQueryDevtoolsContext().shadowDOMTarget ? u.bind({
-        target: useQueryDevtoolsContext().shadowDOMTarget
-      }) : u;
+      const css = useQueryDevtoolsContext().shadowDOMTarget
+        ? u.bind({
+            target: useQueryDevtoolsContext().shadowDOMTarget,
+          })
+        : u;
       const styles = createMemo(() => {
         return theme() === "dark" ? darkStyles2(css) : lightStyles2(css);
       });
-      const {
-        colors
-      } = tokens;
-      const t2 = (light, dark) => theme() === "dark" ? dark : light;
-      const isPaused = createSubscribeToMutationCacheBatcher((mutationCache) => {
-        const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === selectedMutationId());
-        if (!mutation) return false;
-        return mutation.state.isPaused;
-      });
+      const { colors } = tokens;
+      const t2 = (light, dark) => (theme() === "dark" ? dark : light);
+      const isPaused = createSubscribeToMutationCacheBatcher(
+        (mutationCache) => {
+          const mutations = mutationCache().getAll();
+          const mutation = mutations.find(
+            (m) => m.mutationId === selectedMutationId()
+          );
+          if (!mutation) return false;
+          return mutation.state.isPaused;
+        }
+      );
       const status = createSubscribeToMutationCacheBatcher((mutationCache) => {
         const mutations = mutationCache().getAll();
-        const mutation = mutations.find((m) => m.mutationId === selectedMutationId());
+        const mutation = mutations.find(
+          (m) => m.mutationId === selectedMutationId()
+        );
         if (!mutation) return "idle";
         return mutation.state.status;
       });
-      const color = createMemo(() => getMutationStatusColor({
-        isPaused: isPaused(),
-        status: status()
-      }));
-      const activeMutation = createSubscribeToMutationCacheBatcher((mutationCache) => mutationCache().getAll().find((mutation) => mutation.mutationId === selectedMutationId()), false);
+      const color = createMemo(() =>
+        getMutationStatusColor({
+          isPaused: isPaused(),
+          status: status(),
+        })
+      );
+      const activeMutation = createSubscribeToMutationCacheBatcher(
+        (mutationCache) =>
+          mutationCache()
+            .getAll()
+            .find((mutation) => mutation.mutationId === selectedMutationId()),
+        false
+      );
       const getQueryStatusColors = () => {
         if (color() === "gray") {
           return css`
-        background-color: ${t2(colors[color()][200], colors[color()][700])};
-        color: ${t2(colors[color()][700], colors[color()][300])};
-        border-color: ${t2(colors[color()][400], colors[color()][600])};
-      `;
+            background-color: ${t2(colors[color()][200], colors[color()][700])};
+            color: ${t2(colors[color()][700], colors[color()][300])};
+            border-color: ${t2(colors[color()][400], colors[color()][600])};
+          `;
         }
         return css`
-      background-color: ${t2(colors[color()][100], colors[color()][900])};
-      color: ${t2(colors[color()][700], colors[color()][300])};
-      border-color: ${t2(colors[color()][400], colors[color()][600])};
-    `;
+          background-color: ${t2(colors[color()][100], colors[color()][900])};
+          color: ${t2(colors[color()][700], colors[color()][300])};
+          border-color: ${t2(colors[color()][400], colors[color()][600])};
+        `;
       };
       return createComponent(Show, {
         get when() {
           return activeMutation();
         },
         get children() {
-          var _el$109 = _tmpl$332(), _el$110 = _el$109.firstChild, _el$111 = _el$110.nextSibling, _el$112 = _el$111.firstChild, _el$113 = _el$112.firstChild, _el$114 = _el$113.firstChild, _el$115 = _el$113.nextSibling, _el$116 = _el$112.nextSibling, _el$117 = _el$116.firstChild, _el$118 = _el$117.nextSibling, _el$119 = _el$111.nextSibling, _el$120 = _el$119.nextSibling, _el$121 = _el$120.nextSibling, _el$122 = _el$121.nextSibling, _el$123 = _el$122.nextSibling, _el$124 = _el$123.nextSibling, _el$125 = _el$124.nextSibling, _el$126 = _el$125.nextSibling;
-          insert(_el$114, createComponent(Show, {
-            get when() {
-              return activeMutation().options.mutationKey;
-            },
-            fallback: "No mutationKey found",
-            get children() {
-              return displayValue(activeMutation().options.mutationKey, true);
-            }
-          }));
-          insert(_el$115, createComponent(Show, {
-            get when() {
-              return color() === "purple";
-            },
-            children: "pending"
-          }), null);
-          insert(_el$115, createComponent(Show, {
-            get when() {
-              return color() !== "purple";
+          var _el$109 = _tmpl$332(),
+            _el$110 = _el$109.firstChild,
+            _el$111 = _el$110.nextSibling,
+            _el$112 = _el$111.firstChild,
+            _el$113 = _el$112.firstChild,
+            _el$114 = _el$113.firstChild,
+            _el$115 = _el$113.nextSibling,
+            _el$116 = _el$112.nextSibling,
+            _el$117 = _el$116.firstChild,
+            _el$118 = _el$117.nextSibling,
+            _el$119 = _el$111.nextSibling,
+            _el$120 = _el$119.nextSibling,
+            _el$121 = _el$120.nextSibling,
+            _el$122 = _el$121.nextSibling,
+            _el$123 = _el$122.nextSibling,
+            _el$124 = _el$123.nextSibling,
+            _el$125 = _el$124.nextSibling,
+            _el$126 = _el$125.nextSibling;
+          insert(
+            _el$114,
+            createComponent(Show, {
+              get when() {
+                return activeMutation().options.mutationKey;
+              },
+              fallback: "No mutationKey found",
+              get children() {
+                return displayValue(activeMutation().options.mutationKey, true);
+              },
+            })
+          );
+          insert(
+            _el$115,
+            createComponent(Show, {
+              get when() {
+                return color() === "purple";
+              },
+              children: "pending",
+            }),
+            null
+          );
+          insert(
+            _el$115,
+            createComponent(Show, {
+              get when() {
+                return color() !== "purple";
+              },
+              get children() {
+                return status();
+              },
+            }),
+            null
+          );
+          insert(_el$118, () =>
+            new Date(activeMutation().state.submittedAt).toLocaleTimeString()
+          );
+          insert(
+            _el$120,
+            createComponent(Explorer, {
+              label: "Variables",
+              defaultExpanded: ["Variables"],
+              get value() {
+                return activeMutation().state.variables;
+              },
+            })
+          );
+          insert(
+            _el$122,
+            createComponent(Explorer, {
+              label: "Context",
+              defaultExpanded: ["Context"],
+              get value() {
+                return activeMutation().state.context;
+              },
+            })
+          );
+          insert(
+            _el$124,
+            createComponent(Explorer, {
+              label: "Data",
+              defaultExpanded: ["Data"],
+              get value() {
+                return activeMutation().state.data;
+              },
+            })
+          );
+          insert(
+            _el$126,
+            createComponent(Explorer, {
+              label: "Mutation",
+              defaultExpanded: ["Mutation"],
+              get value() {
+                return activeMutation();
+              },
+            })
+          );
+          createRenderEffect(
+            (_p$) => {
+              var _v$70 = clsx(
+                  styles().detailsContainer,
+                  "tsqd-query-details-container"
+                ),
+                _v$71 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$72 = clsx(
+                  styles().detailsBody,
+                  "tsqd-query-details-summary-container"
+                ),
+                _v$73 = clsx(
+                  styles().queryDetailsStatus,
+                  getQueryStatusColors()
+                ),
+                _v$74 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$75 = tokens.size[2],
+                _v$76 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$77 = tokens.size[2],
+                _v$78 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$79 = tokens.size[2],
+                _v$80 = clsx(
+                  styles().detailsHeader,
+                  "tsqd-query-details-header"
+                ),
+                _v$81 = tokens.size[2];
+              _v$70 !== _p$.e && className(_el$109, (_p$.e = _v$70));
+              _v$71 !== _p$.t && className(_el$110, (_p$.t = _v$71));
+              _v$72 !== _p$.a && className(_el$111, (_p$.a = _v$72));
+              _v$73 !== _p$.o && className(_el$115, (_p$.o = _v$73));
+              _v$74 !== _p$.i && className(_el$119, (_p$.i = _v$74));
+              _v$75 !== _p$.n &&
+                ((_p$.n = _v$75) != null
+                  ? _el$120.style.setProperty("padding", _v$75)
+                  : _el$120.style.removeProperty("padding"));
+              _v$76 !== _p$.s && className(_el$121, (_p$.s = _v$76));
+              _v$77 !== _p$.h &&
+                ((_p$.h = _v$77) != null
+                  ? _el$122.style.setProperty("padding", _v$77)
+                  : _el$122.style.removeProperty("padding"));
+              _v$78 !== _p$.r && className(_el$123, (_p$.r = _v$78));
+              _v$79 !== _p$.d &&
+                ((_p$.d = _v$79) != null
+                  ? _el$124.style.setProperty("padding", _v$79)
+                  : _el$124.style.removeProperty("padding"));
+              _v$80 !== _p$.l && className(_el$125, (_p$.l = _v$80));
+              _v$81 !== _p$.u &&
+                ((_p$.u = _v$81) != null
+                  ? _el$126.style.setProperty("padding", _v$81)
+                  : _el$126.style.removeProperty("padding"));
+              return _p$;
             },
-            get children() {
-              return status();
-            }
-          }), null);
-          insert(_el$118, () => new Date(activeMutation().state.submittedAt).toLocaleTimeString());
-          insert(_el$120, createComponent(Explorer, {
-            label: "Variables",
-            defaultExpanded: ["Variables"],
-            get value() {
-              return activeMutation().state.variables;
+            {
+              e: void 0,
+              t: void 0,
+              a: void 0,
+              o: void 0,
+              i: void 0,
+              n: void 0,
+              s: void 0,
+              h: void 0,
+              r: void 0,
+              d: void 0,
+              l: void 0,
+              u: void 0,
             }
-          }));
-          insert(_el$122, createComponent(Explorer, {
-            label: "Context",
-            defaultExpanded: ["Context"],
-            get value() {
-              return activeMutation().state.context;
-            }
-          }));
-          insert(_el$124, createComponent(Explorer, {
-            label: "Data",
-            defaultExpanded: ["Data"],
-            get value() {
-              return activeMutation().state.data;
-            }
-          }));
-          insert(_el$126, createComponent(Explorer, {
-            label: "Mutation",
-            defaultExpanded: ["Mutation"],
-            get value() {
-              return activeMutation();
-            }
-          }));
-          createRenderEffect((_p$) => {
-            var _v$70 = clsx(styles().detailsContainer, "tsqd-query-details-container"), _v$71 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$72 = clsx(styles().detailsBody, "tsqd-query-details-summary-container"), _v$73 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$74 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$75 = tokens.size[2], _v$76 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$77 = tokens.size[2], _v$78 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$79 = tokens.size[2], _v$80 = clsx(styles().detailsHeader, "tsqd-query-details-header"), _v$81 = tokens.size[2];
-            _v$70 !== _p$.e && className(_el$109, _p$.e = _v$70);
-            _v$71 !== _p$.t && className(_el$110, _p$.t = _v$71);
-            _v$72 !== _p$.a && className(_el$111, _p$.a = _v$72);
-            _v$73 !== _p$.o && className(_el$115, _p$.o = _v$73);
-            _v$74 !== _p$.i && className(_el$119, _p$.i = _v$74);
-            _v$75 !== _p$.n && ((_p$.n = _v$75) != null ? _el$120.style.setProperty("padding", _v$75) : _el$120.style.removeProperty("padding"));
-            _v$76 !== _p$.s && className(_el$121, _p$.s = _v$76);
-            _v$77 !== _p$.h && ((_p$.h = _v$77) != null ? _el$122.style.setProperty("padding", _v$77) : _el$122.style.removeProperty("padding"));
-            _v$78 !== _p$.r && className(_el$123, _p$.r = _v$78);
-            _v$79 !== _p$.d && ((_p$.d = _v$79) != null ? _el$124.style.setProperty("padding", _v$79) : _el$124.style.removeProperty("padding"));
-            _v$80 !== _p$.l && className(_el$125, _p$.l = _v$80);
-            _v$81 !== _p$.u && ((_p$.u = _v$81) != null ? _el$126.style.setProperty("padding", _v$81) : _el$126.style.removeProperty("padding"));
-            return _p$;
-          }, {
-            e: void 0,
-            t: void 0,
-            a: void 0,
-            o: void 0,
-            i: void 0,
-            n: void 0,
-            s: void 0,
-            h: void 0,
-            r: void 0,
-            d: void 0,
-            l: void 0,
-            u: void 0
-          });
+          );
           return _el$109;
-        }
+        },
       });
     };
     queryCacheMap = /* @__PURE__ */ new Map();
@@ -14830,20 +18716,29 @@ var init_Devtools = __esm({
       });
       return unsubscribe;
     };
-    createSubscribeToQueryCacheBatcher = (callback, equalityCheck = true, shouldUpdate = () => true) => {
+    createSubscribeToQueryCacheBatcher = (
+      callback,
+      equalityCheck = true,
+      shouldUpdate = () => true
+    ) => {
       const queryCache = createMemo(() => {
         const client = useQueryDevtoolsContext().client;
         return client.getQueryCache();
       });
-      const [value, setValue] = createSignal(callback(queryCache), !equalityCheck ? {
-        equals: false
-      } : void 0);
+      const [value, setValue] = createSignal(
+        callback(queryCache),
+        !equalityCheck
+          ? {
+              equals: false,
+            }
+          : void 0
+      );
       createEffect(() => {
         setValue(callback(queryCache));
       });
       queryCacheMap.set(callback, {
         setter: setValue,
-        shouldUpdate
+        shouldUpdate,
       });
       onCleanup(() => {
         queryCacheMap.delete(callback);
@@ -14869,14 +18764,22 @@ var init_Devtools = __esm({
       });
       return unsubscribe;
     };
-    createSubscribeToMutationCacheBatcher = (callback, equalityCheck = true) => {
+    createSubscribeToMutationCacheBatcher = (
+      callback,
+      equalityCheck = true
+    ) => {
       const mutationCache = createMemo(() => {
         const client = useQueryDevtoolsContext().client;
         return client.getMutationCache();
       });
-      const [value, setValue] = createSignal(callback(mutationCache), !equalityCheck ? {
-        equals: false
-      } : void 0);
+      const [value, setValue] = createSignal(
+        callback(mutationCache),
+        !equalityCheck
+          ? {
+              equals: false,
+            }
+          : void 0
+      );
       createEffect(() => {
         setValue(callback(mutationCache));
       });
@@ -14887,1070 +18790,1064 @@ var init_Devtools = __esm({
       return value;
     };
     DEV_TOOLS_EVENT = "@tanstack/query-devtools-event";
-    sendDevToolsEvent = ({
-      type,
-      queryHash,
-      metadata
-    }) => {
+    sendDevToolsEvent = ({ type, queryHash, metadata }) => {
       const event = new CustomEvent(DEV_TOOLS_EVENT, {
         detail: {
           type,
           queryHash,
-          metadata
+          metadata,
         },
         bubbles: true,
-        cancelable: true
+        cancelable: true,
       });
       window.dispatchEvent(event);
     };
     stylesFactory2 = (theme, css) => {
-      const {
-        colors,
-        font,
-        size: size3,
-        alpha,
-        shadow,
-        border
-      } = tokens;
-      const t2 = (light, dark) => theme === "light" ? light : dark;
+      const { colors, font, size: size3, alpha, shadow, border } = tokens;
+      const t2 = (light, dark) => (theme === "light" ? light : dark);
       return {
         devtoolsBtn: css`
-      z-index: 100000;
-      position: fixed;
-      padding: 4px;
-      text-align: left;
+          z-index: 100000;
+          position: fixed;
+          padding: 4px;
+          text-align: left;
 
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      border-radius: 9999px;
-      box-shadow: ${shadow.md()};
-      overflow: hidden;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          border-radius: 9999px;
+          box-shadow: ${shadow.md()};
+          overflow: hidden;
 
-      & div {
-        position: absolute;
-        top: -8px;
-        left: -8px;
-        right: -8px;
-        bottom: -8px;
-        border-radius: 9999px;
+          & div {
+            position: absolute;
+            top: -8px;
+            left: -8px;
+            right: -8px;
+            bottom: -8px;
+            border-radius: 9999px;
 
-        & svg {
-          position: absolute;
-          width: 100%;
-          height: 100%;
-        }
-        filter: blur(6px) saturate(1.2) contrast(1.1);
-      }
+            & svg {
+              position: absolute;
+              width: 100%;
+              height: 100%;
+            }
+            filter: blur(6px) saturate(1.2) contrast(1.1);
+          }
 
-      &:focus-within {
-        outline-offset: 2px;
-        outline: 3px solid ${colors.green[600]};
-      }
+          &:focus-within {
+            outline-offset: 2px;
+            outline: 3px solid ${colors.green[600]};
+          }
 
-      & button {
-        position: relative;
-        z-index: 1;
-        padding: 0;
-        border-radius: 9999px;
-        background-color: transparent;
-        border: none;
-        height: 40px;
-        display: flex;
-        width: 40px;
-        overflow: hidden;
-        cursor: pointer;
-        outline: none;
-        & svg {
-          position: absolute;
-          width: 100%;
-          height: 100%;
-        }
-      }
-    `,
+          & button {
+            position: relative;
+            z-index: 1;
+            padding: 0;
+            border-radius: 9999px;
+            background-color: transparent;
+            border: none;
+            height: 40px;
+            display: flex;
+            width: 40px;
+            overflow: hidden;
+            cursor: pointer;
+            outline: none;
+            & svg {
+              position: absolute;
+              width: 100%;
+              height: 100%;
+            }
+          }
+        `,
         panel: css`
-      position: fixed;
-      z-index: 9999;
-      display: flex;
-      gap: ${tokens.size[0.5]};
-      & * {
-        box-sizing: border-box;
-        text-transform: none;
-      }
+          position: fixed;
+          z-index: 9999;
+          display: flex;
+          gap: ${tokens.size[0.5]};
+          & * {
+            box-sizing: border-box;
+            text-transform: none;
+          }
 
-      & *::-webkit-scrollbar {
-        width: 7px;
-      }
+          & *::-webkit-scrollbar {
+            width: 7px;
+          }
 
-      & *::-webkit-scrollbar-track {
-        background: transparent;
-      }
+          & *::-webkit-scrollbar-track {
+            background: transparent;
+          }
 
-      & *::-webkit-scrollbar-thumb {
-        background: ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & *::-webkit-scrollbar-thumb {
+            background: ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & *::-webkit-scrollbar-thumb:hover {
-        background: ${t2(colors.gray[400], colors.darkGray[300])};
-      }
-    `,
+          & *::-webkit-scrollbar-thumb:hover {
+            background: ${t2(colors.gray[400], colors.darkGray[300])};
+          }
+        `,
         parentPanel: css`
-      z-index: 9999;
-      display: flex;
-      height: 100%;
-      gap: ${tokens.size[0.5]};
-      & * {
-        box-sizing: border-box;
-        text-transform: none;
-      }
+          z-index: 9999;
+          display: flex;
+          height: 100%;
+          gap: ${tokens.size[0.5]};
+          & * {
+            box-sizing: border-box;
+            text-transform: none;
+          }
 
-      & *::-webkit-scrollbar {
-        width: 7px;
-      }
+          & *::-webkit-scrollbar {
+            width: 7px;
+          }
 
-      & *::-webkit-scrollbar-track {
-        background: transparent;
-      }
+          & *::-webkit-scrollbar-track {
+            background: transparent;
+          }
 
-      & *::-webkit-scrollbar-thumb {
-        background: ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & *::-webkit-scrollbar-thumb {
+            background: ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & *::-webkit-scrollbar-thumb:hover {
-        background: ${t2(colors.gray[400], colors.darkGray[300])};
-      }
-    `,
+          & *::-webkit-scrollbar-thumb:hover {
+            background: ${t2(colors.gray[400], colors.darkGray[300])};
+          }
+        `,
         "devtoolsBtn-position-bottom-right": css`
-      bottom: 12px;
-      right: 12px;
-    `,
+          bottom: 12px;
+          right: 12px;
+        `,
         "devtoolsBtn-position-bottom-left": css`
-      bottom: 12px;
-      left: 12px;
-    `,
+          bottom: 12px;
+          left: 12px;
+        `,
         "devtoolsBtn-position-top-left": css`
-      top: 12px;
-      left: 12px;
-    `,
+          top: 12px;
+          left: 12px;
+        `,
         "devtoolsBtn-position-top-right": css`
-      top: 12px;
-      right: 12px;
-    `,
+          top: 12px;
+          right: 12px;
+        `,
         "devtoolsBtn-position-relative": css`
-      position: relative;
-    `,
+          position: relative;
+        `,
         "panel-position-top": css`
-      top: 0;
-      right: 0;
-      left: 0;
-      max-height: 90%;
-      min-height: ${size3[14]};
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-    `,
+          top: 0;
+          right: 0;
+          left: 0;
+          max-height: 90%;
+          min-height: ${size3[14]};
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+        `,
         "panel-position-bottom": css`
-      bottom: 0;
-      right: 0;
-      left: 0;
-      max-height: 90%;
-      min-height: ${size3[14]};
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-    `,
+          bottom: 0;
+          right: 0;
+          left: 0;
+          max-height: 90%;
+          min-height: ${size3[14]};
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+        `,
         "panel-position-right": css`
-      bottom: 0;
-      right: 0;
-      top: 0;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      max-width: 90%;
-    `,
+          bottom: 0;
+          right: 0;
+          top: 0;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          max-width: 90%;
+        `,
         "panel-position-left": css`
-      bottom: 0;
-      left: 0;
-      top: 0;
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      max-width: 90%;
-    `,
+          bottom: 0;
+          left: 0;
+          top: 0;
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          max-width: 90%;
+        `,
         closeBtn: css`
-      position: absolute;
-      cursor: pointer;
-      z-index: 5;
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      outline: none;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline: 2px solid ${colors.blue[600]};
-      }
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        width: ${size3[2]};
-        height: ${size3[2]};
-      }
-    `,
+          position: absolute;
+          cursor: pointer;
+          z-index: 5;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          outline: none;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline: 2px solid ${colors.blue[600]};
+          }
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            width: ${size3[2]};
+            height: ${size3[2]};
+          }
+        `,
         "closeBtn-position-top": css`
-      bottom: 0;
-      right: ${size3[2]};
-      transform: translate(0, 100%);
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: none;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: 0px 0px ${border.radius.sm} ${border.radius.sm};
-      padding: ${size3[0.5]} ${size3[1.5]} ${size3[1]} ${size3[1.5]};
+          bottom: 0;
+          right: ${size3[2]};
+          transform: translate(0, 100%);
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: none;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: 0px 0px ${border.radius.sm} ${border.radius.sm};
+          padding: ${size3[0.5]} ${size3[1.5]} ${size3[1]} ${size3[1.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        bottom: 100%;
-        left: -${size3[2.5]};
-        height: ${size3[1.5]};
-        width: calc(100% + ${size3[5]});
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            bottom: 100%;
+            left: -${size3[2.5]};
+            height: ${size3[1.5]};
+            width: calc(100% + ${size3[5]});
+          }
 
-      & svg {
-        transform: rotate(180deg);
-      }
-    `,
+          & svg {
+            transform: rotate(180deg);
+          }
+        `,
         "closeBtn-position-bottom": css`
-      top: 0;
-      right: ${size3[2]};
-      transform: translate(0, -100%);
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: none;
-      border-radius: ${border.radius.sm} ${border.radius.sm} 0px 0px;
-      padding: ${size3[1]} ${size3[1.5]} ${size3[0.5]} ${size3[1.5]};
+          top: 0;
+          right: ${size3[2]};
+          transform: translate(0, -100%);
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: none;
+          border-radius: ${border.radius.sm} ${border.radius.sm} 0px 0px;
+          padding: ${size3[1]} ${size3[1.5]} ${size3[0.5]} ${size3[1.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        top: 100%;
-        left: -${size3[2.5]};
-        height: ${size3[1.5]};
-        width: calc(100% + ${size3[5]});
-      }
-    `,
+          &::after {
+            content: " ";
+            position: absolute;
+            top: 100%;
+            left: -${size3[2.5]};
+            height: ${size3[1.5]};
+            width: calc(100% + ${size3[5]});
+          }
+        `,
         "closeBtn-position-right": css`
-      bottom: ${size3[2]};
-      left: 0;
-      transform: translate(-100%, 0);
-      border-right: none;
-      border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: ${border.radius.sm} 0px 0px ${border.radius.sm};
-      padding: ${size3[1.5]} ${size3[0.5]} ${size3[1.5]} ${size3[1]};
+          bottom: ${size3[2]};
+          left: 0;
+          transform: translate(-100%, 0);
+          border-right: none;
+          border-left: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: ${border.radius.sm} 0px 0px ${border.radius.sm};
+          padding: ${size3[1.5]} ${size3[0.5]} ${size3[1.5]} ${size3[1]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        left: 100%;
-        height: calc(100% + ${size3[5]});
-        width: ${size3[1.5]};
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            left: 100%;
+            height: calc(100% + ${size3[5]});
+            width: ${size3[1.5]};
+          }
 
-      & svg {
-        transform: rotate(-90deg);
-      }
-    `,
+          & svg {
+            transform: rotate(-90deg);
+          }
+        `,
         "closeBtn-position-left": css`
-      bottom: ${size3[2]};
-      right: 0;
-      transform: translate(100%, 0);
-      border-left: none;
-      border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
-      border-radius: 0px ${border.radius.sm} ${border.radius.sm} 0px;
-      padding: ${size3[1.5]} ${size3[1]} ${size3[1.5]} ${size3[0.5]};
+          bottom: ${size3[2]};
+          right: 0;
+          transform: translate(100%, 0);
+          border-left: none;
+          border-right: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-top: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-bottom: ${t2(colors.gray[400], colors.darkGray[300])} 1px solid;
+          border-radius: 0px ${border.radius.sm} ${border.radius.sm} 0px;
+          padding: ${size3[1.5]} ${size3[1]} ${size3[1.5]} ${size3[0.5]};
 
-      &::after {
-        content: ' ';
-        position: absolute;
-        right: 100%;
-        height: calc(100% + ${size3[5]});
-        width: ${size3[1.5]};
-      }
+          &::after {
+            content: " ";
+            position: absolute;
+            right: 100%;
+            height: calc(100% + ${size3[5]});
+            width: ${size3[1.5]};
+          }
 
-      & svg {
-        transform: rotate(90deg);
-      }
-    `,
+          & svg {
+            transform: rotate(90deg);
+          }
+        `,
         queriesContainer: css`
-      flex: 1 1 700px;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      display: flex;
-      flex-direction: column;
-      & * {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      }
-    `,
+          flex: 1 1 700px;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          display: flex;
+          flex-direction: column;
+          & * {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          }
+        `,
         dragHandle: css`
-      position: absolute;
-      transition: background-color 0.125s ease;
-      &:hover {
-        background-color: ${colors.purple[400]}${t2("", alpha[90])};
-      }
-      z-index: 4;
-    `,
+          position: absolute;
+          transition: background-color 0.125s ease;
+          &:hover {
+            background-color: ${colors.purple[400]}${t2("", alpha[90])};
+          }
+          z-index: 4;
+        `,
         "dragHandle-position-top": css`
-      bottom: 0;
-      width: 100%;
-      height: 3px;
-      cursor: ns-resize;
-    `,
+          bottom: 0;
+          width: 100%;
+          height: 3px;
+          cursor: ns-resize;
+        `,
         "dragHandle-position-bottom": css`
-      top: 0;
-      width: 100%;
-      height: 3px;
-      cursor: ns-resize;
-    `,
+          top: 0;
+          width: 100%;
+          height: 3px;
+          cursor: ns-resize;
+        `,
         "dragHandle-position-right": css`
-      left: 0;
-      width: 3px;
-      height: 100%;
-      cursor: ew-resize;
-    `,
+          left: 0;
+          width: 3px;
+          height: 100%;
+          cursor: ew-resize;
+        `,
         "dragHandle-position-left": css`
-      right: 0;
-      width: 3px;
-      height: 100%;
-      cursor: ew-resize;
-    `,
+          right: 0;
+          width: 3px;
+          height: 100%;
+          cursor: ew-resize;
+        `,
         row: css`
-      display: flex;
-      justify-content: space-between;
-      align-items: center;
-      padding: ${tokens.size[2]} ${tokens.size[2.5]};
-      gap: ${tokens.size[2.5]};
-      border-bottom: ${t2(colors.gray[300], colors.darkGray[500])} 1px solid;
-      align-items: center;
-      & > button {
-        padding: 0;
-        background: transparent;
-        border: none;
-        display: flex;
-        gap: ${size3[0.5]};
-        flex-direction: column;
-      }
-    `,
+          display: flex;
+          justify-content: space-between;
+          align-items: center;
+          padding: ${tokens.size[2]} ${tokens.size[2.5]};
+          gap: ${tokens.size[2.5]};
+          border-bottom: ${t2(colors.gray[300], colors.darkGray[500])} 1px solid;
+          align-items: center;
+          & > button {
+            padding: 0;
+            background: transparent;
+            border: none;
+            display: flex;
+            gap: ${size3[0.5]};
+            flex-direction: column;
+          }
+        `,
         logoAndToggleContainer: css`
-      display: flex;
-      gap: ${tokens.size[3]};
-      align-items: center;
-    `,
+          display: flex;
+          gap: ${tokens.size[3]};
+          align-items: center;
+        `,
         logo: css`
-      cursor: pointer;
-      display: flex;
-      flex-direction: column;
-      background-color: transparent;
-      border: none;
-      gap: ${tokens.size[0.5]};
-      padding: 0px;
-      &:hover {
-        opacity: 0.7;
-      }
-      &:focus-visible {
-        outline-offset: 4px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          cursor: pointer;
+          display: flex;
+          flex-direction: column;
+          background-color: transparent;
+          border: none;
+          gap: ${tokens.size[0.5]};
+          padding: 0px;
+          &:hover {
+            opacity: 0.7;
+          }
+          &:focus-visible {
+            outline-offset: 4px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         tanstackLogo: css`
-      font-size: ${font.size.md};
-      font-weight: ${font.weight.bold};
-      line-height: ${font.lineHeight.xs};
-      white-space: nowrap;
-      color: ${t2(colors.gray[600], colors.gray[300])};
-    `,
+          font-size: ${font.size.md};
+          font-weight: ${font.weight.bold};
+          line-height: ${font.lineHeight.xs};
+          white-space: nowrap;
+          color: ${t2(colors.gray[600], colors.gray[300])};
+        `,
         queryFlavorLogo: css`
-      font-weight: ${font.weight.semibold};
-      font-size: ${font.size.xs};
-      background: linear-gradient(
-        to right,
-        ${t2("#ea4037, #ff9b11", "#dd524b, #e9a03b")}
-      );
-      background-clip: text;
-      -webkit-background-clip: text;
-      line-height: 1;
-      -webkit-text-fill-color: transparent;
-      white-space: nowrap;
-    `,
+          font-weight: ${font.weight.semibold};
+          font-size: ${font.size.xs};
+          background: linear-gradient(
+            to right,
+            ${t2("#ea4037, #ff9b11", "#dd524b, #e9a03b")}
+          );
+          background-clip: text;
+          -webkit-background-clip: text;
+          line-height: 1;
+          -webkit-text-fill-color: transparent;
+          white-space: nowrap;
+        `,
         queryStatusContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-      height: min-content;
-    `,
+          display: flex;
+          gap: ${tokens.size[2]};
+          height: min-content;
+        `,
         queryStatusTag: css`
-      display: flex;
-      gap: ${tokens.size[1.5]};
-      box-sizing: border-box;
-      height: ${tokens.size[6.5]};
-      background: ${t2(colors.gray[50], colors.darkGray[500])};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      border-radius: ${tokens.border.radius.sm};
-      font-size: ${font.size.sm};
-      padding: ${tokens.size[1]};
-      padding-left: ${tokens.size[1.5]};
-      align-items: center;
-      font-weight: ${font.weight.medium};
-      border: ${t2("1px solid " + colors.gray[300], "1px solid transparent")};
-      user-select: none;
-      position: relative;
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          display: flex;
+          gap: ${tokens.size[1.5]};
+          box-sizing: border-box;
+          height: ${tokens.size[6.5]};
+          background: ${t2(colors.gray[50], colors.darkGray[500])};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          border-radius: ${tokens.border.radius.sm};
+          font-size: ${font.size.sm};
+          padding: ${tokens.size[1]};
+          padding-left: ${tokens.size[1.5]};
+          align-items: center;
+          font-weight: ${font.weight.medium};
+          border: ${t2(
+            "1px solid " + colors.gray[300],
+            "1px solid transparent"
+          )};
+          user-select: none;
+          position: relative;
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         queryStatusTagLabel: css`
-      font-size: ${font.size.xs};
-    `,
+          font-size: ${font.size.xs};
+        `,
         queryStatusCount: css`
-      font-size: ${font.size.xs};
-      padding: 0 5px;
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      color: ${t2(colors.gray[500], colors.gray[400])};
-      background-color: ${t2(colors.gray[200], colors.darkGray[300])};
-      border-radius: 2px;
-      font-variant-numeric: tabular-nums;
-      height: ${tokens.size[4.5]};
-    `,
+          font-size: ${font.size.xs};
+          padding: 0 5px;
+          display: flex;
+          align-items: center;
+          justify-content: center;
+          color: ${t2(colors.gray[500], colors.gray[400])};
+          background-color: ${t2(colors.gray[200], colors.darkGray[300])};
+          border-radius: 2px;
+          font-variant-numeric: tabular-nums;
+          height: ${tokens.size[4.5]};
+        `,
         statusTooltip: css`
-      position: absolute;
-      z-index: 1;
-      background-color: ${t2(colors.gray[50], colors.darkGray[500])};
-      top: 100%;
-      left: 50%;
-      transform: translate(-50%, calc(${tokens.size[2]}));
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      border-radius: ${tokens.border.radius.sm};
-      font-size: ${font.size.xs};
-      border: 1px solid ${t2(colors.gray[400], colors.gray[600])};
-      color: ${t2(colors["gray"][600], colors["gray"][300])};
+          position: absolute;
+          z-index: 1;
+          background-color: ${t2(colors.gray[50], colors.darkGray[500])};
+          top: 100%;
+          left: 50%;
+          transform: translate(-50%, calc(${tokens.size[2]}));
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          border-radius: ${tokens.border.radius.sm};
+          font-size: ${font.size.xs};
+          border: 1px solid ${t2(colors.gray[400], colors.gray[600])};
+          color: ${t2(colors["gray"][600], colors["gray"][300])};
 
-      &::before {
-        top: 0px;
-        content: ' ';
-        display: block;
-        left: 50%;
-        transform: translate(-50%, -100%);
-        position: absolute;
-        border-color: transparent transparent
-          ${t2(colors.gray[400], colors.gray[600])} transparent;
-        border-style: solid;
-        border-width: 7px;
-        /* transform: rotate(180deg); */
-      }
+          &::before {
+            top: 0px;
+            content: " ";
+            display: block;
+            left: 50%;
+            transform: translate(-50%, -100%);
+            position: absolute;
+            border-color: transparent transparent
+              ${t2(colors.gray[400], colors.gray[600])} transparent;
+            border-style: solid;
+            border-width: 7px;
+            /* transform: rotate(180deg); */
+          }
 
-      &::after {
-        top: 0px;
-        content: ' ';
-        display: block;
-        left: 50%;
-        transform: translate(-50%, calc(-100% + 2px));
-        position: absolute;
-        border-color: transparent transparent
-          ${t2(colors.gray[100], colors.darkGray[500])} transparent;
-        border-style: solid;
-        border-width: 7px;
-      }
-    `,
+          &::after {
+            top: 0px;
+            content: " ";
+            display: block;
+            left: 50%;
+            transform: translate(-50%, calc(-100% + 2px));
+            position: absolute;
+            border-color: transparent transparent
+              ${t2(colors.gray[100], colors.darkGray[500])} transparent;
+            border-style: solid;
+            border-width: 7px;
+          }
+        `,
         filtersContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-      & > button {
-        cursor: pointer;
-        padding: ${tokens.size[0.5]} ${tokens.size[1.5]} ${tokens.size[0.5]}
-          ${tokens.size[2]};
-        border-radius: ${tokens.border.radius.sm};
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        font-size: ${font.size.xs};
-        display: flex;
-        align-items: center;
-        line-height: ${font.lineHeight.sm};
-        gap: ${tokens.size[1.5]};
-        max-width: 160px;
-        &:focus-visible {
-          outline-offset: 2px;
-          border-radius: ${border.radius.xs};
-          outline: 2px solid ${colors.blue[800]};
-        }
-        & svg {
-          width: ${tokens.size[3]};
-          height: ${tokens.size[3]};
-          color: ${t2(colors.gray[500], colors.gray[400])};
-        }
-      }
-    `,
-        filterInput: css`
-      padding: ${size3[0.5]} ${size3[2]};
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      display: flex;
-      box-sizing: content-box;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      max-width: 160px;
-      min-width: 100px;
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      height: min-content;
-      color: ${t2(colors.gray[600], colors.gray[400])};
-      & > svg {
-        width: ${size3[3]};
-        height: ${size3[3]};
-      }
-      & input {
-        font-size: ${font.size.xs};
-        width: 100%;
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: none;
-        padding: 0;
-        line-height: ${font.lineHeight.sm};
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        &::placeholder {
-          color: ${t2(colors.gray[700], colors.gray[300])};
-        }
-        &:focus {
-          outline: none;
-        }
-      }
+          display: flex;
+          gap: ${tokens.size[2]};
+          & > button {
+            cursor: pointer;
+            padding: ${tokens.size[0.5]} ${tokens.size[1.5]} ${tokens.size[0.5]}
+              ${tokens.size[2]};
+            border-radius: ${tokens.border.radius.sm};
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            font-size: ${font.size.xs};
+            display: flex;
+            align-items: center;
+            line-height: ${font.lineHeight.sm};
+            gap: ${tokens.size[1.5]};
+            max-width: 160px;
+            &:focus-visible {
+              outline-offset: 2px;
+              border-radius: ${border.radius.xs};
+              outline: 2px solid ${colors.blue[800]};
+            }
+            & svg {
+              width: ${tokens.size[3]};
+              height: ${tokens.size[3]};
+              color: ${t2(colors.gray[500], colors.gray[400])};
+            }
+          }
+        `,
+        filterInput: css`
+          padding: ${size3[0.5]} ${size3[2]};
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          display: flex;
+          box-sizing: content-box;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          max-width: 160px;
+          min-width: 100px;
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          height: min-content;
+          color: ${t2(colors.gray[600], colors.gray[400])};
+          & > svg {
+            width: ${size3[3]};
+            height: ${size3[3]};
+          }
+          & input {
+            font-size: ${font.size.xs};
+            width: 100%;
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: none;
+            padding: 0;
+            line-height: ${font.lineHeight.sm};
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            &::placeholder {
+              color: ${t2(colors.gray[700], colors.gray[300])};
+            }
+            &:focus {
+              outline: none;
+            }
+          }
 
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         filterSelect: css`
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      display: flex;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      box-sizing: content-box;
-      max-width: 160px;
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      height: min-content;
-      & > svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-      & > select {
-        appearance: none;
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        min-width: 100px;
-        line-height: ${font.lineHeight.sm};
-        font-size: ${font.size.xs};
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        border: none;
-        &:focus {
-          outline: none;
-        }
-      }
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          display: flex;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          box-sizing: content-box;
+          max-width: 160px;
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          height: min-content;
+          & > svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+          & > select {
+            appearance: none;
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            min-width: 100px;
+            line-height: ${font.lineHeight.sm};
+            font-size: ${font.size.xs};
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            border: none;
+            &:focus {
+              outline: none;
+            }
+          }
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         actionsContainer: css`
-      display: flex;
-      gap: ${tokens.size[2]};
-    `,
+          display: flex;
+          gap: ${tokens.size[2]};
+        `,
         actionsBtn: css`
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      width: ${tokens.size[6.5]};
-      height: ${tokens.size[6.5]};
-      justify-content: center;
-      display: flex;
-      align-items: center;
-      gap: ${tokens.size[1.5]};
-      max-width: 160px;
-      cursor: pointer;
-      padding: 0;
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      & svg {
-        color: ${t2(colors.gray[700], colors.gray[300])};
-        width: ${tokens.size[3]};
-        height: ${tokens.size[3]};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          width: ${tokens.size[6.5]};
+          height: ${tokens.size[6.5]};
+          justify-content: center;
+          display: flex;
+          align-items: center;
+          gap: ${tokens.size[1.5]};
+          max-width: 160px;
+          cursor: pointer;
+          padding: 0;
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          & svg {
+            color: ${t2(colors.gray[700], colors.gray[300])};
+            width: ${tokens.size[3]};
+            height: ${tokens.size[3]};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         actionsBtnOffline: css`
-      & svg {
-        stroke: ${t2(colors.yellow[700], colors.yellow[500])};
-        fill: ${t2(colors.yellow[700], colors.yellow[500])};
-      }
-    `,
+          & svg {
+            stroke: ${t2(colors.yellow[700], colors.yellow[500])};
+            fill: ${t2(colors.yellow[700], colors.yellow[500])};
+          }
+        `,
         overflowQueryContainer: css`
-      flex: 1;
-      overflow-y: auto;
-      & > div {
-        display: flex;
-        flex-direction: column;
-      }
-    `,
+          flex: 1;
+          overflow-y: auto;
+          & > div {
+            display: flex;
+            flex-direction: column;
+          }
+        `,
         queryRow: css`
-      display: flex;
-      align-items: center;
-      padding: 0;
-      border: none;
-      cursor: pointer;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      line-height: 1;
-      &:focus {
-        outline: none;
-      }
-      &:focus-visible {
-        outline-offset: -2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &:hover .tsqd-query-hash {
-        background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      }
+          display: flex;
+          align-items: center;
+          padding: 0;
+          border: none;
+          cursor: pointer;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          line-height: 1;
+          &:focus {
+            outline: none;
+          }
+          &:focus-visible {
+            outline-offset: -2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &:hover .tsqd-query-hash {
+            background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          }
 
-      & .tsqd-query-observer-count {
-        padding: 0 ${tokens.size[1]};
-        user-select: none;
-        min-width: ${tokens.size[6.5]};
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        justify-content: center;
-        font-size: ${font.size.xs};
-        font-weight: ${font.weight.medium};
-        border-bottom-width: 1px;
-        border-bottom-style: solid;
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[700])};
-      }
-      & .tsqd-query-hash {
-        user-select: text;
-        font-size: ${font.size.xs};
-        display: flex;
-        align-items: center;
-        min-height: ${tokens.size[6]};
-        flex: 1;
-        padding: ${tokens.size[1]} ${tokens.size[2]};
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        text-align: left;
-        text-overflow: clip;
-        word-break: break-word;
-      }
+          & .tsqd-query-observer-count {
+            padding: 0 ${tokens.size[1]};
+            user-select: none;
+            min-width: ${tokens.size[6.5]};
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            justify-content: center;
+            font-size: ${font.size.xs};
+            font-weight: ${font.weight.medium};
+            border-bottom-width: 1px;
+            border-bottom-style: solid;
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[700])};
+          }
+          & .tsqd-query-hash {
+            user-select: text;
+            font-size: ${font.size.xs};
+            display: flex;
+            align-items: center;
+            min-height: ${tokens.size[6]};
+            flex: 1;
+            padding: ${tokens.size[1]} ${tokens.size[2]};
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[400])};
+            text-align: left;
+            text-overflow: clip;
+            word-break: break-word;
+          }
 
-      & .tsqd-query-disabled-indicator {
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        padding: 0 ${tokens.size[2]};
-        color: ${t2(colors.gray[800], colors.gray[300])};
-        background-color: ${t2(colors.gray[300], colors.darkGray[600])};
-        border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        font-size: ${font.size.xs};
-      }
+          & .tsqd-query-disabled-indicator {
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            padding: 0 ${tokens.size[2]};
+            color: ${t2(colors.gray[800], colors.gray[300])};
+            background-color: ${t2(colors.gray[300], colors.darkGray[600])};
+            border-bottom: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[400])};
+            font-size: ${font.size.xs};
+          }
 
-      & .tsqd-query-static-indicator {
-        align-self: stretch;
-        display: flex;
-        align-items: center;
-        padding: 0 ${tokens.size[2]};
-        color: ${t2(colors.teal[800], colors.teal[300])};
-        background-color: ${t2(colors.teal[100], colors.teal[900])};
-        border-bottom: 1px solid ${t2(colors.teal[300], colors.teal[700])};
-        font-size: ${font.size.xs};
-      }
-    `,
+          & .tsqd-query-static-indicator {
+            align-self: stretch;
+            display: flex;
+            align-items: center;
+            padding: 0 ${tokens.size[2]};
+            color: ${t2(colors.teal[800], colors.teal[300])};
+            background-color: ${t2(colors.teal[100], colors.teal[900])};
+            border-bottom: 1px solid ${t2(colors.teal[300], colors.teal[700])};
+            font-size: ${font.size.xs};
+          }
+        `,
         selectedQueryRow: css`
-      background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-    `,
+          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+        `,
         detailsContainer: css`
-      flex: 1 1 700px;
-      background-color: ${t2(colors.gray[50], colors.darkGray[700])};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      display: flex;
-      flex-direction: column;
-      overflow-y: auto;
-      display: flex;
-      text-align: left;
-    `,
+          flex: 1 1 700px;
+          background-color: ${t2(colors.gray[50], colors.darkGray[700])};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          display: flex;
+          flex-direction: column;
+          overflow-y: auto;
+          display: flex;
+          text-align: left;
+        `,
         detailsHeader: css`
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      position: sticky;
-      top: 0;
-      z-index: 2;
-      background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      padding: ${tokens.size[1.5]} ${tokens.size[2]};
-      font-weight: ${font.weight.medium};
-      font-size: ${font.size.xs};
-      line-height: ${font.lineHeight.xs};
-      text-align: left;
-    `,
-        detailsBody: css`
-      margin: ${tokens.size[1.5]} 0px ${tokens.size[2]} 0px;
-      & > div {
-        display: flex;
-        align-items: stretch;
-        padding: 0 ${tokens.size[2]};
-        line-height: ${font.lineHeight.sm};
-        justify-content: space-between;
-        & > span {
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          position: sticky;
+          top: 0;
+          z-index: 2;
+          background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          padding: ${tokens.size[1.5]} ${tokens.size[2]};
+          font-weight: ${font.weight.medium};
           font-size: ${font.size.xs};
-        }
-        & > span:nth-child(2) {
-          font-variant-numeric: tabular-nums;
-        }
-      }
+          line-height: ${font.lineHeight.xs};
+          text-align: left;
+        `,
+        detailsBody: css`
+          margin: ${tokens.size[1.5]} 0px ${tokens.size[2]} 0px;
+          & > div {
+            display: flex;
+            align-items: stretch;
+            padding: 0 ${tokens.size[2]};
+            line-height: ${font.lineHeight.sm};
+            justify-content: space-between;
+            & > span {
+              font-size: ${font.size.xs};
+            }
+            & > span:nth-child(2) {
+              font-variant-numeric: tabular-nums;
+            }
+          }
 
-      & > div:first-child {
-        margin-bottom: ${tokens.size[1.5]};
-      }
+          & > div:first-child {
+            margin-bottom: ${tokens.size[1.5]};
+          }
 
-      & code {
-        font-family:
-          ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
-          'Liberation Mono', 'Courier New', monospace;
-        margin: 0;
-        font-size: ${font.size.xs};
-        line-height: ${font.lineHeight.xs};
-      }
+          & code {
+            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
+              "Liberation Mono", "Courier New", monospace;
+            margin: 0;
+            font-size: ${font.size.xs};
+            line-height: ${font.lineHeight.xs};
+          }
 
-      & pre {
-        margin: 0;
-        display: flex;
-        align-items: center;
-      }
-    `,
+          & pre {
+            margin: 0;
+            display: flex;
+            align-items: center;
+          }
+        `,
         queryDetailsStatus: css`
-      border: 1px solid ${colors.darkGray[200]};
-      border-radius: ${tokens.border.radius.sm};
-      font-weight: ${font.weight.medium};
-      padding: ${tokens.size[1]} ${tokens.size[2.5]};
-    `,
+          border: 1px solid ${colors.darkGray[200]};
+          border-radius: ${tokens.border.radius.sm};
+          font-weight: ${font.weight.medium};
+          padding: ${tokens.size[1]} ${tokens.size[2.5]};
+        `,
         actionsBody: css`
-      flex-wrap: wrap;
-      margin: ${tokens.size[2]} 0px ${tokens.size[2]} 0px;
-      display: flex;
-      gap: ${tokens.size[2]};
-      padding: 0px ${tokens.size[2]};
-      & > button {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-        font-size: ${font.size.xs};
-        padding: ${tokens.size[1]} ${tokens.size[2]};
-        display: flex;
-        border-radius: ${tokens.border.radius.sm};
-        background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-        border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-        align-items: center;
-        gap: ${tokens.size[2]};
-        font-weight: ${font.weight.medium};
-        line-height: ${font.lineHeight.xs};
-        cursor: pointer;
-        &:focus-visible {
-          outline-offset: 2px;
-          border-radius: ${border.radius.xs};
-          outline: 2px solid ${colors.blue[800]};
-        }
-        &:hover {
-          background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-        }
+          flex-wrap: wrap;
+          margin: ${tokens.size[2]} 0px ${tokens.size[2]} 0px;
+          display: flex;
+          gap: ${tokens.size[2]};
+          padding: 0px ${tokens.size[2]};
+          & > button {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+            font-size: ${font.size.xs};
+            padding: ${tokens.size[1]} ${tokens.size[2]};
+            display: flex;
+            border-radius: ${tokens.border.radius.sm};
+            background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+            border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+            align-items: center;
+            gap: ${tokens.size[2]};
+            font-weight: ${font.weight.medium};
+            line-height: ${font.lineHeight.xs};
+            cursor: pointer;
+            &:focus-visible {
+              outline-offset: 2px;
+              border-radius: ${border.radius.xs};
+              outline: 2px solid ${colors.blue[800]};
+            }
+            &:hover {
+              background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+            }
 
-        &:disabled {
-          opacity: 0.6;
-          cursor: not-allowed;
-        }
+            &:disabled {
+              opacity: 0.6;
+              cursor: not-allowed;
+            }
 
-        & > span {
-          width: ${size3[1.5]};
-          height: ${size3[1.5]};
-          border-radius: ${tokens.border.radius.full};
-        }
-      }
-    `,
+            & > span {
+              width: ${size3[1.5]};
+              height: ${size3[1.5]};
+              border-radius: ${tokens.border.radius.full};
+            }
+          }
+        `,
         actionsSelect: css`
-      font-size: ${font.size.xs};
-      padding: ${tokens.size[0.5]} ${tokens.size[2]};
-      display: flex;
-      border-radius: ${tokens.border.radius.sm};
-      overflow: hidden;
-      background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      align-items: center;
-      gap: ${tokens.size[2]};
-      font-weight: ${font.weight.medium};
-      line-height: ${font.lineHeight.sm};
-      color: ${t2(colors.red[500], colors.red[400])};
-      cursor: pointer;
-      position: relative;
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      & > span {
-        width: ${size3[1.5]};
-        height: ${size3[1.5]};
-        border-radius: ${tokens.border.radius.full};
-      }
-      &:focus-within {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      & select {
-        position: absolute;
-        top: 0;
-        left: 0;
-        width: 100%;
-        height: 100%;
-        appearance: none;
-        background-color: transparent;
-        border: none;
-        color: transparent;
-        outline: none;
-      }
+          font-size: ${font.size.xs};
+          padding: ${tokens.size[0.5]} ${tokens.size[2]};
+          display: flex;
+          border-radius: ${tokens.border.radius.sm};
+          overflow: hidden;
+          background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          align-items: center;
+          gap: ${tokens.size[2]};
+          font-weight: ${font.weight.medium};
+          line-height: ${font.lineHeight.sm};
+          color: ${t2(colors.red[500], colors.red[400])};
+          cursor: pointer;
+          position: relative;
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          & > span {
+            width: ${size3[1.5]};
+            height: ${size3[1.5]};
+            border-radius: ${tokens.border.radius.full};
+          }
+          &:focus-within {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          & select {
+            position: absolute;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            appearance: none;
+            background-color: transparent;
+            border: none;
+            color: transparent;
+            outline: none;
+          }
 
-      & svg path {
-        stroke: ${tokens.colors.red[400]};
-      }
-      & svg {
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-    `,
+          & svg path {
+            stroke: ${tokens.colors.red[400]};
+          }
+          & svg {
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+        `,
         settingsMenu: css`
-      display: flex;
-      & * {
-        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      }
-      flex-direction: column;
-      gap: ${size3[0.5]};
-      border-radius: ${tokens.border.radius.sm};
-      border: 1px solid ${t2(colors.gray[300], colors.gray[700])};
-      background-color: ${t2(colors.gray[50], colors.darkGray[600])};
-      font-size: ${font.size.xs};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      z-index: 99999;
-      min-width: 120px;
-      padding: ${size3[0.5]};
-    `,
+          display: flex;
+          & * {
+            font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          }
+          flex-direction: column;
+          gap: ${size3[0.5]};
+          border-radius: ${tokens.border.radius.sm};
+          border: 1px solid ${t2(colors.gray[300], colors.gray[700])};
+          background-color: ${t2(colors.gray[50], colors.darkGray[600])};
+          font-size: ${font.size.xs};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          z-index: 99999;
+          min-width: 120px;
+          padding: ${size3[0.5]};
+        `,
         settingsSubTrigger: css`
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      border-radius: ${tokens.border.radius.xs};
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      cursor: pointer;
-      background-color: transparent;
-      border: none;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-        transform: rotate(-90deg);
-        width: ${tokens.size[2]};
-        height: ${tokens.size[2]};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &.data-disabled {
-        opacity: 0.6;
-        cursor: not-allowed;
-      }
-    `,
+          display: flex;
+          align-items: center;
+          justify-content: space-between;
+          border-radius: ${tokens.border.radius.xs};
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          cursor: pointer;
+          background-color: transparent;
+          border: none;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+            transform: rotate(-90deg);
+            width: ${tokens.size[2]};
+            height: ${tokens.size[2]};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &.data-disabled {
+            opacity: 0.6;
+            cursor: not-allowed;
+          }
+        `,
         settingsMenuHeader: css`
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      font-weight: ${font.weight.medium};
-      border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      color: ${t2(colors.gray[500], colors.gray[400])};
-      font-size: ${font.size["xs"]};
-    `,
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          font-weight: ${font.weight.medium};
+          border-bottom: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          color: ${t2(colors.gray[500], colors.gray[400])};
+          font-size: ${font.size["xs"]};
+        `,
         settingsSubButton: css`
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      font-size: ${font.size["xs"]};
-      border-radius: ${tokens.border.radius.xs};
-      padding: ${tokens.size[1]} ${tokens.size[1]};
-      cursor: pointer;
-      background-color: transparent;
-      border: none;
-      & svg {
-        color: ${t2(colors.gray[600], colors.gray[400])};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
-      &:focus-visible {
-        outline-offset: 2px;
-        outline: 2px solid ${colors.blue[800]};
-      }
-    `,
+          display: flex;
+          align-items: center;
+          justify-content: space-between;
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          font-size: ${font.size["xs"]};
+          border-radius: ${tokens.border.radius.xs};
+          padding: ${tokens.size[1]} ${tokens.size[1]};
+          cursor: pointer;
+          background-color: transparent;
+          border: none;
+          & svg {
+            color: ${t2(colors.gray[600], colors.gray[400])};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
+          &:focus-visible {
+            outline-offset: 2px;
+            outline: 2px solid ${colors.blue[800]};
+          }
+        `,
         themeSelectedButton: css`
-      background-color: ${t2(colors.purple[100], colors.purple[900])};
-      color: ${t2(colors.purple[700], colors.purple[300])};
-      & svg {
-        color: ${t2(colors.purple[700], colors.purple[300])};
-      }
-      &:hover {
-        background-color: ${t2(colors.purple[100], colors.purple[900])};
-      }
-    `,
+          background-color: ${t2(colors.purple[100], colors.purple[900])};
+          color: ${t2(colors.purple[700], colors.purple[300])};
+          & svg {
+            color: ${t2(colors.purple[700], colors.purple[300])};
+          }
+          &:hover {
+            background-color: ${t2(colors.purple[100], colors.purple[900])};
+          }
+        `,
         viewToggle: css`
-      border-radius: ${tokens.border.radius.sm};
-      background-color: ${t2(colors.gray[200], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      display: flex;
-      padding: 0;
-      font-size: ${font.size.xs};
-      color: ${t2(colors.gray[700], colors.gray[300])};
-      overflow: hidden;
+          border-radius: ${tokens.border.radius.sm};
+          background-color: ${t2(colors.gray[200], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
+          display: flex;
+          padding: 0;
+          font-size: ${font.size.xs};
+          color: ${t2(colors.gray[700], colors.gray[300])};
+          overflow: hidden;
 
-      &:has(:focus-visible) {
-        outline: 2px solid ${colors.blue[800]};
-      }
+          &:has(:focus-visible) {
+            outline: 2px solid ${colors.blue[800]};
+          }
 
-      & .tsqd-radio-toggle {
-        opacity: 0.5;
-        display: flex;
-        & label {
-          display: flex;
-          align-items: center;
-          cursor: pointer;
-          line-height: ${font.lineHeight.md};
-        }
+          & .tsqd-radio-toggle {
+            opacity: 0.5;
+            display: flex;
+            & label {
+              display: flex;
+              align-items: center;
+              cursor: pointer;
+              line-height: ${font.lineHeight.md};
+            }
 
-        & label:hover {
-          background-color: ${t2(colors.gray[100], colors.darkGray[500])};
-        }
-      }
+            & label:hover {
+              background-color: ${t2(colors.gray[100], colors.darkGray[500])};
+            }
+          }
 
-      & > [data-checked] {
-        opacity: 1;
-        background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        & label:hover {
-          background-color: ${t2(colors.gray[100], colors.darkGray[400])};
-        }
-      }
+          & > [data-checked] {
+            opacity: 1;
+            background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            & label:hover {
+              background-color: ${t2(colors.gray[100], colors.darkGray[400])};
+            }
+          }
 
-      & .tsqd-radio-toggle:first-child {
-        & label {
-          padding: 0 ${tokens.size[1.5]} 0 ${tokens.size[2]};
-        }
-        border-right: 1px solid ${t2(colors.gray[300], colors.darkGray[200])};
-      }
+          & .tsqd-radio-toggle:first-child {
+            & label {
+              padding: 0 ${tokens.size[1.5]} 0 ${tokens.size[2]};
+            }
+            border-right: 1px solid
+              ${t2(colors.gray[300], colors.darkGray[200])};
+          }
 
-      & .tsqd-radio-toggle:nth-child(2) {
-        & label {
-          padding: 0 ${tokens.size[2]} 0 ${tokens.size[1.5]};
-        }
-      }
-    `,
+          & .tsqd-radio-toggle:nth-child(2) {
+            & label {
+              padding: 0 ${tokens.size[2]} 0 ${tokens.size[1.5]};
+            }
+          }
+        `,
         devtoolsEditForm: css`
-      padding: ${size3[2]};
-      & > [data-error='true'] {
-        outline: 2px solid ${t2(colors.red[200], colors.red[800])};
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-      }
-    `,
+          padding: ${size3[2]};
+          & > [data-error="true"] {
+            outline: 2px solid ${t2(colors.red[200], colors.red[800])};
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+          }
+        `,
         devtoolsEditTextarea: css`
-      width: 100%;
-      max-height: 500px;
-      font-family: 'Fira Code', monospace;
-      font-size: ${font.size.xs};
-      border-radius: ${border.radius.sm};
-      field-sizing: content;
-      padding: ${size3[2]};
-      background-color: ${t2(colors.gray[100], colors.darkGray[800])};
-      color: ${t2(colors.gray[900], colors.gray[100])};
-      border: 1px solid ${t2(colors.gray[200], colors.gray[700])};
-      resize: none;
-      &:focus {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${t2(colors.blue[200], colors.blue[800])};
-      }
-    `,
+          width: 100%;
+          max-height: 500px;
+          font-family: "Fira Code", monospace;
+          font-size: ${font.size.xs};
+          border-radius: ${border.radius.sm};
+          field-sizing: content;
+          padding: ${size3[2]};
+          background-color: ${t2(colors.gray[100], colors.darkGray[800])};
+          color: ${t2(colors.gray[900], colors.gray[100])};
+          border: 1px solid ${t2(colors.gray[200], colors.gray[700])};
+          resize: none;
+          &:focus {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${t2(colors.blue[200], colors.blue[800])};
+          }
+        `,
         devtoolsEditFormActions: css`
-      display: flex;
-      justify-content: space-between;
-      gap: ${size3[2]};
-      align-items: center;
-      padding-top: ${size3[1]};
-      font-size: ${font.size.xs};
-    `,
+          display: flex;
+          justify-content: space-between;
+          gap: ${size3[2]};
+          align-items: center;
+          padding-top: ${size3[1]};
+          font-size: ${font.size.xs};
+        `,
         devtoolsEditFormError: css`
-      color: ${t2(colors.red[700], colors.red[500])};
-    `,
+          color: ${t2(colors.red[700], colors.red[500])};
+        `,
         devtoolsEditFormActionContainer: css`
-      display: flex;
-      gap: ${size3[2]};
-    `,
+          display: flex;
+          gap: ${size3[2]};
+        `,
         devtoolsEditFormAction: css`
-      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
-      font-size: ${font.size.xs};
-      padding: ${size3[1]} ${tokens.size[2]};
-      display: flex;
-      border-radius: ${border.radius.sm};
-      background-color: ${t2(colors.gray[100], colors.darkGray[600])};
-      border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
-      align-items: center;
-      gap: ${size3[2]};
-      font-weight: ${font.weight.medium};
-      line-height: ${font.lineHeight.xs};
-      cursor: pointer;
-      &:focus-visible {
-        outline-offset: 2px;
-        border-radius: ${border.radius.xs};
-        outline: 2px solid ${colors.blue[800]};
-      }
-      &:hover {
-        background-color: ${t2(colors.gray[200], colors.darkGray[500])};
-      }
+          font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;
+          font-size: ${font.size.xs};
+          padding: ${size3[1]} ${tokens.size[2]};
+          display: flex;
+          border-radius: ${border.radius.sm};
+          background-color: ${t2(colors.gray[100], colors.darkGray[600])};
+          border: 1px solid ${t2(colors.gray[300], colors.darkGray[400])};
+          align-items: center;
+          gap: ${size3[2]};
+          font-weight: ${font.weight.medium};
+          line-height: ${font.lineHeight.xs};
+          cursor: pointer;
+          &:focus-visible {
+            outline-offset: 2px;
+            border-radius: ${border.radius.xs};
+            outline: 2px solid ${colors.blue[800]};
+          }
+          &:hover {
+            background-color: ${t2(colors.gray[200], colors.darkGray[500])};
+          }
 
-      &:disabled {
-        opacity: 0.6;
-        cursor: not-allowed;
-      }
-    `
+          &:disabled {
+            opacity: 0.6;
+            cursor: not-allowed;
+          }
+        `,
       };
     };
     lightStyles2 = (css) => stylesFactory2("light", css);
     darkStyles2 = (css) => stylesFactory2("dark", css);
     delegateEvents(["click", "mousedown", "input"]);
-  }
+  },
 });
 
 // src/DevtoolsComponent.tsx
 var DevtoolsComponent_exports = {};
 __export(DevtoolsComponent_exports, {
-  default: () => DevtoolsComponent_default
+  default: () => DevtoolsComponent_default,
 });
 var DevtoolsComponent, DevtoolsComponent_default;
 var init_DevtoolsComponent = __esm({
@@ -15964,7 +19861,7 @@ var init_DevtoolsComponent = __esm({
     init_contexts();
     DevtoolsComponent = (props) => {
       const [localStore, setLocalStore] = createLocalStorage({
-        prefix: "TanstackQueryDevtools"
+        prefix: "TanstackQueryDevtools",
       });
       const colorScheme = getPreferredColorScheme();
       const theme = createMemo(() => {
@@ -15984,23 +19881,23 @@ var init_DevtoolsComponent = __esm({
                 get children() {
                   return createComponent(Devtools, {
                     localStore,
-                    setLocalStore
+                    setLocalStore,
                   });
-                }
+                },
               });
-            }
+            },
           });
-        }
+        },
       });
     };
     DevtoolsComponent_default = DevtoolsComponent;
-  }
+  },
 });
 
 // src/DevtoolsPanelComponent.tsx
 var DevtoolsPanelComponent_exports = {};
 __export(DevtoolsPanelComponent_exports, {
-  default: () => DevtoolsPanelComponent_default
+  default: () => DevtoolsPanelComponent_default,
 });
 var DevtoolsPanelComponent, DevtoolsPanelComponent_default;
 var init_DevtoolsPanelComponent = __esm({
@@ -16014,7 +19911,7 @@ var init_DevtoolsPanelComponent = __esm({
     init_contexts();
     DevtoolsPanelComponent = (props) => {
       const [localStore, setLocalStore] = createLocalStorage({
-        prefix: "TanstackQueryDevtools"
+        prefix: "TanstackQueryDevtools",
       });
       const colorScheme = getPreferredColorScheme();
       const theme = createMemo(() => {
@@ -16041,19 +19938,19 @@ var init_DevtoolsPanelComponent = __esm({
                         get onClose() {
                           return props.onClose;
                         },
-                        showPanelViewOnly: true
+                        showPanelViewOnly: true,
                       });
-                    }
+                    },
                   });
-                }
+                },
               });
-            }
+            },
           });
-        }
+        },
       });
     };
     DevtoolsPanelComponent_default = DevtoolsPanelComponent;
-  }
+  },
 });
 
 // src/TanstackQueryDevtools.tsx
@@ -16087,7 +19984,7 @@ exports.TanstackQueryDevtools = class TanstackQueryDevtools {
       initialIsOpen,
       errorTypes,
       styleNonce,
-      shadowDOMTarget
+      shadowDOMTarget,
     } = config;
     this.#client = createSignal(client);
     this.#queryFlavor = queryFlavor;
@@ -16130,40 +20027,50 @@ exports.TanstackQueryDevtools = class TanstackQueryDevtools {
       if (this.#Component) {
         Devtools2 = this.#Component;
       } else {
-        Devtools2 = lazy(() => Promise.resolve().then(() => (init_DevtoolsComponent(), DevtoolsComponent_exports)));
+        Devtools2 = lazy(() =>
+          Promise.resolve().then(
+            () => (init_DevtoolsComponent(), DevtoolsComponent_exports)
+          )
+        );
         this.#Component = Devtools2;
       }
       setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);
-      return createComponent(Devtools2, mergeProps({
-        get queryFlavor() {
-          return _self$.#queryFlavor;
-        },
-        get version() {
-          return _self$.#version;
-        },
-        get onlineManager() {
-          return _self$.#onlineManager;
-        },
-        get shadowDOMTarget() {
-          return _self$.#shadowDOMTarget;
-        }
-      }, {
-        get client() {
-          return queryClient();
-        },
-        get buttonPosition() {
-          return btnPosition();
-        },
-        get position() {
-          return pos();
-        },
-        get initialIsOpen() {
-          return isOpen();
-        },
-        get errorTypes() {
-          return errors();
-        }
-      }));
+      return createComponent(
+        Devtools2,
+        mergeProps(
+          {
+            get queryFlavor() {
+              return _self$.#queryFlavor;
+            },
+            get version() {
+              return _self$.#version;
+            },
+            get onlineManager() {
+              return _self$.#onlineManager;
+            },
+            get shadowDOMTarget() {
+              return _self$.#shadowDOMTarget;
+            },
+          },
+          {
+            get client() {
+              return queryClient();
+            },
+            get buttonPosition() {
+              return btnPosition();
+            },
+            get position() {
+              return pos();
+            },
+            get initialIsOpen() {
+              return isOpen();
+            },
+            get errorTypes() {
+              return errors();
+            },
+          }
+        )
+      );
     }, el);
     this.#isMounted = true;
     this.#dispose = dispose3;
@@ -16210,7 +20117,7 @@ exports.TanstackQueryDevtoolsPanel = class TanstackQueryDevtoolsPanel {
       errorTypes,
       styleNonce,
       shadowDOMTarget,
-      onClose
+      onClose,
     } = config;
     this.#client = createSignal(client);
     this.#queryFlavor = queryFlavor;
@@ -16258,43 +20165,55 @@ exports.TanstackQueryDevtoolsPanel = class TanstackQueryDevtoolsPanel {
       if (this.#Component) {
         Devtools2 = this.#Component;
       } else {
-        Devtools2 = lazy(() => Promise.resolve().then(() => (init_DevtoolsPanelComponent(), DevtoolsPanelComponent_exports)));
+        Devtools2 = lazy(() =>
+          Promise.resolve().then(
+            () => (
+              init_DevtoolsPanelComponent(), DevtoolsPanelComponent_exports
+            )
+          )
+        );
         this.#Component = Devtools2;
       }
       setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);
-      return createComponent(Devtools2, mergeProps({
-        get queryFlavor() {
-          return _self$.#queryFlavor;
-        },
-        get version() {
-          return _self$.#version;
-        },
-        get onlineManager() {
-          return _self$.#onlineManager;
-        },
-        get shadowDOMTarget() {
-          return _self$.#shadowDOMTarget;
-        }
-      }, {
-        get client() {
-          return queryClient();
-        },
-        get buttonPosition() {
-          return btnPosition();
-        },
-        get position() {
-          return pos();
-        },
-        get initialIsOpen() {
-          return isOpen();
-        },
-        get errorTypes() {
-          return errors();
-        },
-        get onClose() {
-          return onClose();
-        }
-      }));
+      return createComponent(
+        Devtools2,
+        mergeProps(
+          {
+            get queryFlavor() {
+              return _self$.#queryFlavor;
+            },
+            get version() {
+              return _self$.#version;
+            },
+            get onlineManager() {
+              return _self$.#onlineManager;
+            },
+            get shadowDOMTarget() {
+              return _self$.#shadowDOMTarget;
+            },
+          },
+          {
+            get client() {
+              return queryClient();
+            },
+            get buttonPosition() {
+              return btnPosition();
+            },
+            get position() {
+              return pos();
+            },
+            get initialIsOpen() {
+              return isOpen();
+            },
+            get errorTypes() {
+              return errors();
+            },
+            get onClose() {
+              return onClose();
+            },
+          }
+        )
+      );
     }, el);
     this.#isMounted = true;
     this.#dispose = dispose3;
