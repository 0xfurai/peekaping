# Multi-stage Dockerfile to build server, web, and migrations in one container with MongoDB

# Stage 1: Build Go server and migration tool
FROM golang:1.24.3-alpine AS go-builder

RUN apk add --no-cache git
WORKDIR /app/server
COPY apps/server/go.mod apps/server/go.sum ./
RUN go mod download
COPY apps/server/ .
RUN go build -o main ./cmd/server
RUN go build -o bun ./cmd/bun

# Stage 2: Build React web app
FROM node:22-alpine AS web-builder

WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY patches/ ./patches/
COPY apps/web/package.json ./apps/web/package.json
RUN npm install -g pnpm && pnpm install --filter=web
COPY apps/web/ ./apps/web/
WORKDIR /app/apps/web
RUN pnpm run build

# Stage 3: Final runtime image with Ubuntu and MongoDB 7
FROM ubuntu:22.04

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Update system and install base dependencies
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    lsb-release \
    supervisor \
    netcat-openbsd \
    curl \
    ca-certificates \
    software-properties-common \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# Install MongoDB 7 from official repository
RUN wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | apt-key add - && \
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list && \
    apt-get update && \
    apt-get install -y mongodb-org=7.0.* mongodb-org-database=7.0.* mongodb-org-server=7.0.* mongodb-org-mongos=7.0.* mongodb-org-tools=7.0.* && \
    apt-mark hold mongodb-org mongodb-org-database mongodb-org-server mongodb-org-mongos mongodb-org-tools && \
    rm -rf /var/lib/apt/lists/*

# Install Caddy web server
RUN curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg && \
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list && \
    apt-get update && \
    apt-get install -y caddy && \
    rm -rf /var/lib/apt/lists/*

# Create required directories with proper permissions
RUN mkdir -p /app/server /app/data /var/log/supervisor /app/web /data/db && \
    chown -R root:root /app && \
    chmod -R 755 /app && \
    chown -R mongodb:mongodb /data/db && \
    chmod -R 750 /data/db

# Copy built artifacts from previous stages
COPY --from=go-builder /app/server/main /app/server/main
COPY --from=go-builder /app/server/bun /app/server/bun
COPY --from=go-builder /app/server/cmd/bun/migrations /app/server/cmd/bun/migrations
COPY --from=go-builder /app/server/src/config /app/server/src/config
COPY --from=go-builder /app/server/scripts/run-migrations.sh /app/server/run-migrations.sh
COPY --from=web-builder /app/apps/web/dist /app/web

# Copy configuration files
COPY Caddyfile /etc/caddy/Caddyfile
COPY supervisord.bundle.mongo.conf /etc/supervisor/conf.d/supervisord.conf
COPY startup.bundle.mongo.sh /app/startup.sh

# Set proper permissions for executables and sensitive files
RUN chmod +x /app/server/run-migrations.sh /app/startup.sh /app/server/main /app/server/bun && \
    chmod 644 /etc/caddy/Caddyfile && \
    chmod 644 /etc/supervisor/conf.d/supervisord.conf && \
    chown -R root:root /app/server && \
    chown -R root:root /app/web

# Create MongoDB configuration directory
RUN mkdir -p /etc/mongod && \
    chown -R mongodb:mongodb /etc/mongod

# Expose port
EXPOSE 8383

# Start the application
CMD ["/app/startup.sh"]
