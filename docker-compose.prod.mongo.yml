networks:
  appnet:

services:
  mongodb:
    image: mongo:7
    restart: always
    ports:
      - "${DB_PORT}:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ./.data/mongodb:/data/db
    networks:
      - appnet

  # server:
  #   image: 0xfurai/peekaping-server:latest
  #   env_file:
  #     - .env
  #   depends_on:
  #     - mongodb
  #   environment:
  #     DB_HOST: mongodb
  #     DB_PORT: 27017
  #     DB_TYPE: mongo
  #   networks:
  #     - appnet

  api:
    image: 0xfurai/peekaping-api:latest
    restart: unless-stopped
    ports:
      - "8034:8034"
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  producer:
    image: 0xfurai/peekaping-producer:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  worker:
    image: 0xfurai/peekaping-worker:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  ingester:
    image: 0xfurai/peekaping-ingester:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_TYPE=mongo
      - REDIS_HOST="redis"
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_DB=0
    depends_on:
      - mongodb
    networks:
      - appnet

  web:
    image: 0xfurai/peekaping-web:latest
    depends_on:
      - server
    networks:
      - appnet

  gateway:
    image: nginx:latest
    ports:
      - "8383:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - web
    networks:
      - appnet

  redis:
    image: redis:7
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - appnet
