# Multi-stage Dockerfile to build server, web, and migrations in one container with PostgreSQL

# Stage 1: Build Go server and migration tool
FROM golang:1.24.3-alpine AS go-builder

RUN apk add --no-cache git
WORKDIR /app/server
COPY apps/server/go.mod apps/server/go.sum ./
RUN go mod download
COPY apps/server/ .
RUN go build -o main ./src
RUN go build -o bun ./cmd/bun

# Stage 2: Build React web app
FROM node:22-alpine AS web-builder

WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY patches/ ./patches/
COPY apps/web/package.json ./apps/web/package.json
RUN npm install -g pnpm && pnpm install --filter=web
COPY apps/web/ ./apps/web/
WORKDIR /app/apps/web
RUN pnpm run build

# Stage 3: Final runtime image with PostgreSQL
FROM ubuntu:24.04

# Security: Install packages with minimal privileges and clean up
RUN apt-get update && apt-get install -y \
    supervisor \
    netcat-openbsd \
    wget \
    curl \
    gosu \
    openssl \
    ca-certificates \
    gnupg \
    lsb-release \
    locales \
    && rm -rf /var/lib/apt/lists/*

# Security: Set up proper locales to avoid encoding issues
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Install PostgreSQL 17 from official repository
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' \
    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && apt-get update \
    && apt-get install -y postgresql-17 postgresql-client-17 postgresql-contrib-17 \
    && rm -rf /var/lib/apt/lists/*

# Install Caddy
RUN curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
    && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list \
    && apt-get update \
    && apt-get install -y caddy \
    && rm -rf /var/lib/apt/lists/*

# Security: Set proper permissions for PostgreSQL
RUN mkdir -p /var/lib/postgresql/data \
    && chown -R postgres:postgres /var/lib/postgresql \
    && chmod 700 /var/lib/postgresql/data

# Security: Set PostgreSQL binary paths
ENV PATH="/usr/lib/postgresql/17/bin:$PATH"
ENV PGDATA="/var/lib/postgresql/data"

RUN mkdir -p /app/server /app/data /var/log/supervisor /app/web
COPY --from=go-builder /app/server/main /app/server/main
COPY --from=go-builder /app/server/bun /app/server/bun
COPY --from=go-builder /app/server/cmd/bun/migrations /app/server/cmd/bun/migrations
COPY --from=go-builder /app/server/src/config /app/server/src/config
COPY --from=go-builder /app/server/scripts/run-migrations.sh /app/server/run-migrations.sh
COPY --from=web-builder /app/apps/web/dist /app/web
COPY Caddyfile /etc/caddy/Caddyfile
COPY supervisord.bundle.postgres.conf /etc/supervisor/conf.d/supervisord.conf
COPY startup.bundle.postgres.sh /app/startup.sh
RUN chmod +x /app/server/run-migrations.sh /app/startup.sh /app/server/main /app/server/bun

EXPOSE 8383

CMD ["/app/startup.sh"]
