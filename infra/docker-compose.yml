networks:
  appnet:

services:
  mongodb:
    image: mongo:7
    restart: always
    ports:
      - '6001:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password321
    volumes:
      - ./.data/mongodb:/data/db
    networks:
      - appnet

  server:
    image: peekaping/server:latest
    env_file:
      - .env
    expose: ["8034"]
    depends_on:
      - mongodb
    networks:
      - appnet

  web:
    image: peekaping/web:latest
    expose: ["80"]
    depends_on:
      - server
    networks:
      - appnet

  # fake-server:
  #   image: node:22-alpine
  #   restart: always
  #   ports:
  #     - '3025:3025'
  #   volumes:
  #     - ./fake-server:/app
  #   working_dir: /app
  #   command: npm start

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3002:3000"
  #   env_file: ".env"
  #   restart: unless-stopped
  #   volumes:
  #     - ./.data/grafana-data:/var/lib/grafana

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3101:3100"
  #   volumes:
  #     - ./loki-config.yml:/etc/loki/loki-config.yml
  #     - ./.data/loki-data:/loki
  #   command: -config.file=/etc/loki/loki-config.yml
  #   restart: unless-stopped

  gateway:
    image: nginx:latest
    ports:
      - "2222:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - web
    networks:
      - appnet
