networks:
  appnet:

services:
  postgres:
    image: postgres:17
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-peekaping}
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-peekaping}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  migrate:
    image: 0xfurai/peekaping-migrate:latest
    restart: "no"
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_TYPE: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - appnet

  server:
    image: 0xfurai/peekaping-server:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_TYPE: postgres
    networks:
      - appnet

  web:
    image: 0xfurai/peekaping-web:latest
    depends_on:
      - server
    networks:
      - appnet

  gateway:
    image: nginx:latest
    ports:
      - "8383:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - web
    networks:
      - appnet
